{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "newAddress",
						"type": "address"
					}
				],
				"name": "AddressesProviderRegistered",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "newAddress",
						"type": "address"
					}
				],
				"name": "AddressesProviderUnregistered",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addressesProvider",
						"type": "address"
					}
				],
				"name": "getAddressesProviderIdByAddress",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAddressesProvidersList",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "provider",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "registerAddressesProvider",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "provider",
						"type": "address"
					}
				],
				"name": "unregisterAddressesProvider",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Aave*",
			"details": "Main registry of LendingPoolAddressesProvider of multiple Aave protocol's markets - Used for indexing purposes of Aave protocol's markets - The id assigned to a LendingPoolAddressesProvider refers to the market it is connected with,   for example with `0` for the Aave main market and `1` for the next created",
			"kind": "dev",
			"methods": {
				"getAddressesProviderIdByAddress(address)": {
					"details": "Returns the id on a registered LendingPoolAddressesProvider",
					"returns": {
						"_0": "The id or 0 if the LendingPoolAddressesProvider is not registered"
					}
				},
				"getAddressesProvidersList()": {
					"details": "Returns the list of registered addresses provider",
					"returns": {
						"_0": "The list of addresses provider, potentially containing address(0) elements*"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"registerAddressesProvider(address,uint256)": {
					"details": "Registers an addresses provider",
					"params": {
						"id": "The id for the new LendingPoolAddressesProvider, referring to the market it belongs to*",
						"provider": "The address of the new LendingPoolAddressesProvider"
					}
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"unregisterAddressesProvider(address)": {
					"details": "Removes a LendingPoolAddressesProvider from the list of registered addresses provider",
					"params": {
						"provider": "The LendingPoolAddressesProvider address*"
					}
				}
			},
			"title": "LendingPoolAddressesProviderRegistry contract",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/protocol/configuration/LendingPoolAddressesProviderRegistry.sol": "LendingPoolAddressesProviderRegistry"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/dependencies/openzeppelin/contracts/Context.sol": {
			"keccak256": "0xe52c598aa6e76d57665914c1c43fc6fa13bbe3b0bd8e816a6cec1c2bca5014e1",
			"license": "MIT",
			"urls": [
				"bzz-raw://a665a54b2277889ba2bdb9c3860b3b71ec7b22757297a03b590a093257604e9d",
				"dweb:/ipfs/QmQ4mm9YnrtvjJwetDec3WoiKeJGoJMCs5kbPBhGVRcZ6N"
			]
		},
		"contracts/dependencies/openzeppelin/contracts/Ownable.sol": {
			"keccak256": "0xe89abab730aac141126c194f910969c76f55a29536f2709c71c1c0c4ffce5508",
			"license": "MIT",
			"urls": [
				"bzz-raw://f5667cdfe050014996ee748d1891155cc9a40ec5de28804d8c5e4b6c3a34e727",
				"dweb:/ipfs/QmWcSNdBecjXbiEau8QHSdBFes2HXw59H9hhJNjCww1Y8i"
			]
		},
		"contracts/interfaces/ILendingPoolAddressesProviderRegistry.sol": {
			"keccak256": "0xd730bacab093ef3f723668d8857d04f63c79bd6cd126405ca319dc714c0682c3",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://d6edf23512beaf02216829dcc31e857edf8c8c555c8e2b522752a10da8296865",
				"dweb:/ipfs/QmU4V1hSXqPR4bsiZnP8RRTj1qBxkk43Up6Pch18xPcCC4"
			]
		},
		"contracts/protocol/configuration/LendingPoolAddressesProviderRegistry.sol": {
			"keccak256": "0x28736a18c40cd94b1a5660035ddb729c95d43c1a28240d14c8ee1e1a068f14ad",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://a0faaf0e13fa2a0bc4840a1f49c647a1cc7aefa148af023b69b5306d19d410ad",
				"dweb:/ipfs/QmeM6Ph6dwed86gvzRgFGwd4616rsEeGRQFDXkQFSc4qGj"
			]
		},
		"contracts/protocol/libraries/helpers/Errors.sol": {
			"keccak256": "0xfb70949637d81dc9a3883601bb15226981f4c4847f65035e64bf5d120994efeb",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://43fb108a5038fbeb33294d3f4a9e7e4e021bef16f0e7a8a2f3ad9142808c7a8f",
				"dweb:/ipfs/QmUvAnwcuwmprQu4g3r1k3gE2EztuVPGRKJBMVX3KRC8W6"
			]
		}
	},
	"version": 1
}