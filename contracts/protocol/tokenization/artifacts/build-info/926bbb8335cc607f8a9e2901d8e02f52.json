{
	"id": "926bbb8335cc607f8a9e2901d8e02f52",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/protocol/tokenization/IncentivizedERC20.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\nimport {Context} from '../../dependencies/openzeppelin/contracts/Context.sol';\nimport {IERC20} from '../../dependencies/openzeppelin/contracts/IERC20.sol';\nimport {IERC20Detailed} from '../../dependencies/openzeppelin/contracts/IERC20Detailed.sol';\nimport {SafeMath} from '../../dependencies/openzeppelin/contracts/SafeMath.sol';\nimport {IAaveIncentivesController} from '../../interfaces/IAaveIncentivesController.sol';\n\n/**\n * @title ERC20\n * @notice Basic ERC20 implementation\n * @author Aave, inspired by the Openzeppelin ERC20 implementation\n **/\ncontract IncentivizedERC20 is Context, IERC20, IERC20Detailed {\n  using SafeMath for uint256;\n\n  IAaveIncentivesController internal immutable _incentivesController;\n\n  mapping(address => uint256) internal _balances;\n\n  mapping(address => mapping(address => uint256)) private _allowances;\n  uint256 internal _totalSupply;\n  string private _name;\n  string private _symbol;\n  uint8 private _decimals;\n\n  constructor(\n    string memory name,\n    string memory symbol,\n    uint8 decimals,\n    address incentivesController\n  ) public {\n    _name = name;\n    _symbol = symbol;\n    _decimals = decimals;\n    _incentivesController = IAaveIncentivesController(incentivesController);\n  }\n\n  /**\n   * @return The name of the token\n   **/\n  function name() public view override returns (string memory) {\n    return _name;\n  }\n\n  /**\n   * @return The symbol of the token\n   **/\n  function symbol() public view override returns (string memory) {\n    return _symbol;\n  }\n\n  /**\n   * @return The decimals of the token\n   **/\n  function decimals() public view override returns (uint8) {\n    return _decimals;\n  }\n\n  /**\n   * @return The total supply of the token\n   **/\n  function totalSupply() public view virtual override returns (uint256) {\n    return _totalSupply;\n  }\n\n  /**\n   * @return The balance of the token\n   **/\n  function balanceOf(address account) public view virtual override returns (uint256) {\n    return _balances[account];\n  }\n\n  /**\n   * @dev Executes a transfer of tokens from _msgSender() to recipient\n   * @param recipient The recipient of the tokens\n   * @param amount The amount of tokens being transferred\n   * @return `true` if the transfer succeeds, `false` otherwise\n   **/\n  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n    _transfer(_msgSender(), recipient, amount);\n    emit Transfer(_msgSender(), recipient, amount);\n    return true;\n  }\n\n  /**\n   * @dev Returns the allowance of spender on the tokens owned by owner\n   * @param owner The owner of the tokens\n   * @param spender The user allowed to spend the owner's tokens\n   * @return The amount of owner's tokens spender is allowed to spend\n   **/\n  function allowance(address owner, address spender)\n    public\n    view\n    virtual\n    override\n    returns (uint256)\n  {\n    return _allowances[owner][spender];\n  }\n\n  /**\n   * @dev Allows `spender` to spend the tokens owned by _msgSender()\n   * @param spender The user allowed to spend _msgSender() tokens\n   * @return `true`\n   **/\n  function approve(address spender, uint256 amount) public virtual override returns (bool) {\n    _approve(_msgSender(), spender, amount);\n    return true;\n  }\n\n  /**\n   * @dev Executes a transfer of token from sender to recipient, if _msgSender() is allowed to do so\n   * @param sender The owner of the tokens\n   * @param recipient The recipient of the tokens\n   * @param amount The amount of tokens being transferred\n   * @return `true` if the transfer succeeds, `false` otherwise\n   **/\n  function transferFrom(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) public virtual override returns (bool) {\n    _transfer(sender, recipient, amount);\n    _approve(\n      sender,\n      _msgSender(),\n      _allowances[sender][_msgSender()].sub(amount, 'ERC20: transfer amount exceeds allowance')\n    );\n    emit Transfer(sender, recipient, amount);\n    return true;\n  }\n\n  /**\n   * @dev Increases the allowance of spender to spend _msgSender() tokens\n   * @param spender The user allowed to spend on behalf of _msgSender()\n   * @param addedValue The amount being added to the allowance\n   * @return `true`\n   **/\n  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n    return true;\n  }\n\n  /**\n   * @dev Decreases the allowance of spender to spend _msgSender() tokens\n   * @param spender The user allowed to spend on behalf of _msgSender()\n   * @param subtractedValue The amount being subtracted to the allowance\n   * @return `true`\n   **/\n  function decreaseAllowance(address spender, uint256 subtractedValue)\n    public\n    virtual\n    returns (bool)\n  {\n    _approve(\n      _msgSender(),\n      spender,\n      _allowances[_msgSender()][spender].sub(\n        subtractedValue,\n        'ERC20: decreased allowance below zero'\n      )\n    );\n    return true;\n  }\n\n  function _transfer(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) internal virtual {\n    require(sender != address(0), 'ERC20: transfer from the zero address');\n    require(recipient != address(0), 'ERC20: transfer to the zero address');\n\n    _beforeTokenTransfer(sender, recipient, amount);\n\n    uint256 oldSenderBalance = _balances[sender];\n    _balances[sender] = oldSenderBalance.sub(amount, 'ERC20: transfer amount exceeds balance');\n    uint256 oldRecipientBalance = _balances[recipient];\n    _balances[recipient] = _balances[recipient].add(amount);\n\n    if (address(_incentivesController) != address(0)) {\n      uint256 currentTotalSupply = _totalSupply;\n      _incentivesController.handleAction(sender, currentTotalSupply, oldSenderBalance);\n      if (sender != recipient) {\n        _incentivesController.handleAction(recipient, currentTotalSupply, oldRecipientBalance);\n      }\n    }\n  }\n\n  function _mint(address account, uint256 amount) internal virtual {\n    require(account != address(0), 'ERC20: mint to the zero address');\n\n    _beforeTokenTransfer(address(0), account, amount);\n\n    uint256 oldTotalSupply = _totalSupply;\n    _totalSupply = oldTotalSupply.add(amount);\n\n    uint256 oldAccountBalance = _balances[account];\n    _balances[account] = oldAccountBalance.add(amount);\n\n    if (address(_incentivesController) != address(0)) {\n      _incentivesController.handleAction(account, oldTotalSupply, oldAccountBalance);\n    }\n  }\n\n  function _burn(address account, uint256 amount) internal virtual {\n    require(account != address(0), 'ERC20: burn from the zero address');\n\n    _beforeTokenTransfer(account, address(0), amount);\n\n    uint256 oldTotalSupply = _totalSupply;\n    _totalSupply = oldTotalSupply.sub(amount);\n\n    uint256 oldAccountBalance = _balances[account];\n    _balances[account] = oldAccountBalance.sub(amount, 'ERC20: burn amount exceeds balance');\n\n    if (address(_incentivesController) != address(0)) {\n      _incentivesController.handleAction(account, oldTotalSupply, oldAccountBalance);\n    }\n  }\n\n  function _approve(\n    address owner,\n    address spender,\n    uint256 amount\n  ) internal virtual {\n    require(owner != address(0), 'ERC20: approve from the zero address');\n    require(spender != address(0), 'ERC20: approve to the zero address');\n\n    _allowances[owner][spender] = amount;\n    emit Approval(owner, spender, amount);\n  }\n\n  function _setName(string memory newName) internal {\n    _name = newName;\n  }\n\n  function _setSymbol(string memory newSymbol) internal {\n    _symbol = newSymbol;\n  }\n\n  function _setDecimals(uint8 newDecimals) internal {\n    _decimals = newDecimals;\n  }\n\n  function _beforeTokenTransfer(\n    address from,\n    address to,\n    uint256 amount\n  ) internal virtual {}\n}\n"
			},
			"contracts/interfaces/IAaveIncentivesController.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\npragma experimental ABIEncoderV2;\n\ninterface IAaveIncentivesController {\n  function handleAction(\n    address user,\n    uint256 userBalance,\n    uint256 totalSupply\n  ) external;\n}\n"
			},
			"contracts/dependencies/openzeppelin/contracts/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n  /**\n   * @dev Returns the addition of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `+` operator.\n   *\n   * Requirements:\n   * - Addition cannot overflow.\n   */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, 'SafeMath: addition overflow');\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    return sub(a, b, 'SafeMath: subtraction overflow');\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(\n    uint256 a,\n    uint256 b,\n    string memory errorMessage\n  ) internal pure returns (uint256) {\n    require(b <= a, errorMessage);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the multiplication of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `*` operator.\n   *\n   * Requirements:\n   * - Multiplication cannot overflow.\n   */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, 'SafeMath: multiplication overflow');\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return div(a, b, 'SafeMath: division by zero');\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(\n    uint256 a,\n    uint256 b,\n    string memory errorMessage\n  ) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, errorMessage);\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    return mod(a, b, 'SafeMath: modulo by zero');\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts with custom message when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(\n    uint256 a,\n    uint256 b,\n    string memory errorMessage\n  ) internal pure returns (uint256) {\n    require(b != 0, errorMessage);\n    return a % b;\n  }\n}\n"
			},
			"contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\nimport {IERC20} from './IERC20.sol';\n\ninterface IERC20Detailed is IERC20 {\n  function name() external view returns (string memory);\n\n  function symbol() external view returns (string memory);\n\n  function decimals() external view returns (uint8);\n}\n"
			},
			"contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"contracts/dependencies/openzeppelin/contracts/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.12;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n  function _msgSender() internal view virtual returns (address payable) {\n    return msg.sender;\n  }\n\n  function _msgData() internal view virtual returns (bytes memory) {\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    return msg.data;\n  }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/dependencies/openzeppelin/contracts/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"keccak256\":\"0xe52c598aa6e76d57665914c1c43fc6fa13bbe3b0bd8e816a6cec1c2bca5014e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a665a54b2277889ba2bdb9c3860b3b71ec7b22757297a03b590a093257604e9d\",\"dweb:/ipfs/QmQ4mm9YnrtvjJwetDec3WoiKeJGoJMCs5kbPBhGVRcZ6N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0x6406b04abfeda2c8c80ea3faf797ce4501e66db41fb6ff4e299ebe0402879f44\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://33b0db81db37bd6fe20aa0b23581c6b0edef2f3c49d0bd88b4fe46c1164adb00\",\"dweb:/ipfs/QmYn1zYwt3ahpkLYwHh6h5b1UJrzP2xy5G3at9oEVNw2c1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol": {
				"IERC20Detailed": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol\":\"IERC20Detailed\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0x6406b04abfeda2c8c80ea3faf797ce4501e66db41fb6ff4e299ebe0402879f44\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://33b0db81db37bd6fe20aa0b23581c6b0edef2f3c49d0bd88b4fe46c1164adb00\",\"dweb:/ipfs/QmYn1zYwt3ahpkLYwHh6h5b1UJrzP2xy5G3at9oEVNw2c1\"]},\"contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol\":{\"keccak256\":\"0x4dade975e9d49dcd7785b30f9e56f80ba9322f3b037a6e39912a32e49a6a817c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://84b4c20094e95699e746ecf1fad83748139fadf844a548a09e4949840fb6232f\",\"dweb:/ipfs/Qme51kM9jqbjEyd7wQ8DNRNRAt5hY7FZHsaRxTP3xvXi5D\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/dependencies/openzeppelin/contracts/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":626:4968  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":626:4968  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a1bd78d2d20e95b81481b7c60e9fa29307a20e9f12fbea3b3158cdacb3361fef64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a1bd78d2d20e95b81481b7c60e9fa29307a20e9f12fbea3b3158cdacb3361fef64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xBD PUSH25 0xD2D20E95B81481B7C60E9FA29307A20E9F12FBEA3B3158CDAC 0xB3 CALLDATASIZE 0x1F 0xEF PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "626:4342:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a1bd78d2d20e95b81481b7c60e9fa29307a20e9f12fbea3b3158cdacb3361fef64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xBD PUSH25 0xD2D20E95B81481B7C60E9FA29307A20E9F12FBEA3B3158CDAC 0xB3 CALLDATASIZE 0x1F 0xEF PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "626:4342:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 626,
									"end": 4968,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a1bd78d2d20e95b81481b7c60e9fa29307a20e9f12fbea3b3158cdacb3361fef64736f6c634300060c0033",
									".code": [
										{
											"begin": 626,
											"end": 4968,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 626,
											"end": 4968,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 626,
											"end": 4968,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 626,
											"end": 4968,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 626,
											"end": 4968,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 4968,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 626,
											"end": 4968,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 4968,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 626,
											"end": 4968,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":{\"keccak256\":\"0xfca35d11bafb85cf4f2203b41f1a98238dca59b6a9faa28b86ea3f9f63da8ec5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://7019345b024afa93000c6b5a2b095be59c3c5352eb658619c941d23d0af5bc65\",\"dweb:/ipfs/QmZLxJKSbM66Wd1Qd43jSdiXdg7JP6DQ9J6LuANUZummM4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IAaveIncentivesController.sol": {
				"IAaveIncentivesController": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "userBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								}
							],
							"name": "handleAction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"handleAction(address,uint256,uint256)": "31873e2e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"userBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"handleAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAaveIncentivesController.sol\":\"IAaveIncentivesController\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAaveIncentivesController.sol\":{\"keccak256\":\"0x19b7059e203933cca7782202e9f2abfbae4680e2e49d179857aa8a16c29513d5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://eba6211fa0df888effbfc3ae5e6636e4fa273e0ce046723519f87cd73152221c\",\"dweb:/ipfs/QmT5We1cUQQNKw1TDaHTHJYvjtbckERogrMK3qE1nNQMjM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/protocol/tokenization/IncentivizedERC20.sol": {
				"IncentivizedERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								},
								{
									"internalType": "address",
									"name": "incentivesController",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aave, inspired by the Openzeppelin ERC20 implementation*",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the allowance of spender on the tokens owned by owner",
								"params": {
									"owner": "The owner of the tokens",
									"spender": "The user allowed to spend the owner's tokens"
								},
								"returns": {
									"_0": "The amount of owner's tokens spender is allowed to spend*"
								}
							},
							"approve(address,uint256)": {
								"details": "Allows `spender` to spend the tokens owned by _msgSender()",
								"params": {
									"spender": "The user allowed to spend _msgSender() tokens"
								},
								"returns": {
									"_0": "`true`*"
								}
							},
							"balanceOf(address)": {
								"returns": {
									"_0": "The balance of the token*"
								}
							},
							"decimals()": {
								"returns": {
									"_0": "The decimals of the token*"
								}
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Decreases the allowance of spender to spend _msgSender() tokens",
								"params": {
									"spender": "The user allowed to spend on behalf of _msgSender()",
									"subtractedValue": "The amount being subtracted to the allowance"
								},
								"returns": {
									"_0": "`true`*"
								}
							},
							"increaseAllowance(address,uint256)": {
								"details": "Increases the allowance of spender to spend _msgSender() tokens",
								"params": {
									"addedValue": "The amount being added to the allowance",
									"spender": "The user allowed to spend on behalf of _msgSender()"
								},
								"returns": {
									"_0": "`true`*"
								}
							},
							"name()": {
								"returns": {
									"_0": "The name of the token*"
								}
							},
							"symbol()": {
								"returns": {
									"_0": "The symbol of the token*"
								}
							},
							"totalSupply()": {
								"returns": {
									"_0": "The total supply of the token*"
								}
							},
							"transfer(address,uint256)": {
								"details": "Executes a transfer of tokens from _msgSender() to recipient",
								"params": {
									"amount": "The amount of tokens being transferred",
									"recipient": "The recipient of the tokens"
								},
								"returns": {
									"_0": "`true` if the transfer succeeds, `false` otherwise*"
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Executes a transfer of token from sender to recipient, if _msgSender() is allowed to do so",
								"params": {
									"amount": "The amount of tokens being transferred",
									"recipient": "The recipient of the tokens",
									"sender": "The owner of the tokens"
								},
								"returns": {
									"_0": "`true` if the transfer succeeds, `false` otherwise*"
								}
							}
						},
						"title": "ERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":613:7792  contract IncentivizedERC20 is Context, IERC20, IERC20Detailed {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1014:1289  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x80\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  swap1\n  dup2\n  mstore\n  0x20\n  dup3\n  dup2\n  add\n  mload\n  swap3\n  swap1\n  swap2\n  add\n  mload\n    /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1147:1159  _name = name */\n  dup7\n  mload\n    /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1014:1289  constructor(... */\n  swap3\n  swap5\n  pop\n  swap3\n  pop\n    /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1147:1159  _name = name */\n  tag_19\n  swap2\n    /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1147:1152  _name */\n  0x03\n  swap2\n    /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1147:1159  _name = name */\n  dup8\n  add\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1165:1181  _symbol = symbol */\n  dup3\n  mload\n  tag_21\n  swap1\n    /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1165:1172  _symbol */\n  0x04\n  swap1\n    /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1165:1181  _symbol = symbol */\n  0x20\n  dup7\n  add\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1187:1196  _decimals */\n  0x05\n    /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1187:1207  _decimals = decimals */\n  dup1\n  sload\n  not(0xff)\n  and\n  0xff\n  swap4\n  swap1\n  swap4\n  and\n  swap3\n  swap1\n  swap3\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1213:1284  _incentivesController = IAaveIncentivesController(incentivesController) */\n  0x60\n  shl\n  not(sub(shl(0x60, 0x01), 0x01))\n  and\n  0x80\n  mstore\n  pop\n    /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":613:7792  contract IncentivizedERC20 is Context, IERC20, IERC20Detailed {... */\n  tag_22\n  swap1\n  pop\n  jump\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_26)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_26\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\n  pop\n  tag_27\n  swap3\n  swap2\n  pop\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_27\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_29)\ntag_22:\n  shr(0x60, mload(0x80))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x864b8fe99165e6c6448b5e7b202f0e5c58b63324a8b1fc889fb4fd715747dbee\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":613:7792  contract IncentivizedERC20 is Context, IERC20, IERC20Detailed {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1341:1425  function name() public view override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_17:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_17)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3118:3274  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_23\n      jump\t// in\n    tag_21:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1767:1867  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3607:3996  function transferFrom(... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_28\n      jump\t// in\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1623:1707  function decimals() public view override returns (uint8) {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4242:4447  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_33\n      jump\t// in\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1922:2041  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_36\n      jump\t// in\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1479:1567  function symbol() public view override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_38\n      jump\t// in\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4703:5021  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_11:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_45\n      jump\t// in\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2301:2515  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_48\n      jump\t// in\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2781:2946  function allowance(address owner, address spender)... */\n    tag_13:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_51\n      jump\t// in\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1341:1425  function name() public view override returns (string memory) {... */\n    tag_16:\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1415:1420  _name */\n      0x03\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1408:1420  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1387:1400  string memory */\n      0x60\n      swap4\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1408:1420  return _name */\n      swap1\n      swap3\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1415:1420  _name */\n      swap1\n      swap2\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1408:1420  return _name */\n      dup4\n      add\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1415:1420  _name */\n      dup3\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1408:1420  return _name */\n      dup3\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n    tag_54:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_55:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_55\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1341:1425  function name() public view override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3118:3274  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_23:\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3201:3205  bool */\n      0x00\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3213:3252  _approve(_msgSender(), spender, amount) */\n      tag_57\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3222:3234  _msgSender() */\n      tag_58\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3222:3232  _msgSender */\n      tag_59\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3222:3234  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3236:3243  spender */\n      dup5\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3245:3251  amount */\n      dup5\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3213:3221  _approve */\n      tag_60\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3213:3252  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_57:\n      pop\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3265:3269  true */\n      0x01\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3118:3274  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1767:1867  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1850:1862  _totalSupply */\n      sload(0x02)\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1767:1867  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3607:3996  function transferFrom(... */\n    tag_28:\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3729:3733  bool */\n      0x00\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3741:3777  _transfer(sender, recipient, amount) */\n      tag_63\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3751:3757  sender */\n      dup5\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3759:3768  recipient */\n      dup5\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3770:3776  amount */\n      dup5\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3741:3750  _transfer */\n      tag_64\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3741:3777  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_63:\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3783:3928  _approve(... */\n      tag_65\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3799:3805  sender */\n      dup5\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3813:3825  _msgSender() */\n      tag_66\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3813:3823  _msgSender */\n      tag_59\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3813:3825  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3833:3922  _allowances[sender][_msgSender()].sub(amount, 'ERC20: transfer amount exceeds allowance') */\n      tag_67\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3871:3877  amount */\n      dup6\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3833:3922  _allowances[sender][_msgSender()].sub(amount, 'ERC20: transfer amount exceeds allowance') */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3833:3852  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3833:3844  _allowances */\n      0x01\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3833:3852  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3853:3865  _msgSender() */\n      tag_68\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3853:3863  _msgSender */\n      tag_59\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3853:3865  _msgSender() */\n      jump\t// in\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3833:3866  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3833:3922  _allowances[sender][_msgSender()].sub(amount, 'ERC20: transfer amount exceeds allowance') */\n      swap1\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3833:3870  _allowances[sender][_msgSender()].sub */\n      tag_69\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3833:3922  _allowances[sender][_msgSender()].sub(amount, 'ERC20: transfer amount exceeds allowance') */\n      jump\t// in\n    tag_67:\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3783:3791  _approve */\n      tag_60\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3783:3928  _approve(... */\n      jump\t// in\n    tag_65:\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3956:3965  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3939:3974  Transfer(sender, recipient, amount) */\n      and\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3948:3954  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3939:3974  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3967:3973  amount */\n      dup5\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3939:3974  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3987:3991  true */\n      0x01\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":3607:3996  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1623:1707  function decimals() public view override returns (uint8) {... */\n    tag_30:\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1693:1702  _decimals */\n      and(0xff, sload(0x05))\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1623:1707  function decimals() public view override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4242:4447  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_33:\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4330:4334  bool */\n      0x00\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4342:4425  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_57\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4351:4363  _msgSender() */\n      tag_73\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4351:4361  _msgSender */\n      tag_59\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4351:4363  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4365:4372  spender */\n      dup5\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4374:4424  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_67\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4413:4423  addedValue */\n      dup6\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4374:4385  _allowances */\n      0x01\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4374:4399  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4386:4398  _msgSender() */\n      tag_75\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4386:4396  _msgSender */\n      tag_59\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4386:4398  _msgSender() */\n      jump\t// in\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4374:4399  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4374:4408  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4374:4412  _allowances[_msgSender()][spender].add */\n      tag_76\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4374:4424  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1922:2041  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_36:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2018:2036  _balances[account] */\n      and\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1996:2003  uint256 */\n      0x00\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2018:2036  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1922:2041  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1479:1567  function symbol() public view override returns (string memory) {... */\n    tag_38:\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1555:1562  _symbol */\n      0x04\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1548:1562  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1527:1540  string memory */\n      0x60\n      swap4\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1548:1562  return _symbol */\n      swap1\n      swap3\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1555:1562  _symbol */\n      swap1\n      swap2\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1548:1562  return _symbol */\n      dup4\n      add\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1555:1562  _symbol */\n      dup3\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":1548:1562  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4703:5021  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_45:\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4808:4812  bool */\n      0x00\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4822:4999  _approve(... */\n      tag_57\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4838:4850  _msgSender() */\n      tag_84\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4838:4848  _msgSender */\n      tag_59\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4838:4850  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4858:4865  spender */\n      dup5\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4873:4993  _allowances[_msgSender()][spender].sub(... */\n      tag_67\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4921:4936  subtractedValue */\n      dup6\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4873:4993  _allowances[_msgSender()][spender].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4873:4884  _allowances */\n      0x01\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4873:4898  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4885:4897  _msgSender() */\n      tag_86\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4885:4895  _msgSender */\n      tag_59\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4885:4897  _msgSender() */\n      jump\t// in\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4873:4898  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4873:4907  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4873:4993  _allowances[_msgSender()][spender].sub(... */\n      swap1\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4873:4911  _allowances[_msgSender()][spender].sub */\n      tag_69\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":4873:4993  _allowances[_msgSender()][spender].sub(... */\n      jump\t// in\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2301:2515  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_48:\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2387:2391  bool */\n      0x00\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2399:2441  _transfer(_msgSender(), recipient, amount) */\n      tag_88\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2409:2421  _msgSender() */\n      tag_89\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2409:2419  _msgSender */\n      tag_59\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2409:2421  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2423:2432  recipient */\n      dup5\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2434:2440  amount */\n      dup5\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2399:2408  _transfer */\n      tag_64\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2399:2441  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_88:\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2475:2484  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2452:2493  Transfer(_msgSender(), recipient, amount) */\n      and\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2461:2473  _msgSender() */\n      tag_90\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2461:2471  _msgSender */\n      tag_59\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2461:2473  _msgSender() */\n      jump\t// in\n    tag_90:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2452:2493  Transfer(_msgSender(), recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2486:2492  amount */\n      dup5\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2452:2493  Transfer(_msgSender(), recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2506:2510  true */\n      0x01\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2301:2515  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2781:2946  function allowance(address owner, address spender)... */\n    tag_51:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2914:2932  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2890:2897  uint256 */\n      0x00\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2914:2932  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2914:2925  _allowances */\n      0x01\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2914:2932  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2914:2941  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":2781:2946  function allowance(address owner, address spender)... */\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/contracts/Context.sol\":587:685  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_59:\n        /* \"contracts/dependencies/openzeppelin/contracts/Context.sol\":670:680  msg.sender */\n      caller\n        /* \"contracts/dependencies/openzeppelin/contracts/Context.sol\":587:685  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":7085:7423  function _approve(... */\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":7198:7217  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":7190:7258  require(owner != address(0), 'ERC20: approve from the zero address') */\n      tag_94\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":7272:7293  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":7264:7332  require(spender != address(0), 'ERC20: approve to the zero address') */\n      tag_95\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":7339:7357  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":7339:7350  _allowances */\n      0x01\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":7339:7357  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":7339:7366  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":7339:7375  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":7386:7418  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":7085:7423  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5025:5941  function _transfer(... */\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5142:5162  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5134:5204  require(sender != address(0), 'ERC20: transfer from the zero address') */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5218:5241  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5210:5281  require(recipient != address(0), 'ERC20: transfer to the zero address') */\n      tag_98\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5288:5335  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_99\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5309:5315  sender */\n      dup4\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5317:5326  recipient */\n      dup4\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5328:5334  amount */\n      dup4\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5288:5308  _beforeTokenTransfer */\n      tag_100\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5288:5335  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_99:\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5342:5366  uint256 oldSenderBalance */\n      0x00\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5369:5378  _balances */\n      dup1\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5369:5386  _balances[sender] */\n      0x00\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5379:5385  sender */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5369:5386  _balances[sender] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5342:5386  uint256 oldSenderBalance = _balances[sender] */\n      swap1\n      pop\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5412:5482  oldSenderBalance.sub(amount, 'ERC20: transfer amount exceeds balance') */\n      tag_101\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5433:5439  amount */\n      dup3\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5412:5482  oldSenderBalance.sub(amount, 'ERC20: transfer amount exceeds balance') */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5412:5428  oldSenderBalance */\n      dup4\n      swap2\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5412:5482  oldSenderBalance.sub(amount, 'ERC20: transfer amount exceeds balance') */\n      swap1\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5412:5432  oldSenderBalance.sub */\n      tag_69\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5412:5482  oldSenderBalance.sub(amount, 'ERC20: transfer amount exceeds balance') */\n      jump\t// in\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5392:5409  _balances[sender] */\n      dup1\n      dup7\n      and\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5392:5401  _balances */\n      0x00\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5392:5409  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5392:5482  _balances[sender] = oldSenderBalance.sub(amount, 'ERC20: transfer amount exceeds balance') */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5518:5538  _balances[recipient] */\n      swap1\n      dup6\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5567:5599  _balances[recipient].add(amount) */\n      tag_102\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5518:5538  _balances[recipient] */\n      dup2\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5592:5598  amount */\n      dup5\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5567:5591  _balances[recipient].add */\n      tag_76\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5567:5599  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5544:5564  _balances[recipient] */\n      dup1\n      dup7\n      and\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5544:5553  _balances */\n      0x00\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5544:5564  _balances[recipient] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5544:5599  _balances[recipient] = _balances[recipient].add(amount) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5618:5639  _incentivesController */\n      immutable(\"0x864b8fe99165e6c6448b5e7b202f0e5c58b63324a8b1fc889fb4fd715747dbee\")\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5610:5654  address(_incentivesController) != address(0) */\n      and\n      iszero\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5606:5937  if (address(_incentivesController) != address(0)) {... */\n      tag_103\n      jumpi\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5664:5690  uint256 currentTotalSupply */\n      0x00\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5693:5705  _totalSupply */\n      sload(0x02)\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5664:5705  uint256 currentTotalSupply = _totalSupply */\n      swap1\n      pop\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5713:5734  _incentivesController */\n      immutable(\"0x864b8fe99165e6c6448b5e7b202f0e5c58b63324a8b1fc889fb4fd715747dbee\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5713:5747  _incentivesController.handleAction */\n      and\n      0x31873e2e\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5748:5754  sender */\n      dup8\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5756:5774  currentTotalSupply */\n      dup4\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5776:5792  oldSenderBalance */\n      dup7\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5713:5793  _incentivesController.handleAction(sender, currentTotalSupply, oldSenderBalance) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_106\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5815:5824  recipient */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5805:5824  sender != recipient */\n      and\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5805:5811  sender */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5805:5824  sender != recipient */\n      and\n      eq\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5801:5931  if (sender != recipient) {... */\n      tag_107\n      jumpi\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5836:5857  _incentivesController */\n      immutable(\"0x864b8fe99165e6c6448b5e7b202f0e5c58b63324a8b1fc889fb4fd715747dbee\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5836:5870  _incentivesController.handleAction */\n      and\n      0x31873e2e\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5871:5880  recipient */\n      dup7\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5882:5900  currentTotalSupply */\n      dup4\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5902:5921  oldRecipientBalance */\n      dup6\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5836:5922  _incentivesController.handleAction(recipient, currentTotalSupply, oldRecipientBalance) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5801:5931  if (sender != recipient) {... */\n    tag_107:\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5606:5937  if (address(_incentivesController) != address(0)) {... */\n      pop\n    tag_103:\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":5025:5941  function _transfer(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":1649:1838  function sub(... */\n    tag_69:\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":1751:1758  uint256 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":1782:1794  errorMessage */\n      dup2\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":1774:1780  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":1766:1795  require(b <= a, errorMessage) */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_113:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_115\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_113)\n    tag_115:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_116\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_116:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n      pop\n      pop\n      pop\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":1813:1818  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":1649:1838  function sub(... */\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":851:1013  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":909:916  uint256 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":936:941  a + b */\n      dup3\n      dup3\n      add\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":955:961  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":947:993  require(c >= a, 'SafeMath: addition overflow') */\n      tag_118\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_118:\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":1007:1008  c */\n      swap4\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":851:1013  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/protocol/tokenization/IncentivizedERC20.sol\":7683:7790  function _beforeTokenTransfer(... */\n    tag_100:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa26469706673582212205d105ca9020639482f53219da214c0c56a6bbec162e91030b48c71ec245ce8e764736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60a06040523480156200001157600080fd5b5060405162000eb538038062000eb5833981810160405260808110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b506040908152602082810151929091015186519294509250620001c19160039187019062000206565b508251620001d790600490602086019062000206565b506005805460ff191660ff939093169290921790915560601b6001600160601b03191660805250620002a29050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200024957805160ff191683800117855562000279565b8280016001018555821562000279579182015b82811115620002795782518255916020019190600101906200025c565b50620002879291506200028b565b5090565b5b808211156200028757600081556001016200028c565b60805160601c610beb620002ca6000398061083a528061086852806109185250610beb6000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b61017361036c565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b03813581169160208101359091169060400135610372565b6101c3610444565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b03813516906020013561044d565b6101736004803603602081101561021b57600080fd5b50356001600160a01b031661049b565b6100b66104b6565b6101576004803603604081101561024957600080fd5b506001600160a01b038135169060200135610517565b6101576004803603604081101561027557600080fd5b506001600160a01b03813516906020013561057f565b610173600480360360408110156102a157600080fd5b506001600160a01b03813581169160200135166105ee565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061036361035c610619565b848461061d565b50600192915050565b60025490565b600061037f848484610709565b6103ef8461038b610619565b6103ea85604051806060016040528060288152602001610b20602891396001600160a01b038a166000908152600160205260408120906103c9610619565b6001600160a01b0316815260208101919091526040016000205491906109b7565b61061d565b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35060019392505050565b60055460ff1690565b600061036361045a610619565b846103ea856001600061046b610619565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610a4e565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b6000610363610524610619565b846103ea85604051806060016040528060258152602001610b91602591396001600061054e610619565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906109b7565b600061059361058c610619565b8484610709565b826001600160a01b03166105a5610619565b6001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a350600192915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166106625760405162461bcd60e51b8152600401808060200182810382526024815260200180610b6d6024913960400191505060405180910390fd5b6001600160a01b0382166106a75760405162461bcd60e51b8152600401808060200182810382526022815260200180610ad86022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661074e5760405162461bcd60e51b8152600401808060200182810382526025815260200180610b486025913960400191505060405180910390fd5b6001600160a01b0382166107935760405162461bcd60e51b8152600401808060200182810382526023815260200180610ab56023913960400191505060405180910390fd5b61079e838383610aaf565b6000806000856001600160a01b03166001600160a01b031681526020019081526020016000205490506107ec82604051806060016040528060268152602001610afa602691398391906109b7565b6001600160a01b03808616600090815260208190526040808220939093559085168152205461081b8184610a4e565b6001600160a01b038086166000908152602081905260409020919091557f000000000000000000000000000000000000000000000000000000000000000016156109b057600060025490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166331873e2e8783866040518463ffffffff1660e01b815260040180846001600160a01b031681526020018381526020018281526020019350505050600060405180830381600087803b1580156108e557600080fd5b505af11580156108f9573d6000803e3d6000fd5b50505050846001600160a01b0316866001600160a01b0316146109ae577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166331873e2e8683856040518463ffffffff1660e01b815260040180846001600160a01b031681526020018381526020018281526020019350505050600060405180830381600087803b15801561099557600080fd5b505af11580156109a9573d6000803e3d6000fd5b505050505b505b5050505050565b60008184841115610a465760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a0b5781810151838201526020016109f3565b50505050905090810190601f168015610a385780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610aa8576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212205d105ca9020639482f53219da214c0c56a6bbec162e91030b48c71ec245ce8e764736f6c634300060c0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xEB5 CODESIZE SUB DUP1 PUSH3 0xEB5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xB8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x9E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xE6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x150 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x198 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 ADD MLOAD SWAP3 SWAP1 SWAP2 ADD MLOAD DUP7 MLOAD SWAP3 SWAP5 POP SWAP3 POP PUSH3 0x1C1 SWAP2 PUSH1 0x3 SWAP2 DUP8 ADD SWAP1 PUSH3 0x206 JUMP JUMPDEST POP DUP3 MLOAD PUSH3 0x1D7 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH3 0x206 JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x80 MSTORE POP PUSH3 0x2A2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x249 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x279 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x279 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x279 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x25C JUMP JUMPDEST POP PUSH3 0x287 SWAP3 SWAP2 POP PUSH3 0x28B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x287 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x28C JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0xBEB PUSH3 0x2CA PUSH1 0x0 CODECOPY DUP1 PUSH2 0x83A MSTORE DUP1 PUSH2 0x868 MSTORE DUP1 PUSH2 0x918 MSTORE POP PUSH2 0xBEB PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28B JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x44D JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x49B JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x4B6 JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x517 JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x57F JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x35C PUSH2 0x619 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x61D JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F DUP5 DUP5 DUP5 PUSH2 0x709 JUMP JUMPDEST PUSH2 0x3EF DUP5 PUSH2 0x38B PUSH2 0x619 JUMP JUMPDEST PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB20 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3C9 PUSH2 0x619 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x9B7 JUMP JUMPDEST PUSH2 0x61D JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x45A PUSH2 0x619 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x46B PUSH2 0x619 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x524 PUSH2 0x619 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB91 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x54E PUSH2 0x619 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x593 PUSH2 0x58C PUSH2 0x619 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x709 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5A5 PUSH2 0x619 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB6D PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAD8 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x74E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB48 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x793 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAB5 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x79E DUP4 DUP4 DUP4 PUSH2 0xAAF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x7EC DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAFA PUSH1 0x26 SWAP2 CODECOPY DUP4 SWAP2 SWAP1 PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x81B DUP2 DUP5 PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH32 0x0 AND ISZERO PUSH2 0x9B0 JUMPI PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x31873E2E DUP8 DUP4 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9AE JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x31873E2E DUP7 DUP4 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x995 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xA46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA0B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9F3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xA38 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xAA8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212205D10 0x5C 0xA9 MUL MOD CODECOPY 0x48 0x2F MSTORE8 0x21 SWAP14 LOG2 EQ 0xC0 0xC5 PUSH11 0x6BBEC162E91030B48C71EC 0x24 0x5C 0xE8 0xE7 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "613:7179:5:-:0;;;1014:275;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1014:275:5;;;;;;;;;;-1:-1:-1;1014:275:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1014:275:5;;;;;;;;;;-1:-1:-1;1014:275:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1014:275:5;;;;;;;;;;;;;;1147:12;;1014:275;;-1:-1:-1;1014:275:5;-1:-1:-1;1147:12:5;;:5;;:12;;;;:::i;:::-;-1:-1:-1;1165:16:5;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;1187:9:5;:20;;-1:-1:-1;;1187:20:5;;;;;;;;;;;;;1213:71;;-1:-1:-1;;;;;;1213:71:5;;;-1:-1:-1;613:7179:5;;-1:-1:-1;613:7179:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;613:7179:5;;;-1:-1:-1;613:7179:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {
								"355": [
									{
										"length": 32,
										"start": 2106
									},
									{
										"length": 32,
										"start": 2152
									},
									{
										"length": 32,
										"start": 2328
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b61017361036c565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b03813581169160208101359091169060400135610372565b6101c3610444565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b03813516906020013561044d565b6101736004803603602081101561021b57600080fd5b50356001600160a01b031661049b565b6100b66104b6565b6101576004803603604081101561024957600080fd5b506001600160a01b038135169060200135610517565b6101576004803603604081101561027557600080fd5b506001600160a01b03813516906020013561057f565b610173600480360360408110156102a157600080fd5b506001600160a01b03813581169160200135166105ee565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061036361035c610619565b848461061d565b50600192915050565b60025490565b600061037f848484610709565b6103ef8461038b610619565b6103ea85604051806060016040528060288152602001610b20602891396001600160a01b038a166000908152600160205260408120906103c9610619565b6001600160a01b0316815260208101919091526040016000205491906109b7565b61061d565b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35060019392505050565b60055460ff1690565b600061036361045a610619565b846103ea856001600061046b610619565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610a4e565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b6000610363610524610619565b846103ea85604051806060016040528060258152602001610b91602591396001600061054e610619565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906109b7565b600061059361058c610619565b8484610709565b826001600160a01b03166105a5610619565b6001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a350600192915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166106625760405162461bcd60e51b8152600401808060200182810382526024815260200180610b6d6024913960400191505060405180910390fd5b6001600160a01b0382166106a75760405162461bcd60e51b8152600401808060200182810382526022815260200180610ad86022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661074e5760405162461bcd60e51b8152600401808060200182810382526025815260200180610b486025913960400191505060405180910390fd5b6001600160a01b0382166107935760405162461bcd60e51b8152600401808060200182810382526023815260200180610ab56023913960400191505060405180910390fd5b61079e838383610aaf565b6000806000856001600160a01b03166001600160a01b031681526020019081526020016000205490506107ec82604051806060016040528060268152602001610afa602691398391906109b7565b6001600160a01b03808616600090815260208190526040808220939093559085168152205461081b8184610a4e565b6001600160a01b038086166000908152602081905260409020919091557f000000000000000000000000000000000000000000000000000000000000000016156109b057600060025490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166331873e2e8783866040518463ffffffff1660e01b815260040180846001600160a01b031681526020018381526020018281526020019350505050600060405180830381600087803b1580156108e557600080fd5b505af11580156108f9573d6000803e3d6000fd5b50505050846001600160a01b0316866001600160a01b0316146109ae577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166331873e2e8683856040518463ffffffff1660e01b815260040180846001600160a01b031681526020018381526020018281526020019350505050600060405180830381600087803b15801561099557600080fd5b505af11580156109a9573d6000803e3d6000fd5b505050505b505b5050505050565b60008184841115610a465760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a0b5781810151838201526020016109f3565b50505050905090810190601f168015610a385780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610aa8576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212205d105ca9020639482f53219da214c0c56a6bbec162e91030b48c71ec245ce8e764736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28B JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x44D JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x49B JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x4B6 JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x517 JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x57F JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x35C PUSH2 0x619 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x61D JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F DUP5 DUP5 DUP5 PUSH2 0x709 JUMP JUMPDEST PUSH2 0x3EF DUP5 PUSH2 0x38B PUSH2 0x619 JUMP JUMPDEST PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB20 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3C9 PUSH2 0x619 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x9B7 JUMP JUMPDEST PUSH2 0x61D JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x45A PUSH2 0x619 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x46B PUSH2 0x619 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x524 PUSH2 0x619 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB91 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x54E PUSH2 0x619 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x593 PUSH2 0x58C PUSH2 0x619 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x709 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5A5 PUSH2 0x619 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB6D PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAD8 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x74E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB48 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x793 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAB5 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x79E DUP4 DUP4 DUP4 PUSH2 0xAAF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x7EC DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAFA PUSH1 0x26 SWAP2 CODECOPY DUP4 SWAP2 SWAP1 PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x81B DUP2 DUP5 PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH32 0x0 AND ISZERO PUSH2 0x9B0 JUMPI PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x31873E2E DUP8 DUP4 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9AE JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x31873E2E DUP7 DUP4 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x995 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xA46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA0B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9F3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xA38 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xAA8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212205D10 0x5C 0xA9 MUL MOD CODECOPY 0x48 0x2F MSTORE8 0x21 SWAP14 LOG2 EQ 0xC0 0xC5 PUSH11 0x6BBEC162E91030B48C71EC 0x24 0x5C 0xE8 0xE7 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "613:7179:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1341:84;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3118:156;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3118:156:5;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1767:100;;;:::i;:::-;;;;;;;;;;;;;;;;3607:389;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3607:389:5;;;;;;;;;;;;;;;;;:::i;1623:84::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4242:205;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4242:205:5;;;;;;;;:::i;1922:119::-;;;;;;;;;;;;;;;;-1:-1:-1;1922:119:5;-1:-1:-1;;;;;1922:119:5;;:::i;1479:88::-;;;:::i;4703:318::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4703:318:5;;;;;;;;:::i;2301:214::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2301:214:5;;;;;;;;:::i;2781:165::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2781:165:5;;;;;;;;;;:::i;1341:84::-;1415:5;1408:12;;;;;;;;-1:-1:-1;;1408:12:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1387:13;;1408:12;;1415:5;;1408:12;;1415:5;1408:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1341:84;:::o;3118:156::-;3201:4;3213:39;3222:12;:10;:12::i;:::-;3236:7;3245:6;3213:8;:39::i;:::-;-1:-1:-1;3265:4:5;3118:156;;;;:::o;1767:100::-;1850:12;;1767:100;:::o;3607:389::-;3729:4;3741:36;3751:6;3759:9;3770:6;3741:9;:36::i;:::-;3783:145;3799:6;3813:12;:10;:12::i;:::-;3833:89;3871:6;3833:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3833:19:5;;;;;;:11;:19;;;;;;3853:12;:10;:12::i;:::-;-1:-1:-1;;;;;3833:33:5;;;;;;;;;;;;-1:-1:-1;3833:33:5;;;:89;:37;:89::i;:::-;3783:8;:145::i;:::-;3956:9;-1:-1:-1;;;;;3939:35:5;3948:6;-1:-1:-1;;;;;3939:35:5;;3967:6;3939:35;;;;;;;;;;;;;;;;;;-1:-1:-1;3987:4:5;3607:389;;;;;:::o;1623:84::-;1693:9;;;;1623:84;:::o;4242:205::-;4330:4;4342:83;4351:12;:10;:12::i;:::-;4365:7;4374:50;4413:10;4374:11;:25;4386:12;:10;:12::i;:::-;-1:-1:-1;;;;;4374:25:5;;;;;;;;;;;;;;;;;-1:-1:-1;4374:25:5;;;:34;;;;;;;;;;;:38;:50::i;1922:119::-;-1:-1:-1;;;;;2018:18:5;1996:7;2018:18;;;;;;;;;;;;1922:119::o;1479:88::-;1555:7;1548:14;;;;;;;;-1:-1:-1;;1548:14:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1527:13;;1548:14;;1555:7;;1548:14;;1555:7;1548:14;;;;;;;;;;;;;;;;;;;;;;;;4703:318;4808:4;4822:177;4838:12;:10;:12::i;:::-;4858:7;4873:120;4921:15;4873:120;;;;;;;;;;;;;;;;;:11;:25;4885:12;:10;:12::i;:::-;-1:-1:-1;;;;;4873:25:5;;;;;;;;;;;;;;;;;-1:-1:-1;4873:25:5;;;:34;;;;;;;;;;;:120;:38;:120::i;2301:214::-;2387:4;2399:42;2409:12;:10;:12::i;:::-;2423:9;2434:6;2399:9;:42::i;:::-;2475:9;-1:-1:-1;;;;;2452:41:5;2461:12;:10;:12::i;:::-;-1:-1:-1;;;;;2452:41:5;;2486:6;2452:41;;;;;;;;;;;;;;;;;;-1:-1:-1;2506:4:5;2301:214;;;;:::o;2781:165::-;-1:-1:-1;;;;;2914:18:5;;;2890:7;2914:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2781:165::o;587:98:0:-;670:10;587:98;:::o;7085:338:5:-;-1:-1:-1;;;;;7198:19:5;;7190:68;;;;-1:-1:-1;;;7190:68:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7272:21:5;;7264:68;;;;-1:-1:-1;;;7264:68:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7339:18:5;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7386:32;;;;;;;;;;;;;;;;;7085:338;;;:::o;5025:916::-;-1:-1:-1;;;;;5142:20:5;;5134:70;;;;-1:-1:-1;;;5134:70:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5218:23:5;;5210:71;;;;-1:-1:-1;;;5210:71:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5288:47;5309:6;5317:9;5328:6;5288:20;:47::i;:::-;5342:24;5369:9;:17;5379:6;-1:-1:-1;;;;;5369:17:5;-1:-1:-1;;;;;5369:17:5;;;;;;;;;;;;;5342:44;;5412:70;5433:6;5412:70;;;;;;;;;;;;;;;;;:16;;:70;:20;:70::i;:::-;-1:-1:-1;;;;;5392:17:5;;;:9;:17;;;;;;;;;;;:90;;;;5518:20;;;;;;;5567:32;5518:20;5592:6;5567:24;:32::i;:::-;-1:-1:-1;;;;;5544:20:5;;;:9;:20;;;;;;;;;;:55;;;;5618:21;5610:44;;5606:331;;5664:26;5693:12;;5664:41;;5713:21;-1:-1:-1;;;;;5713:34:5;;5748:6;5756:18;5776:16;5713:80;;;;;;;;;;;;;-1:-1:-1;;;;;5713:80:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5815:9;-1:-1:-1;;;;;5805:19:5;:6;-1:-1:-1;;;;;5805:19:5;;5801:130;;5836:21;-1:-1:-1;;;;;5836:34:5;;5871:9;5882:18;5902:19;5836:86;;;;;;;;;;;;;-1:-1:-1;;;;;5836:86:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5801:130;5606:331;;5025:916;;;;;:::o;1649:189:3:-;1751:7;1782:12;1774:6;;;;1766:29;;;;-1:-1:-1;;;1766:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1813:5:3;;;1649:189::o;851:162::-;909:7;936:5;;;955:6;;;;947:46;;;;;-1:-1:-1;;;947:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1007:1;851:162;-1:-1:-1;;;851:162:3:o;7683:107:5:-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "610200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1360",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1167",
								"decimals()": "1102",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1043",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setDecimals(uint8)": "infinite",
								"_setName(string memory)": "infinite",
								"_setSymbol(string memory)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "100000000"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "tag",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "100000000"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "100000000"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "100000000"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1147,
									"end": 1159,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1147,
									"end": 1159,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1014,
									"end": 1289,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1147,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1147,
									"end": 1159,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1147,
									"end": 1152,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1147,
									"end": 1152,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1147,
									"end": 1159,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1147,
									"end": 1159,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1147,
									"end": 1159,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1147,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1147,
									"end": 1159,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1147,
									"end": 1159,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1147,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1165,
									"end": 1172,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1165,
									"end": 1172,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1187,
									"end": 1196,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1187,
									"end": 1207,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1187,
									"end": 1207,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1187,
									"end": 1207,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1187,
									"end": 1207,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 1187,
									"end": 1207,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1187,
									"end": 1207,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1187,
									"end": 1207,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1187,
									"end": 1207,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1187,
									"end": 1207,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1187,
									"end": 1207,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1187,
									"end": 1207,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1187,
									"end": 1207,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1187,
									"end": 1207,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1187,
									"end": 1207,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1187,
									"end": 1207,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1284,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1213,
									"end": 1284,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1213,
									"end": 1284,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1284,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1213,
									"end": 1284,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "355"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 613,
									"end": 7792,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205d105ca9020639482f53219da214c0c56a6bbec162e91030b48c71ec245ce8e764736f6c634300060c0033",
									".code": [
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH",
											"source": 5,
											"value": "39509351"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH",
											"source": 5,
											"value": "39509351"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH",
											"source": 5,
											"value": "A457C2D7"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 613,
											"end": 7792,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1867,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1767,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1767,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1767,
											"end": 1867,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1767,
											"end": 1867,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1767,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1867,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1767,
											"end": 1867,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1867,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1867,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1867,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1867,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1867,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1867,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1867,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1867,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1867,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1867,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1767,
											"end": 1867,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1867,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1867,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1922,
											"end": 2041,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1922,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1922,
											"end": 2041,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1922,
											"end": 2041,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 2041,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 2041,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 2041,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 2041,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 2041,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 2041,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1922,
											"end": 2041,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 2041,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 2041,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 2041,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 2041,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1922,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 2041,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 2041,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1922,
											"end": 2041,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1479,
											"end": 1567,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1479,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1479,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1479,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1479,
											"end": 1567,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1400,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1387,
											"end": 1400,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1425,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3201,
											"end": 3205,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3213,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 3222,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3236,
											"end": 3243,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3251,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3213,
											"end": 3252,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3213,
											"end": 3252,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 3213,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3265,
											"end": 3269,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3274,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1767,
											"end": 1867,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1767,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1862,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1850,
											"end": 1862,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1867,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1867,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3729,
											"end": 3733,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3751,
											"end": 3757,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3759,
											"end": 3768,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3770,
											"end": 3776,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3741,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3741,
											"end": 3777,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3741,
											"end": 3777,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3741,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3783,
											"end": 3928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3813,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 3813,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3813,
											"end": 3825,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3813,
											"end": 3825,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 3813,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3871,
											"end": 3877,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3922,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3833,
											"end": 3922,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3922,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3922,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3833,
											"end": 3922,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3922,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3833,
											"end": 3922,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3922,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3922,
											"name": "PUSH",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3833,
											"end": 3922,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3922,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3922,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3833,
											"end": 3922,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3922,
											"name": "PUSH data",
											"source": 5,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 3833,
											"end": 3922,
											"name": "PUSH",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3833,
											"end": 3922,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3922,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3833,
											"end": 3852,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3852,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3852,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3852,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3852,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3852,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3844,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3833,
											"end": 3852,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3833,
											"end": 3852,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3852,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3833,
											"end": 3852,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3852,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3852,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3853,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3853,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3853,
											"end": 3865,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3853,
											"end": 3865,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3853,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3833,
											"end": 3866,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3866,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3866,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3866,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3833,
											"end": 3866,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3866,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3866,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3866,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3866,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3866,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3866,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3833,
											"end": 3866,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3866,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3866,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3866,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3922,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3833,
											"end": 3922,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3833,
											"end": 3922,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3833,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3783,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3783,
											"end": 3928,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3783,
											"end": 3928,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3783,
											"end": 3928,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3956,
											"end": 3965,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3939,
											"end": 3974,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3939,
											"end": 3974,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3939,
											"end": 3974,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3967,
											"end": 3973,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3939,
											"end": 3974,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3939,
											"end": 3974,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3939,
											"end": 3974,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3939,
											"end": 3974,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3939,
											"end": 3974,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3939,
											"end": 3974,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3939,
											"end": 3974,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3939,
											"end": 3974,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3939,
											"end": 3974,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3939,
											"end": 3974,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3939,
											"end": 3974,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3939,
											"end": 3974,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3939,
											"end": 3974,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3939,
											"end": 3974,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3939,
											"end": 3974,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3939,
											"end": 3974,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3939,
											"end": 3974,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3939,
											"end": 3974,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3987,
											"end": 3991,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3996,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1693,
											"end": 1702,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1693,
											"end": 1702,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1693,
											"end": 1702,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1693,
											"end": 1702,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1707,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 4242,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4334,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4342,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 4351,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 4351,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 4351,
											"end": 4363,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4351,
											"end": 4363,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 4351,
											"end": 4363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4365,
											"end": 4372,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 4413,
											"end": 4423,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4385,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4374,
											"end": 4399,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4386,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4386,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 4386,
											"end": 4398,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4386,
											"end": 4398,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4386,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4374,
											"end": 4399,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4399,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4399,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4399,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4399,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4399,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4374,
											"end": 4399,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4399,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4399,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4399,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4399,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4399,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4399,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4399,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4374,
											"end": 4399,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4399,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4399,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4374,
											"end": 4399,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4399,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4399,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4408,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4408,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4408,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4408,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4408,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4408,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4408,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4408,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4408,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 4374,
											"end": 4424,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1922,
											"end": 2041,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1922,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2018,
											"end": 2036,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 2003,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2018,
											"end": 2036,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2036,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2036,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2036,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2018,
											"end": 2036,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2036,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2036,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2036,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2018,
											"end": 2036,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2036,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2036,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2036,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 2041,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1479,
											"end": 1567,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1479,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1540,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1527,
											"end": 1540,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4703,
											"end": 5021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4808,
											"end": 4812,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4822,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 4838,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4838,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 4838,
											"end": 4850,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4838,
											"end": 4850,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4838,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4858,
											"end": 4865,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 4921,
											"end": 4936,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4993,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4993,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4993,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4993,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4873,
											"end": 4993,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4993,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4993,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4993,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4993,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4873,
											"end": 4993,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4993,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4993,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4993,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4993,
											"name": "PUSH data",
											"source": 5,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 4873,
											"end": 4993,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4873,
											"end": 4993,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4993,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4884,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4873,
											"end": 4898,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4885,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 4885,
											"end": 4895,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 4885,
											"end": 4897,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4885,
											"end": 4897,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 4885,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4873,
											"end": 4898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4898,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4898,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4898,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4898,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4898,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4898,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4898,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4898,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4898,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4898,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4898,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4898,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4907,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4907,
											"name": "DUP14",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4907,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4907,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4907,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4907,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4907,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4907,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4907,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4907,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4907,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4993,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 4873,
											"end": 4993,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2391,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2409,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2409,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2409,
											"end": 2421,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2409,
											"end": 2421,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2409,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2432,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2440,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2399,
											"end": 2408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2399,
											"end": 2441,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2399,
											"end": 2441,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2399,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2475,
											"end": 2484,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2452,
											"end": 2493,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2461,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2461,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2461,
											"end": 2473,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2461,
											"end": 2473,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2461,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2452,
											"end": 2493,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 2493,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2486,
											"end": 2492,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 2493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2452,
											"end": 2493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 2493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 2493,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 2493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 2493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 2493,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2452,
											"end": 2493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 2493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 2493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 2493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 2493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2452,
											"end": 2493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 2493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 2493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 2493,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 2493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 2493,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2506,
											"end": 2510,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2515,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2914,
											"end": 2932,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2932,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2932,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2897,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2932,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2932,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2914,
											"end": 2932,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2932,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2932,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2932,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2914,
											"end": 2932,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2932,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2932,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 587,
											"end": 685,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 587,
											"end": 685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 670,
											"end": 680,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 587,
											"end": 685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 587,
											"end": 685,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7085,
											"end": 7423,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7085,
											"end": 7423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7198,
											"end": 7217,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7198,
											"end": 7217,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "PUSH data",
											"source": 5,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 7190,
											"end": 7258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7272,
											"end": 7293,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7272,
											"end": 7293,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "PUSH data",
											"source": 5,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 7264,
											"end": 7332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7339,
											"end": 7357,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7357,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7357,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7357,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7339,
											"end": 7357,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7357,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7357,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7350,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7339,
											"end": 7357,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7339,
											"end": 7357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7357,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7357,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7357,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7339,
											"end": 7357,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7357,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7357,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7366,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7366,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7366,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7366,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7366,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7366,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7366,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7366,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7366,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7366,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7366,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7366,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7366,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7375,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7375,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7386,
											"end": 7418,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7386,
											"end": 7418,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7386,
											"end": 7418,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7386,
											"end": 7418,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7386,
											"end": 7418,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7386,
											"end": 7418,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7386,
											"end": 7418,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7386,
											"end": 7418,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 7386,
											"end": 7418,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7386,
											"end": 7418,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7386,
											"end": 7418,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7386,
											"end": 7418,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7386,
											"end": 7418,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7386,
											"end": 7418,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7386,
											"end": 7418,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7386,
											"end": 7418,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7386,
											"end": 7418,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 7085,
											"end": 7423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7085,
											"end": 7423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7085,
											"end": 7423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7085,
											"end": 7423,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5025,
											"end": 5941,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5025,
											"end": 5941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5142,
											"end": 5162,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5162,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "PUSH data",
											"source": 5,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 5134,
											"end": 5204,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5218,
											"end": 5241,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5218,
											"end": 5241,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "PUSH data",
											"source": 5,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 5210,
											"end": 5281,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5288,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 5309,
											"end": 5315,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5326,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5328,
											"end": 5334,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5288,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5288,
											"end": 5335,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5288,
											"end": 5335,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 5288,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5342,
											"end": 5366,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5369,
											"end": 5378,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5369,
											"end": 5386,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5379,
											"end": 5385,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5369,
											"end": 5386,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5369,
											"end": 5386,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5369,
											"end": 5386,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5369,
											"end": 5386,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5369,
											"end": 5386,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5369,
											"end": 5386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5369,
											"end": 5386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5369,
											"end": 5386,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5369,
											"end": 5386,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5369,
											"end": 5386,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5369,
											"end": 5386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5369,
											"end": 5386,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5369,
											"end": 5386,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5369,
											"end": 5386,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5342,
											"end": 5386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5342,
											"end": 5386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5482,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 5433,
											"end": 5439,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5482,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5412,
											"end": 5482,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5482,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5482,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5412,
											"end": 5482,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5482,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5412,
											"end": 5482,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5482,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5482,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5412,
											"end": 5482,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5482,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5482,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5412,
											"end": 5482,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5482,
											"name": "PUSH data",
											"source": 5,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 5412,
											"end": 5482,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5412,
											"end": 5482,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5482,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5428,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5428,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5482,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 5412,
											"end": 5482,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5412,
											"end": 5482,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 5412,
											"end": 5482,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5392,
											"end": 5409,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5392,
											"end": 5409,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5392,
											"end": 5409,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5392,
											"end": 5401,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 5409,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5392,
											"end": 5409,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5392,
											"end": 5409,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5392,
											"end": 5409,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5392,
											"end": 5409,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5392,
											"end": 5409,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5392,
											"end": 5409,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5392,
											"end": 5409,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5392,
											"end": 5409,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5392,
											"end": 5409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5392,
											"end": 5409,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5392,
											"end": 5482,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5392,
											"end": 5482,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5392,
											"end": 5482,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5392,
											"end": 5482,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5518,
											"end": 5538,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5518,
											"end": 5538,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5518,
											"end": 5538,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5518,
											"end": 5538,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5518,
											"end": 5538,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5518,
											"end": 5538,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5518,
											"end": 5538,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 5518,
											"end": 5538,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5592,
											"end": 5598,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 5591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 5567,
											"end": 5599,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5567,
											"end": 5599,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 5567,
											"end": 5599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5544,
											"end": 5564,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5564,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5564,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5553,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5544,
											"end": 5564,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5564,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5564,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5564,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5544,
											"end": 5564,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5564,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5564,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5564,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5544,
											"end": 5564,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5564,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5599,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5599,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5599,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5599,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5618,
											"end": 5639,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 5610,
											"end": 5654,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5654,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5606,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 5606,
											"end": 5937,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5664,
											"end": 5690,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5693,
											"end": 5705,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5693,
											"end": 5705,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5664,
											"end": 5705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5664,
											"end": 5705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5734,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "355"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5713,
											"end": 5747,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5747,
											"name": "PUSH",
											"source": 5,
											"value": "31873E2E"
										},
										{
											"begin": 5748,
											"end": 5754,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5756,
											"end": 5774,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5776,
											"end": 5792,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5793,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5815,
											"end": 5824,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5805,
											"end": 5824,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5805,
											"end": 5811,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5805,
											"end": 5824,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5805,
											"end": 5824,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5801,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 5801,
											"end": 5931,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5857,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "355"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5836,
											"end": 5870,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5870,
											"name": "PUSH",
											"source": 5,
											"value": "31873E2E"
										},
										{
											"begin": 5871,
											"end": 5880,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5900,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5902,
											"end": 5921,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5922,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5801,
											"end": 5931,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 5801,
											"end": 5931,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5606,
											"end": 5937,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5606,
											"end": 5937,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 5606,
											"end": 5937,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5941,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5941,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5941,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5941,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5941,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5941,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1649,
											"end": 1838,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1649,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1751,
											"end": 1758,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1782,
											"end": 1794,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1780,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1780,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1780,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1780,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1766,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1813,
											"end": 1818,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1813,
											"end": 1818,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1813,
											"end": 1818,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1649,
											"end": 1838,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 851,
											"end": 1013,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 851,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 909,
											"end": 916,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 941,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 936,
											"end": 941,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 936,
											"end": 941,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 955,
											"end": 961,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 955,
											"end": 961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 955,
											"end": 961,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 955,
											"end": 961,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 947,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 947,
											"end": 993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 947,
											"end": 993,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 947,
											"end": 993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 947,
											"end": 993,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 947,
											"end": 993,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 947,
											"end": 993,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 947,
											"end": 993,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 947,
											"end": 993,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 947,
											"end": 993,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 947,
											"end": 993,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 947,
											"end": 993,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 947,
											"end": 993,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 947,
											"end": 993,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 947,
											"end": 993,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 947,
											"end": 993,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 947,
											"end": 993,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 947,
											"end": 993,
											"name": "PUSH",
											"source": 3,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 947,
											"end": 993,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 947,
											"end": 993,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 947,
											"end": 993,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 947,
											"end": 993,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 947,
											"end": 993,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 947,
											"end": 993,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 947,
											"end": 993,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 947,
											"end": 993,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 947,
											"end": 993,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 947,
											"end": 993,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 947,
											"end": 993,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 947,
											"end": 993,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 947,
											"end": 993,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 947,
											"end": 993,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 947,
											"end": 993,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 947,
											"end": 993,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1007,
											"end": 1008,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 851,
											"end": 1013,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 851,
											"end": 1013,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7683,
											"end": 7790,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 7683,
											"end": 7790,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7683,
											"end": 7790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7683,
											"end": 7790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7683,
											"end": 7790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7683,
											"end": 7790,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"incentivesController\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave, inspired by the Openzeppelin ERC20 implementation*\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the allowance of spender on the tokens owned by owner\",\"params\":{\"owner\":\"The owner of the tokens\",\"spender\":\"The user allowed to spend the owner's tokens\"},\"returns\":{\"_0\":\"The amount of owner's tokens spender is allowed to spend*\"}},\"approve(address,uint256)\":{\"details\":\"Allows `spender` to spend the tokens owned by _msgSender()\",\"params\":{\"spender\":\"The user allowed to spend _msgSender() tokens\"},\"returns\":{\"_0\":\"`true`*\"}},\"balanceOf(address)\":{\"returns\":{\"_0\":\"The balance of the token*\"}},\"decimals()\":{\"returns\":{\"_0\":\"The decimals of the token*\"}},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decreases the allowance of spender to spend _msgSender() tokens\",\"params\":{\"spender\":\"The user allowed to spend on behalf of _msgSender()\",\"subtractedValue\":\"The amount being subtracted to the allowance\"},\"returns\":{\"_0\":\"`true`*\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increases the allowance of spender to spend _msgSender() tokens\",\"params\":{\"addedValue\":\"The amount being added to the allowance\",\"spender\":\"The user allowed to spend on behalf of _msgSender()\"},\"returns\":{\"_0\":\"`true`*\"}},\"name()\":{\"returns\":{\"_0\":\"The name of the token*\"}},\"symbol()\":{\"returns\":{\"_0\":\"The symbol of the token*\"}},\"totalSupply()\":{\"returns\":{\"_0\":\"The total supply of the token*\"}},\"transfer(address,uint256)\":{\"details\":\"Executes a transfer of tokens from _msgSender() to recipient\",\"params\":{\"amount\":\"The amount of tokens being transferred\",\"recipient\":\"The recipient of the tokens\"},\"returns\":{\"_0\":\"`true` if the transfer succeeds, `false` otherwise*\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Executes a transfer of token from sender to recipient, if _msgSender() is allowed to do so\",\"params\":{\"amount\":\"The amount of tokens being transferred\",\"recipient\":\"The recipient of the tokens\",\"sender\":\"The owner of the tokens\"},\"returns\":{\"_0\":\"`true` if the transfer succeeds, `false` otherwise*\"}}},\"title\":\"ERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Basic ERC20 implementation\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/protocol/tokenization/IncentivizedERC20.sol\":\"IncentivizedERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"keccak256\":\"0xe52c598aa6e76d57665914c1c43fc6fa13bbe3b0bd8e816a6cec1c2bca5014e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a665a54b2277889ba2bdb9c3860b3b71ec7b22757297a03b590a093257604e9d\",\"dweb:/ipfs/QmQ4mm9YnrtvjJwetDec3WoiKeJGoJMCs5kbPBhGVRcZ6N\"]},\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0x6406b04abfeda2c8c80ea3faf797ce4501e66db41fb6ff4e299ebe0402879f44\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://33b0db81db37bd6fe20aa0b23581c6b0edef2f3c49d0bd88b4fe46c1164adb00\",\"dweb:/ipfs/QmYn1zYwt3ahpkLYwHh6h5b1UJrzP2xy5G3at9oEVNw2c1\"]},\"contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol\":{\"keccak256\":\"0x4dade975e9d49dcd7785b30f9e56f80ba9322f3b037a6e39912a32e49a6a817c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://84b4c20094e95699e746ecf1fad83748139fadf844a548a09e4949840fb6232f\",\"dweb:/ipfs/Qme51kM9jqbjEyd7wQ8DNRNRAt5hY7FZHsaRxTP3xvXi5D\"]},\"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":{\"keccak256\":\"0xfca35d11bafb85cf4f2203b41f1a98238dca59b6a9faa28b86ea3f9f63da8ec5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://7019345b024afa93000c6b5a2b095be59c3c5352eb658619c941d23d0af5bc65\",\"dweb:/ipfs/QmZLxJKSbM66Wd1Qd43jSdiXdg7JP6DQ9J6LuANUZummM4\"]},\"contracts/interfaces/IAaveIncentivesController.sol\":{\"keccak256\":\"0x19b7059e203933cca7782202e9f2abfbae4680e2e49d179857aa8a16c29513d5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://eba6211fa0df888effbfc3ae5e6636e4fa273e0ce046723519f87cd73152221c\",\"dweb:/ipfs/QmT5We1cUQQNKw1TDaHTHJYvjtbckERogrMK3qE1nNQMjM\"]},\"contracts/protocol/tokenization/IncentivizedERC20.sol\":{\"keccak256\":\"0xaca104a2a5f22fd5c8173da7ee1b6b1a9f5d1725cca8ea1e90ad7b37f2955b20\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://7a442c6c459fa455f4181abfa02c5fb6374eb30ef9b9013c9431100931e04586\",\"dweb:/ipfs/QmWMoqoLNCNQzx4X43RN4n4WXy5LioWRvc4or5ggY4DfRf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 359,
								"contract": "contracts/protocol/tokenization/IncentivizedERC20.sol:IncentivizedERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 365,
								"contract": "contracts/protocol/tokenization/IncentivizedERC20.sol:IncentivizedERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 367,
								"contract": "contracts/protocol/tokenization/IncentivizedERC20.sol:IncentivizedERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 369,
								"contract": "contracts/protocol/tokenization/IncentivizedERC20.sol:IncentivizedERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 371,
								"contract": "contracts/protocol/tokenization/IncentivizedERC20.sol:IncentivizedERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 373,
								"contract": "contracts/protocol/tokenization/IncentivizedERC20.sol:IncentivizedERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Basic ERC20 implementation",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/dependencies/openzeppelin/contracts/Context.sol": {
				"ast": {
					"absolutePath": "contracts/dependencies/openzeppelin/contracts/Context.sol",
					"exportedSymbols": {
						"Context": [
							22
						]
					},
					"id": 23,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "657:28:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "670:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "670:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "663:17:0"
											}
										]
									},
									"documentation": null,
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "606:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "640:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "639:17:0"
									},
									"scope": 22,
									"src": "587:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "754:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 15,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "760:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$22",
														"typeString": "contract Context"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "760:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 17,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "896:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "896:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 19,
												"nodeType": "Return",
												"src": "889:15:0"
											}
										]
									},
									"documentation": null,
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 21,
												"src": "740:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "740:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "739:14:0"
									},
									"scope": 22,
									"src": "689:220:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 23,
							"src": "557:354:0"
						}
					],
					"src": "32:880:0"
				},
				"id": 0
			},
			"contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/dependencies/openzeppelin/contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							100
						]
					},
					"id": 101,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 24,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 25,
								"nodeType": "StructuredDocumentation",
								"src": "62:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "154:62:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "239:2:1"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "265:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "264:9:1"
									},
									"scope": 100,
									"src": "219:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "278:68:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 39,
												"src": "368:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "367:17:1"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 39,
												"src": "408:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "408:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "407:9:1"
									},
									"scope": 100,
									"src": "349:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "421:197:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 49,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 49,
												"src": "639:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 49,
												"src": "658:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "638:35:1"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 49,
												"src": "692:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "692:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "691:6:1"
									},
									"scope": 100,
									"src": "621:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "702:252:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 59,
												"src": "976:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 59,
												"src": "991:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "975:32:1"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 59,
												"src": "1031:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1030:9:1"
									},
									"scope": 100,
									"src": "957:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "1044:616:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 69,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 69,
												"src": "1680:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 69,
												"src": "1697:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1697:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1679:33:1"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 69,
												"src": "1731:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 66,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1731:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1730:6:1"
									},
									"scope": 100,
									"src": "1663:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "1741:280:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "2051:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2051:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "2071:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2071:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "2094:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2045:67:1"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "2131:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 78,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2131:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2130:6:1"
									},
									"scope": 100,
									"src": "2024:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2141:148:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 90,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "2307:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2307:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "2329:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2329:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "2349:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2349:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2306:57:1"
									},
									"src": "2292:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2368:142:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 99,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 99,
												"src": "2528:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2528:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 99,
												"src": "2551:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2551:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 99,
												"src": "2576:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2527:63:1"
									},
									"src": "2513:78:1"
								}
							],
							"scope": 101,
							"src": "133:2460:1"
						}
					],
					"src": "37:2557:1"
				},
				"id": 1
			},
			"contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol": {
				"ast": {
					"absolutePath": "contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol",
					"exportedSymbols": {
						"IERC20Detailed": [
							122
						]
					},
					"id": 123,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 102,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:2"
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 104,
							"nodeType": "ImportDirective",
							"scope": 123,
							"sourceUnit": 101,
							"src": "62:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 103,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "70:6:2",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 105,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 100,
										"src": "128:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$100",
											"typeString": "contract IERC20"
										}
									},
									"id": 106,
									"nodeType": "InheritanceSpecifier",
									"src": "128:6:2"
								}
							],
							"contractDependencies": [
								100
							],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 122,
							"linearizedBaseContracts": [
								122,
								100
							],
							"name": "IERC20Detailed",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "06fdde03",
									"id": 111,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "152:2:2"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 111,
												"src": "178:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 108,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "178:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "177:15:2"
									},
									"scope": 122,
									"src": "139:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "95d89b41",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "212:2:2"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 116,
												"src": "238:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 113,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "238:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "237:15:2"
									},
									"scope": 122,
									"src": "197:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "313ce567",
									"id": 121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "274:2:2"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 121,
												"src": "300:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 118,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "300:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "299:7:2"
									},
									"scope": 122,
									"src": "257:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 123,
							"src": "100:209:2"
						}
					],
					"src": "37:273:2"
				},
				"id": 2
			},
			"contracts/dependencies/openzeppelin/contracts/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/dependencies/openzeppelin/contracts/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							318
						]
					},
					"id": 319,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 124,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 125,
								"nodeType": "StructuredDocumentation",
								"src": "62:563:3",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 318,
							"linearizedBaseContracts": [
								318
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "918:95:3",
										"statements": [
											{
												"assignments": [
													136
												],
												"declarations": [
													{
														"constant": false,
														"id": 136,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 150,
														"src": "924:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 135,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "924:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 140,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 137,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "936:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 138,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "940:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "936:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "924:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 142,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "955:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 143,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 128,
																"src": "960:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "955:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "963:29:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 141,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "947:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "947:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "947:46:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 148,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 136,
													"src": "1007:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 134,
												"id": 149,
												"nodeType": "Return",
												"src": "1000:8:3"
											}
										]
									},
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "647:201:3",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 151,
												"src": "864:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "864:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 151,
												"src": "875:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "863:22:3"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 151,
												"src": "909:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "909:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "908:9:3"
									},
									"scope": 318,
									"src": "851:162:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "1324:61:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 162,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1341:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 163,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "1344:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1347:32:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 161,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															168,
															196
														],
														"referencedDeclaration": 196,
														"src": "1337:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1337:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 160,
												"id": 166,
												"nodeType": "Return",
												"src": "1330:50:3"
											}
										]
									},
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "1017:237:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 168,
												"src": "1270:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1270:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 168,
												"src": "1281:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1269:22:3"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 168,
												"src": "1315:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1315:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1314:9:3"
									},
									"scope": 318,
									"src": "1257:128:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "1760:78:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 181,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 173,
																"src": "1774:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 182,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "1779:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1774:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 184,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "1782:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1766:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1766:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1766:29:3"
											},
											{
												"assignments": [
													188
												],
												"declarations": [
													{
														"constant": false,
														"id": 188,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 195,
														"src": "1801:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 187,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1801:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 192,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 189,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1813:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 190,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "1817:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1813:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1801:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 193,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 188,
													"src": "1832:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 179,
												"id": 194,
												"nodeType": "Return",
												"src": "1825:8:3"
											}
										]
									},
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1389:257:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 196,
												"src": "1667:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 196,
												"src": "1682:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 196,
												"src": "1697:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 174,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1697:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1661:66:3"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 196,
												"src": "1751:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1751:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1750:9:3"
									},
									"scope": 318,
									"src": "1649:189:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "2125:352:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 206,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "2341:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2346:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2341:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 212,
												"nodeType": "IfStatement",
												"src": "2337:35:3",
												"trueBody": {
													"id": 211,
													"nodeType": "Block",
													"src": "2349:23:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2364:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 205,
															"id": 210,
															"nodeType": "Return",
															"src": "2357:8:3"
														}
													]
												}
											},
											{
												"assignments": [
													214
												],
												"declarations": [
													{
														"constant": false,
														"id": 214,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 230,
														"src": "2378:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 213,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2378:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 218,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "2390:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "2394:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2390:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2378:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 220,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "2409:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 221,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "2413:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2409:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 223,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "2418:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2409:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2421:35:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 219,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2401:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2401:56:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 227,
												"nodeType": "ExpressionStatement",
												"src": "2401:56:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 228,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 214,
													"src": "2471:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 205,
												"id": 229,
												"nodeType": "Return",
												"src": "2464:8:3"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "1842:213:3",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 231,
												"src": "2071:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2071:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 231,
												"src": "2082:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2082:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2070:22:3"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 231,
												"src": "2116:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2115:9:3"
									},
									"scope": 318,
									"src": "2058:419:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "2975:57:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 242,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "2992:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 243,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "2995:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2998:28:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 241,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															248,
															276
														],
														"referencedDeclaration": 276,
														"src": "2988:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2988:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 240,
												"id": 246,
												"nodeType": "Return",
												"src": "2981:46:3"
											}
										]
									},
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "2481:424:3",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 248,
												"src": "2921:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2921:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 248,
												"src": "2932:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2932:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2920:22:3"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 248,
												"src": "2966:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2966:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2965:9:3"
									},
									"scope": 318,
									"src": "2908:124:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "3594:221:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 261,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "3670:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3674:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3670:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 264,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "3677:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 260,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3662:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3662:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "ExpressionStatement",
												"src": "3662:28:3"
											},
											{
												"assignments": [
													268
												],
												"declarations": [
													{
														"constant": false,
														"id": 268,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 275,
														"src": "3696:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 267,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3696:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 272,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 269,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 251,
														"src": "3708:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 270,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "3712:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3708:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3696:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 273,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 268,
													"src": "3809:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 259,
												"id": 274,
												"nodeType": "Return",
												"src": "3802:8:3"
											}
										]
									},
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "3036:444:3",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 276,
												"src": "3501:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 276,
												"src": "3516:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3516:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 276,
												"src": "3531:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 254,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3531:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3495:66:3"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 276,
												"src": "3585:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3584:9:3"
									},
									"scope": 318,
									"src": "3483:332:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "4302:55:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 287,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "4319:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 288,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4322:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4325:26:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 286,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															293,
															317
														],
														"referencedDeclaration": 317,
														"src": "4315:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4315:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 285,
												"id": 291,
												"nodeType": "Return",
												"src": "4308:44:3"
											}
										]
									},
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "3819:413:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 293,
												"src": "4248:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4248:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 293,
												"src": "4259:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4247:22:3"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 293,
												"src": "4293:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4293:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4292:9:3"
									},
									"scope": 318,
									"src": "4235:122:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "4908:58:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 306,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "4922:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4927:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4922:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 309,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "4930:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4914:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4914:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "4914:29:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 312,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "4956:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 313,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "4960:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 304,
												"id": 315,
												"nodeType": "Return",
												"src": "4949:12:3"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "4361:433:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 317,
												"src": "4815:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4815:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 317,
												"src": "4830:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4830:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 317,
												"src": "4845:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 299,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4845:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4809:66:3"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 317,
												"src": "4899:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4899:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4898:9:3"
									},
									"scope": 318,
									"src": "4797:169:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 319,
							"src": "626:4342:3"
						}
					],
					"src": "37:4932:3"
				},
				"id": 3
			},
			"contracts/interfaces/IAaveIncentivesController.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IAaveIncentivesController.sol",
					"exportedSymbols": {
						"IAaveIncentivesController": [
							331
						]
					},
					"id": 332,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 320,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:4"
						},
						{
							"id": 321,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "61:33:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 331,
							"linearizedBaseContracts": [
								331
							],
							"name": "IAaveIncentivesController",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "31873e2e",
									"id": 330,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "handleAction",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 330,
												"src": "163:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "163:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "userBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 330,
												"src": "181:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "181:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "totalSupply",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 330,
												"src": "206:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "157:72:4"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "238:0:4"
									},
									"scope": 331,
									"src": "136:103:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 332,
							"src": "96:145:4"
						}
					],
					"src": "37:205:4"
				},
				"id": 4
			},
			"contracts/protocol/tokenization/IncentivizedERC20.sol": {
				"ast": {
					"absolutePath": "contracts/protocol/tokenization/IncentivizedERC20.sol",
					"exportedSymbols": {
						"IncentivizedERC20": [
							960
						]
					},
					"id": 961,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 333,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:5"
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/Context.sol",
							"file": "../../dependencies/openzeppelin/contracts/Context.sol",
							"id": 335,
							"nodeType": "ImportDirective",
							"scope": 961,
							"sourceUnit": 23,
							"src": "62:78:5",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 334,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "70:7:5",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/IERC20.sol",
							"file": "../../dependencies/openzeppelin/contracts/IERC20.sol",
							"id": 337,
							"nodeType": "ImportDirective",
							"scope": 961,
							"sourceUnit": 101,
							"src": "141:76:5",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 336,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "149:6:5",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol",
							"file": "../../dependencies/openzeppelin/contracts/IERC20Detailed.sol",
							"id": 339,
							"nodeType": "ImportDirective",
							"scope": 961,
							"sourceUnit": 123,
							"src": "218:92:5",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 338,
										"name": "IERC20Detailed",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "226:14:5",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/SafeMath.sol",
							"file": "../../dependencies/openzeppelin/contracts/SafeMath.sol",
							"id": 341,
							"nodeType": "ImportDirective",
							"scope": 961,
							"sourceUnit": 319,
							"src": "311:80:5",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 340,
										"name": "SafeMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "319:8:5",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IAaveIncentivesController.sol",
							"file": "../../interfaces/IAaveIncentivesController.sol",
							"id": 343,
							"nodeType": "ImportDirective",
							"scope": 961,
							"sourceUnit": 332,
							"src": "392:89:5",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 342,
										"name": "IAaveIncentivesController",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "400:25:5",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 345,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "643:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 346,
									"nodeType": "InheritanceSpecifier",
									"src": "643:7:5"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 347,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 100,
										"src": "652:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$100",
											"typeString": "contract IERC20"
										}
									},
									"id": 348,
									"nodeType": "InheritanceSpecifier",
									"src": "652:6:5"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 349,
										"name": "IERC20Detailed",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 122,
										"src": "660:14:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Detailed_$122",
											"typeString": "contract IERC20Detailed"
										}
									},
									"id": 350,
									"nodeType": "InheritanceSpecifier",
									"src": "660:14:5"
								}
							],
							"contractDependencies": [
								22,
								100,
								122
							],
							"contractKind": "contract",
							"documentation": {
								"id": 344,
								"nodeType": "StructuredDocumentation",
								"src": "483:129:5",
								"text": " @title ERC20\n @notice Basic ERC20 implementation\n @author Aave, inspired by the Openzeppelin ERC20 implementation*"
							},
							"fullyImplemented": true,
							"id": 960,
							"linearizedBaseContracts": [
								960,
								122,
								100,
								22
							],
							"name": "IncentivizedERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 353,
									"libraryName": {
										"contractScope": null,
										"id": 351,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 318,
										"src": "685:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$318",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "679:27:5",
									"typeName": {
										"id": 352,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "698:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 355,
									"mutability": "immutable",
									"name": "_incentivesController",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 960,
									"src": "710:66:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IAaveIncentivesController_$331",
										"typeString": "contract IAaveIncentivesController"
									},
									"typeName": {
										"contractScope": null,
										"id": 354,
										"name": "IAaveIncentivesController",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 331,
										"src": "710:25:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IAaveIncentivesController_$331",
											"typeString": "contract IAaveIncentivesController"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 359,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 960,
									"src": "781:46:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 358,
										"keyType": {
											"id": 356,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "789:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "781:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 357,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "800:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 365,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 960,
									"src": "832:67:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 364,
										"keyType": {
											"id": 360,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "840:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "832:47:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 363,
											"keyType": {
												"id": 361,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "859:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "851:27:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 362,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "870:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 367,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 960,
									"src": "903:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 366,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "903:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 369,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 960,
									"src": "936:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 368,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "936:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 371,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 960,
									"src": "960:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 370,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "960:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 373,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 960,
									"src": "986:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 372,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "986:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "1141:148:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 384,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "1147:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 385,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "1155:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1147:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "1147:12:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 388,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "1165:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 389,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "1175:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1165:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "1165:16:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 392,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "1187:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 393,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "1199:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1187:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1187:20:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 396,
														"name": "_incentivesController",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "1213:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAaveIncentivesController_$331",
															"typeString": "contract IAaveIncentivesController"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 398,
																"name": "incentivesController",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "1263:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 397,
															"name": "IAaveIncentivesController",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "1237:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IAaveIncentivesController_$331_$",
																"typeString": "type(contract IAaveIncentivesController)"
															}
														},
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1237:47:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAaveIncentivesController_$331",
															"typeString": "contract IAaveIncentivesController"
														}
													},
													"src": "1213:71:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAaveIncentivesController_$331",
														"typeString": "contract IAaveIncentivesController"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "1213:71:5"
											}
										]
									},
									"documentation": null,
									"id": 403,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 403,
												"src": "1031:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 374,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1031:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 403,
												"src": "1055:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 376,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1055:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "decimals",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 403,
												"src": "1081:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 378,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1081:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "incentivesController",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 403,
												"src": "1101:28:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1101:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1025:108:5"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1141:0:5"
									},
									"scope": 960,
									"src": "1014:275:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										111
									],
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "1402:23:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 410,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 369,
													"src": "1415:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 409,
												"id": 411,
												"nodeType": "Return",
												"src": "1408:12:5"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "1293:45:5",
										"text": " @return The name of the token*"
									},
									"functionSelector": "06fdde03",
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 406,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1369:8:5"
									},
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1354:2:5"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 413,
												"src": "1387:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 407,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1387:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1386:15:5"
									},
									"scope": 960,
									"src": "1341:84:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										116
									],
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "1542:25:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 420,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 371,
													"src": "1555:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 419,
												"id": 421,
												"nodeType": "Return",
												"src": "1548:14:5"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "1429:47:5",
										"text": " @return The symbol of the token*"
									},
									"functionSelector": "95d89b41",
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 416,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1509:8:5"
									},
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1494:2:5"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 423,
												"src": "1527:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 417,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1527:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1526:15:5"
									},
									"scope": 960,
									"src": "1479:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										121
									],
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "1680:27:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 430,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 373,
													"src": "1693:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 429,
												"id": 431,
												"nodeType": "Return",
												"src": "1686:16:5"
											}
										]
									},
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "1571:49:5",
										"text": " @return The decimals of the token*"
									},
									"functionSelector": "313ce567",
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 426,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1655:8:5"
									},
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1640:2:5"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 433,
												"src": "1673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 427,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1672:7:5"
									},
									"scope": 960,
									"src": "1623:84:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										31
									],
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "1837:30:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 440,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 367,
													"src": "1850:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 439,
												"id": 441,
												"nodeType": "Return",
												"src": "1843:19:5"
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "1711:53:5",
										"text": " @return The total supply of the token*"
									},
									"functionSelector": "18160ddd",
									"id": 443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 436,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1810:8:5"
									},
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1787:2:5"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 443,
												"src": "1828:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1828:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1827:9:5"
									},
									"scope": 960,
									"src": "1767:100:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										39
									],
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "2005:36:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 452,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "2018:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 454,
													"indexExpression": {
														"argumentTypes": null,
														"id": 453,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "2028:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2018:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 451,
												"id": 455,
												"nodeType": "Return",
												"src": "2011:25:5"
											}
										]
									},
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "1871:48:5",
										"text": " @return The balance of the token*"
									},
									"functionSelector": "70a08231",
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 448,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1978:8:5"
									},
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 457,
												"src": "1941:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1941:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1940:17:5"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 457,
												"src": "1996:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1995:9:5"
									},
									"scope": 960,
									"src": "1922:119:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										49
									],
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "2393:122:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 469,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2409:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2409:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 471,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "2423:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 472,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "2434:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 468,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "2399:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2399:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "2399:42:5"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 476,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2461:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2461:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 478,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "2475:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 479,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "2486:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 475,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "2452:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2452:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "EmitStatement",
												"src": "2447:46:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2506:4:5",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 467,
												"id": 483,
												"nodeType": "Return",
												"src": "2499:11:5"
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "2045:253:5",
										"text": " @dev Executes a transfer of tokens from _msgSender() to recipient\n @param recipient The recipient of the tokens\n @param amount The amount of tokens being transferred\n @return `true` if the transfer succeeds, `false` otherwise*"
									},
									"functionSelector": "a9059cbb",
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 464,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2369:8:5"
									},
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "2319:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "2338:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2318:35:5"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "2387:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 465,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2387:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2386:6:5"
									},
									"scope": 960,
									"src": "2301:214:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										59
									],
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "2901:45:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 496,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "2914:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 498,
														"indexExpression": {
															"argumentTypes": null,
															"id": 497,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "2926:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2914:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 500,
													"indexExpression": {
														"argumentTypes": null,
														"id": 499,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "2933:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2914:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 495,
												"id": 501,
												"nodeType": "Return",
												"src": "2907:34:5"
											}
										]
									},
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "2519:259:5",
										"text": " @dev Returns the allowance of spender on the tokens owned by owner\n @param owner The owner of the tokens\n @param spender The user allowed to spend the owner's tokens\n @return The amount of owner's tokens spender is allowed to spend*"
									},
									"functionSelector": "dd62ed3e",
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 492,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2868:8:5"
									},
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 503,
												"src": "2800:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2800:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 503,
												"src": "2815:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2815:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2799:32:5"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 503,
												"src": "2890:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2890:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2889:9:5"
									},
									"scope": 960,
									"src": "2781:165:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										69
									],
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "3207:67:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 515,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "3222:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3222:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 517,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "3236:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 518,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3245:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "3213:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "3213:39:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3265:4:5",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 513,
												"id": 522,
												"nodeType": "Return",
												"src": "3258:11:5"
											}
										]
									},
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "2950:165:5",
										"text": " @dev Allows `spender` to spend the tokens owned by _msgSender()\n @param spender The user allowed to spend _msgSender() tokens\n @return `true`*"
									},
									"functionSelector": "095ea7b3",
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 510,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3183:8:5"
									},
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 524,
												"src": "3135:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 524,
												"src": "3152:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3152:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3134:33:5"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 524,
												"src": "3201:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 511,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3201:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3200:6:5"
									},
									"scope": 960,
									"src": "3118:156:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										81
									],
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "3735:261:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 538,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "3751:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 539,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "3759:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 540,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "3770:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 537,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "3741:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3741:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "3741:36:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 544,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "3799:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 545,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "3813:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3813:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 554,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "3871:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3879:42:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 547,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 365,
																			"src": "3833:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 549,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 548,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 527,
																			"src": "3845:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3833:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 552,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 550,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "3853:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3853:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3833:33:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 196,
																"src": "3833:37:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3833:89:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 543,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "3783:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3783:145:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "3783:145:5"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 560,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "3948:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 561,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "3956:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 562,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "3967:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 559,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "3939:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3939:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 564,
												"nodeType": "EmitStatement",
												"src": "3934:40:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3987:4:5",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 536,
												"id": 566,
												"nodeType": "Return",
												"src": "3980:11:5"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "3278:326:5",
										"text": " @dev Executes a transfer of token from sender to recipient, if _msgSender() is allowed to do so\n @param sender The owner of the tokens\n @param recipient The recipient of the tokens\n @param amount The amount of tokens being transferred\n @return `true` if the transfer succeeds, `false` otherwise*"
									},
									"functionSelector": "23b872dd",
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 533,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3711:8:5"
									},
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 568,
												"src": "3634:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3634:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 568,
												"src": "3654:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3654:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 568,
												"src": "3677:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3677:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3628:67:5"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 568,
												"src": "3729:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 534,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3729:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3728:6:5"
									},
									"scope": 960,
									"src": "3607:389:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "4336:111:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 579,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "4351:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4351:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 581,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "4365:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 589,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "4413:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 582,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 365,
																			"src": "4374:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 585,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 583,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "4386:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4386:12:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4374:25:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 587,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 586,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 571,
																		"src": "4400:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4374:34:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 151,
																"src": "4374:38:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4374:50:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 578,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "4342:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4342:83:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "4342:83:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4438:4:5",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 577,
												"id": 594,
												"nodeType": "Return",
												"src": "4431:11:5"
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "4000:239:5",
										"text": " @dev Increases the allowance of spender to spend _msgSender() tokens\n @param spender The user allowed to spend on behalf of _msgSender()\n @param addedValue The amount being added to the allowance\n @return `true`*"
									},
									"functionSelector": "39509351",
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 596,
												"src": "4269:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4269:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 596,
												"src": "4286:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4286:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4268:37:5"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 596,
												"src": "4330:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 575,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4330:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4329:6:5"
									},
									"scope": 960,
									"src": "4242:205:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "4816:205:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 607,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "4838:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4838:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 609,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "4858:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 617,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "4921:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4946:39:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 610,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 365,
																			"src": "4873:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 613,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 611,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "4885:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4885:12:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4873:25:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 615,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 614,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 599,
																		"src": "4899:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4873:34:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 196,
																"src": "4873:38:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4873:120:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 606,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "4822:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4822:177:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "4822:177:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5012:4:5",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 605,
												"id": 623,
												"nodeType": "Return",
												"src": "5005:11:5"
											}
										]
									},
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "4451:249:5",
										"text": " @dev Decreases the allowance of spender to spend _msgSender() tokens\n @param spender The user allowed to spend on behalf of _msgSender()\n @param subtractedValue The amount being subtracted to the allowance\n @return `true`*"
									},
									"functionSelector": "a457c2d7",
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 625,
												"src": "4730:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4730:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 625,
												"src": "4747:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4747:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4729:42:5"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 625,
												"src": "4808:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 603,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4808:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4807:6:5"
									},
									"scope": 960,
									"src": "4703:318:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "5128:813:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 635,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "5142:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5160:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5152:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 636,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5152:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5152:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5142:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5164:39:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 634,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5134:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5134:70:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "5134:70:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 645,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 629,
																"src": "5218:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5239:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5231:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 646,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5231:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5231:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5218:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5243:37:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 644,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5210:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5210:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "5210:71:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 655,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "5309:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 656,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "5317:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 657,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "5328:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 654,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "5288:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5288:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "5288:47:5"
											},
											{
												"assignments": [
													661
												],
												"declarations": [
													{
														"constant": false,
														"id": 661,
														"mutability": "mutable",
														"name": "oldSenderBalance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 729,
														"src": "5342:24:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 660,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5342:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 665,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 662,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "5369:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 664,
													"indexExpression": {
														"argumentTypes": null,
														"id": 663,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "5379:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5369:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5342:44:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 666,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "5392:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 668,
														"indexExpression": {
															"argumentTypes": null,
															"id": 667,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "5402:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5392:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 671,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 631,
																"src": "5433:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5441:40:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 669,
																"name": "oldSenderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 661,
																"src": "5412:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 196,
															"src": "5412:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5412:70:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5392:90:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "5392:90:5"
											},
											{
												"assignments": [
													677
												],
												"declarations": [
													{
														"constant": false,
														"id": 677,
														"mutability": "mutable",
														"name": "oldRecipientBalance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 729,
														"src": "5488:27:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 676,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5488:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 681,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 678,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "5518:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 680,
													"indexExpression": {
														"argumentTypes": null,
														"id": 679,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "5528:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5518:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5488:50:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 682,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "5544:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 684,
														"indexExpression": {
															"argumentTypes": null,
															"id": 683,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "5554:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5544:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 689,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 631,
																"src": "5592:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 685,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "5567:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 687,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 686,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "5577:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5567:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 151,
															"src": "5567:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5567:32:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5544:55:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "5544:55:5"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 695,
																"name": "_incentivesController",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "5618:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IAaveIncentivesController_$331",
																	"typeString": "contract IAaveIncentivesController"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IAaveIncentivesController_$331",
																	"typeString": "contract IAaveIncentivesController"
																}
															],
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5610:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 693,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5610:7:5",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5610:30:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5652:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5644:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 697,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5644:7:5",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 700,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5644:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "5610:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 728,
												"nodeType": "IfStatement",
												"src": "5606:331:5",
												"trueBody": {
													"id": 727,
													"nodeType": "Block",
													"src": "5656:281:5",
													"statements": [
														{
															"assignments": [
																703
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 703,
																	"mutability": "mutable",
																	"name": "currentTotalSupply",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 727,
																	"src": "5664:26:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 702,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5664:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 705,
															"initialValue": {
																"argumentTypes": null,
																"id": 704,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "5693:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5664:41:5"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 709,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 627,
																		"src": "5748:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 710,
																		"name": "currentTotalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 703,
																		"src": "5756:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 711,
																		"name": "oldSenderBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 661,
																		"src": "5776:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 706,
																		"name": "_incentivesController",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 355,
																		"src": "5713:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IAaveIncentivesController_$331",
																			"typeString": "contract IAaveIncentivesController"
																		}
																	},
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "handleAction",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 330,
																	"src": "5713:34:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256) external"
																	}
																},
																"id": 712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5713:80:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 713,
															"nodeType": "ExpressionStatement",
															"src": "5713:80:5"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 714,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 627,
																	"src": "5805:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 715,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "5815:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5805:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 726,
															"nodeType": "IfStatement",
															"src": "5801:130:5",
															"trueBody": {
																"id": 725,
																"nodeType": "Block",
																"src": "5826:105:5",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 720,
																					"name": "recipient",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 629,
																					"src": "5871:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 721,
																					"name": "currentTotalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 703,
																					"src": "5882:18:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 722,
																					"name": "oldRecipientBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 677,
																					"src": "5902:19:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 717,
																					"name": "_incentivesController",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 355,
																					"src": "5836:21:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IAaveIncentivesController_$331",
																						"typeString": "contract IAaveIncentivesController"
																					}
																				},
																				"id": 719,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "handleAction",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 330,
																				"src": "5836:34:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) external"
																				}
																			},
																			"id": 723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5836:86:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 724,
																		"nodeType": "ExpressionStatement",
																		"src": "5836:86:5"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 730,
												"src": "5049:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5049:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 730,
												"src": "5069:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5069:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 730,
												"src": "5092:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5092:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5043:67:5"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5128:0:5"
									},
									"scope": 960,
									"src": "5025:916:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "6010:481:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 738,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 732,
																"src": "6024:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6043:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6035:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 739,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6035:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6035:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6024:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6047:33:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 737,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6016:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6016:65:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "6016:65:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6117:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6109:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 748,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6109:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6109:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 752,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "6121:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 753,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "6130:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 747,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "6088:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6088:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "6088:49:5"
											},
											{
												"assignments": [
													757
												],
												"declarations": [
													{
														"constant": false,
														"id": 757,
														"mutability": "mutable",
														"name": "oldTotalSupply",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 801,
														"src": "6144:22:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 756,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6144:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 759,
												"initialValue": {
													"argumentTypes": null,
													"id": 758,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 367,
													"src": "6169:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6144:37:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 760,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "6187:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 763,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 734,
																"src": "6221:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 761,
																"name": "oldTotalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 757,
																"src": "6202:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 151,
															"src": "6202:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6202:26:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6187:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 766,
												"nodeType": "ExpressionStatement",
												"src": "6187:41:5"
											},
											{
												"assignments": [
													768
												],
												"declarations": [
													{
														"constant": false,
														"id": 768,
														"mutability": "mutable",
														"name": "oldAccountBalance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 801,
														"src": "6235:25:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 767,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6235:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 772,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 769,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "6263:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 771,
													"indexExpression": {
														"argumentTypes": null,
														"id": 770,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "6273:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6263:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6235:46:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 773,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "6287:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 775,
														"indexExpression": {
															"argumentTypes": null,
															"id": 774,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "6297:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6287:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 778,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 734,
																"src": "6330:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 776,
																"name": "oldAccountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "6308:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 151,
															"src": "6308:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6308:29:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6287:50:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "6287:50:5"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 784,
																"name": "_incentivesController",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "6356:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IAaveIncentivesController_$331",
																	"typeString": "contract IAaveIncentivesController"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IAaveIncentivesController_$331",
																	"typeString": "contract IAaveIncentivesController"
																}
															],
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6348:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 782,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6348:7:5",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 785,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6348:30:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6390:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6382:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 786,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6382:7:5",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 789,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6382:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "6348:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 800,
												"nodeType": "IfStatement",
												"src": "6344:143:5",
												"trueBody": {
													"id": 799,
													"nodeType": "Block",
													"src": "6394:93:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 794,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 732,
																		"src": "6437:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 795,
																		"name": "oldTotalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 757,
																		"src": "6446:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 796,
																		"name": "oldAccountBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "6462:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 791,
																		"name": "_incentivesController",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 355,
																		"src": "6402:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IAaveIncentivesController_$331",
																			"typeString": "contract IAaveIncentivesController"
																		}
																	},
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "handleAction",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 330,
																	"src": "6402:34:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256) external"
																	}
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6402:78:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 798,
															"nodeType": "ExpressionStatement",
															"src": "6402:78:5"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 802,
												"src": "5960:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 802,
												"src": "5977:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5977:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5959:33:5"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6010:0:5"
									},
									"scope": 960,
									"src": "5945:546:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "6560:521:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 810,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "6574:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6593:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6585:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 811,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6585:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6585:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6574:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6597:35:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 809,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6566:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6566:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "6566:67:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 820,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "6661:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6678:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6670:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 821,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6670:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6670:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 825,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "6682:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 819,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "6640:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6640:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 827,
												"nodeType": "ExpressionStatement",
												"src": "6640:49:5"
											},
											{
												"assignments": [
													829
												],
												"declarations": [
													{
														"constant": false,
														"id": 829,
														"mutability": "mutable",
														"name": "oldTotalSupply",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 874,
														"src": "6696:22:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 828,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6696:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": {
													"argumentTypes": null,
													"id": 830,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 367,
													"src": "6721:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6696:37:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 832,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "6739:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 835,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "6773:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 833,
																"name": "oldTotalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "6754:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 168,
															"src": "6754:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6754:26:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6739:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "6739:41:5"
											},
											{
												"assignments": [
													840
												],
												"declarations": [
													{
														"constant": false,
														"id": 840,
														"mutability": "mutable",
														"name": "oldAccountBalance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 874,
														"src": "6787:25:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 839,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6787:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 844,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 841,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "6815:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 843,
													"indexExpression": {
														"argumentTypes": null,
														"id": 842,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "6825:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6815:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6787:46:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 845,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "6839:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 847,
														"indexExpression": {
															"argumentTypes": null,
															"id": 846,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "6849:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6839:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 850,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "6882:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6890:36:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 848,
																"name": "oldAccountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 840,
																"src": "6860:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 196,
															"src": "6860:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6860:67:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6839:88:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "6839:88:5"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 857,
																"name": "_incentivesController",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "6946:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IAaveIncentivesController_$331",
																	"typeString": "contract IAaveIncentivesController"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IAaveIncentivesController_$331",
																	"typeString": "contract IAaveIncentivesController"
																}
															],
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6938:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 855,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6938:7:5",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6938:30:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6980:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6972:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 859,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6972:7:5",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6972:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "6938:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 873,
												"nodeType": "IfStatement",
												"src": "6934:143:5",
												"trueBody": {
													"id": 872,
													"nodeType": "Block",
													"src": "6984:93:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 867,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 804,
																		"src": "7027:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 868,
																		"name": "oldTotalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 829,
																		"src": "7036:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 869,
																		"name": "oldAccountBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 840,
																		"src": "7052:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 864,
																		"name": "_incentivesController",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 355,
																		"src": "6992:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IAaveIncentivesController_$331",
																			"typeString": "contract IAaveIncentivesController"
																		}
																	},
																	"id": 866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "handleAction",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 330,
																	"src": "6992:34:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256) external"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6992:78:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 871,
															"nodeType": "ExpressionStatement",
															"src": "6992:78:5"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 875,
												"src": "6510:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6510:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 875,
												"src": "6527:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6527:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6509:33:5"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6560:0:5"
									},
									"scope": 960,
									"src": "6495:586:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "7184:239:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 885,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "7198:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7215:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7207:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 886,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7207:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7207:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7198:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7219:38:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 884,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7190:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7190:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "7190:68:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 895,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "7272:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7291:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7283:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 896,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7283:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7283:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7272:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7295:36:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 894,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7264:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7264:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "7264:68:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 904,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "7339:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 907,
															"indexExpression": {
																"argumentTypes": null,
																"id": 905,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "7351:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7339:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 908,
														"indexExpression": {
															"argumentTypes": null,
															"id": 906,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "7358:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7339:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 909,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "7369:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7339:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "7339:36:5"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 913,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "7395:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 914,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "7402:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 915,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "7411:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 912,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "7386:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7386:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 917,
												"nodeType": "EmitStatement",
												"src": "7381:37:5"
											}
										]
									},
									"documentation": null,
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 919,
												"src": "7108:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 919,
												"src": "7127:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7127:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 919,
												"src": "7148:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7148:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7102:64:5"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7184:0:5"
									},
									"scope": 960,
									"src": "7085:338:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "7477:26:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 924,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "7483:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 925,
														"name": "newName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "7491:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "7483:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "7483:15:5"
											}
										]
									},
									"documentation": null,
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setName",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "newName",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 929,
												"src": "7445:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 920,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7445:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7444:23:5"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7477:0:5"
									},
									"scope": 960,
									"src": "7427:76:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 938,
										"nodeType": "Block",
										"src": "7561:30:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 934,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "7567:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 935,
														"name": "newSymbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "7577:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "7567:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 937,
												"nodeType": "ExpressionStatement",
												"src": "7567:19:5"
											}
										]
									},
									"documentation": null,
									"id": 939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setSymbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "newSymbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 939,
												"src": "7527:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 930,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7527:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7526:25:5"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7561:0:5"
									},
									"scope": 960,
									"src": "7507:84:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "7645:34:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 944,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "7651:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 945,
														"name": "newDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "7663:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "7651:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 947,
												"nodeType": "ExpressionStatement",
												"src": "7651:23:5"
											}
										]
									},
									"documentation": null,
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setDecimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "newDecimals",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 949,
												"src": "7617:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 940,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7617:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7616:19:5"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7645:0:5"
									},
									"scope": 960,
									"src": "7595:84:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 958,
										"nodeType": "Block",
										"src": "7788:2:5",
										"statements": []
									},
									"documentation": null,
									"id": 959,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 959,
												"src": "7718:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7718:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 959,
												"src": "7736:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 959,
												"src": "7752:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7752:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7712:58:5"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7788:0:5"
									},
									"scope": 960,
									"src": "7683:107:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 961,
							"src": "613:7179:5"
						}
					],
					"src": "37:7756:5"
				},
				"id": 5
			}
		}
	}
}