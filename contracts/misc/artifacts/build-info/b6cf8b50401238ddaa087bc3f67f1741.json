{
	"id": "b6cf8b50401238ddaa087bc3f67f1741",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/misc/AgaveOracle.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\nimport {Ownable} from '../dependencies/openzeppelin/contracts/Ownable.sol';\nimport {IERC20} from '../dependencies/openzeppelin/contracts/IERC20.sol';\nimport {IERC20Detailed} from '../dependencies/openzeppelin/contracts/IERC20Detailed.sol';\n\nimport {IPriceOracleGetter} from '../interfaces/IPriceOracleGetter.sol';\nimport {IChainlinkAggregator} from '../interfaces/IChainlinkAggregator.sol';\n\nimport {SafeMath} from '../dependencies/openzeppelin/contracts/SafeMath.sol';\nimport {SafeERC20} from '../dependencies/openzeppelin/contracts/SafeERC20.sol';\n\n/// @title AgaveOracle\n/// @author Aave\n/// @notice Proxy smart contract to get the price of an asset from a price source, with Chainlink Aggregator\n///         smart contracts as primary option\n/// - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallbackOracle\n/// - Owned by the Agave governance system, allowed to add sources for assets, replace them\n///   and change the fallbackOracle\n/// - Modified for Agave deployment by adding free-based asset prices.\ncontract AgaveOracle is IPriceOracleGetter, Ownable {\n  using SafeERC20 for IERC20;\n  using SafeMath for uint256;\n\n  event WrappedNativeSet(address indexed wrappedNative);\n  event AssetSourceUpdated(address indexed asset, address indexed source);\n  event FallbackOracleUpdated(address indexed fallbackOracle);\n\n  mapping(address => IChainlinkAggregator) private assetsSources;\n  IPriceOracleGetter private _fallbackOracle;\n  address public immutable wrappedNative;\n  uint8 private immutable _wrappedNativeDecimals;\n\n  /// @notice Constructor\n  /// @param assets The addresses of the assets\n  /// @param sources The address of the source of each asset\n  /// @param fallbackOracle The address of the fallback oracle to use if the data of an\n  ///        aggregator is not consistent\n  constructor(\n    address[] memory assets,\n    address[] memory sources,\n    address fallbackOracle,\n    address _wrappedNative\n  ) public {\n    _setFallbackOracle(fallbackOracle);\n    _setAssetsSources(assets, sources);\n    wrappedNative = _wrappedNative;\n    _wrappedNativeDecimals = IERC20Detailed(_wrappedNative).decimals();\n    emit WrappedNativeSet(_wrappedNative);\n  }\n\n  /// @notice External function called by the Aave governance to set or replace sources of assets\n  /// @param assets The addresses of the assets\n  /// @param sources The address of the source of each asset\n  function setAssetSources(address[] calldata assets, address[] calldata sources)\n    external\n    onlyOwner\n  {\n    _setAssetsSources(assets, sources);\n  }\n\n  /// @notice Sets the fallbackOracle\n  /// - Callable only by the Aave governance\n  /// @param fallbackOracle The address of the fallbackOracle\n  function setFallbackOracle(address fallbackOracle) external onlyOwner {\n    _setFallbackOracle(fallbackOracle);\n  }\n\n  /// @notice Internal function to set the sources for each asset\n  /// @param assets The addresses of the assets\n  /// @param sources The address of the source of each asset\n  function _setAssetsSources(address[] memory assets, address[] memory sources) internal {\n    require(assets.length == sources.length, 'INCONSISTENT_PARAMS_LENGTH');\n    for (uint256 i = 0; i < assets.length; i++) {\n      assetsSources[assets[i]] = IChainlinkAggregator(sources[i]);\n      emit AssetSourceUpdated(assets[i], sources[i]);\n    }\n  }\n\n  /// @notice Internal function to set the fallbackOracle\n  /// @param fallbackOracle The address of the fallbackOracle\n  function _setFallbackOracle(address fallbackOracle) internal {\n    _fallbackOracle = IPriceOracleGetter(fallbackOracle);\n    emit FallbackOracleUpdated(fallbackOracle);\n  }\n\n  /// @notice Gets an asset price by address\n  /// @param asset The asset address\n  function getAssetPrice(address asset) public view override returns (uint256) {\n    IChainlinkAggregator source = assetsSources[asset];\n    IChainlinkAggregator wrappedNativeUsdSource = assetsSources[wrappedNative];\n\n    if (asset == wrappedNative) {\n      // \"ether\" here refers to the unwrapped native asset of the chain\n      return 1 ether;\n    } else if (address(source) == address(0) || address(wrappedNativeUsdSource) == address(0)) {\n      return _fallbackOracle.getAssetPrice(asset);\n    } else {\n      // Get the price of our common base (USD) in our native token\n      int256 wrappedNativeUsdPrice = wrappedNativeUsdSource.latestAnswer();\n      if (wrappedNativeUsdPrice <= 0) {\n        return _fallbackOracle.getAssetPrice(asset);\n      }\n\n      int256 price = IChainlinkAggregator(source).latestAnswer();\n      if (price > 0) {\n        // Now we have the price in USD. Dividing by the NATIVE/USD price gets us the value in our native token.\n        // On mainnet, Aave and Chainlink price everything in ether, thus avoiding this double conversion.\n        return uint256(price).mul(uint256(10)**_wrappedNativeDecimals).div(uint256(wrappedNativeUsdPrice));\n      } else {\n        return _fallbackOracle.getAssetPrice(asset);\n      }\n    }\n  }\n\n  /// @notice Gets a list of prices from a list of assets addresses\n  /// @param assets The list of assets addresses\n  function getAssetsPrices(address[] calldata assets) external view returns (uint256[] memory) {\n    uint256[] memory prices = new uint256[](assets.length);\n    for (uint256 i = 0; i < assets.length; i++) {\n      prices[i] = getAssetPrice(assets[i]);\n    }\n    return prices;\n  }\n\n  /// @notice Gets the address of the source for an asset address\n  /// @param asset The address of the asset\n  /// @return address The address of the source\n  function getSourceOfAsset(address asset) external view returns (address) {\n    return address(assetsSources[asset]);\n  }\n\n  /// @notice Gets the address of the fallback oracle\n  /// @return address The addres of the fallback oracle\n  function getFallbackOracle() external view returns (address) {\n    return address(_fallbackOracle);\n  }\n}\n"
			},
			"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.12;\n\nimport {IERC20} from './IERC20.sol';\nimport {SafeMath} from './SafeMath.sol';\nimport {Address} from './Address.sol';\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n  using SafeMath for uint256;\n  using Address for address;\n\n  function safeTransfer(\n    IERC20 token,\n    address to,\n    uint256 value\n  ) internal {\n    callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n  }\n\n  function safeTransferFrom(\n    IERC20 token,\n    address from,\n    address to,\n    uint256 value\n  ) internal {\n    callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n  }\n\n  function safeApprove(\n    IERC20 token,\n    address spender,\n    uint256 value\n  ) internal {\n    require(\n      (value == 0) || (token.allowance(address(this), spender) == 0),\n      'SafeERC20: approve from non-zero to non-zero allowance'\n    );\n    callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n  }\n\n  function callOptionalReturn(IERC20 token, bytes memory data) private {\n    require(address(token).isContract(), 'SafeERC20: call to non-contract');\n\n    // solhint-disable-next-line avoid-low-level-calls\n    (bool success, bytes memory returndata) = address(token).call(data);\n    require(success, 'SafeERC20: low-level call failed');\n\n    if (returndata.length > 0) {\n      // Return data is optional\n      // solhint-disable-next-line max-line-length\n      require(abi.decode(returndata, (bool)), 'SafeERC20: ERC20 operation did not succeed');\n    }\n  }\n}\n"
			},
			"contracts/dependencies/openzeppelin/contracts/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n  /**\n   * @dev Returns the addition of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `+` operator.\n   *\n   * Requirements:\n   * - Addition cannot overflow.\n   */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, 'SafeMath: addition overflow');\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    return sub(a, b, 'SafeMath: subtraction overflow');\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(\n    uint256 a,\n    uint256 b,\n    string memory errorMessage\n  ) internal pure returns (uint256) {\n    require(b <= a, errorMessage);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the multiplication of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `*` operator.\n   *\n   * Requirements:\n   * - Multiplication cannot overflow.\n   */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, 'SafeMath: multiplication overflow');\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return div(a, b, 'SafeMath: division by zero');\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(\n    uint256 a,\n    uint256 b,\n    string memory errorMessage\n  ) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, errorMessage);\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    return mod(a, b, 'SafeMath: modulo by zero');\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts with custom message when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(\n    uint256 a,\n    uint256 b,\n    string memory errorMessage\n  ) internal pure returns (uint256) {\n    require(b != 0, errorMessage);\n    return a % b;\n  }\n}\n"
			},
			"contracts/interfaces/IChainlinkAggregator.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\ninterface IChainlinkAggregator {\n  function decimals() external view returns (uint8);\n\n  function latestAnswer() external view returns (int256);\n\n  function latestTimestamp() external view returns (uint256);\n\n  function latestRound() external view returns (uint256);\n\n  function getAnswer(uint256 roundId) external view returns (int256);\n\n  function getTimestamp(uint256 roundId) external view returns (uint256);\n\n  event AnswerUpdated(int256 indexed current, uint256 indexed roundId, uint256 timestamp);\n  event NewRound(uint256 indexed roundId, address indexed startedBy);\n}\n"
			},
			"contracts/interfaces/IPriceOracleGetter.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\n/**\n * @title IPriceOracleGetter interface\n * @notice Interface for the Aave price oracle.\n **/\n\ninterface IPriceOracleGetter {\n  /**\n   * @dev returns the asset price in ETH\n   * @param asset the address of the asset\n   * @return the ETH price of the asset\n   **/\n  function getAssetPrice(address asset) external view returns (uint256);\n}\n"
			},
			"contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\nimport {IERC20} from './IERC20.sol';\n\ninterface IERC20Detailed is IERC20 {\n  function name() external view returns (string memory);\n\n  function symbol() external view returns (string memory);\n\n  function decimals() external view returns (uint8);\n}\n"
			},
			"contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"contracts/dependencies/openzeppelin/contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport './Context.sol';\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor() internal {\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(_owner == _msgSender(), 'Ownable: caller is not the owner');\n    _;\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby removing any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public virtual onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public virtual onlyOwner {\n    require(newOwner != address(0), 'Ownable: new owner is the zero address');\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n"
			},
			"contracts/dependencies/openzeppelin/contracts/Address.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n  /**\n   * @dev Returns true if `account` is a contract.\n   *\n   * [IMPORTANT]\n   * ====\n   * It is unsafe to assume that an address for which this function returns\n   * false is an externally-owned account (EOA) and not a contract.\n   *\n   * Among others, `isContract` will return false for the following\n   * types of addresses:\n   *\n   *  - an externally-owned account\n   *  - a contract in construction\n   *  - an address where a contract will be created\n   *  - an address where a contract lived, but was destroyed\n   * ====\n   */\n  function isContract(address account) internal view returns (bool) {\n    // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n    // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n    // for accounts without code, i.e. `keccak256('')`\n    bytes32 codehash;\n    bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n    // solhint-disable-next-line no-inline-assembly\n    assembly {\n      codehash := extcodehash(account)\n    }\n    return (codehash != accountHash && codehash != 0x0);\n  }\n\n  /**\n   * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n   * `recipient`, forwarding all available gas and reverting on errors.\n   *\n   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n   * of certain opcodes, possibly making contracts go over the 2300 gas limit\n   * imposed by `transfer`, making them unable to receive funds via\n   * `transfer`. {sendValue} removes this limitation.\n   *\n   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n   *\n   * IMPORTANT: because control is transferred to `recipient`, care must be\n   * taken to not create reentrancy vulnerabilities. Consider using\n   * {ReentrancyGuard} or the\n   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n   */\n  function sendValue(address payable recipient, uint256 amount) internal {\n    require(address(this).balance >= amount, 'Address: insufficient balance');\n\n    // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n    (bool success, ) = recipient.call{value: amount}('');\n    require(success, 'Address: unable to send value, recipient may have reverted');\n  }\n}\n"
			},
			"contracts/dependencies/openzeppelin/contracts/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.12;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n  function _msgSender() internal view virtual returns (address payable) {\n    return msg.sender;\n  }\n\n  function _msgData() internal view virtual returns (bytes memory) {\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    return msg.data;\n  }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/dependencies/openzeppelin/contracts/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":130:2528  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":130:2528  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122093d929e9255a31a618822d038a5070bc0f29f948496e43b9ca7e13af705eed6564736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093d929e9255a31a618822d038a5070bc0f29f948496e43b9ca7e13af705eed6564736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xD9 0x29 0xE9 0x25 GAS BALANCE 0xA6 XOR DUP3 0x2D SUB DUP11 POP PUSH17 0xBC0F29F948496E43B9CA7E13AF705EED65 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "130:2398:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093d929e9255a31a618822d038a5070bc0f29f948496e43b9ca7e13af705eed6564736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xD9 0x29 0xE9 0x25 GAS BALANCE 0xA6 XOR DUP3 0x2D SUB DUP11 POP PUSH17 0xBC0F29F948496E43B9CA7E13AF705EED65 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "130:2398:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 130,
									"end": 2528,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122093d929e9255a31a618822d038a5070bc0f29f948496e43b9ca7e13af705eed6564736f6c634300060c0033",
									".code": [
										{
											"begin": 130,
											"end": 2528,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 130,
											"end": 2528,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 130,
											"end": 2528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 130,
											"end": 2528,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 130,
											"end": 2528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 130,
											"end": 2528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 130,
											"end": 2528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 2528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 2528,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"keccak256\":\"0xb7f2cd193efe93976d7b473fc4fa27dda83bd4db5b81889cbcd4701f3b7023ae\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://2275632637acd2f30d576612dcddc1c6ba78d81af4d044fafe870e6a809a8b6e\",\"dweb:/ipfs/QmW3uMzrLbjzP45zVpP8e9V6o8WFSceHiHq8WDMJ8YjCeL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/dependencies/openzeppelin/contracts/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"keccak256\":\"0xe52c598aa6e76d57665914c1c43fc6fa13bbe3b0bd8e816a6cec1c2bca5014e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a665a54b2277889ba2bdb9c3860b3b71ec7b22757297a03b590a093257604e9d\",\"dweb:/ipfs/QmQ4mm9YnrtvjJwetDec3WoiKeJGoJMCs5kbPBhGVRcZ6N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0x6406b04abfeda2c8c80ea3faf797ce4501e66db41fb6ff4e299ebe0402879f44\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://33b0db81db37bd6fe20aa0b23581c6b0edef2f3c49d0bd88b4fe46c1164adb00\",\"dweb:/ipfs/QmYn1zYwt3ahpkLYwHh6h5b1UJrzP2xy5G3at9oEVNw2c1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol": {
				"IERC20Detailed": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol\":\"IERC20Detailed\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0x6406b04abfeda2c8c80ea3faf797ce4501e66db41fb6ff4e299ebe0402879f44\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://33b0db81db37bd6fe20aa0b23581c6b0edef2f3c49d0bd88b4fe46c1164adb00\",\"dweb:/ipfs/QmYn1zYwt3ahpkLYwHh6h5b1UJrzP2xy5G3at9oEVNw2c1\"]},\"contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol\":{\"keccak256\":\"0x4dade975e9d49dcd7785b30f9e56f80ba9322f3b037a6e39912a32e49a6a817c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://84b4c20094e95699e746ecf1fad83748139fadf844a548a09e4949840fb6232f\",\"dweb:/ipfs/Qme51kM9jqbjEyd7wQ8DNRNRAt5hY7FZHsaRxTP3xvXi5D\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/dependencies/openzeppelin/contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"keccak256\":\"0xe52c598aa6e76d57665914c1c43fc6fa13bbe3b0bd8e816a6cec1c2bca5014e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a665a54b2277889ba2bdb9c3860b3b71ec7b22757297a03b590a093257604e9d\",\"dweb:/ipfs/QmQ4mm9YnrtvjJwetDec3WoiKeJGoJMCs5kbPBhGVRcZ6N\"]},\"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":{\"keccak256\":\"0xe89abab730aac141126c194f910969c76f55a29536f2709c71c1c0c4ffce5508\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5667cdfe050014996ee748d1891155cc9a40ec5de28804d8c5e4b6c3a34e727\",\"dweb:/ipfs/QmWcSNdBecjXbiEau8QHSdBFes2HXw59H9hhJNjCww1Y8i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 194,
								"contract": "contracts/dependencies/openzeppelin/contracts/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol\":634:2030  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol\":634:2030  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bfe92e7c7203651c1598bd5e0bb7842604674a3d8b982cbad2401a64dbc7105a64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bfe92e7c7203651c1598bd5e0bb7842604674a3d8b982cbad2401a64dbc7105a64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0xE9 0x2E PUSH29 0x7203651C1598BD5E0BB7842604674A3D8B982CBAD2401A64DBC7105A64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "634:1396:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bfe92e7c7203651c1598bd5e0bb7842604674a3d8b982cbad2401a64dbc7105a64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0xE9 0x2E PUSH29 0x7203651C1598BD5E0BB7842604674A3D8B982CBAD2401A64DBC7105A64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "634:1396:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 634,
									"end": 2030,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bfe92e7c7203651c1598bd5e0bb7842604674a3d8b982cbad2401a64dbc7105a64736f6c634300060c0033",
									".code": [
										{
											"begin": 634,
											"end": 2030,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 634,
											"end": 2030,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 634,
											"end": 2030,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 634,
											"end": 2030,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 634,
											"end": 2030,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 634,
											"end": 2030,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 634,
											"end": 2030,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 2030,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 634,
											"end": 2030,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"keccak256\":\"0xb7f2cd193efe93976d7b473fc4fa27dda83bd4db5b81889cbcd4701f3b7023ae\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://2275632637acd2f30d576612dcddc1c6ba78d81af4d044fafe870e6a809a8b6e\",\"dweb:/ipfs/QmW3uMzrLbjzP45zVpP8e9V6o8WFSceHiHq8WDMJ8YjCeL\"]},\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0x6406b04abfeda2c8c80ea3faf797ce4501e66db41fb6ff4e299ebe0402879f44\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://33b0db81db37bd6fe20aa0b23581c6b0edef2f3c49d0bd88b4fe46c1164adb00\",\"dweb:/ipfs/QmYn1zYwt3ahpkLYwHh6h5b1UJrzP2xy5G3at9oEVNw2c1\"]},\"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol\":{\"keccak256\":\"0xd664a81c469ebd6c7b09ca8be499e6af30100e3e42be6bfea9f4a90c02a7cb1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9f8ac1ffeaaefc7685abd544813e31ebb46e81b393291d68b1a99a9c7550df2\",\"dweb:/ipfs/QmP3xWkMNgDBbDn9HF6vVKpHTP5rW4j7dxWmhKsxicQ7Mg\"]},\"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":{\"keccak256\":\"0xfca35d11bafb85cf4f2203b41f1a98238dca59b6a9faa28b86ea3f9f63da8ec5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://7019345b024afa93000c6b5a2b095be59c3c5352eb658619c941d23d0af5bc65\",\"dweb:/ipfs/QmZLxJKSbM66Wd1Qd43jSdiXdg7JP6DQ9J6LuANUZummM4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/dependencies/openzeppelin/contracts/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":626:4968  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":626:4968  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a1bd78d2d20e95b81481b7c60e9fa29307a20e9f12fbea3b3158cdacb3361fef64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a1bd78d2d20e95b81481b7c60e9fa29307a20e9f12fbea3b3158cdacb3361fef64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xBD PUSH25 0xD2D20E95B81481B7C60E9FA29307A20E9F12FBEA3B3158CDAC 0xB3 CALLDATASIZE 0x1F 0xEF PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "626:4342:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a1bd78d2d20e95b81481b7c60e9fa29307a20e9f12fbea3b3158cdacb3361fef64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xBD PUSH25 0xD2D20E95B81481B7C60E9FA29307A20E9F12FBEA3B3158CDAC 0xB3 CALLDATASIZE 0x1F 0xEF PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "626:4342:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 626,
									"end": 4968,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "INVALID",
									"source": 6
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a1bd78d2d20e95b81481b7c60e9fa29307a20e9f12fbea3b3158cdacb3361fef64736f6c634300060c0033",
									".code": [
										{
											"begin": 626,
											"end": 4968,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 626,
											"end": 4968,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 626,
											"end": 4968,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 626,
											"end": 4968,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 626,
											"end": 4968,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 4968,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 626,
											"end": 4968,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 4968,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 626,
											"end": 4968,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":{\"keccak256\":\"0xfca35d11bafb85cf4f2203b41f1a98238dca59b6a9faa28b86ea3f9f63da8ec5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://7019345b024afa93000c6b5a2b095be59c3c5352eb658619c941d23d0af5bc65\",\"dweb:/ipfs/QmZLxJKSbM66Wd1Qd43jSdiXdg7JP6DQ9J6LuANUZummM4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IChainlinkAggregator.sol": {
				"IChainlinkAggregator": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "int256",
									"name": "current",
									"type": "int256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "AnswerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "startedBy",
									"type": "address"
								}
							],
							"name": "NewRound",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								}
							],
							"name": "getAnswer",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								}
							],
							"name": "getTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestAnswer",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"getAnswer(uint256)": "b5ab58dc",
							"getTimestamp(uint256)": "b633620c",
							"latestAnswer()": "50d25bcd",
							"latestRound()": "668a0f02",
							"latestTimestamp()": "8205bf6a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"current\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"AnswerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"startedBy\",\"type\":\"address\"}],\"name\":\"NewRound\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IChainlinkAggregator.sol\":\"IChainlinkAggregator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IChainlinkAggregator.sol\":{\"keccak256\":\"0x72d140a3a8b2afb440d9c616114dbcf8548c83e18c94c1790db8644b9e3a03da\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://bab8cd78fad962c6cf89d4226bb4fcf4ab088744245bc55f7a44d6151fc704e4\",\"dweb:/ipfs/QmeUBFNGxFspCHugoKv6mjPCjayujUD2P5ZoY2ev15ctZd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IPriceOracleGetter.sol": {
				"IPriceOracleGetter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getAssetPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getAssetPrice(address)": {
								"details": "returns the asset price in ETH",
								"params": {
									"asset": "the address of the asset"
								},
								"returns": {
									"_0": "the ETH price of the asset*"
								}
							}
						},
						"title": "IPriceOracleGetter interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAssetPrice(address)": "b3596f07"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getAssetPrice(address)\":{\"details\":\"returns the asset price in ETH\",\"params\":{\"asset\":\"the address of the asset\"},\"returns\":{\"_0\":\"the ETH price of the asset*\"}}},\"title\":\"IPriceOracleGetter interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface for the Aave price oracle.*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPriceOracleGetter.sol\":\"IPriceOracleGetter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPriceOracleGetter.sol\":{\"keccak256\":\"0xf81a1742c6cac8d98baeb7d6003cedc97eed9c362bc0156aa00033d04e673f3e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://74eeb88f24e2375b5106b0e54987b564f2f9b7c753e8675997e326a29cdce154\",\"dweb:/ipfs/QmV2TScQgnSDZV5W2WCtQUD3Yk3tmZE7XcW37FAz9sXvUe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Interface for the Aave price oracle.*",
						"version": 1
					}
				}
			},
			"contracts/misc/AgaveOracle.sol": {
				"AgaveOracle": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "sources",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "fallbackOracle",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_wrappedNative",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "source",
									"type": "address"
								}
							],
							"name": "AssetSourceUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "fallbackOracle",
									"type": "address"
								}
							],
							"name": "FallbackOracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "wrappedNative",
									"type": "address"
								}
							],
							"name": "WrappedNativeSet",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getAssetPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								}
							],
							"name": "getAssetsPrices",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFallbackOracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getSourceOfAsset",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "sources",
									"type": "address[]"
								}
							],
							"name": "setAssetSources",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "fallbackOracle",
									"type": "address"
								}
							],
							"name": "setFallbackOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wrappedNative",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aave",
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"assets": "The addresses of the assets",
									"fallbackOracle": "The address of the fallback oracle to use if the data of an        aggregator is not consistent",
									"sources": "The address of the source of each asset"
								}
							},
							"getAssetPrice(address)": {
								"params": {
									"asset": "The asset address"
								}
							},
							"getAssetsPrices(address[])": {
								"params": {
									"assets": "The list of assets addresses"
								}
							},
							"getFallbackOracle()": {
								"returns": {
									"_0": "address The addres of the fallback oracle"
								}
							},
							"getSourceOfAsset(address)": {
								"params": {
									"asset": "The address of the asset"
								},
								"returns": {
									"_0": "address The address of the source"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"setAssetSources(address[],address[])": {
								"params": {
									"assets": "The addresses of the assets",
									"sources": "The address of the source of each asset"
								}
							},
							"setFallbackOracle(address)": {
								"params": {
									"fallbackOracle": "The address of the fallbackOracle"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "AgaveOracle",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/misc/AgaveOracle.sol\":1112:5956  contract AgaveOracle is IPriceOracleGetter, Ownable {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/misc/AgaveOracle.sol\":1895:2269  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x80\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  dup7\n  0x20\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  dup3\n  add\n  swap2\n  mul\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  add\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_9\n  jumpi\n  0x00\n  dup1\n  revert\ntag_9:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  dup3\n  mload\n  dup7\n  0x20\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  dup3\n  add\n  swap2\n  mul\n  dup1\n  dup4\n  dup4\n  0x00\ntag_12:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_14\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_12)\ntag_14:\n  pop\n  pop\n  pop\n  pop\n  swap2\n  swap1\n  swap2\n  add\n  0x40\n  swap1\n  dup2\n  mstore\n  0x20\n  dup4\n  add\n  mload\n  swap3\n  add\n  mload\n  swap2\n  swap4\n  pop\n  swap1\n  swap2\n  pop\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":844:861  address msgSender */\n  0x00\n  swap1\n  pop\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":864:876  _msgSender() */\n  tag_18\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":864:874  _msgSender */\n  tag_19\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":864:876  _msgSender() */\n  jump\t// in\ntag_18:\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":882:888  _owner */\n  0x00\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":882:900  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":911:954  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":882:900  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":911:954  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":882:888  _owner */\n  dup3\n  swap1\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":911:954  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"contracts/misc/AgaveOracle.sol\":2039:2073  _setFallbackOracle(fallbackOracle) */\n  tag_21\n    /* \"contracts/misc/AgaveOracle.sol\":2058:2072  fallbackOracle */\n  dup3\n    /* \"contracts/misc/AgaveOracle.sol\":2039:2057  _setFallbackOracle */\n  tag_22\n    /* \"contracts/misc/AgaveOracle.sol\":2039:2073  _setFallbackOracle(fallbackOracle) */\n  jump\t// in\ntag_21:\n    /* \"contracts/misc/AgaveOracle.sol\":2079:2113  _setAssetsSources(assets, sources) */\n  tag_23\n    /* \"contracts/misc/AgaveOracle.sol\":2097:2103  assets */\n  dup5\n    /* \"contracts/misc/AgaveOracle.sol\":2105:2112  sources */\n  dup5\n    /* \"contracts/misc/AgaveOracle.sol\":2079:2096  _setAssetsSources */\n  tag_24\n    /* \"contracts/misc/AgaveOracle.sol\":2079:2113  _setAssetsSources(assets, sources) */\n  jump\t// in\ntag_23:\n    /* \"contracts/misc/AgaveOracle.sol\":2135:2149  _wrappedNative */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/misc/AgaveOracle.sol\":2119:2149  wrappedNative = _wrappedNative */\n  and\n  0x80\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/misc/AgaveOracle.sol\":2195:2209  _wrappedNative */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/misc/AgaveOracle.sol\":2180:2219  IERC20Detailed(_wrappedNative).decimals */\n  and\n  0x313ce567\n    /* \"contracts/misc/AgaveOracle.sol\":2180:2221  IERC20Detailed(_wrappedNative).decimals() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_25\n  jumpi\n  0x00\n  dup1\n  revert\ntag_25:\n  pop\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_27\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_27:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  0x20\n  dup2\n  lt\n  iszero\n  tag_28\n  jumpi\n  0x00\n  dup1\n  revert\ntag_28:\n  pop\n  mload\n    /* \"contracts/misc/AgaveOracle.sol\":2155:2221  _wrappedNativeDecimals = IERC20Detailed(_wrappedNative).decimals() */\n  0xf8\n  shl\n  0xff00000000000000000000000000000000000000000000000000000000000000\n  and\n  0xa0\n  mstore\n    /* \"contracts/misc/AgaveOracle.sol\":2232:2264  WrappedNativeSet(_wrappedNative) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  swap1\n  0x141c8827a0e1bf1f8e0a0f1d0b4fce811fd3b387abb10419267afc2b74583776\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"contracts/misc/AgaveOracle.sol\":1895:2269  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/misc/AgaveOracle.sol\":1112:5956  contract AgaveOracle is IPriceOracleGetter, Ownable {... */\n  jump(tag_29)\n    /* \"contracts/dependencies/openzeppelin/contracts/Context.sol\":587:685  function _msgSender() internal view virtual returns (address payable) {... */\ntag_19:\n    /* \"contracts/dependencies/openzeppelin/contracts/Context.sol\":670:680  msg.sender */\n  caller\n    /* \"contracts/dependencies/openzeppelin/contracts/Context.sol\":587:685  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/misc/AgaveOracle.sol\":3546:3718  function _setFallbackOracle(address fallbackOracle) internal {... */\ntag_22:\n    /* \"contracts/misc/AgaveOracle.sol\":3613:3628  _fallbackOracle */\n  0x02\n    /* \"contracts/misc/AgaveOracle.sol\":3613:3665  _fallbackOracle = IPriceOracleGetter(fallbackOracle) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/misc/AgaveOracle.sol\":3676:3713  FallbackOracleUpdated(fallbackOracle) */\n  mload(0x40)\n  0xce7a780d33665b1ea097af5f155e3821b809ecbaa839d3b33aa83ba28168cefb\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"contracts/misc/AgaveOracle.sol\":3546:3718  function _setFallbackOracle(address fallbackOracle) internal {... */\n  pop\n  jump\t// out\n    /* \"contracts/misc/AgaveOracle.sol\":3077:3422  function _setAssetsSources(address[] memory assets, address[] memory sources) internal {... */\ntag_24:\n    /* \"contracts/misc/AgaveOracle.sol\":3195:3202  sources */\n  dup1\n    /* \"contracts/misc/AgaveOracle.sol\":3195:3209  sources.length */\n  mload\n    /* \"contracts/misc/AgaveOracle.sol\":3178:3184  assets */\n  dup3\n    /* \"contracts/misc/AgaveOracle.sol\":3178:3191  assets.length */\n  mload\n    /* \"contracts/misc/AgaveOracle.sol\":3178:3209  assets.length == sources.length */\n  eq\n    /* \"contracts/misc/AgaveOracle.sol\":3170:3240  require(assets.length == sources.length, 'INCONSISTENT_PARAMS_LENGTH') */\n  tag_33\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x1a\n  0x24\n  dup3\n  add\n  mstore\n  0x494e434f4e53495354454e545f504152414d535f4c454e475448000000000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_33:\n    /* \"contracts/misc/AgaveOracle.sol\":3251:3260  uint256 i */\n  0x00\n    /* \"contracts/misc/AgaveOracle.sol\":3246:3418  for (uint256 i = 0; i < assets.length; i++) {... */\ntag_34:\n    /* \"contracts/misc/AgaveOracle.sol\":3270:3276  assets */\n  dup3\n    /* \"contracts/misc/AgaveOracle.sol\":3270:3283  assets.length */\n  mload\n    /* \"contracts/misc/AgaveOracle.sol\":3266:3267  i */\n  dup2\n    /* \"contracts/misc/AgaveOracle.sol\":3266:3283  i < assets.length */\n  lt\n    /* \"contracts/misc/AgaveOracle.sol\":3246:3418  for (uint256 i = 0; i < assets.length; i++) {... */\n  iszero\n  tag_35\n  jumpi\n    /* \"contracts/misc/AgaveOracle.sol\":3346:3353  sources */\n  dup2\n    /* \"contracts/misc/AgaveOracle.sol\":3354:3355  i */\n  dup2\n    /* \"contracts/misc/AgaveOracle.sol\":3346:3356  sources[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_37\n  jumpi\n  invalid\ntag_37:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"contracts/misc/AgaveOracle.sol\":3298:3311  assetsSources */\n  0x01\n    /* \"contracts/misc/AgaveOracle.sol\":3298:3322  assetsSources[assets[i]] */\n  0x00\n    /* \"contracts/misc/AgaveOracle.sol\":3312:3318  assets */\n  dup6\n    /* \"contracts/misc/AgaveOracle.sol\":3319:3320  i */\n  dup5\n    /* \"contracts/misc/AgaveOracle.sol\":3312:3321  assets[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_38\n  jumpi\n  invalid\ntag_38:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/misc/AgaveOracle.sol\":3298:3322  assetsSources[assets[i]] */\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/misc/AgaveOracle.sol\":3298:3357  assetsSources[assets[i]] = IChainlinkAggregator(sources[i]) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n  mul\n  not\n  and\n  swap1\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/misc/AgaveOracle.sol\":3400:3407  sources */\n  dup2\n    /* \"contracts/misc/AgaveOracle.sol\":3408:3409  i */\n  dup2\n    /* \"contracts/misc/AgaveOracle.sol\":3400:3410  sources[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_39\n  jumpi\n  invalid\ntag_39:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/misc/AgaveOracle.sol\":3370:3411  AssetSourceUpdated(assets[i], sources[i]) */\n  and\n    /* \"contracts/misc/AgaveOracle.sol\":3389:3395  assets */\n  dup4\n    /* \"contracts/misc/AgaveOracle.sol\":3396:3397  i */\n  dup3\n    /* \"contracts/misc/AgaveOracle.sol\":3389:3398  assets[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_40\n  jumpi\n  invalid\ntag_40:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/misc/AgaveOracle.sol\":3370:3411  AssetSourceUpdated(assets[i], sources[i]) */\n  and\n  0x22c5b7b2d8561d39f7f210b6b326a1aa69f15311163082308ac4877db6339dc1\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/misc/AgaveOracle.sol\":3285:3288  i++ */\n  0x01\n  add\n    /* \"contracts/misc/AgaveOracle.sol\":3246:3418  for (uint256 i = 0; i < assets.length; i++) {... */\n  jump(tag_34)\ntag_35:\n  pop\n    /* \"contracts/misc/AgaveOracle.sol\":3077:3422  function _setAssetsSources(address[] memory assets, address[] memory sources) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/misc/AgaveOracle.sol\":1112:5956  contract AgaveOracle is IPriceOracleGetter, Ownable {... */\ntag_29:\n  shr(0x60, mload(0x80))\n  shr(0xf8, mload(0xa0))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x0f00538877f92428038f9fbe5bb828de8348ac83ff3e7d12a732d923273183e1\")\n  assignImmutable(\"0x2977897376800d2e8e3b0a58999c16faa0e9c6608aa4fc77626c5a42af694ef9\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/misc/AgaveOracle.sol\":1112:5956  contract AgaveOracle is IPriceOracleGetter, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9d23d9f2\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x9d23d9f2\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xabfd5310\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb3596f07\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xeb6d3a11\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x170aee73\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6210308c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x92bf2be0\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/misc/AgaveOracle.sol\":2783:2898  function setFallbackOracle(address fallbackOracle) external onlyOwner {... */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_16\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/misc/AgaveOracle.sol\":5851:5954  function getFallbackOracle() external view returns (address) {... */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1610:1745  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_14\n      tag_20\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1027:1098  function owner() public view returns (address) {... */\n    tag_6:\n      tag_17\n      tag_22\n      jump\t// in\n        /* \"contracts/misc/AgaveOracle.sol\":5617:5737  function getSourceOfAsset(address asset) external view returns (address) {... */\n    tag_7:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_25\n      jump\t// in\n        /* \"contracts/misc/AgaveOracle.sol\":5178:5455  function getAssetsPrices(address[] calldata assets) external view returns (uint256[] memory) {... */\n    tag_8:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      tag_31\n      jump\t// in\n    tag_26:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      dup2\n      add\n      swap2\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_32:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_34\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_32)\n    tag_34:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/misc/AgaveOracle.sol\":2480:2634  function setAssetSources(address[] calldata assets, address[] calldata sources)... */\n    tag_9:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      swap2\n      swap4\n      swap1\n      swap3\n      swap1\n      swap2\n      0x20\n      dup2\n      add\n      swap1\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      tag_43\n      jump\t// in\n        /* \"contracts/misc/AgaveOracle.sol\":3804:5057  function getAssetPrice(address asset) public view override returns (uint256) {... */\n    tag_10:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_46\n      jump\t// in\n    tag_44:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/misc/AgaveOracle.sol\":1537:1575  address public immutable wrappedNative */\n    tag_11:\n      tag_17\n      tag_48\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1884:2110  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_12:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_51\n      jump\t// in\n        /* \"contracts/misc/AgaveOracle.sol\":2783:2898  function setFallbackOracle(address fallbackOracle) external onlyOwner {... */\n    tag_16:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1235  _msgSender() */\n      tag_53\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1233  _msgSender */\n      tag_54\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1235  _msgSender() */\n      jump\t// in\n    tag_53:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1213:1219  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1213:1235  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1205:1272  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_55\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_55:\n        /* \"contracts/misc/AgaveOracle.sol\":2859:2893  _setFallbackOracle(fallbackOracle) */\n      tag_57\n        /* \"contracts/misc/AgaveOracle.sol\":2878:2892  fallbackOracle */\n      dup2\n        /* \"contracts/misc/AgaveOracle.sol\":2859:2877  _setFallbackOracle */\n      tag_58\n        /* \"contracts/misc/AgaveOracle.sol\":2859:2893  _setFallbackOracle(fallbackOracle) */\n      jump\t// in\n    tag_57:\n        /* \"contracts/misc/AgaveOracle.sol\":2783:2898  function setFallbackOracle(address fallbackOracle) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/misc/AgaveOracle.sol\":5851:5954  function getFallbackOracle() external view returns (address) {... */\n    tag_18:\n        /* \"contracts/misc/AgaveOracle.sol\":5933:5948  _fallbackOracle */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/misc/AgaveOracle.sol\":5851:5954  function getFallbackOracle() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1610:1745  function renounceOwnership() public virtual onlyOwner {... */\n    tag_20:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1235  _msgSender() */\n      tag_61\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1233  _msgSender */\n      tag_54\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1235  _msgSender() */\n      jump\t// in\n    tag_61:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1213:1219  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1213:1235  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1205:1272  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_62\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_62:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1712:1713  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1696:1702  _owner */\n      dup1\n      sload\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1675:1715  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1696:1702  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1675:1715  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1712:1713  0 */\n      dup4\n      swap1\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1675:1715  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1738:1739  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1721:1740  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1610:1745  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1027:1098  function owner() public view returns (address) {... */\n    tag_22:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1065:1072  address */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1087:1093  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1027:1098  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/misc/AgaveOracle.sol\":5617:5737  function getSourceOfAsset(address asset) external view returns (address) {... */\n    tag_25:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/AgaveOracle.sol\":5711:5731  assetsSources[asset] */\n      dup1\n      dup3\n      and\n        /* \"contracts/misc/AgaveOracle.sol\":5681:5688  address */\n      0x00\n        /* \"contracts/misc/AgaveOracle.sol\":5711:5731  assetsSources[asset] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/misc/AgaveOracle.sol\":5711:5724  assetsSources */\n      0x01\n        /* \"contracts/misc/AgaveOracle.sol\":5711:5731  assetsSources[asset] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n        /* \"contracts/misc/AgaveOracle.sol\":5617:5737  function getSourceOfAsset(address asset) external view returns (address) {... */\n    tag_65:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/misc/AgaveOracle.sol\":5178:5455  function getAssetsPrices(address[] calldata assets) external view returns (uint256[] memory) {... */\n    tag_31:\n        /* \"contracts/misc/AgaveOracle.sol\":5253:5269  uint256[] memory */\n      0x60\n      dup1\n        /* \"contracts/misc/AgaveOracle.sol\":5317:5323  assets */\n      dup3\n        /* \"contracts/misc/AgaveOracle.sol\":5303:5331  new uint256[](assets.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_68\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_68:\n      pop\n        /* \"contracts/misc/AgaveOracle.sol\":5277:5331  uint256[] memory prices = new uint256[](assets.length) */\n      swap1\n      pop\n        /* \"contracts/misc/AgaveOracle.sol\":5342:5351  uint256 i */\n      0x00\n        /* \"contracts/misc/AgaveOracle.sol\":5337:5432  for (uint256 i = 0; i < assets.length; i++) {... */\n    tag_69:\n        /* \"contracts/misc/AgaveOracle.sol\":5357:5374  i < assets.length */\n      dup4\n      dup2\n      lt\n        /* \"contracts/misc/AgaveOracle.sol\":5337:5432  for (uint256 i = 0; i < assets.length; i++) {... */\n      iszero\n      tag_70\n      jumpi\n        /* \"contracts/misc/AgaveOracle.sol\":5401:5425  getAssetPrice(assets[i]) */\n      tag_72\n        /* \"contracts/misc/AgaveOracle.sol\":5415:5421  assets */\n      dup6\n      dup6\n        /* \"contracts/misc/AgaveOracle.sol\":5422:5423  i */\n      dup4\n        /* \"contracts/misc/AgaveOracle.sol\":5415:5424  assets[i] */\n      dup2\n      dup2\n      lt\n      tag_73\n      jumpi\n      invalid\n    tag_73:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/misc/AgaveOracle.sol\":5401:5414  getAssetPrice */\n      tag_46\n        /* \"contracts/misc/AgaveOracle.sol\":5401:5425  getAssetPrice(assets[i]) */\n      jump\t// in\n    tag_72:\n        /* \"contracts/misc/AgaveOracle.sol\":5389:5395  prices */\n      dup3\n        /* \"contracts/misc/AgaveOracle.sol\":5396:5397  i */\n      dup3\n        /* \"contracts/misc/AgaveOracle.sol\":5389:5398  prices[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_74\n      jumpi\n      invalid\n    tag_74:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/misc/AgaveOracle.sol\":5389:5425  prices[i] = getAssetPrice(assets[i]) */\n      mstore\n        /* \"contracts/misc/AgaveOracle.sol\":5376:5379  i++ */\n      0x01\n      add\n        /* \"contracts/misc/AgaveOracle.sol\":5337:5432  for (uint256 i = 0; i < assets.length; i++) {... */\n      jump(tag_69)\n    tag_70:\n      pop\n        /* \"contracts/misc/AgaveOracle.sol\":5444:5450  prices */\n      swap1\n      pop\n        /* \"contracts/misc/AgaveOracle.sol\":5178:5455  function getAssetsPrices(address[] calldata assets) external view returns (uint256[] memory) {... */\n    tag_66:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/misc/AgaveOracle.sol\":2480:2634  function setAssetSources(address[] calldata assets, address[] calldata sources)... */\n    tag_43:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1235  _msgSender() */\n      tag_76\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1233  _msgSender */\n      tag_54\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1235  _msgSender() */\n      jump\t// in\n    tag_76:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1213:1219  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1213:1235  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1205:1272  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_77\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_77:\n        /* \"contracts/misc/AgaveOracle.sol\":2595:2629  _setAssetsSources(assets, sources) */\n      tag_79\n        /* \"contracts/misc/AgaveOracle.sol\":2613:2619  assets */\n      dup5\n      dup5\n        /* \"contracts/misc/AgaveOracle.sol\":2595:2629  _setAssetsSources(assets, sources) */\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup9\n      mul\n      dup3\n      dup2\n      add\n      dup3\n      add\n      swap1\n      swap4\n      mstore\n      dup8\n      dup3\n      mstore\n      swap1\n      swap4\n      pop\n        /* \"contracts/misc/AgaveOracle.sol\":2621:2628  sources */\n      dup8\n      swap3\n      pop\n      dup7\n      swap2\n      dup3\n      swap2\n        /* \"contracts/misc/AgaveOracle.sol\":2595:2629  _setAssetsSources(assets, sources) */\n      dup6\n      add\n      swap1\n        /* \"contracts/misc/AgaveOracle.sol\":2621:2628  sources */\n      dup5\n      swap1\n        /* \"contracts/misc/AgaveOracle.sol\":2595:2629  _setAssetsSources(assets, sources) */\n      dup1\n        /* \"contracts/misc/AgaveOracle.sol\":2621:2628  sources */\n      dup3\n        /* \"contracts/misc/AgaveOracle.sol\":2595:2629  _setAssetsSources(assets, sources) */\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"contracts/misc/AgaveOracle.sol\":2595:2612  _setAssetsSources */\n      tag_80\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/misc/AgaveOracle.sol\":2595:2629  _setAssetsSources(assets, sources) */\n      jump\t// in\n    tag_79:\n        /* \"contracts/misc/AgaveOracle.sol\":2480:2634  function setAssetSources(address[] calldata assets, address[] calldata sources)... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/misc/AgaveOracle.sol\":3804:5057  function getAssetPrice(address asset) public view override returns (uint256) {... */\n    tag_46:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/AgaveOracle.sol\":3917:3937  assetsSources[asset] */\n      dup1\n      dup3\n      and\n        /* \"contracts/misc/AgaveOracle.sol\":3872:3879  uint256 */\n      0x00\n        /* \"contracts/misc/AgaveOracle.sol\":3917:3937  assetsSources[asset] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/misc/AgaveOracle.sol\":3917:3930  assetsSources */\n      0x01\n        /* \"contracts/misc/AgaveOracle.sol\":3917:3937  assetsSources[asset] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n        /* \"contracts/misc/AgaveOracle.sol\":4003:4016  wrappedNative */\n      immutable(\"0x2977897376800d2e8e3b0a58999c16faa0e9c6608aa4fc77626c5a42af694ef9\")\n        /* \"contracts/misc/AgaveOracle.sol\":3989:4017  assetsSources[wrappedNative] */\n      dup6\n      and\n      dup1\n      dup5\n      mstore\n      swap2\n      dup4\n      keccak256\n      sload\n        /* \"contracts/misc/AgaveOracle.sol\":3872:3879  uint256 */\n      swap3\n      swap5\n        /* \"contracts/misc/AgaveOracle.sol\":3917:3937  assetsSources[asset] */\n      swap1\n      dup2\n      and\n      swap4\n        /* \"contracts/misc/AgaveOracle.sol\":3989:4017  assetsSources[wrappedNative] */\n      swap3\n      and\n      swap2\n        /* \"contracts/misc/AgaveOracle.sol\":4028:4050  asset == wrappedNative */\n      eq\n        /* \"contracts/misc/AgaveOracle.sol\":4024:5053  if (asset == wrappedNative) {... */\n      iszero\n      tag_82\n      jumpi\n        /* \"contracts/misc/AgaveOracle.sol\":4139:4146  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/misc/AgaveOracle.sol\":4132:4146  return 1 ether */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_65)\n        /* \"contracts/misc/AgaveOracle.sol\":4024:5053  if (asset == wrappedNative) {... */\n    tag_82:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/AgaveOracle.sol\":4163:4192  address(source) == address(0) */\n      dup3\n      and\n      iszero\n      dup1\n        /* \"contracts/misc/AgaveOracle.sol\":4163:4241  address(source) == address(0) || address(wrappedNativeUsdSource) == address(0) */\n      tag_84\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/AgaveOracle.sol\":4196:4241  address(wrappedNativeUsdSource) == address(0) */\n      dup2\n      and\n      iszero\n        /* \"contracts/misc/AgaveOracle.sol\":4163:4241  address(source) == address(0) || address(wrappedNativeUsdSource) == address(0) */\n    tag_84:\n        /* \"contracts/misc/AgaveOracle.sol\":4159:5053  if (address(source) == address(0) || address(wrappedNativeUsdSource) == address(0)) {... */\n      iszero\n      tag_85\n      jumpi\n        /* \"contracts/misc/AgaveOracle.sol\":4258:4273  _fallbackOracle */\n      sload(0x02)\n        /* \"contracts/misc/AgaveOracle.sol\":4258:4294  _fallbackOracle.getAssetPrice(asset) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xb3596f07)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      0x04\n      dup4\n      add\n      mstore\n      swap2\n      mload\n        /* \"contracts/misc/AgaveOracle.sol\":4258:4273  _fallbackOracle */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/misc/AgaveOracle.sol\":4258:4287  _fallbackOracle.getAssetPrice */\n      0xb3596f07\n      swap2\n        /* \"contracts/misc/AgaveOracle.sol\":4258:4294  _fallbackOracle.getAssetPrice(asset) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/misc/AgaveOracle.sol\":4258:4273  _fallbackOracle */\n      dup7\n        /* \"contracts/misc/AgaveOracle.sol\":4258:4294  _fallbackOracle.getAssetPrice(asset) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      mload\n      swap3\n      pop\n        /* \"contracts/misc/AgaveOracle.sol\":4251:4294  return _fallbackOracle.getAssetPrice(asset) */\n      tag_65\n      swap2\n      pop\n      pop\n      jump\n        /* \"contracts/misc/AgaveOracle.sol\":4159:5053  if (address(source) == address(0) || address(wrappedNativeUsdSource) == address(0)) {... */\n    tag_85:\n        /* \"contracts/misc/AgaveOracle.sol\":4383:4411  int256 wrappedNativeUsdPrice */\n      0x00\n        /* \"contracts/misc/AgaveOracle.sol\":4414:4436  wrappedNativeUsdSource */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/AgaveOracle.sol\":4414:4449  wrappedNativeUsdSource.latestAnswer */\n      and\n      0x50d25bcd\n        /* \"contracts/misc/AgaveOracle.sol\":4414:4451  wrappedNativeUsdSource.latestAnswer() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      mload\n      swap1\n      pop\n        /* \"contracts/misc/AgaveOracle.sol\":4488:4489  0 */\n      0x00\n        /* \"contracts/misc/AgaveOracle.sol\":4463:4489  wrappedNativeUsdPrice <= 0 */\n      dup2\n      sgt\n        /* \"contracts/misc/AgaveOracle.sol\":4459:4553  if (wrappedNativeUsdPrice <= 0) {... */\n      tag_95\n      jumpi\n        /* \"contracts/misc/AgaveOracle.sol\":4508:4523  _fallbackOracle */\n      sload(0x02)\n        /* \"contracts/misc/AgaveOracle.sol\":4508:4544  _fallbackOracle.getAssetPrice(asset) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xb3596f07)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup9\n      dup2\n      and\n      0x04\n      dup4\n      add\n      mstore\n      swap2\n      mload\n        /* \"contracts/misc/AgaveOracle.sol\":4508:4523  _fallbackOracle */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/misc/AgaveOracle.sol\":4508:4537  _fallbackOracle.getAssetPrice */\n      0xb3596f07\n      swap2\n        /* \"contracts/misc/AgaveOracle.sol\":4508:4544  _fallbackOracle.getAssetPrice(asset) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/misc/AgaveOracle.sol\":4508:4523  _fallbackOracle */\n      dup7\n        /* \"contracts/misc/AgaveOracle.sol\":4508:4544  _fallbackOracle.getAssetPrice(asset) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      mload\n      swap4\n      pop\n        /* \"contracts/misc/AgaveOracle.sol\":4501:4544  return _fallbackOracle.getAssetPrice(asset) */\n      tag_65\n      swap3\n      pop\n      pop\n      pop\n      jump\n        /* \"contracts/misc/AgaveOracle.sol\":4459:4553  if (wrappedNativeUsdPrice <= 0) {... */\n    tag_95:\n        /* \"contracts/misc/AgaveOracle.sol\":4561:4573  int256 price */\n      0x00\n        /* \"contracts/misc/AgaveOracle.sol\":4597:4603  source */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/AgaveOracle.sol\":4576:4617  IChainlinkAggregator(source).latestAnswer */\n      and\n      0x50d25bcd\n        /* \"contracts/misc/AgaveOracle.sol\":4576:4619  IChainlinkAggregator(source).latestAnswer() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_102\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_102:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      mload\n      swap1\n      pop\n        /* \"contracts/misc/AgaveOracle.sol\":4639:4640  0 */\n      0x00\n        /* \"contracts/misc/AgaveOracle.sol\":4631:4640  price > 0 */\n      dup2\n      sgt\n        /* \"contracts/misc/AgaveOracle.sol\":4627:5047  if (price > 0) {... */\n      iszero\n      tag_104\n      jumpi\n        /* \"contracts/misc/AgaveOracle.sol\":4879:4970  uint256(price).mul(uint256(10)**_wrappedNativeDecimals).div(uint256(wrappedNativeUsdPrice)) */\n      tag_105\n        /* \"contracts/misc/AgaveOracle.sol\":4947:4968  wrappedNativeUsdPrice */\n      dup3\n        /* \"contracts/misc/AgaveOracle.sol\":4879:4934  uint256(price).mul(uint256(10)**_wrappedNativeDecimals) */\n      tag_106\n        /* \"contracts/misc/AgaveOracle.sol\":4887:4892  price */\n      dup4\n        /* \"contracts/misc/AgaveOracle.sol\":4898:4933  uint256(10)**_wrappedNativeDecimals */\n      0xff\n        /* \"contracts/misc/AgaveOracle.sol\":4911:4933  _wrappedNativeDecimals */\n      immutable(\"0x0f00538877f92428038f9fbe5bb828de8348ac83ff3e7d12a732d923273183e1\")\n        /* \"contracts/misc/AgaveOracle.sol\":4898:4933  uint256(10)**_wrappedNativeDecimals */\n      and\n        /* \"contracts/misc/AgaveOracle.sol\":4906:4908  10 */\n      0x0a\n        /* \"contracts/misc/AgaveOracle.sol\":4898:4933  uint256(10)**_wrappedNativeDecimals */\n      exp\n        /* \"contracts/misc/AgaveOracle.sol\":4879:4897  uint256(price).mul */\n      tag_107\n        /* \"contracts/misc/AgaveOracle.sol\":4879:4934  uint256(price).mul(uint256(10)**_wrappedNativeDecimals) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/misc/AgaveOracle.sol\":4879:4938  uint256(price).mul(uint256(10)**_wrappedNativeDecimals).div */\n      swap1\n      tag_108\n        /* \"contracts/misc/AgaveOracle.sol\":4879:4970  uint256(price).mul(uint256(10)**_wrappedNativeDecimals).div(uint256(wrappedNativeUsdPrice)) */\n      jump\t// in\n    tag_105:\n        /* \"contracts/misc/AgaveOracle.sol\":4872:4970  return uint256(price).mul(uint256(10)**_wrappedNativeDecimals).div(uint256(wrappedNativeUsdPrice)) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_65)\n        /* \"contracts/misc/AgaveOracle.sol\":4627:5047  if (price > 0) {... */\n    tag_104:\n        /* \"contracts/misc/AgaveOracle.sol\":5002:5017  _fallbackOracle */\n      sload(0x02)\n        /* \"contracts/misc/AgaveOracle.sol\":5002:5038  _fallbackOracle.getAssetPrice(asset) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xb3596f07)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      dup2\n      and\n      0x04\n      dup4\n      add\n      mstore\n      swap2\n      mload\n        /* \"contracts/misc/AgaveOracle.sol\":5002:5017  _fallbackOracle */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/misc/AgaveOracle.sol\":5002:5031  _fallbackOracle.getAssetPrice */\n      0xb3596f07\n      swap2\n        /* \"contracts/misc/AgaveOracle.sol\":5002:5038  _fallbackOracle.getAssetPrice(asset) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/misc/AgaveOracle.sol\":5002:5017  _fallbackOracle */\n      dup7\n        /* \"contracts/misc/AgaveOracle.sol\":5002:5038  _fallbackOracle.getAssetPrice(asset) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      mload\n      swap5\n      pop\n        /* \"contracts/misc/AgaveOracle.sol\":4995:5038  return _fallbackOracle.getAssetPrice(asset) */\n      tag_65\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"contracts/misc/AgaveOracle.sol\":1537:1575  address public immutable wrappedNative */\n    tag_48:\n      immutable(\"0x2977897376800d2e8e3b0a58999c16faa0e9c6608aa4fc77626c5a42af694ef9\")\n      dup2\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1884:2110  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_51:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1235  _msgSender() */\n      tag_115\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1233  _msgSender */\n      tag_54\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1235  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1213:1219  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1213:1235  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1205:1272  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_116\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_116:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1968:1990  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1960:2033  require(newOwner != address(0), 'Ownable: new owner is the zero address') */\n      tag_118\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":2065:2071  _owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":2044:2082  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":2065:2071  _owner */\n      swap3\n      and\n      swap2\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":2044:2082  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":2088:2094  _owner */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":2088:2105  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1884:2110  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/contracts/Context.sol\":587:685  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_54:\n        /* \"contracts/dependencies/openzeppelin/contracts/Context.sol\":670:680  msg.sender */\n      caller\n        /* \"contracts/dependencies/openzeppelin/contracts/Context.sol\":587:685  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/misc/AgaveOracle.sol\":3546:3718  function _setFallbackOracle(address fallbackOracle) internal {... */\n    tag_58:\n        /* \"contracts/misc/AgaveOracle.sol\":3613:3628  _fallbackOracle */\n      0x02\n        /* \"contracts/misc/AgaveOracle.sol\":3613:3665  _fallbackOracle = IPriceOracleGetter(fallbackOracle) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/misc/AgaveOracle.sol\":3676:3713  FallbackOracleUpdated(fallbackOracle) */\n      mload(0x40)\n      0xce7a780d33665b1ea097af5f155e3821b809ecbaa839d3b33aa83ba28168cefb\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/misc/AgaveOracle.sol\":3546:3718  function _setFallbackOracle(address fallbackOracle) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/misc/AgaveOracle.sol\":3077:3422  function _setAssetsSources(address[] memory assets, address[] memory sources) internal {... */\n    tag_80:\n        /* \"contracts/misc/AgaveOracle.sol\":3195:3202  sources */\n      dup1\n        /* \"contracts/misc/AgaveOracle.sol\":3195:3209  sources.length */\n      mload\n        /* \"contracts/misc/AgaveOracle.sol\":3178:3184  assets */\n      dup3\n        /* \"contracts/misc/AgaveOracle.sol\":3178:3191  assets.length */\n      mload\n        /* \"contracts/misc/AgaveOracle.sol\":3178:3209  assets.length == sources.length */\n      eq\n        /* \"contracts/misc/AgaveOracle.sol\":3170:3240  require(assets.length == sources.length, 'INCONSISTENT_PARAMS_LENGTH') */\n      tag_122\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1a\n      0x24\n      dup3\n      add\n      mstore\n      0x494e434f4e53495354454e545f504152414d535f4c454e475448000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_122:\n        /* \"contracts/misc/AgaveOracle.sol\":3251:3260  uint256 i */\n      0x00\n        /* \"contracts/misc/AgaveOracle.sol\":3246:3418  for (uint256 i = 0; i < assets.length; i++) {... */\n    tag_123:\n        /* \"contracts/misc/AgaveOracle.sol\":3270:3276  assets */\n      dup3\n        /* \"contracts/misc/AgaveOracle.sol\":3270:3283  assets.length */\n      mload\n        /* \"contracts/misc/AgaveOracle.sol\":3266:3267  i */\n      dup2\n        /* \"contracts/misc/AgaveOracle.sol\":3266:3283  i < assets.length */\n      lt\n        /* \"contracts/misc/AgaveOracle.sol\":3246:3418  for (uint256 i = 0; i < assets.length; i++) {... */\n      iszero\n      tag_124\n      jumpi\n        /* \"contracts/misc/AgaveOracle.sol\":3346:3353  sources */\n      dup2\n        /* \"contracts/misc/AgaveOracle.sol\":3354:3355  i */\n      dup2\n        /* \"contracts/misc/AgaveOracle.sol\":3346:3356  sources[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_126\n      jumpi\n      invalid\n    tag_126:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/misc/AgaveOracle.sol\":3298:3311  assetsSources */\n      0x01\n        /* \"contracts/misc/AgaveOracle.sol\":3298:3322  assetsSources[assets[i]] */\n      0x00\n        /* \"contracts/misc/AgaveOracle.sol\":3312:3318  assets */\n      dup6\n        /* \"contracts/misc/AgaveOracle.sol\":3319:3320  i */\n      dup5\n        /* \"contracts/misc/AgaveOracle.sol\":3312:3321  assets[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_127\n      jumpi\n      invalid\n    tag_127:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/AgaveOracle.sol\":3298:3322  assetsSources[assets[i]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/misc/AgaveOracle.sol\":3298:3357  assetsSources[assets[i]] = IChainlinkAggregator(sources[i]) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/misc/AgaveOracle.sol\":3400:3407  sources */\n      dup2\n        /* \"contracts/misc/AgaveOracle.sol\":3408:3409  i */\n      dup2\n        /* \"contracts/misc/AgaveOracle.sol\":3400:3410  sources[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_128\n      jumpi\n      invalid\n    tag_128:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/AgaveOracle.sol\":3370:3411  AssetSourceUpdated(assets[i], sources[i]) */\n      and\n        /* \"contracts/misc/AgaveOracle.sol\":3389:3395  assets */\n      dup4\n        /* \"contracts/misc/AgaveOracle.sol\":3396:3397  i */\n      dup3\n        /* \"contracts/misc/AgaveOracle.sol\":3389:3398  assets[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_129\n      jumpi\n      invalid\n    tag_129:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/AgaveOracle.sol\":3370:3411  AssetSourceUpdated(assets[i], sources[i]) */\n      and\n      0x22c5b7b2d8561d39f7f210b6b326a1aa69f15311163082308ac4877db6339dc1\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/misc/AgaveOracle.sol\":3285:3288  i++ */\n      0x01\n      add\n        /* \"contracts/misc/AgaveOracle.sol\":3246:3418  for (uint256 i = 0; i < assets.length; i++) {... */\n      jump(tag_123)\n    tag_124:\n      pop\n        /* \"contracts/misc/AgaveOracle.sol\":3077:3422  function _setAssetsSources(address[] memory assets, address[] memory sources) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":2058:2477  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_107:\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":2116:2123  uint256 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":2341:2347  a == 0 */\n      dup3\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":2337:2372  if (a == 0) {... */\n      tag_131\n      jumpi\n      pop\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":2364:2365  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":2357:2365  return 0 */\n      jump(tag_66)\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":2337:2372  if (a == 0) {... */\n    tag_131:\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":2390:2395  a * b */\n      dup3\n      dup3\n      mul\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":2394:2395  b */\n      dup3\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":2390:2391  a */\n      dup5\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":2390:2395  a * b */\n      dup3\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":2390:2391  a */\n      dup2\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":2409:2414  c / a */\n      tag_132\n      jumpi\n      invalid\n    tag_132:\n      div\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":2409:2419  c / a == b */\n      eq\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":2401:2457  require(c / a == b, 'SafeMath: multiplication overflow') */\n      tag_133\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":2471:2472  c */\n      swap4\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":2058:2477  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":2908:3032  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_108:\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":2966:2973  uint256 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":2988:3027  div(a, b, 'SafeMath: division by zero') */\n      tag_133\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":2992:2993  a */\n      dup4\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":2995:2996  b */\n      dup4\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":2988:3027  div(a, b, 'SafeMath: division by zero') */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":3585:3592  uint256 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":3677:3689  errorMessage */\n      dup2\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":3670:3675  b > 0 */\n      dup4\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":3662:3690  require(b > 0, errorMessage) */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_139:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_141\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_139)\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_142\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_142:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n      pop\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":3696:3705  uint256 c */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":3712:3713  b */\n      dup4\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":3708:3709  a */\n      dup6\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":3708:3713  a / b */\n      dup2\n      tag_143\n      jumpi\n      invalid\n    tag_143:\n      div\n      swap6\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":3483:3815  function div(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe 4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n\n    auxdata: 0xa264697066735822122015f7838097d18efdab75c779d2d116b75b8e2abdab0f8ca7c42805c7ab43226664736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60c06040523480156200001157600080fd5b506040516200120938038062001209833981810160405260808110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82518660208202830111640100000000821117156200008c57600080fd5b82525081516020918201928201910280838360005b83811015620000bb578181015183820152602001620000a1565b5050505090500160405260200180516040519392919084640100000000821115620000e557600080fd5b908301906020820185811115620000fb57600080fd5b82518660208202830111640100000000821117156200011957600080fd5b82525081516020918201928201910280838360005b83811015620001485781810151838201526020016200012e565b5050505091909101604090815260208301519201519193509091506000905062000171620002bd565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350620001c682620002c1565b620001d284846200030b565b806001600160a01b03166080816001600160a01b031660601b81525050806001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156200022957600080fd5b505afa1580156200023e573d6000803e3d6000fd5b505050506040513d60208110156200025557600080fd5b505160f81b7fff000000000000000000000000000000000000000000000000000000000000001660a0526040516001600160a01b038216907f141c8827a0e1bf1f8e0a0f1d0b4fce811fd3b387abb10419267afc2b7458377690600090a25050505062000457565b3390565b600280546001600160a01b0319166001600160a01b0383169081179091556040517fce7a780d33665b1ea097af5f155e3821b809ecbaa839d3b33aa83ba28168cefb90600090a250565b805182511462000362576040805162461bcd60e51b815260206004820152601a60248201527f494e434f4e53495354454e545f504152414d535f4c454e475448000000000000604482015290519081900360640190fd5b60005b825181101562000452578181815181106200037c57fe5b6020026020010151600160008584815181106200039557fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550818181518110620003ee57fe5b60200260200101516001600160a01b03168382815181106200040c57fe5b60200260200101516001600160a01b03167f22c5b7b2d8561d39f7f210b6b326a1aa69f15311163082308ac4877db6339dc160405160405180910390a360010162000365565b505050565b60805160601c60a05160f81c610d83620004866000398061083a5250806105d952806108fa5250610d836000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80639d23d9f2116100665780639d23d9f214610125578063abfd5310146101e5578063b3596f07146102a7578063eb6d3a11146102df578063f2fde38b146102e75761009e565b8063170aee73146100a35780636210308c146100cb578063715018a6146100ef5780638da5cb5b146100f757806392bf2be0146100ff575b600080fd5b6100c9600480360360208110156100b957600080fd5b50356001600160a01b031661030d565b005b6100d3610371565b604080516001600160a01b039092168252519081900360200190f35b6100c9610380565b6100d3610422565b6100d36004803603602081101561011557600080fd5b50356001600160a01b0316610431565b6101956004803603602081101561013b57600080fd5b81019060208101813564010000000081111561015657600080fd5b82018360208201111561016857600080fd5b8035906020019184602083028401116401000000008311171561018a57600080fd5b509092509050610452565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156101d15781810151838201526020016101b9565b505050509050019250505060405180910390f35b6100c9600480360360408110156101fb57600080fd5b81019060208101813564010000000081111561021657600080fd5b82018360208201111561022857600080fd5b8035906020019184602083028401116401000000008311171561024a57600080fd5b91939092909160208101903564010000000081111561026857600080fd5b82018360208201111561027a57600080fd5b8035906020019184602083028401116401000000008311171561029c57600080fd5b5090925090506104f1565b6102cd600480360360208110156102bd57600080fd5b50356001600160a01b03166105bc565b60408051918252519081900360200190f35b6100d36108f8565b6100c9600480360360208110156102fd57600080fd5b50356001600160a01b031661091c565b610315610a14565b6000546001600160a01b03908116911614610365576040805162461bcd60e51b81526020600482018190526024820152600080516020610d2e833981519152604482015290519081900360640190fd5b61036e81610a18565b50565b6002546001600160a01b031690565b610388610a14565b6000546001600160a01b039081169116146103d8576040805162461bcd60e51b81526020600482018190526024820152600080516020610d2e833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6001600160a01b03808216600090815260016020526040902054165b919050565b6060808267ffffffffffffffff8111801561046c57600080fd5b50604051908082528060200260200182016040528015610496578160200160208202803683370190505b50905060005b838110156104e7576104c88585838181106104b357fe5b905060200201356001600160a01b03166105bc565b8282815181106104d457fe5b602090810291909101015260010161049c565b5090505b92915050565b6104f9610a14565b6000546001600160a01b03908116911614610549576040805162461bcd60e51b81526020600482018190526024820152600080516020610d2e833981519152604482015290519081900360640190fd5b6105b684848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808802828101820190935287825290935087925086918291850190849080828437600092019190915250610a6292505050565b50505050565b6001600160a01b03808216600081815260016020526040808220547f0000000000000000000000000000000000000000000000000000000000000000851680845291832054929490811693921691141561062257670de0b6b3a76400009250505061044d565b6001600160a01b038216158061063f57506001600160a01b038116155b156106c7576002546040805163b3596f0760e01b81526001600160a01b0387811660048301529151919092169163b3596f07916024808301926020929190829003018186803b15801561069157600080fd5b505afa1580156106a5573d6000803e3d6000fd5b505050506040513d60208110156106bb57600080fd5b5051925061044d915050565b6000816001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561070257600080fd5b505afa158015610716573d6000803e3d6000fd5b505050506040513d602081101561072c57600080fd5b50519050600081136107bc576002546040805163b3596f0760e01b81526001600160a01b0388811660048301529151919092169163b3596f07916024808301926020929190829003018186803b15801561078557600080fd5b505afa158015610799573d6000803e3d6000fd5b505050506040513d60208110156107af57600080fd5b5051935061044d92505050565b6000836001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156107f757600080fd5b505afa15801561080b573d6000803e3d6000fd5b505050506040513d602081101561082157600080fd5b50519050600081131561087357610868826108628360ff7f000000000000000000000000000000000000000000000000000000000000000016600a0a610ba7565b90610c07565b94505050505061044d565b6002546040805163b3596f0760e01b81526001600160a01b0389811660048301529151919092169163b3596f07916024808301926020929190829003018186803b1580156108c057600080fd5b505afa1580156108d4573d6000803e3d6000fd5b505050506040513d60208110156108ea57600080fd5b5051945061044d9350505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b610924610a14565b6000546001600160a01b03908116911614610974576040805162461bcd60e51b81526020600482018190526024820152600080516020610d2e833981519152604482015290519081900360640190fd5b6001600160a01b0381166109b95760405162461bcd60e51b8152600401808060200182810382526026815260200180610ce76026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b600280546001600160a01b0319166001600160a01b0383169081179091556040517fce7a780d33665b1ea097af5f155e3821b809ecbaa839d3b33aa83ba28168cefb90600090a250565b8051825114610ab8576040805162461bcd60e51b815260206004820152601a60248201527f494e434f4e53495354454e545f504152414d535f4c454e475448000000000000604482015290519081900360640190fd5b60005b8251811015610ba257818181518110610ad057fe5b602002602001015160016000858481518110610ae857fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550818181518110610b4057fe5b60200260200101516001600160a01b0316838281518110610b5d57fe5b60200260200101516001600160a01b03167f22c5b7b2d8561d39f7f210b6b326a1aa69f15311163082308ac4877db6339dc160405160405180910390a3600101610abb565b505050565b600082610bb6575060006104eb565b82820282848281610bc357fe5b0414610c005760405162461bcd60e51b8152600401808060200182810382526021815260200180610d0d6021913960400191505060405180910390fd5b9392505050565b6000610c0083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060008183610cd05760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c95578181015183820152602001610c7d565b50505050905090810190601f168015610cc25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610cdc57fe5b049594505050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a264697066735822122015f7838097d18efdab75c779d2d116b75b8e2abdab0f8ca7c42805c7ab43226664736f6c634300060c0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1209 CODESIZE SUB DUP1 PUSH3 0x1209 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xBB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xA1 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0xE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x148 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x12E JUMP JUMPDEST POP POP POP POP SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD SWAP3 ADD MLOAD SWAP2 SWAP4 POP SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 POP PUSH3 0x171 PUSH3 0x2BD JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH3 0x1C6 DUP3 PUSH3 0x2C1 JUMP JUMPDEST PUSH3 0x1D2 DUP5 DUP5 PUSH3 0x30B JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x23E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xF8 SHL PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 AND PUSH1 0xA0 MSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x141C8827A0E1BF1F8E0A0F1D0B4FCE811FD3B387ABB10419267AFC2B74583776 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP POP PUSH3 0x457 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE7A780D33665B1EA097AF5F155E3821B809ECBAA839D3B33AA83BA28168CEFB SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH3 0x362 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E434F4E53495354454E545F504152414D535F4C454E475448000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH3 0x452 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH3 0x37C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x395 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH3 0x3EE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x40C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x22C5B7B2D8561D39F7F210B6B326A1AA69F15311163082308AC4877DB6339DC1 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 ADD PUSH3 0x365 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0xF8 SHR PUSH2 0xD83 PUSH3 0x486 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x83A MSTORE POP DUP1 PUSH2 0x5D9 MSTORE DUP1 PUSH2 0x8FA MSTORE POP PUSH2 0xD83 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9D23D9F2 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9D23D9F2 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0xABFD5310 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xB3596F07 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xEB6D3A11 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2E7 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x170AEE73 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x6210308C EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x92BF2BE0 EQ PUSH2 0xFF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x30D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD3 PUSH2 0x371 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH2 0x380 JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x422 JUMP JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x431 JUMP JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x452 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B9 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x4F1 JUMP JUMPDEST PUSH2 0x2CD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xD3 PUSH2 0x8F8 JUMP JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x91C JUMP JUMPDEST PUSH2 0x315 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x365 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD2E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x36E DUP2 PUSH2 0xA18 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x388 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x3D8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD2E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x496 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4E7 JUMPI PUSH2 0x4C8 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x4B3 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5BC JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4D4 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x49C JUMP JUMPDEST POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4F9 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x549 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD2E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x5B6 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP9 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP8 DUP3 MSTORE SWAP1 SWAP4 POP DUP8 SWAP3 POP DUP7 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0xA62 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH32 0x0 DUP6 AND DUP1 DUP5 MSTORE SWAP2 DUP4 KECCAK256 SLOAD SWAP3 SWAP5 SWAP1 DUP2 AND SWAP4 SWAP3 AND SWAP2 EQ ISZERO PUSH2 0x622 JUMPI PUSH8 0xDE0B6B3A7640000 SWAP3 POP POP POP PUSH2 0x44D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 PUSH2 0x63F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO JUMPDEST ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xB3596F07 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x691 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 POP PUSH2 0x44D SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x50D25BCD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x716 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x72C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0x7BC JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xB3596F07 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x799 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP PUSH2 0x44D SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x50D25BCD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x80B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x821 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 DUP2 SGT ISZERO PUSH2 0x873 JUMPI PUSH2 0x868 DUP3 PUSH2 0x862 DUP4 PUSH1 0xFF PUSH32 0x0 AND PUSH1 0xA EXP PUSH2 0xBA7 JUMP JUMPDEST SWAP1 PUSH2 0xC07 JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x44D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xB3596F07 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP5 POP PUSH2 0x44D SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x924 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x974 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD2E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xCE7 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE7A780D33665B1EA097AF5F155E3821B809ECBAA839D3B33AA83BA28168CEFB SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xAB8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E434F4E53495354454E545F504152414D535F4C454E475448000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xBA2 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xAD0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xAE8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xB40 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB5D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x22C5B7B2D8561D39F7F210B6B326A1AA69F15311163082308AC4877DB6339DC1 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 ADD PUSH2 0xABB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xBB6 JUMPI POP PUSH1 0x0 PUSH2 0x4EB JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xBC3 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xC00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD0D PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC00 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x0 DUP2 DUP4 PUSH2 0xCD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC95 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC7D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xCC2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0xCDC JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373536166654D6174683A206D756C746970 PUSH13 0x69636174696F6E206F76657266 PUSH13 0x6F774F776E61626C653A206361 PUSH13 0x6C6572206973206E6F74207468 PUSH6 0x206F776E6572 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xF7 DUP4 DUP1 SWAP8 0xD1 DUP15 REVERT 0xAB PUSH22 0xC779D2D116B75B8E2ABDAB0F8CA7C42805C7AB432266 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1112:4844:9:-:0;;;1895:374;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1895:374:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1895:374:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1895:374:9;;;;;;;;;;;;;;;;;-1:-1:-1;1895:374:9;;-1:-1:-1;844:17:4;;-1:-1:-1;864:12:4;:10;:12::i;:::-;882:6;:18;;-1:-1:-1;;;;;;882:18:4;-1:-1:-1;;;;;882:18:4;;;;;;;911:43;;882:18;;-1:-1:-1;882:18:4;911:43;;882:6;;911:43;-1:-1:-1;2039:34:9;2058:14;2039:18;:34::i;:::-;2079;2097:6;2105:7;2079:17;:34::i;:::-;2135:14;-1:-1:-1;;;;;2119:30:9;;;-1:-1:-1;;;;;2119:30:9;;;;;;;2195:14;-1:-1:-1;;;;;2180:39:9;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2180:41:9;2155:66;;;;;;2232:32;;-1:-1:-1;;;;;2232:32:9;;;;;;;;1895:374;;;;1112:4844;;587:98:1;670:10;587:98;:::o;3546:172:9:-;3613:15;:52;;-1:-1:-1;;;;;;3613:52:9;-1:-1:-1;;;;;3613:52:9;;;;;;;;3676:37;;;;-1:-1:-1;;3676:37:9;3546:172;:::o;3077:345::-;3195:7;:14;3178:6;:13;:31;3170:70;;;;;-1:-1:-1;;;3170:70:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;3251:9;3246:172;3270:6;:13;3266:1;:17;3246:172;;;3346:7;3354:1;3346:10;;;;;;;;;;;;;;3298:13;:24;3312:6;3319:1;3312:9;;;;;;;;;;;;;;-1:-1:-1;;;;;3298:24:9;-1:-1:-1;;;;;3298:24:9;;;;;;;;;;;;;:59;;;;;-1:-1:-1;;;;;3298:59:9;;;;;-1:-1:-1;;;;;3298:59:9;;;;;;3400:7;3408:1;3400:10;;;;;;;;;;;;;;-1:-1:-1;;;;;3370:41:9;3389:6;3396:1;3389:9;;;;;;;;;;;;;;-1:-1:-1;;;;;3370:41:9;;;;;;;;;;;3285:3;;3246:172;;;;3077:345;;:::o;1112:4844::-;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {
								"760": [
									{
										"length": 32,
										"start": 1497
									},
									{
										"length": 32,
										"start": 2298
									}
								],
								"762": [
									{
										"length": 32,
										"start": 2106
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061009e5760003560e01c80639d23d9f2116100665780639d23d9f214610125578063abfd5310146101e5578063b3596f07146102a7578063eb6d3a11146102df578063f2fde38b146102e75761009e565b8063170aee73146100a35780636210308c146100cb578063715018a6146100ef5780638da5cb5b146100f757806392bf2be0146100ff575b600080fd5b6100c9600480360360208110156100b957600080fd5b50356001600160a01b031661030d565b005b6100d3610371565b604080516001600160a01b039092168252519081900360200190f35b6100c9610380565b6100d3610422565b6100d36004803603602081101561011557600080fd5b50356001600160a01b0316610431565b6101956004803603602081101561013b57600080fd5b81019060208101813564010000000081111561015657600080fd5b82018360208201111561016857600080fd5b8035906020019184602083028401116401000000008311171561018a57600080fd5b509092509050610452565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156101d15781810151838201526020016101b9565b505050509050019250505060405180910390f35b6100c9600480360360408110156101fb57600080fd5b81019060208101813564010000000081111561021657600080fd5b82018360208201111561022857600080fd5b8035906020019184602083028401116401000000008311171561024a57600080fd5b91939092909160208101903564010000000081111561026857600080fd5b82018360208201111561027a57600080fd5b8035906020019184602083028401116401000000008311171561029c57600080fd5b5090925090506104f1565b6102cd600480360360208110156102bd57600080fd5b50356001600160a01b03166105bc565b60408051918252519081900360200190f35b6100d36108f8565b6100c9600480360360208110156102fd57600080fd5b50356001600160a01b031661091c565b610315610a14565b6000546001600160a01b03908116911614610365576040805162461bcd60e51b81526020600482018190526024820152600080516020610d2e833981519152604482015290519081900360640190fd5b61036e81610a18565b50565b6002546001600160a01b031690565b610388610a14565b6000546001600160a01b039081169116146103d8576040805162461bcd60e51b81526020600482018190526024820152600080516020610d2e833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6001600160a01b03808216600090815260016020526040902054165b919050565b6060808267ffffffffffffffff8111801561046c57600080fd5b50604051908082528060200260200182016040528015610496578160200160208202803683370190505b50905060005b838110156104e7576104c88585838181106104b357fe5b905060200201356001600160a01b03166105bc565b8282815181106104d457fe5b602090810291909101015260010161049c565b5090505b92915050565b6104f9610a14565b6000546001600160a01b03908116911614610549576040805162461bcd60e51b81526020600482018190526024820152600080516020610d2e833981519152604482015290519081900360640190fd5b6105b684848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808802828101820190935287825290935087925086918291850190849080828437600092019190915250610a6292505050565b50505050565b6001600160a01b03808216600081815260016020526040808220547f0000000000000000000000000000000000000000000000000000000000000000851680845291832054929490811693921691141561062257670de0b6b3a76400009250505061044d565b6001600160a01b038216158061063f57506001600160a01b038116155b156106c7576002546040805163b3596f0760e01b81526001600160a01b0387811660048301529151919092169163b3596f07916024808301926020929190829003018186803b15801561069157600080fd5b505afa1580156106a5573d6000803e3d6000fd5b505050506040513d60208110156106bb57600080fd5b5051925061044d915050565b6000816001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561070257600080fd5b505afa158015610716573d6000803e3d6000fd5b505050506040513d602081101561072c57600080fd5b50519050600081136107bc576002546040805163b3596f0760e01b81526001600160a01b0388811660048301529151919092169163b3596f07916024808301926020929190829003018186803b15801561078557600080fd5b505afa158015610799573d6000803e3d6000fd5b505050506040513d60208110156107af57600080fd5b5051935061044d92505050565b6000836001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156107f757600080fd5b505afa15801561080b573d6000803e3d6000fd5b505050506040513d602081101561082157600080fd5b50519050600081131561087357610868826108628360ff7f000000000000000000000000000000000000000000000000000000000000000016600a0a610ba7565b90610c07565b94505050505061044d565b6002546040805163b3596f0760e01b81526001600160a01b0389811660048301529151919092169163b3596f07916024808301926020929190829003018186803b1580156108c057600080fd5b505afa1580156108d4573d6000803e3d6000fd5b505050506040513d60208110156108ea57600080fd5b5051945061044d9350505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b610924610a14565b6000546001600160a01b03908116911614610974576040805162461bcd60e51b81526020600482018190526024820152600080516020610d2e833981519152604482015290519081900360640190fd5b6001600160a01b0381166109b95760405162461bcd60e51b8152600401808060200182810382526026815260200180610ce76026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b600280546001600160a01b0319166001600160a01b0383169081179091556040517fce7a780d33665b1ea097af5f155e3821b809ecbaa839d3b33aa83ba28168cefb90600090a250565b8051825114610ab8576040805162461bcd60e51b815260206004820152601a60248201527f494e434f4e53495354454e545f504152414d535f4c454e475448000000000000604482015290519081900360640190fd5b60005b8251811015610ba257818181518110610ad057fe5b602002602001015160016000858481518110610ae857fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550818181518110610b4057fe5b60200260200101516001600160a01b0316838281518110610b5d57fe5b60200260200101516001600160a01b03167f22c5b7b2d8561d39f7f210b6b326a1aa69f15311163082308ac4877db6339dc160405160405180910390a3600101610abb565b505050565b600082610bb6575060006104eb565b82820282848281610bc357fe5b0414610c005760405162461bcd60e51b8152600401808060200182810382526021815260200180610d0d6021913960400191505060405180910390fd5b9392505050565b6000610c0083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060008183610cd05760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c95578181015183820152602001610c7d565b50505050905090810190601f168015610cc25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610cdc57fe5b049594505050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a264697066735822122015f7838097d18efdab75c779d2d116b75b8e2abdab0f8ca7c42805c7ab43226664736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9D23D9F2 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9D23D9F2 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0xABFD5310 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xB3596F07 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xEB6D3A11 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2E7 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x170AEE73 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x6210308C EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x92BF2BE0 EQ PUSH2 0xFF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x30D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD3 PUSH2 0x371 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH2 0x380 JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x422 JUMP JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x431 JUMP JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x452 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B9 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x4F1 JUMP JUMPDEST PUSH2 0x2CD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xD3 PUSH2 0x8F8 JUMP JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x91C JUMP JUMPDEST PUSH2 0x315 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x365 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD2E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x36E DUP2 PUSH2 0xA18 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x388 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x3D8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD2E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x496 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4E7 JUMPI PUSH2 0x4C8 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x4B3 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5BC JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4D4 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x49C JUMP JUMPDEST POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4F9 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x549 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD2E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x5B6 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP9 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP8 DUP3 MSTORE SWAP1 SWAP4 POP DUP8 SWAP3 POP DUP7 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0xA62 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH32 0x0 DUP6 AND DUP1 DUP5 MSTORE SWAP2 DUP4 KECCAK256 SLOAD SWAP3 SWAP5 SWAP1 DUP2 AND SWAP4 SWAP3 AND SWAP2 EQ ISZERO PUSH2 0x622 JUMPI PUSH8 0xDE0B6B3A7640000 SWAP3 POP POP POP PUSH2 0x44D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 PUSH2 0x63F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO JUMPDEST ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xB3596F07 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x691 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 POP PUSH2 0x44D SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x50D25BCD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x716 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x72C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0x7BC JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xB3596F07 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x799 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP PUSH2 0x44D SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x50D25BCD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x80B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x821 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 DUP2 SGT ISZERO PUSH2 0x873 JUMPI PUSH2 0x868 DUP3 PUSH2 0x862 DUP4 PUSH1 0xFF PUSH32 0x0 AND PUSH1 0xA EXP PUSH2 0xBA7 JUMP JUMPDEST SWAP1 PUSH2 0xC07 JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x44D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xB3596F07 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP5 POP PUSH2 0x44D SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x924 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x974 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD2E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xCE7 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE7A780D33665B1EA097AF5F155E3821B809ECBAA839D3B33AA83BA28168CEFB SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xAB8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E434F4E53495354454E545F504152414D535F4C454E475448000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xBA2 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xAD0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xAE8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xB40 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB5D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x22C5B7B2D8561D39F7F210B6B326A1AA69F15311163082308AC4877DB6339DC1 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 ADD PUSH2 0xABB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xBB6 JUMPI POP PUSH1 0x0 PUSH2 0x4EB JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xBC3 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xC00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD0D PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC00 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x0 DUP2 DUP4 PUSH2 0xCD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC95 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC7D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xCC2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0xCDC JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373536166654D6174683A206D756C746970 PUSH13 0x69636174696F6E206F76657266 PUSH13 0x6F774F776E61626C653A206361 PUSH13 0x6C6572206973206E6F74207468 PUSH6 0x206F776E6572 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xF7 DUP4 DUP1 SWAP8 0xD1 DUP15 REVERT 0xAB PUSH22 0xC779D2D116B75B8E2ABDAB0F8CA7C42805C7AB432266 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1112:4844:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2783:115;;;;;;;;;;;;;;;;-1:-1:-1;2783:115:9;-1:-1:-1;;;;;2783:115:9;;:::i;:::-;;5851:103;;;:::i;:::-;;;;-1:-1:-1;;;;;5851:103:9;;;;;;;;;;;;;;1610:135:4;;;:::i;1027:71::-;;;:::i;5617:120:9:-;;;;;;;;;;;;;;;;-1:-1:-1;5617:120:9;-1:-1:-1;;;;;5617:120:9;;:::i;5178:277::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5178:277:9;;-1:-1:-1;5178:277:9;-1:-1:-1;5178:277:9;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2480:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2480:154:9;;-1:-1:-1;2480:154:9;-1:-1:-1;2480:154:9;:::i;3804:1253::-;;;;;;;;;;;;;;;;-1:-1:-1;3804:1253:9;-1:-1:-1;;;;;3804:1253:9;;:::i;:::-;;;;;;;;;;;;;;;;1537:38;;;:::i;1884:226:4:-;;;;;;;;;;;;;;;;-1:-1:-1;1884:226:4;-1:-1:-1;;;;;1884:226:4;;:::i;2783:115:9:-;1223:12:4;:10;:12::i;:::-;1213:6;;-1:-1:-1;;;;;1213:6:4;;;:22;;;1205:67;;;;;-1:-1:-1;;;1205:67:4;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1205:67:4;;;;;;;;;;;;;;;2859:34:9::1;2878:14;2859:18;:34::i;:::-;2783:115:::0;:::o;5851:103::-;5933:15;;-1:-1:-1;;;;;5933:15:9;5851:103;:::o;1610:135:4:-;1223:12;:10;:12::i;:::-;1213:6;;-1:-1:-1;;;;;1213:6:4;;;:22;;;1205:67;;;;;-1:-1:-1;;;1205:67:4;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1205:67:4;;;;;;;;;;;;;;;1712:1:::1;1696:6:::0;;1675:40:::1;::::0;-1:-1:-1;;;;;1696:6:4;;::::1;::::0;1675:40:::1;::::0;1712:1;;1675:40:::1;1738:1;1721:19:::0;;-1:-1:-1;;;;;;1721:19:4::1;::::0;;1610:135::o;1027:71::-;1065:7;1087:6;-1:-1:-1;;;;;1087:6:4;1027:71;:::o;5617:120:9:-;-1:-1:-1;;;;;5711:20:9;;;5681:7;5711:20;;;:13;:20;;;;;;;5617:120;;;;:::o;5178:277::-;5253:16;;5317:6;5303:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5303:28:9;;5277:54;;5342:9;5337:95;5357:17;;;5337:95;;;5401:24;5415:6;;5422:1;5415:9;;;;;;;;;;;;;-1:-1:-1;;;;;5415:9:9;5401:13;:24::i;:::-;5389:6;5396:1;5389:9;;;;;;;;;;;;;;;;;:36;5376:3;;5337:95;;;-1:-1:-1;5444:6:9;-1:-1:-1;5178:277:9;;;;;:::o;2480:154::-;1223:12:4;:10;:12::i;:::-;1213:6;;-1:-1:-1;;;;;1213:6:4;;;:22;;;1205:67;;;;;-1:-1:-1;;;1205:67:4;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1205:67:4;;;;;;;;;;;;;;;2595:34:9::1;2613:6;;2595:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;2595:34:9::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;-1:-1:-1;2621:7:9;;-1:-1:-1;2621:7:9;;;;2595:34;::::1;::::0;2621:7;;2595:34;2621:7;2595:34;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;2595:17:9::1;::::0;-1:-1:-1;;;2595:34:9:i:1;:::-;2480:154:::0;;;;:::o;3804:1253::-;-1:-1:-1;;;;;3917:20:9;;;3872:7;3917:20;;;:13;:20;;;;;;;4003:13;3989:28;;;;;;;;;3872:7;;3917:20;;;;3989:28;;;4028:22;4024:1029;;;4139:7;4132:14;;;;;;4024:1029;-1:-1:-1;;;;;4163:29:9;;;;:78;;-1:-1:-1;;;;;;4196:45:9;;;4163:78;4159:894;;;4258:15;;:36;;;-1:-1:-1;;;4258:36:9;;-1:-1:-1;;;;;4258:36:9;;;;;;;;;:15;;;;;:29;;:36;;;;;;;;;;;;;;:15;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4258:36:9;;-1:-1:-1;4251:43:9;;-1:-1:-1;;4251:43:9;4159:894;4383:28;4414:22;-1:-1:-1;;;;;4414:35:9;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4414:37:9;;-1:-1:-1;4488:1:9;4463:26;;4459:94;;4508:15;;:36;;;-1:-1:-1;;;4508:36:9;;-1:-1:-1;;;;;4508:36:9;;;;;;;;;:15;;;;;:29;;:36;;;;;;;;;;;;;;:15;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4508:36:9;;-1:-1:-1;4501:43:9;;-1:-1:-1;;;4501:43:9;4459:94;4561:12;4597:6;-1:-1:-1;;;;;4576:41:9;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4576:43:9;;-1:-1:-1;4639:1:9;4631:9;;4627:420;;;4879:91;4947:21;4879:55;4887:5;4898:35;4911:22;4898:35;4906:2;4898:35;4879:18;:55::i;:::-;:59;;:91::i;:::-;4872:98;;;;;;;;4627:420;5002:15;;:36;;;-1:-1:-1;;;5002:36:9;;-1:-1:-1;;;;;5002:36:9;;;;;;;;;:15;;;;;:29;;:36;;;;;;;;;;;;;;:15;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5002:36:9;;-1:-1:-1;4995:43:9;;-1:-1:-1;;;;4995:43:9;1537:38;;;:::o;1884:226:4:-;1223:12;:10;:12::i;:::-;1213:6;;-1:-1:-1;;;;;1213:6:4;;;:22;;;1205:67;;;;;-1:-1:-1;;;1205:67:4;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1205:67:4;;;;;;;;;;;;;;;-1:-1:-1;;;;;1968:22:4;::::1;1960:73;;;;-1:-1:-1::0;;;1960:73:4::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2065:6;::::0;;2044:38:::1;::::0;-1:-1:-1;;;;;2044:38:4;;::::1;::::0;2065:6;::::1;::::0;2044:38:::1;::::0;::::1;2088:6;:17:::0;;-1:-1:-1;;;;;;2088:17:4::1;-1:-1:-1::0;;;;;2088:17:4;;;::::1;::::0;;;::::1;::::0;;1884:226::o;587:98:1:-;670:10;587:98;:::o;3546:172:9:-;3613:15;:52;;-1:-1:-1;;;;;;3613:52:9;-1:-1:-1;;;;;3613:52:9;;;;;;;;3676:37;;;;-1:-1:-1;;3676:37:9;3546:172;:::o;3077:345::-;3195:7;:14;3178:6;:13;:31;3170:70;;;;;-1:-1:-1;;;3170:70:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;3251:9;3246:172;3270:6;:13;3266:1;:17;3246:172;;;3346:7;3354:1;3346:10;;;;;;;;;;;;;;3298:13;:24;3312:6;3319:1;3312:9;;;;;;;;;;;;;;-1:-1:-1;;;;;3298:24:9;-1:-1:-1;;;;;3298:24:9;;;;;;;;;;;;;:59;;;;;-1:-1:-1;;;;;3298:59:9;;;;;-1:-1:-1;;;;;3298:59:9;;;;;;3400:7;3408:1;3400:10;;;;;;;;;;;;;;-1:-1:-1;;;;;3370:41:9;3389:6;3396:1;3389:9;;;;;;;;;;;;;;-1:-1:-1;;;;;3370:41:9;;;;;;;;;;;3285:3;;3246:172;;;;3077:345;;:::o;2058:419:6:-;2116:7;2341:6;2337:35;;-1:-1:-1;2364:1:6;2357:8;;2337:35;2390:5;;;2394:1;2390;:5;:1;2409:5;;;;;:10;2401:56;;;;-1:-1:-1;;;2401:56:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:1;2058:419;-1:-1:-1;;;2058:419:6:o;2908:124::-;2966:7;2988:39;2992:1;2995;2988:39;;;;;;;;;;;;;;;;;3585:7;3677:12;3670:5;3662:28;;;;-1:-1:-1;;;3662:28:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3696:9;3712:1;3708;:5;;;;;;;3483:332;-1:-1:-1;;;;;3483:332:6:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "691800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getAssetPrice(address)": "infinite",
								"getAssetsPrices(address[])": "infinite",
								"getFallbackOracle()": "1060",
								"getSourceOfAsset(address)": "1267",
								"owner()": "1104",
								"renounceOwnership()": "infinite",
								"setAssetSources(address[],address[])": "infinite",
								"setFallbackOracle(address)": "infinite",
								"transferOwnership(address)": "infinite",
								"wrappedNative()": "infinite"
							},
							"internal": {
								"_setAssetsSources(address[] memory,address[] memory)": "infinite",
								"_setFallbackOracle(address)": "22026"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1112,
									"end": 5956,
									"name": "PUSH",
									"source": 9,
									"value": "C0"
								},
								{
									"begin": 1112,
									"end": 5956,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1112,
									"end": 5956,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "100000000"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "tag",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "100000000"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "tag",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "tag",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "tag",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "100000000"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "100000000"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 844,
									"end": 861,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 844,
									"end": 861,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 864,
									"end": 876,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 864,
									"end": 874,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 864,
									"end": 876,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 864,
									"end": 876,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 864,
									"end": 876,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 882,
									"end": 888,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 900,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 882,
									"end": 900,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 882,
									"end": 900,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 882,
									"end": 900,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 882,
									"end": 900,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 882,
									"end": 900,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 882,
									"end": 900,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 882,
									"end": 900,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 882,
									"end": 900,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 882,
									"end": 900,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 911,
									"end": 954,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 911,
									"end": 954,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 882,
									"end": 900,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 882,
									"end": 900,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 882,
									"end": 900,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 911,
									"end": 954,
									"name": "PUSH",
									"source": 4,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 911,
									"end": 954,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 882,
									"end": 888,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 882,
									"end": 888,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 911,
									"end": 954,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2039,
									"end": 2073,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 2058,
									"end": 2072,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2039,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 2039,
									"end": 2073,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2039,
									"end": 2073,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 2039,
									"end": 2073,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2079,
									"end": 2113,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 2097,
									"end": 2103,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2105,
									"end": 2112,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2079,
									"end": 2096,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2079,
									"end": 2113,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2079,
									"end": 2113,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 2079,
									"end": 2113,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2135,
									"end": 2149,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2119,
									"end": 2149,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2119,
									"end": 2149,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 2119,
									"end": 2149,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2119,
									"end": 2149,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2119,
									"end": 2149,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 2119,
									"end": 2149,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2119,
									"end": 2149,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2119,
									"end": 2149,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2119,
									"end": 2149,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2119,
									"end": 2149,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2195,
									"end": 2209,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2180,
									"end": 2219,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2219,
									"name": "PUSH",
									"source": 9,
									"value": "313CE567"
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFF"
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "EXTCODESIZE",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "GAS",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "STATICCALL",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "RETURNDATACOPY",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2180,
									"end": 2221,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2155,
									"end": 2221,
									"name": "PUSH",
									"source": 9,
									"value": "F8"
								},
								{
									"begin": 2155,
									"end": 2221,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2155,
									"end": 2221,
									"name": "PUSH",
									"source": 9,
									"value": "FF00000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2155,
									"end": 2221,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2155,
									"end": 2221,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 2155,
									"end": 2221,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2232,
									"end": 2264,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2232,
									"end": 2264,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2232,
									"end": 2264,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2232,
									"end": 2264,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2232,
									"end": 2264,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2232,
									"end": 2264,
									"name": "PUSH",
									"source": 9,
									"value": "141C8827A0E1BF1F8E0A0F1D0B4FCE811FD3B387ABB10419267AFC2B74583776"
								},
								{
									"begin": 2232,
									"end": 2264,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2232,
									"end": 2264,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2264,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2232,
									"end": 2264,
									"name": "LOG2",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 2269,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1112,
									"end": 5956,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1112,
									"end": 5956,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 587,
									"end": 685,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 587,
									"end": 685,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 670,
									"end": 680,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 587,
									"end": 685,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 587,
									"end": 685,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 3546,
									"end": 3718,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 3546,
									"end": 3718,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3613,
									"end": 3628,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3613,
									"end": 3665,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3613,
									"end": 3665,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3613,
									"end": 3665,
									"name": "AND",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3613,
									"end": 3665,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3613,
									"end": 3665,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3613,
									"end": 3665,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3613,
									"end": 3665,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3613,
									"end": 3665,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3613,
									"end": 3665,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3613,
									"end": 3665,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3613,
									"end": 3665,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3676,
									"end": 3713,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3676,
									"end": 3713,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3676,
									"end": 3713,
									"name": "PUSH",
									"source": 9,
									"value": "CE7A780D33665B1EA097AF5F155E3821B809ECBAA839D3B33AA83BA28168CEFB"
								},
								{
									"begin": 3676,
									"end": 3713,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 3676,
									"end": 3713,
									"name": "LOG2",
									"source": 9
								},
								{
									"begin": 3546,
									"end": 3718,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3546,
									"end": 3718,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 3077,
									"end": 3422,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3077,
									"end": 3422,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3195,
									"end": 3202,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3195,
									"end": 3209,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3178,
									"end": 3184,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3178,
									"end": 3191,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3178,
									"end": 3209,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "PUSH",
									"source": 9,
									"value": "1A"
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "PUSH",
									"source": 9,
									"value": "494E434F4E53495354454E545F504152414D535F4C454E475448000000000000"
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 3170,
									"end": 3240,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3251,
									"end": 3260,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3246,
									"end": 3418,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 3246,
									"end": 3418,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3270,
									"end": 3276,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3270,
									"end": 3283,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3266,
									"end": 3267,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3266,
									"end": 3283,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3246,
									"end": 3418,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3246,
									"end": 3418,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 3246,
									"end": 3418,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3346,
									"end": 3353,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3354,
									"end": 3355,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3346,
									"end": 3356,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3346,
									"end": 3356,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3346,
									"end": 3356,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3346,
									"end": 3356,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3346,
									"end": 3356,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 3346,
									"end": 3356,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3346,
									"end": 3356,
									"name": "INVALID",
									"source": 9
								},
								{
									"begin": 3346,
									"end": 3356,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 3346,
									"end": 3356,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3346,
									"end": 3356,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3346,
									"end": 3356,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 3346,
									"end": 3356,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3346,
									"end": 3356,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3346,
									"end": 3356,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3346,
									"end": 3356,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3311,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3298,
									"end": 3322,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3312,
									"end": 3318,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3319,
									"end": 3320,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3312,
									"end": 3321,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3312,
									"end": 3321,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3312,
									"end": 3321,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3312,
									"end": 3321,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3312,
									"end": 3321,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 3312,
									"end": 3321,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3312,
									"end": 3321,
									"name": "INVALID",
									"source": 9
								},
								{
									"begin": 3312,
									"end": 3321,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 3312,
									"end": 3321,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3312,
									"end": 3321,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3312,
									"end": 3321,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 3312,
									"end": 3321,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3312,
									"end": 3321,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3312,
									"end": 3321,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3312,
									"end": 3321,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3298,
									"end": 3322,
									"name": "AND",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3298,
									"end": 3322,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3322,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3322,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3322,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3298,
									"end": 3322,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3322,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3322,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3322,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3322,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3298,
									"end": 3322,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3322,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3298,
									"end": 3322,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3322,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3298,
									"end": 3357,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 3298,
									"end": 3357,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3357,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3357,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3357,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3298,
									"end": 3357,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3357,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3357,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3357,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3357,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3298,
									"end": 3357,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3357,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3357,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3357,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3357,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3357,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3400,
									"end": 3407,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3408,
									"end": 3409,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3400,
									"end": 3410,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3400,
									"end": 3410,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3400,
									"end": 3410,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3400,
									"end": 3410,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3400,
									"end": 3410,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 3400,
									"end": 3410,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3400,
									"end": 3410,
									"name": "INVALID",
									"source": 9
								},
								{
									"begin": 3400,
									"end": 3410,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 3400,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3400,
									"end": 3410,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3400,
									"end": 3410,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 3400,
									"end": 3410,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3400,
									"end": 3410,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3400,
									"end": 3410,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3400,
									"end": 3410,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3370,
									"end": 3411,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3389,
									"end": 3395,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3396,
									"end": 3397,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3389,
									"end": 3398,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3389,
									"end": 3398,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3389,
									"end": 3398,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3389,
									"end": 3398,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3389,
									"end": 3398,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3389,
									"end": 3398,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3389,
									"end": 3398,
									"name": "INVALID",
									"source": 9
								},
								{
									"begin": 3389,
									"end": 3398,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3389,
									"end": 3398,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3389,
									"end": 3398,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3389,
									"end": 3398,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 3389,
									"end": 3398,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3389,
									"end": 3398,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3389,
									"end": 3398,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3389,
									"end": 3398,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3370,
									"end": 3411,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3370,
									"end": 3411,
									"name": "PUSH",
									"source": 9,
									"value": "22C5B7B2D8561D39F7F210B6B326A1AA69F15311163082308AC4877DB6339DC1"
								},
								{
									"begin": 3370,
									"end": 3411,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3370,
									"end": 3411,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3370,
									"end": 3411,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3370,
									"end": 3411,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3370,
									"end": 3411,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3370,
									"end": 3411,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3370,
									"end": 3411,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3370,
									"end": 3411,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3370,
									"end": 3411,
									"name": "LOG3",
									"source": 9
								},
								{
									"begin": 3285,
									"end": 3288,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3285,
									"end": 3288,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3246,
									"end": 3418,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 3246,
									"end": 3418,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3246,
									"end": 3418,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 3246,
									"end": 3418,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3246,
									"end": 3418,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3077,
									"end": 3422,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3077,
									"end": 3422,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3077,
									"end": 3422,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1112,
									"end": 5956,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1112,
									"end": 5956,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1112,
									"end": 5956,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1112,
									"end": 5956,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1112,
									"end": 5956,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1112,
									"end": 5956,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1112,
									"end": 5956,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 1112,
									"end": 5956,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1112,
									"end": 5956,
									"name": "PUSH",
									"source": 9,
									"value": "F8"
								},
								{
									"begin": 1112,
									"end": 5956,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1112,
									"end": 5956,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1112,
									"end": 5956,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1112,
									"end": 5956,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1112,
									"end": 5956,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1112,
									"end": 5956,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "762"
								},
								{
									"begin": 1112,
									"end": 5956,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "760"
								},
								{
									"begin": 1112,
									"end": 5956,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1112,
									"end": 5956,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1112,
									"end": 5956,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122015f7838097d18efdab75c779d2d116b75b8e2abdab0f8ca7c42805c7ab43226664736f6c634300060c0033",
									".code": [
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH",
											"source": 9,
											"value": "9D23D9F2"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH",
											"source": 9,
											"value": "9D23D9F2"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH",
											"source": 9,
											"value": "ABFD5310"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH",
											"source": 9,
											"value": "B3596F07"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH",
											"source": 9,
											"value": "EB6D3A11"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH",
											"source": 9,
											"value": "170AEE73"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH",
											"source": 9,
											"value": "6210308C"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH",
											"source": 9,
											"value": "92BF2BE0"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 5956,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "PUSH",
											"source": 9,
											"value": "100000000"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "PUSH",
											"source": 9,
											"value": "100000000"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH",
											"source": 9,
											"value": "100000000"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH",
											"source": 9,
											"value": "100000000"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH",
											"source": 9,
											"value": "100000000"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH",
											"source": 9,
											"value": "100000000"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1223,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2859,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 2878,
											"end": 2892,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2859,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 2859,
											"end": 2893,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2859,
											"end": 2893,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 2859,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2898,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5933,
											"end": 5948,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5933,
											"end": 5948,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5933,
											"end": 5948,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5954,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1223,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1713,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 1715,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1675,
											"end": 1715,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 1715,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1675,
											"end": 1715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1713,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1713,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 1715,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 1738,
											"end": 1739,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1721,
											"end": 1740,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1740,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1721,
											"end": 1740,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1740,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1072,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5681,
											"end": 5688,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5711,
											"end": 5724,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5617,
											"end": 5737,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5253,
											"end": 5269,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5253,
											"end": 5269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5317,
											"end": 5323,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5331,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5331,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5331,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5351,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5337,
											"end": 5432,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 5337,
											"end": 5432,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5357,
											"end": 5374,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5357,
											"end": 5374,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5357,
											"end": 5374,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5432,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 5337,
											"end": 5432,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5401,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 5415,
											"end": 5421,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5415,
											"end": 5421,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5415,
											"end": 5424,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5415,
											"end": 5424,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5415,
											"end": 5424,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5415,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 5415,
											"end": 5424,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5415,
											"end": 5424,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 5415,
											"end": 5424,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 5415,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5415,
											"end": 5424,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5415,
											"end": 5424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5415,
											"end": 5424,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5415,
											"end": 5424,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5415,
											"end": 5424,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5415,
											"end": 5424,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5415,
											"end": 5424,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5401,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 5401,
											"end": 5425,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5401,
											"end": 5425,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 5401,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5395,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5389,
											"end": 5425,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5376,
											"end": 5379,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5376,
											"end": 5379,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 5337,
											"end": 5432,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5432,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 5337,
											"end": 5432,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5444,
											"end": 5450,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5455,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1223,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 2613,
											"end": 2619,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2613,
											"end": 2619,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2621,
											"end": 2628,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2621,
											"end": 2628,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2621,
											"end": 2628,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2621,
											"end": 2628,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2621,
											"end": 2628,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2621,
											"end": 2628,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2621,
											"end": 2628,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2621,
											"end": 2628,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2621,
											"end": 2628,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2595,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2595,
											"end": 2612,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 2595,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2634,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 3804,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3917,
											"end": 3937,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3937,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3937,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3872,
											"end": 3879,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3917,
											"end": 3937,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3937,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3937,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3930,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3917,
											"end": 3937,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3917,
											"end": 3937,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3937,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3917,
											"end": 3937,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3937,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3937,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3937,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4003,
											"end": 4016,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "760"
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3872,
											"end": 3879,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3872,
											"end": 3879,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3937,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3937,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3937,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3937,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4028,
											"end": 4050,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 5053,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 4024,
											"end": 5053,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4146,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4132,
											"end": 4146,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 4132,
											"end": 4146,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 5053,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 4024,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4163,
											"end": 4192,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4163,
											"end": 4192,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4163,
											"end": 4192,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4163,
											"end": 4192,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4163,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4163,
											"end": 4241,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4196,
											"end": 4241,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4196,
											"end": 4241,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4196,
											"end": 4241,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4163,
											"end": 4241,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4163,
											"end": 4241,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4159,
											"end": 5053,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4159,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 4159,
											"end": 5053,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4273,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4258,
											"end": 4273,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B3596F07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4273,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4273,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4273,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4273,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4273,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4287,
											"name": "PUSH",
											"source": 9,
											"value": "B3596F07"
										},
										{
											"begin": 4258,
											"end": 4287,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4273,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4294,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4251,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 4251,
											"end": 4294,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4251,
											"end": 4294,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4159,
											"end": 5053,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 4159,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4383,
											"end": 4411,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4436,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4414,
											"end": 4449,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4449,
											"name": "PUSH",
											"source": 9,
											"value": "50D25BCD"
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4451,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4488,
											"end": 4489,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4463,
											"end": 4489,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4463,
											"end": 4489,
											"name": "SGT",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 4459,
											"end": 4553,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4523,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4508,
											"end": 4523,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B3596F07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4523,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4523,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4523,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4523,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4523,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4537,
											"name": "PUSH",
											"source": 9,
											"value": "B3596F07"
										},
										{
											"begin": 4508,
											"end": 4537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4523,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4501,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 4501,
											"end": 4544,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4501,
											"end": 4544,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4553,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 4459,
											"end": 4553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4573,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4597,
											"end": 4603,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4576,
											"end": 4617,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4617,
											"name": "PUSH",
											"source": 9,
											"value": "50D25BCD"
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4619,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4639,
											"end": 4640,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4631,
											"end": 4640,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4631,
											"end": 4640,
											"name": "SGT",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 5047,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 4627,
											"end": 5047,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4879,
											"end": 4970,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 4947,
											"end": 4968,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4879,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 4887,
											"end": 4892,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4898,
											"end": 4933,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4911,
											"end": 4933,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "762"
										},
										{
											"begin": 4898,
											"end": 4933,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4906,
											"end": 4908,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 4898,
											"end": 4933,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4879,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 4879,
											"end": 4934,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4879,
											"end": 4934,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 4879,
											"end": 4934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4879,
											"end": 4938,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4879,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 4879,
											"end": 4970,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4879,
											"end": 4970,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 4879,
											"end": 4970,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4970,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4970,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4970,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4970,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4970,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4970,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4970,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 4872,
											"end": 4970,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 5047,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 4627,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5017,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5002,
											"end": 5017,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B3596F07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5017,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5017,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5017,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5017,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5017,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5031,
											"name": "PUSH",
											"source": 9,
											"value": "B3596F07"
										},
										{
											"begin": 5002,
											"end": 5031,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5017,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4995,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 4995,
											"end": 5038,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4995,
											"end": 5038,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "760"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1223,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1968,
											"end": 1990,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1968,
											"end": 1990,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "PUSH data",
											"source": 4,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2071,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2071,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2071,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2071,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2071,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2071,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 587,
											"end": 685,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 587,
											"end": 685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 670,
											"end": 680,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 587,
											"end": 685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 587,
											"end": 685,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3546,
											"end": 3718,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3546,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3613,
											"end": 3628,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3613,
											"end": 3665,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3613,
											"end": 3665,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3613,
											"end": 3665,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3613,
											"end": 3665,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3613,
											"end": 3665,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3613,
											"end": 3665,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3613,
											"end": 3665,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3613,
											"end": 3665,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3613,
											"end": 3665,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3613,
											"end": 3665,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3613,
											"end": 3665,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3676,
											"end": 3713,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3676,
											"end": 3713,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3676,
											"end": 3713,
											"name": "PUSH",
											"source": 9,
											"value": "CE7A780D33665B1EA097AF5F155E3821B809ECBAA839D3B33AA83BA28168CEFB"
										},
										{
											"begin": 3676,
											"end": 3713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3676,
											"end": 3713,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3718,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3718,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3077,
											"end": 3422,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3077,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3195,
											"end": 3202,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3195,
											"end": 3209,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3184,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3191,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3209,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "PUSH",
											"source": 9,
											"value": "1A"
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "PUSH",
											"source": 9,
											"value": "494E434F4E53495354454E545F504152414D535F4C454E475448000000000000"
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 3170,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3246,
											"end": 3418,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 3246,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3270,
											"end": 3276,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3270,
											"end": 3283,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3266,
											"end": 3267,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3266,
											"end": 3283,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3246,
											"end": 3418,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3246,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 3246,
											"end": 3418,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3353,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3354,
											"end": 3355,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3356,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3356,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3356,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3356,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 3346,
											"end": 3356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3356,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3356,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 3346,
											"end": 3356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3356,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3356,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3356,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3356,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3356,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3356,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3311,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3298,
											"end": 3322,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3318,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3319,
											"end": 3320,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3298,
											"end": 3322,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3298,
											"end": 3322,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3322,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3322,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3322,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3298,
											"end": 3322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3322,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3322,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3322,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3322,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3298,
											"end": 3322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3322,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3298,
											"end": 3322,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3322,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3298,
											"end": 3357,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3298,
											"end": 3357,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3357,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3357,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3357,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3298,
											"end": 3357,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3357,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3357,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3357,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3357,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3298,
											"end": 3357,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3357,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3357,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3357,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3357,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3357,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3409,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3370,
											"end": 3411,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3389,
											"end": 3395,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3396,
											"end": 3397,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3389,
											"end": 3398,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3389,
											"end": 3398,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3389,
											"end": 3398,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3389,
											"end": 3398,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3389,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 3389,
											"end": 3398,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3389,
											"end": 3398,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 3389,
											"end": 3398,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 3389,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3389,
											"end": 3398,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3389,
											"end": 3398,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3389,
											"end": 3398,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3389,
											"end": 3398,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3389,
											"end": 3398,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3389,
											"end": 3398,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3370,
											"end": 3411,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3411,
											"name": "PUSH",
											"source": 9,
											"value": "22C5B7B2D8561D39F7F210B6B326A1AA69F15311163082308AC4877DB6339DC1"
										},
										{
											"begin": 3370,
											"end": 3411,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3370,
											"end": 3411,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3411,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3370,
											"end": 3411,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3411,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3411,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3411,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3411,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 3285,
											"end": 3288,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3285,
											"end": 3288,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3246,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 3246,
											"end": 3418,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3246,
											"end": 3418,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 3246,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3246,
											"end": 3418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3077,
											"end": 3422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3077,
											"end": 3422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3077,
											"end": 3422,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2058,
											"end": 2477,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2058,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2116,
											"end": 2123,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2341,
											"end": 2347,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2337,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2337,
											"end": 2372,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2364,
											"end": 2365,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2357,
											"end": 2365,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2337,
											"end": 2372,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2337,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2395,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2395,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2395,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2395,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2391,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2395,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2391,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2409,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2409,
											"end": 2414,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2409,
											"end": 2414,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 2409,
											"end": 2414,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2409,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2409,
											"end": 2414,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2409,
											"end": 2419,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "PUSH data",
											"source": 6,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2401,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2471,
											"end": 2472,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2058,
											"end": 2477,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2058,
											"end": 2477,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2908,
											"end": 3032,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2908,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 2973,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2988,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2992,
											"end": 2993,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 2996,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3027,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2988,
											"end": 3027,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3027,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3027,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2988,
											"end": 3027,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3027,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2988,
											"end": 3027,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3027,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3027,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 2988,
											"end": 3027,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3027,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3027,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2988,
											"end": 3027,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3027,
											"name": "PUSH",
											"source": 6,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 2988,
											"end": 3027,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3027,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3027,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 3592,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3677,
											"end": 3689,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3670,
											"end": 3675,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3705,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3712,
											"end": 3713,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3709,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3713,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3708,
											"end": 3713,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3713,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3713,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3708,
											"end": 3713,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3713,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3713,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3483,
											"end": 3815,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3483,
											"end": 3815,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572"
									}
								}
							}
						},
						"methodIdentifiers": {
							"getAssetPrice(address)": "b3596f07",
							"getAssetsPrices(address[])": "9d23d9f2",
							"getFallbackOracle()": "6210308c",
							"getSourceOfAsset(address)": "92bf2be0",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setAssetSources(address[],address[])": "abfd5310",
							"setFallbackOracle(address)": "170aee73",
							"transferOwnership(address)": "f2fde38b",
							"wrappedNative()": "eb6d3a11"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"sources\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"fallbackOracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wrappedNative\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"AssetSourceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fallbackOracle\",\"type\":\"address\"}],\"name\":\"FallbackOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wrappedNative\",\"type\":\"address\"}],\"name\":\"WrappedNativeSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"getAssetsPrices\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFallbackOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getSourceOfAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"sources\",\"type\":\"address[]\"}],\"name\":\"setAssetSources\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fallbackOracle\",\"type\":\"address\"}],\"name\":\"setFallbackOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedNative\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"assets\":\"The addresses of the assets\",\"fallbackOracle\":\"The address of the fallback oracle to use if the data of an        aggregator is not consistent\",\"sources\":\"The address of the source of each asset\"}},\"getAssetPrice(address)\":{\"params\":{\"asset\":\"The asset address\"}},\"getAssetsPrices(address[])\":{\"params\":{\"assets\":\"The list of assets addresses\"}},\"getFallbackOracle()\":{\"returns\":{\"_0\":\"address The addres of the fallback oracle\"}},\"getSourceOfAsset(address)\":{\"params\":{\"asset\":\"The address of the asset\"},\"returns\":{\"_0\":\"address The address of the source\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAssetSources(address[],address[])\":{\"params\":{\"assets\":\"The addresses of the assets\",\"sources\":\"The address of the source of each asset\"}},\"setFallbackOracle(address)\":{\"params\":{\"fallbackOracle\":\"The address of the fallbackOracle\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"AgaveOracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":\"Constructor\",\"getAssetPrice(address)\":{\"notice\":\"Gets an asset price by address\"},\"getAssetsPrices(address[])\":{\"notice\":\"Gets a list of prices from a list of assets addresses\"},\"getFallbackOracle()\":{\"notice\":\"Gets the address of the fallback oracle\"},\"getSourceOfAsset(address)\":{\"notice\":\"Gets the address of the source for an asset address\"},\"setAssetSources(address[],address[])\":{\"notice\":\"External function called by the Aave governance to set or replace sources of assets\"},\"setFallbackOracle(address)\":{\"notice\":\"Sets the fallbackOracle - Callable only by the Aave governance\"}},\"notice\":\"Proxy smart contract to get the price of an asset from a price source, with Chainlink Aggregator         smart contracts as primary option - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallbackOracle - Owned by the Agave governance system, allowed to add sources for assets, replace them   and change the fallbackOracle - Modified for Agave deployment by adding free-based asset prices.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/misc/AgaveOracle.sol\":\"AgaveOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"keccak256\":\"0xb7f2cd193efe93976d7b473fc4fa27dda83bd4db5b81889cbcd4701f3b7023ae\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://2275632637acd2f30d576612dcddc1c6ba78d81af4d044fafe870e6a809a8b6e\",\"dweb:/ipfs/QmW3uMzrLbjzP45zVpP8e9V6o8WFSceHiHq8WDMJ8YjCeL\"]},\"contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"keccak256\":\"0xe52c598aa6e76d57665914c1c43fc6fa13bbe3b0bd8e816a6cec1c2bca5014e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a665a54b2277889ba2bdb9c3860b3b71ec7b22757297a03b590a093257604e9d\",\"dweb:/ipfs/QmQ4mm9YnrtvjJwetDec3WoiKeJGoJMCs5kbPBhGVRcZ6N\"]},\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0x6406b04abfeda2c8c80ea3faf797ce4501e66db41fb6ff4e299ebe0402879f44\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://33b0db81db37bd6fe20aa0b23581c6b0edef2f3c49d0bd88b4fe46c1164adb00\",\"dweb:/ipfs/QmYn1zYwt3ahpkLYwHh6h5b1UJrzP2xy5G3at9oEVNw2c1\"]},\"contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol\":{\"keccak256\":\"0x4dade975e9d49dcd7785b30f9e56f80ba9322f3b037a6e39912a32e49a6a817c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://84b4c20094e95699e746ecf1fad83748139fadf844a548a09e4949840fb6232f\",\"dweb:/ipfs/Qme51kM9jqbjEyd7wQ8DNRNRAt5hY7FZHsaRxTP3xvXi5D\"]},\"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":{\"keccak256\":\"0xe89abab730aac141126c194f910969c76f55a29536f2709c71c1c0c4ffce5508\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5667cdfe050014996ee748d1891155cc9a40ec5de28804d8c5e4b6c3a34e727\",\"dweb:/ipfs/QmWcSNdBecjXbiEau8QHSdBFes2HXw59H9hhJNjCww1Y8i\"]},\"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol\":{\"keccak256\":\"0xd664a81c469ebd6c7b09ca8be499e6af30100e3e42be6bfea9f4a90c02a7cb1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9f8ac1ffeaaefc7685abd544813e31ebb46e81b393291d68b1a99a9c7550df2\",\"dweb:/ipfs/QmP3xWkMNgDBbDn9HF6vVKpHTP5rW4j7dxWmhKsxicQ7Mg\"]},\"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":{\"keccak256\":\"0xfca35d11bafb85cf4f2203b41f1a98238dca59b6a9faa28b86ea3f9f63da8ec5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://7019345b024afa93000c6b5a2b095be59c3c5352eb658619c941d23d0af5bc65\",\"dweb:/ipfs/QmZLxJKSbM66Wd1Qd43jSdiXdg7JP6DQ9J6LuANUZummM4\"]},\"contracts/interfaces/IChainlinkAggregator.sol\":{\"keccak256\":\"0x72d140a3a8b2afb440d9c616114dbcf8548c83e18c94c1790db8644b9e3a03da\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://bab8cd78fad962c6cf89d4226bb4fcf4ab088744245bc55f7a44d6151fc704e4\",\"dweb:/ipfs/QmeUBFNGxFspCHugoKv6mjPCjayujUD2P5ZoY2ev15ctZd\"]},\"contracts/interfaces/IPriceOracleGetter.sol\":{\"keccak256\":\"0xf81a1742c6cac8d98baeb7d6003cedc97eed9c362bc0156aa00033d04e673f3e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://74eeb88f24e2375b5106b0e54987b564f2f9b7c753e8675997e326a29cdce154\",\"dweb:/ipfs/QmV2TScQgnSDZV5W2WCtQUD3Yk3tmZE7XcW37FAz9sXvUe\"]},\"contracts/misc/AgaveOracle.sol\":{\"keccak256\":\"0xc54846f104f997e3d601725d7eec656fd082a420e1ab9891b2e1e80af982310a\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://784a50e6dfb9d6ac7c02535cba17e915e501c6076917a45048a37e76f856109d\",\"dweb:/ipfs/QmSYqepzU8N5yVdV4c9ddYAxDDrqgjiS4tmXJeqef159WF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 194,
								"contract": "contracts/misc/AgaveOracle.sol:AgaveOracle",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 756,
								"contract": "contracts/misc/AgaveOracle.sol:AgaveOracle",
								"label": "assetsSources",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_contract(IChainlinkAggregator)699)"
							},
							{
								"astId": 758,
								"contract": "contracts/misc/AgaveOracle.sol:AgaveOracle",
								"label": "_fallbackOracle",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IPriceOracleGetter)711"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IChainlinkAggregator)699": {
								"encoding": "inplace",
								"label": "contract IChainlinkAggregator",
								"numberOfBytes": "20"
							},
							"t_contract(IPriceOracleGetter)711": {
								"encoding": "inplace",
								"label": "contract IPriceOracleGetter",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_contract(IChainlinkAggregator)699)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => contract IChainlinkAggregator)",
								"numberOfBytes": "32",
								"value": "t_contract(IChainlinkAggregator)699"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": "Constructor",
							"getAssetPrice(address)": {
								"notice": "Gets an asset price by address"
							},
							"getAssetsPrices(address[])": {
								"notice": "Gets a list of prices from a list of assets addresses"
							},
							"getFallbackOracle()": {
								"notice": "Gets the address of the fallback oracle"
							},
							"getSourceOfAsset(address)": {
								"notice": "Gets the address of the source for an asset address"
							},
							"setAssetSources(address[],address[])": {
								"notice": "External function called by the Aave governance to set or replace sources of assets"
							},
							"setFallbackOracle(address)": {
								"notice": "Sets the fallbackOracle - Callable only by the Aave governance"
							}
						},
						"notice": "Proxy smart contract to get the price of an asset from a price source, with Chainlink Aggregator         smart contracts as primary option - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallbackOracle - Owned by the Agave governance system, allowed to add sources for assets, replace them   and change the fallbackOracle - Modified for Agave deployment by adding free-based asset prices.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/dependencies/openzeppelin/contracts/Address.sol": {
				"ast": {
					"absolutePath": "contracts/dependencies/openzeppelin/contracts/Address.sol",
					"exportedSymbols": {
						"Address": [
							63
						]
					},
					"id": 64,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "62:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 63,
							"linearizedBaseContracts": [
								63
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "752:520:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "codehash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 27,
														"src": "988:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 10,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "988:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 12,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "988:16:0"
											},
											{
												"assignments": [
													14
												],
												"declarations": [
													{
														"constant": false,
														"id": 14,
														"mutability": "mutable",
														"name": "accountHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 27,
														"src": "1010:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 13,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1010:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 16,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1032:66:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1010:88:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1165:46:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1173:32:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1197:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodehash",
																	"nodeType": "YulIdentifier",
																	"src": "1185:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1185:20:0"
															},
															"variableNames": [
																{
																	"name": "codehash",
																	"nodeType": "YulIdentifier",
																	"src": "1173:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1197:7:0",
														"valueSize": 1
													},
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "1173:8:0",
														"valueSize": 1
													}
												],
												"id": 17,
												"nodeType": "InlineAssembly",
												"src": "1156:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 18,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1224:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 19,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "1236:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1224:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 21,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1251:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "307830",
																	"id": 22,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1263:3:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "1251:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1224:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 25,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1223:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 26,
												"nodeType": "Return",
												"src": "1216:51:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "150:533:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "706:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "705:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "746:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "746:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "745:6:0"
									},
									"scope": 63,
									"src": "686:586:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2226:300:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 39,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2248:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$63",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$63",
																				"typeString": "library Address"
																			}
																		],
																		"id": 38,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2240:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 37,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2240:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 40,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2240:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2240:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 42,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "2265:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2240:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2273:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 36,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2232:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2232:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "2232:73:0"
											},
											{
												"assignments": [
													48,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 48,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 61,
														"src": "2386:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 47,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2386:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 55,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2434:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 49,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "2404:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2404:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 51,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "2426:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2404:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2404:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2385:52:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 57,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "2451:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2460:60:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2443:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2443:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "2443:78:0"
											}
										]
									},
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "1276:876:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 62,
												"src": "2174:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2174:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 62,
												"src": "2201:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2201:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2173:43:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2226:0:0"
									},
									"scope": 63,
									"src": "2155:371:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 64,
							"src": "130:2398:0"
						}
					],
					"src": "37:2492:0"
				},
				"id": 0
			},
			"contracts/dependencies/openzeppelin/contracts/Context.sol": {
				"ast": {
					"absolutePath": "contracts/dependencies/openzeppelin/contracts/Context.sol",
					"exportedSymbols": {
						"Context": [
							86
						]
					},
					"id": 87,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 65,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 86,
							"linearizedBaseContracts": [
								86
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "657:28:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 70,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "670:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "670:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 69,
												"id": 72,
												"nodeType": "Return",
												"src": "663:17:1"
											}
										]
									},
									"documentation": null,
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "606:2:1"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "640:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "639:17:1"
									},
									"scope": 86,
									"src": "587:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "754:155:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 79,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "760:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$86",
														"typeString": "contract Context"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "760:4:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 81,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "896:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "896:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 78,
												"id": 83,
												"nodeType": "Return",
												"src": "889:15:1"
											}
										]
									},
									"documentation": null,
									"id": 85,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:1"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 85,
												"src": "740:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 76,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "740:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "739:14:1"
									},
									"scope": 86,
									"src": "689:220:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 87,
							"src": "557:354:1"
						}
					],
					"src": "32:880:1"
				},
				"id": 1
			},
			"contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/dependencies/openzeppelin/contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							164
						]
					},
					"id": 165,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 88,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 89,
								"nodeType": "StructuredDocumentation",
								"src": "62:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 164,
							"linearizedBaseContracts": [
								164
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "154:62:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 95,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "239:2:2"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 95,
												"src": "265:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "264:9:2"
									},
									"scope": 164,
									"src": "219:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "278:68:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 103,
												"src": "368:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "367:17:2"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 103,
												"src": "408:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "408:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "407:9:2"
									},
									"scope": 164,
									"src": "349:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "421:197:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 113,
												"src": "639:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 113,
												"src": "658:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "638:35:2"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 113,
												"src": "692:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "692:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "691:6:2"
									},
									"scope": 164,
									"src": "621:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "702:252:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 123,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 123,
												"src": "976:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 123,
												"src": "991:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "975:32:2"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 123,
												"src": "1031:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1030:9:2"
									},
									"scope": 164,
									"src": "957:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "1044:616:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 133,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 133,
												"src": "1680:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 133,
												"src": "1697:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1697:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1679:33:2"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 133,
												"src": "1731:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 130,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1731:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1730:6:2"
									},
									"scope": 164,
									"src": "1663:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "1741:280:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 145,
												"src": "2051:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2051:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 145,
												"src": "2071:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2071:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 145,
												"src": "2094:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2045:67:2"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 145,
												"src": "2131:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2131:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2130:6:2"
									},
									"scope": 164,
									"src": "2024:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "2141:148:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 154,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 154,
												"src": "2307:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2307:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 154,
												"src": "2329:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2329:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 154,
												"src": "2349:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2349:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2306:57:2"
									},
									"src": "2292:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "2368:142:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 163,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 163,
												"src": "2528:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2528:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 163,
												"src": "2551:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 163,
												"src": "2576:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2527:63:2"
									},
									"src": "2513:78:2"
								}
							],
							"scope": 165,
							"src": "133:2460:2"
						}
					],
					"src": "37:2557:2"
				},
				"id": 2
			},
			"contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol": {
				"ast": {
					"absolutePath": "contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol",
					"exportedSymbols": {
						"IERC20Detailed": [
							186
						]
					},
					"id": 187,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 166,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:3"
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 168,
							"nodeType": "ImportDirective",
							"scope": 187,
							"sourceUnit": 165,
							"src": "62:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 167,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "70:6:3",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 169,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 164,
										"src": "128:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$164",
											"typeString": "contract IERC20"
										}
									},
									"id": 170,
									"nodeType": "InheritanceSpecifier",
									"src": "128:6:3"
								}
							],
							"contractDependencies": [
								164
							],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 186,
							"linearizedBaseContracts": [
								186,
								164
							],
							"name": "IERC20Detailed",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "06fdde03",
									"id": 175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "152:2:3"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 175,
												"src": "178:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 172,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "178:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "177:15:3"
									},
									"scope": 186,
									"src": "139:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "95d89b41",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "212:2:3"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 180,
												"src": "238:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 177,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "238:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "237:15:3"
									},
									"scope": 186,
									"src": "197:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "313ce567",
									"id": 185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "274:2:3"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 185,
												"src": "300:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 182,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "300:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "299:7:3"
									},
									"scope": 186,
									"src": "257:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 187,
							"src": "100:209:3"
						}
					],
					"src": "37:273:3"
				},
				"id": 3
			},
			"contracts/dependencies/openzeppelin/contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/dependencies/openzeppelin/contracts/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							295
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 188,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/Context.sol",
							"file": "./Context.sol",
							"id": 189,
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 87,
							"src": "58:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 191,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 86,
										"src": "598:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$86",
											"typeString": "contract Context"
										}
									},
									"id": 192,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:4"
								}
							],
							"contractDependencies": [
								86
							],
							"contractKind": "contract",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "83:494:4",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								86
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 194,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 295,
									"src": "610:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 193,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "610:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 200,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 200,
												"src": "664:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 200,
												"src": "695:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "663:57:4"
									},
									"src": "637:84:4"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "838:121:4",
										"statements": [
											{
												"assignments": [
													205
												],
												"declarations": [
													{
														"constant": false,
														"id": 205,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 221,
														"src": "844:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 204,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "844:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 208,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 206,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "864:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "864:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "844:32:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 209,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "882:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 210,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "891:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "882:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "882:18:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "940:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "932:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 214,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "932:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "932:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 218,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "944:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 213,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "911:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "911:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 220,
												"nodeType": "EmitStatement",
												"src": "906:48:4"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "725:87:4",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 222,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "826:2:4"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:4"
									},
									"scope": 295,
									"src": "815:144:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "1074:24:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 228,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 194,
													"src": "1087:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 227,
												"id": 229,
												"nodeType": "Return",
												"src": "1080:13:4"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "963:61:4",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1041:2:4"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 231,
												"src": "1065:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1065:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1064:9:4"
									},
									"scope": 295,
									"src": "1027:71:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "1199:85:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 235,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "1213:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 236,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 74,
																	"src": "1223:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1223:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1213:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1237:34:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 234,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1205:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1205:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "1205:67:4"
											},
											{
												"id": 242,
												"nodeType": "PlaceholderStatement",
												"src": "1278:1:4"
											}
										]
									},
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "1102:73:4",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 244,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1196:2:4"
									},
									"src": "1178:106:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "1664:81:4",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 251,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "1696:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1712:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1704:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 252,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1704:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1704:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 250,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "1675:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1675:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "EmitStatement",
												"src": "1670:45:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 258,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "1721:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1730:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 259,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1730:7:4",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 262,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1730:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1721:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 264,
												"nodeType": "ExpressionStatement",
												"src": "1721:19:4"
											}
										]
									},
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "1288:319:4",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 248,
											"modifierName": {
												"argumentTypes": null,
												"id": 247,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 244,
												"src": "1654:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1654:9:4"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1636:2:4"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1664:0:4"
									},
									"scope": 295,
									"src": "1610:135:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "1954:156:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 275,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "1968:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1988:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1980:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 276,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1980:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1980:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1968:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1992:40:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 274,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1960:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1960:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "1960:73:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 285,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2065:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 286,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "2073:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 284,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2044:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2044:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "EmitStatement",
												"src": "2039:43:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 289,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "2088:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 290,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "2097:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2088:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 292,
												"nodeType": "ExpressionStatement",
												"src": "2088:17:4"
											}
										]
									},
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "1749:132:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 272,
											"modifierName": {
												"argumentTypes": null,
												"id": 271,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 244,
												"src": "1944:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1944:9:4"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 294,
												"src": "1911:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1911:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1910:18:4"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1954:0:4"
									},
									"scope": 295,
									"src": "1884:226:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 296,
							"src": "578:1534:4"
						}
					],
					"src": "33:2080:4"
				},
				"id": 4
			},
			"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol": {
				"ast": {
					"absolutePath": "contracts/dependencies/openzeppelin/contracts/SafeERC20.sol",
					"exportedSymbols": {
						"SafeERC20": [
							452
						]
					},
					"id": 453,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 299,
							"nodeType": "ImportDirective",
							"scope": 453,
							"sourceUnit": 165,
							"src": "58:36:5",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 298,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "66:6:5",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 301,
							"nodeType": "ImportDirective",
							"scope": 453,
							"sourceUnit": 649,
							"src": "95:40:5",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 300,
										"name": "SafeMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "103:8:5",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/Address.sol",
							"file": "./Address.sol",
							"id": 303,
							"nodeType": "ImportDirective",
							"scope": 453,
							"sourceUnit": 64,
							"src": "136:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 302,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "144:7:5",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 304,
								"nodeType": "StructuredDocumentation",
								"src": "176:457:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 452,
							"linearizedBaseContracts": [
								452
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 307,
									"libraryName": {
										"contractScope": null,
										"id": 305,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 648,
										"src": "662:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$648",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "656:27:5",
									"typeName": {
										"id": 306,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "675:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 310,
									"libraryName": {
										"contractScope": null,
										"id": 308,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 63,
										"src": "692:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$63",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "686:26:5",
									"typeName": {
										"id": 309,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "704:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "804:96:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 320,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "829:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$164",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 323,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 312,
																			"src": "859:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$164",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 113,
																		"src": "859:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "859:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 326,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 314,
																	"src": "884:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 327,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 316,
																	"src": "888:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 321,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "836:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "836:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "836:58:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$164",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 319,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "810:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$164_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "810:85:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "810:85:5"
											}
										]
									},
									"documentation": null,
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 332,
												"src": "743:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$164",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 311,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 164,
													"src": "743:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$164",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 332,
												"src": "761:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "761:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 332,
												"src": "777:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "737:57:5"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "804:0:5"
									},
									"scope": 452,
									"src": "716:184:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "1014:106:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 344,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "1039:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$164",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 347,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 334,
																			"src": "1069:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$164",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 145,
																		"src": "1069:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1069:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 350,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "1098:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 351,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "1104:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 352,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "1108:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 345,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1046:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1046:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1046:68:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$164",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 343,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "1020:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$164_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1020:95:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "1020:95:5"
											}
										]
									},
									"documentation": null,
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 357,
												"src": "935:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$164",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 333,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 164,
													"src": "935:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$164",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 357,
												"src": "953:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 357,
												"src": "971:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 357,
												"src": "987:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "929:75:5"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1014:0:5"
									},
									"scope": 452,
									"src": "904:216:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "1216:253:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 367,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 363,
																			"src": "1238:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1247:1:5",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1238:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 370,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1237:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 375,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "1278:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$452",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$452",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 374,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1270:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 373,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1270:7:5",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 376,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1270:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 377,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 361,
																					"src": "1285:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 371,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 359,
																					"src": "1254:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$164",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 372,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 123,
																				"src": "1254:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1254:39:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1297:1:5",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1254:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 381,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1253:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1237:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1307:56:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 366,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1222:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1222:147:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "1222:147:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 387,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "1394:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$164",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 390,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 359,
																			"src": "1424:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$164",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 133,
																		"src": "1424:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1424:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 393,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "1448:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 394,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 363,
																	"src": "1457:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 388,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1401:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1401:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1401:62:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$164",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 386,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "1375:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$164_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1375:89:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "1375:89:5"
											}
										]
									},
									"documentation": null,
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 399,
												"src": "1150:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$164",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 358,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 164,
													"src": "1150:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$164",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 399,
												"src": "1168:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 399,
												"src": "1189:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1144:62:5"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1216:0:5"
									},
									"scope": 452,
									"src": "1124:345:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 450,
										"nodeType": "Block",
										"src": "1542:486:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 409,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "1564:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$164",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$164",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1556:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 407,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1556:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1556:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 28,
																"src": "1556:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1556:27:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1585:33:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
																"typeString": "literal_string \"SafeERC20: call to non-contract\""
															},
															"value": "SafeERC20: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
																"typeString": "literal_string \"SafeERC20: call to non-contract\""
															}
														],
														"id": 406,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1548:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 415,
												"nodeType": "ExpressionStatement",
												"src": "1548:71:5"
											},
											{
												"assignments": [
													417,
													419
												],
												"declarations": [
													{
														"constant": false,
														"id": 417,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 450,
														"src": "1682:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 416,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1682:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 419,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 450,
														"src": "1696:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 418,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1696:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 427,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 425,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "1743:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 422,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "1731:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$164",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$164",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1723:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 420,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1723:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1723:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1723:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1723:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1681:67:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 429,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "1762:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1771:34:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"id": 428,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1754:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1754:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "1754:52:5"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 433,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "1817:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1817:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1837:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1817:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 449,
												"nodeType": "IfStatement",
												"src": "1813:211:5",
												"trueBody": {
													"id": 448,
													"nodeType": "Block",
													"src": "1840:184:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 440,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 419,
																				"src": "1951:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 442,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1964:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 441,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "1964:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 443,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1963:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 438,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "1940:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "1940:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1940:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1972:44:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 437,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "1932:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1932:85:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 447,
															"nodeType": "ExpressionStatement",
															"src": "1932:85:5"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 451,
												"src": "1501:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$164",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 400,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 164,
													"src": "1501:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$164",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 451,
												"src": "1515:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 402,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1515:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1500:33:5"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1542:0:5"
									},
									"scope": 452,
									"src": "1473:555:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 453,
							"src": "634:1396:5"
						}
					],
					"src": "33:1998:5"
				},
				"id": 5
			},
			"contracts/dependencies/openzeppelin/contracts/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/dependencies/openzeppelin/contracts/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							648
						]
					},
					"id": 649,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 454,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 455,
								"nodeType": "StructuredDocumentation",
								"src": "62:563:6",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 648,
							"linearizedBaseContracts": [
								648
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "918:95:6",
										"statements": [
											{
												"assignments": [
													466
												],
												"declarations": [
													{
														"constant": false,
														"id": 466,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 480,
														"src": "924:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 465,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "924:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 470,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 467,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "936:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 468,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "940:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "936:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "924:17:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 472,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "955:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 473,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "960:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "955:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "963:29:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "947:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "947:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "947:46:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 478,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 466,
													"src": "1007:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 464,
												"id": 479,
												"nodeType": "Return",
												"src": "1000:8:6"
											}
										]
									},
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "647:201:6",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 481,
												"src": "864:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "864:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 481,
												"src": "875:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "863:22:6"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 481,
												"src": "909:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "909:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "908:9:6"
									},
									"scope": 648,
									"src": "851:162:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "1324:61:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 492,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "1341:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 493,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "1344:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1347:32:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 491,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															498,
															526
														],
														"referencedDeclaration": 526,
														"src": "1337:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1337:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 490,
												"id": 496,
												"nodeType": "Return",
												"src": "1330:50:6"
											}
										]
									},
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "1017:237:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 498,
												"src": "1270:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1270:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 498,
												"src": "1281:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1269:22:6"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 498,
												"src": "1315:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1315:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1314:9:6"
									},
									"scope": 648,
									"src": "1257:128:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "1760:78:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 511,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 503,
																"src": "1774:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 512,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "1779:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1774:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 514,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "1782:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 510,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1766:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1766:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "1766:29:6"
											},
											{
												"assignments": [
													518
												],
												"declarations": [
													{
														"constant": false,
														"id": 518,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 525,
														"src": "1801:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 517,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1801:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 522,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 519,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "1813:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 520,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 503,
														"src": "1817:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1813:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1801:17:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 523,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 518,
													"src": "1832:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 509,
												"id": 524,
												"nodeType": "Return",
												"src": "1825:8:6"
											}
										]
									},
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "1389:257:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 526,
												"src": "1667:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 526,
												"src": "1682:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1682:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 526,
												"src": "1697:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 504,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1697:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1661:66:6"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 526,
												"src": "1751:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1751:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1750:9:6"
									},
									"scope": 648,
									"src": "1649:189:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "2125:352:6",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 536,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "2341:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 537,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2346:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2341:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 542,
												"nodeType": "IfStatement",
												"src": "2337:35:6",
												"trueBody": {
													"id": 541,
													"nodeType": "Block",
													"src": "2349:23:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2364:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 535,
															"id": 540,
															"nodeType": "Return",
															"src": "2357:8:6"
														}
													]
												}
											},
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 560,
														"src": "2378:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 543,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2378:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 548,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 545,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "2390:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 546,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "2394:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2390:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2378:17:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 550,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "2409:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 551,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "2413:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2409:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 553,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "2418:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2409:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2421:35:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 549,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2401:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2401:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "2401:56:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 558,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 544,
													"src": "2471:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 535,
												"id": 559,
												"nodeType": "Return",
												"src": "2464:8:6"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "1842:213:6",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 561,
												"src": "2071:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2071:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 561,
												"src": "2082:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2082:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2070:22:6"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 561,
												"src": "2116:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2115:9:6"
									},
									"scope": 648,
									"src": "2058:419:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "2975:57:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 572,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "2992:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 573,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "2995:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2998:28:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 571,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															578,
															606
														],
														"referencedDeclaration": 606,
														"src": "2988:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2988:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 570,
												"id": 576,
												"nodeType": "Return",
												"src": "2981:46:6"
											}
										]
									},
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "2481:424:6",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 578,
												"src": "2921:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2921:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 578,
												"src": "2932:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2932:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2920:22:6"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 578,
												"src": "2966:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2966:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2965:9:6"
									},
									"scope": 648,
									"src": "2908:124:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "3594:221:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 591,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 583,
																"src": "3670:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3674:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3670:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 594,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "3677:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 590,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3662:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3662:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "3662:28:6"
											},
											{
												"assignments": [
													598
												],
												"declarations": [
													{
														"constant": false,
														"id": 598,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 605,
														"src": "3696:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 597,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3696:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 602,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 599,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "3708:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 600,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "3712:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3708:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3696:17:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 603,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 598,
													"src": "3809:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 589,
												"id": 604,
												"nodeType": "Return",
												"src": "3802:8:6"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "3036:444:6",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 606,
												"src": "3501:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 606,
												"src": "3516:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3516:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 606,
												"src": "3531:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 584,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3531:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3495:66:6"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 606,
												"src": "3585:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3584:9:6"
									},
									"scope": 648,
									"src": "3483:332:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "4302:55:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 617,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "4319:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 618,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "4322:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4325:26:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 616,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															623,
															647
														],
														"referencedDeclaration": 647,
														"src": "4315:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4315:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 615,
												"id": 621,
												"nodeType": "Return",
												"src": "4308:44:6"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "3819:413:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 623,
												"src": "4248:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4248:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 623,
												"src": "4259:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4247:22:6"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 623,
												"src": "4293:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4293:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4292:9:6"
									},
									"scope": 648,
									"src": "4235:122:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 646,
										"nodeType": "Block",
										"src": "4908:58:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 636,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "4922:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4927:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4922:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 639,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "4930:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 635,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4914:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4914:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "4914:29:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 642,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "4956:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 643,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "4960:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 634,
												"id": 645,
												"nodeType": "Return",
												"src": "4949:12:6"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "4361:433:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 647,
												"src": "4815:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4815:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 647,
												"src": "4830:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4830:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 647,
												"src": "4845:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 629,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4845:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4809:66:6"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 647,
												"src": "4899:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4899:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4898:9:6"
									},
									"scope": 648,
									"src": "4797:169:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 649,
							"src": "626:4342:6"
						}
					],
					"src": "37:4932:6"
				},
				"id": 6
			},
			"contracts/interfaces/IChainlinkAggregator.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IChainlinkAggregator.sol",
					"exportedSymbols": {
						"IChainlinkAggregator": [
							699
						]
					},
					"id": 700,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 650,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 699,
							"linearizedBaseContracts": [
								699
							],
							"name": "IChainlinkAggregator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "313ce567",
									"id": 655,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "114:2:7"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 655,
												"src": "140:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 652,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "140:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "139:7:7"
									},
									"scope": 699,
									"src": "97:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "50d25bcd",
									"id": 660,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestAnswer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "172:2:7"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 660,
												"src": "198:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 657,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "198:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "197:8:7"
									},
									"scope": 699,
									"src": "151:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "8205bf6a",
									"id": 665,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestTimestamp",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "234:2:7"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 665,
												"src": "260:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "259:9:7"
									},
									"scope": 699,
									"src": "210:59:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "668a0f02",
									"id": 670,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRound",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "293:2:7"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 670,
												"src": "319:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "318:9:7"
									},
									"scope": 699,
									"src": "273:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "b5ab58dc",
									"id": 677,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAnswer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 677,
												"src": "351:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "351:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "350:17:7"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 677,
												"src": "391:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 674,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "391:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "390:8:7"
									},
									"scope": 699,
									"src": "332:67:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "b633620c",
									"id": 684,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTimestamp",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 684,
												"src": "425:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "424:17:7"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 684,
												"src": "465:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "464:9:7"
									},
									"scope": 699,
									"src": "403:71:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 692,
									"name": "AnswerUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"indexed": true,
												"mutability": "mutable",
												"name": "current",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 692,
												"src": "498:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 685,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "498:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"indexed": true,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 692,
												"src": "522:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 692,
												"src": "547:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "497:68:7"
									},
									"src": "478:88:7"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 698,
									"name": "NewRound",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"indexed": true,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 698,
												"src": "584:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"indexed": true,
												"mutability": "mutable",
												"name": "startedBy",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 698,
												"src": "609:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "583:52:7"
									},
									"src": "569:67:7"
								}
							],
							"scope": 700,
							"src": "62:576:7"
						}
					],
					"src": "37:602:7"
				},
				"id": 7
			},
			"contracts/interfaces/IPriceOracleGetter.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IPriceOracleGetter.sol",
					"exportedSymbols": {
						"IPriceOracleGetter": [
							711
						]
					},
					"id": 712,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 701,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 702,
								"nodeType": "StructuredDocumentation",
								"src": "62:95:8",
								"text": " @title IPriceOracleGetter interface\n @notice Interface for the Aave price oracle.*"
							},
							"fullyImplemented": false,
							"id": 711,
							"linearizedBaseContracts": [
								711
							],
							"name": "IPriceOracleGetter",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "192:134:8",
										"text": " @dev returns the asset price in ETH\n @param asset the address of the asset\n @return the ETH price of the asset*"
									},
									"functionSelector": "b3596f07",
									"id": 710,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAssetPrice",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 710,
												"src": "352:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "352:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "351:15:8"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 710,
												"src": "390:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "390:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "389:9:8"
									},
									"scope": 711,
									"src": "329:70:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 712,
							"src": "159:242:8"
						}
					],
					"src": "37:365:8"
				},
				"id": 8
			},
			"contracts/misc/AgaveOracle.sol": {
				"ast": {
					"absolutePath": "contracts/misc/AgaveOracle.sol",
					"exportedSymbols": {
						"AgaveOracle": [
							1091
						]
					},
					"id": 1092,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 713,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:9"
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/Ownable.sol",
							"file": "../dependencies/openzeppelin/contracts/Ownable.sol",
							"id": 715,
							"nodeType": "ImportDirective",
							"scope": 1092,
							"sourceUnit": 296,
							"src": "62:75:9",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 714,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "70:7:9",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/IERC20.sol",
							"file": "../dependencies/openzeppelin/contracts/IERC20.sol",
							"id": 717,
							"nodeType": "ImportDirective",
							"scope": 1092,
							"sourceUnit": 165,
							"src": "138:73:9",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 716,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "146:6:9",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol",
							"file": "../dependencies/openzeppelin/contracts/IERC20Detailed.sol",
							"id": 719,
							"nodeType": "ImportDirective",
							"scope": 1092,
							"sourceUnit": 187,
							"src": "212:89:9",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 718,
										"name": "IERC20Detailed",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "220:14:9",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IPriceOracleGetter.sol",
							"file": "../interfaces/IPriceOracleGetter.sol",
							"id": 721,
							"nodeType": "ImportDirective",
							"scope": 1092,
							"sourceUnit": 712,
							"src": "303:72:9",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 720,
										"name": "IPriceOracleGetter",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "311:18:9",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IChainlinkAggregator.sol",
							"file": "../interfaces/IChainlinkAggregator.sol",
							"id": 723,
							"nodeType": "ImportDirective",
							"scope": 1092,
							"sourceUnit": 700,
							"src": "376:76:9",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 722,
										"name": "IChainlinkAggregator",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "384:20:9",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/SafeMath.sol",
							"file": "../dependencies/openzeppelin/contracts/SafeMath.sol",
							"id": 725,
							"nodeType": "ImportDirective",
							"scope": 1092,
							"sourceUnit": 649,
							"src": "454:77:9",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 724,
										"name": "SafeMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "462:8:9",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/SafeERC20.sol",
							"file": "../dependencies/openzeppelin/contracts/SafeERC20.sol",
							"id": 727,
							"nodeType": "ImportDirective",
							"scope": 1092,
							"sourceUnit": 453,
							"src": "532:79:9",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 726,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "540:9:9",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 729,
										"name": "IPriceOracleGetter",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 711,
										"src": "1136:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPriceOracleGetter_$711",
											"typeString": "contract IPriceOracleGetter"
										}
									},
									"id": 730,
									"nodeType": "InheritanceSpecifier",
									"src": "1136:18:9"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 731,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 295,
										"src": "1156:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$295",
											"typeString": "contract Ownable"
										}
									},
									"id": 732,
									"nodeType": "InheritanceSpecifier",
									"src": "1156:7:9"
								}
							],
							"contractDependencies": [
								86,
								295,
								711
							],
							"contractKind": "contract",
							"documentation": {
								"id": 728,
								"nodeType": "StructuredDocumentation",
								"src": "613:499:9",
								"text": "@title AgaveOracle\n @author Aave\n @notice Proxy smart contract to get the price of an asset from a price source, with Chainlink Aggregator\n         smart contracts as primary option\n - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallbackOracle\n - Owned by the Agave governance system, allowed to add sources for assets, replace them\n   and change the fallbackOracle\n - Modified for Agave deployment by adding free-based asset prices."
							},
							"fullyImplemented": true,
							"id": 1091,
							"linearizedBaseContracts": [
								1091,
								295,
								86,
								711
							],
							"name": "AgaveOracle",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 735,
									"libraryName": {
										"contractScope": null,
										"id": 733,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 452,
										"src": "1174:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$452",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1168:27:9",
									"typeName": {
										"contractScope": null,
										"id": 734,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 164,
										"src": "1188:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$164",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"id": 738,
									"libraryName": {
										"contractScope": null,
										"id": 736,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 648,
										"src": "1204:8:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$648",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1198:27:9",
									"typeName": {
										"id": 737,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1217:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 742,
									"name": "WrappedNativeSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"indexed": true,
												"mutability": "mutable",
												"name": "wrappedNative",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 742,
												"src": "1252:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1251:31:9"
									},
									"src": "1229:54:9"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 748,
									"name": "AssetSourceUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 748,
												"src": "1311:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"indexed": true,
												"mutability": "mutable",
												"name": "source",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 748,
												"src": "1334:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1334:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1310:47:9"
									},
									"src": "1286:72:9"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 752,
									"name": "FallbackOracleUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"indexed": true,
												"mutability": "mutable",
												"name": "fallbackOracle",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 752,
												"src": "1389:30:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1389:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1388:32:9"
									},
									"src": "1361:60:9"
								},
								{
									"constant": false,
									"id": 756,
									"mutability": "mutable",
									"name": "assetsSources",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1091,
									"src": "1425:62:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_contract$_IChainlinkAggregator_$699_$",
										"typeString": "mapping(address => contract IChainlinkAggregator)"
									},
									"typeName": {
										"id": 755,
										"keyType": {
											"id": 753,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1433:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1425:40:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_contract$_IChainlinkAggregator_$699_$",
											"typeString": "mapping(address => contract IChainlinkAggregator)"
										},
										"valueType": {
											"contractScope": null,
											"id": 754,
											"name": "IChainlinkAggregator",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 699,
											"src": "1444:20:9",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IChainlinkAggregator_$699",
												"typeString": "contract IChainlinkAggregator"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 758,
									"mutability": "mutable",
									"name": "_fallbackOracle",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1091,
									"src": "1491:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IPriceOracleGetter_$711",
										"typeString": "contract IPriceOracleGetter"
									},
									"typeName": {
										"contractScope": null,
										"id": 757,
										"name": "IPriceOracleGetter",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 711,
										"src": "1491:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPriceOracleGetter_$711",
											"typeString": "contract IPriceOracleGetter"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "eb6d3a11",
									"id": 760,
									"mutability": "immutable",
									"name": "wrappedNative",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1091,
									"src": "1537:38:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 759,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1537:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 762,
									"mutability": "immutable",
									"name": "_wrappedNativeDecimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1091,
									"src": "1579:46:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 761,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1579:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "2033:236:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 777,
															"name": "fallbackOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "2058:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 776,
														"name": "_setFallbackOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "2039:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2039:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "2039:34:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 781,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "2097:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 782,
															"name": "sources",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "2105:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														],
														"id": 780,
														"name": "_setAssetsSources",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "2079:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address[] memory,address[] memory)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2079:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "2079:34:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 785,
														"name": "wrappedNative",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "2119:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 786,
														"name": "_wrappedNative",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "2135:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2119:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "2119:30:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 789,
														"name": "_wrappedNativeDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "2155:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 791,
																		"name": "_wrappedNative",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 773,
																		"src": "2195:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 790,
																	"name": "IERC20Detailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "2180:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20Detailed_$186_$",
																		"typeString": "type(contract IERC20Detailed)"
																	}
																},
																"id": 792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2180:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Detailed_$186",
																	"typeString": "contract IERC20Detailed"
																}
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 185,
															"src": "2180:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																"typeString": "function () view external returns (uint8)"
															}
														},
														"id": 794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2180:41:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2155:66:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "2155:66:9"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 798,
															"name": "_wrappedNative",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "2249:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 797,
														"name": "WrappedNativeSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "2232:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2232:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 800,
												"nodeType": "EmitStatement",
												"src": "2227:37:9"
											}
										]
									},
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "1630:262:9",
										"text": "@notice Constructor\n @param assets The addresses of the assets\n @param sources The address of the source of each asset\n @param fallbackOracle The address of the fallback oracle to use if the data of an\n        aggregator is not consistent"
									},
									"id": 802,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 802,
												"src": "1912:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 764,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1912:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 765,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1912:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "sources",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 802,
												"src": "1941:24:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 767,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1941:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 768,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1941:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "fallbackOracle",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 802,
												"src": "1971:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1971:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "_wrappedNative",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 802,
												"src": "1999:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1999:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1906:119:9"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2033:0:9"
									},
									"scope": 1091,
									"src": "1895:374:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "2589:45:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 815,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "2613:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														{
															"argumentTypes": null,
															"id": 816,
															"name": "sources",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "2621:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														],
														"id": 814,
														"name": "_setAssetsSources",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "2595:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address[] memory,address[] memory)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2595:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "2595:34:9"
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "2273:204:9",
										"text": "@notice External function called by the Aave governance to set or replace sources of assets\n @param assets The addresses of the assets\n @param sources The address of the source of each asset"
									},
									"functionSelector": "abfd5310",
									"id": 820,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 812,
											"modifierName": {
												"argumentTypes": null,
												"id": 811,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 244,
												"src": "2577:9:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2577:9:9"
										}
									],
									"name": "setAssetSources",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 820,
												"src": "2505:25:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 804,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2505:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 805,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2505:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "sources",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 820,
												"src": "2532:26:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 807,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2532:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 808,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2532:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2504:55:9"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2589:0:9"
									},
									"scope": 1091,
									"src": "2480:154:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 832,
										"nodeType": "Block",
										"src": "2853:45:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 829,
															"name": "fallbackOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "2878:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 828,
														"name": "_setFallbackOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "2859:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2859:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 831,
												"nodeType": "ExpressionStatement",
												"src": "2859:34:9"
											}
										]
									},
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "2638:142:9",
										"text": "@notice Sets the fallbackOracle\n - Callable only by the Aave governance\n @param fallbackOracle The address of the fallbackOracle"
									},
									"functionSelector": "170aee73",
									"id": 833,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 826,
											"modifierName": {
												"argumentTypes": null,
												"id": 825,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 244,
												"src": "2843:9:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2843:9:9"
										}
									],
									"name": "setFallbackOracle",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "fallbackOracle",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 833,
												"src": "2810:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2810:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2809:24:9"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2853:0:9"
									},
									"scope": 1091,
									"src": "2783:115:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "3164:258:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 844,
																	"name": "assets",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 837,
																	"src": "3178:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3178:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 846,
																	"name": "sources",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "3195:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3195:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3178:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "494e434f4e53495354454e545f504152414d535f4c454e475448",
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3211:28:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704",
																"typeString": "literal_string \"INCONSISTENT_PARAMS_LENGTH\""
															},
															"value": "INCONSISTENT_PARAMS_LENGTH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704",
																"typeString": "literal_string \"INCONSISTENT_PARAMS_LENGTH\""
															}
														],
														"id": 843,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3170:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3170:70:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "3170:70:9"
											},
											{
												"body": {
													"id": 884,
													"nodeType": "Block",
													"src": "3290:128:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 863,
																		"name": "assetsSources",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 756,
																		"src": "3298:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_contract$_IChainlinkAggregator_$699_$",
																			"typeString": "mapping(address => contract IChainlinkAggregator)"
																		}
																	},
																	"id": 867,
																	"indexExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 864,
																			"name": "assets",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 837,
																			"src": "3312:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 866,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 865,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 853,
																			"src": "3319:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3312:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3298:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IChainlinkAggregator_$699",
																		"typeString": "contract IChainlinkAggregator"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 869,
																				"name": "sources",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 840,
																				"src": "3346:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 871,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 870,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 853,
																				"src": "3354:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3346:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 868,
																		"name": "IChainlinkAggregator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 699,
																		"src": "3325:20:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IChainlinkAggregator_$699_$",
																			"typeString": "type(contract IChainlinkAggregator)"
																		}
																	},
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3325:32:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IChainlinkAggregator_$699",
																		"typeString": "contract IChainlinkAggregator"
																	}
																},
																"src": "3298:59:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IChainlinkAggregator_$699",
																	"typeString": "contract IChainlinkAggregator"
																}
															},
															"id": 874,
															"nodeType": "ExpressionStatement",
															"src": "3298:59:9"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 876,
																			"name": "assets",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 837,
																			"src": "3389:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 878,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 877,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 853,
																			"src": "3396:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3389:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 879,
																			"name": "sources",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 840,
																			"src": "3400:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 881,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 880,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 853,
																			"src": "3408:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3400:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 875,
																	"name": "AssetSourceUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "3370:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address)"
																	}
																},
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3370:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 883,
															"nodeType": "EmitStatement",
															"src": "3365:46:9"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 856,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "3266:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 857,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "3270:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3270:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3266:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 885,
												"initializationExpression": {
													"assignments": [
														853
													],
													"declarations": [
														{
															"constant": false,
															"id": 853,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 885,
															"src": "3251:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 852,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3251:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 855,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 854,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3263:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3251:13:9"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3285:3:9",
														"subExpression": {
															"argumentTypes": null,
															"id": 860,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "3285:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 862,
													"nodeType": "ExpressionStatement",
													"src": "3285:3:9"
												},
												"nodeType": "ForStatement",
												"src": "3246:172:9"
											}
										]
									},
									"documentation": {
										"id": 834,
										"nodeType": "StructuredDocumentation",
										"src": "2902:172:9",
										"text": "@notice Internal function to set the sources for each asset\n @param assets The addresses of the assets\n @param sources The address of the source of each asset"
									},
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAssetsSources",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 887,
												"src": "3104:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 835,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3104:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 836,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3104:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "sources",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 887,
												"src": "3129:24:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 838,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3129:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 839,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3129:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3103:51:9"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:0:9"
									},
									"scope": 1091,
									"src": "3077:345:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "3607:111:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 893,
														"name": "_fallbackOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "3613:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPriceOracleGetter_$711",
															"typeString": "contract IPriceOracleGetter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 895,
																"name": "fallbackOracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "3650:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 894,
															"name": "IPriceOracleGetter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "3631:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IPriceOracleGetter_$711_$",
																"typeString": "type(contract IPriceOracleGetter)"
															}
														},
														"id": 896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3631:34:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPriceOracleGetter_$711",
															"typeString": "contract IPriceOracleGetter"
														}
													},
													"src": "3613:52:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPriceOracleGetter_$711",
														"typeString": "contract IPriceOracleGetter"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "3613:52:9"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 900,
															"name": "fallbackOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "3698:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 899,
														"name": "FallbackOracleUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "3676:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3676:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "EmitStatement",
												"src": "3671:42:9"
											}
										]
									},
									"documentation": {
										"id": 888,
										"nodeType": "StructuredDocumentation",
										"src": "3426:117:9",
										"text": "@notice Internal function to set the fallbackOracle\n @param fallbackOracle The address of the fallbackOracle"
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setFallbackOracle",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "fallbackOracle",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 904,
												"src": "3574:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3574:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3573:24:9"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3607:0:9"
									},
									"scope": 1091,
									"src": "3546:172:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										710
									],
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "3881:1176:9",
										"statements": [
											{
												"assignments": [
													914
												],
												"declarations": [
													{
														"constant": false,
														"id": 914,
														"mutability": "mutable",
														"name": "source",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1013,
														"src": "3887:27:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IChainlinkAggregator_$699",
															"typeString": "contract IChainlinkAggregator"
														},
														"typeName": {
															"contractScope": null,
															"id": 913,
															"name": "IChainlinkAggregator",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 699,
															"src": "3887:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IChainlinkAggregator_$699",
																"typeString": "contract IChainlinkAggregator"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 918,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 915,
														"name": "assetsSources",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "3917:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_contract$_IChainlinkAggregator_$699_$",
															"typeString": "mapping(address => contract IChainlinkAggregator)"
														}
													},
													"id": 917,
													"indexExpression": {
														"argumentTypes": null,
														"id": 916,
														"name": "asset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "3931:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3917:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IChainlinkAggregator_$699",
														"typeString": "contract IChainlinkAggregator"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3887:50:9"
											},
											{
												"assignments": [
													920
												],
												"declarations": [
													{
														"constant": false,
														"id": 920,
														"mutability": "mutable",
														"name": "wrappedNativeUsdSource",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1013,
														"src": "3943:43:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IChainlinkAggregator_$699",
															"typeString": "contract IChainlinkAggregator"
														},
														"typeName": {
															"contractScope": null,
															"id": 919,
															"name": "IChainlinkAggregator",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 699,
															"src": "3943:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IChainlinkAggregator_$699",
																"typeString": "contract IChainlinkAggregator"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 924,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 921,
														"name": "assetsSources",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "3989:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_contract$_IChainlinkAggregator_$699_$",
															"typeString": "mapping(address => contract IChainlinkAggregator)"
														}
													},
													"id": 923,
													"indexExpression": {
														"argumentTypes": null,
														"id": 922,
														"name": "wrappedNative",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "4003:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3989:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IChainlinkAggregator_$699",
														"typeString": "contract IChainlinkAggregator"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3943:74:9"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 925,
														"name": "asset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "4028:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 926,
														"name": "wrappedNative",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "4037:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4028:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 949,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 933,
																		"name": "source",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 914,
																		"src": "4171:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IChainlinkAggregator_$699",
																			"typeString": "contract IChainlinkAggregator"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IChainlinkAggregator_$699",
																			"typeString": "contract IChainlinkAggregator"
																		}
																	],
																	"id": 932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4163:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 931,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4163:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4163:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4190:1:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4182:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 935,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4182:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4182:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4163:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 942,
																		"name": "wrappedNativeUsdSource",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 920,
																		"src": "4204:22:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IChainlinkAggregator_$699",
																			"typeString": "contract IChainlinkAggregator"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IChainlinkAggregator_$699",
																			"typeString": "contract IChainlinkAggregator"
																		}
																	],
																	"id": 941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4196:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 940,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4196:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4196:31:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4239:1:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4231:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 944,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4231:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4231:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4196:45:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "4163:78:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1010,
														"nodeType": "Block",
														"src": "4307:746:9",
														"statements": [
															{
																"assignments": [
																	957
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 957,
																		"mutability": "mutable",
																		"name": "wrappedNativeUsdPrice",
																		"nodeType": "VariableDeclaration",
																		"overrides": null,
																		"scope": 1010,
																		"src": "4383:28:9",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"typeName": {
																			"id": 956,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4383:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 961,
																"initialValue": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"argumentTypes": null,
																			"id": 958,
																			"name": "wrappedNativeUsdSource",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 920,
																			"src": "4414:22:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IChainlinkAggregator_$699",
																				"typeString": "contract IChainlinkAggregator"
																			}
																		},
																		"id": 959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "latestAnswer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 660,
																		"src": "4414:35:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
																			"typeString": "function () view external returns (int256)"
																		}
																	},
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4414:37:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "4383:68:9"
															},
															{
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 962,
																		"name": "wrappedNativeUsdPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 957,
																		"src": "4463:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4488:1:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4463:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": null,
																"id": 971,
																"nodeType": "IfStatement",
																"src": "4459:94:9",
																"trueBody": {
																	"id": 970,
																	"nodeType": "Block",
																	"src": "4491:62:9",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 967,
																						"name": "asset",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 907,
																						"src": "4538:5:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 965,
																						"name": "_fallbackOracle",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 758,
																						"src": "4508:15:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IPriceOracleGetter_$711",
																							"typeString": "contract IPriceOracleGetter"
																						}
																					},
																					"id": 966,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "getAssetPrice",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 710,
																					"src": "4508:29:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																						"typeString": "function (address) view external returns (uint256)"
																					}
																				},
																				"id": 968,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4508:36:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"functionReturnParameters": 912,
																			"id": 969,
																			"nodeType": "Return",
																			"src": "4501:43:9"
																		}
																	]
																}
															},
															{
																"assignments": [
																	973
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 973,
																		"mutability": "mutable",
																		"name": "price",
																		"nodeType": "VariableDeclaration",
																		"overrides": null,
																		"scope": 1010,
																		"src": "4561:12:9",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"typeName": {
																			"id": 972,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4561:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 979,
																"initialValue": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 975,
																					"name": "source",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 914,
																					"src": "4597:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IChainlinkAggregator_$699",
																						"typeString": "contract IChainlinkAggregator"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IChainlinkAggregator_$699",
																						"typeString": "contract IChainlinkAggregator"
																					}
																				],
																				"id": 974,
																				"name": "IChainlinkAggregator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 699,
																				"src": "4576:20:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IChainlinkAggregator_$699_$",
																					"typeString": "type(contract IChainlinkAggregator)"
																				}
																			},
																			"id": 976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4576:28:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IChainlinkAggregator_$699",
																				"typeString": "contract IChainlinkAggregator"
																			}
																		},
																		"id": 977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "latestAnswer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 660,
																		"src": "4576:41:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
																			"typeString": "function () view external returns (int256)"
																		}
																	},
																	"id": 978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4576:43:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "4561:58:9"
															},
															{
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 980,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 973,
																		"src": "4631:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4639:1:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4631:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 1008,
																	"nodeType": "Block",
																	"src": "4985:62:9",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1005,
																						"name": "asset",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 907,
																						"src": "5032:5:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 1003,
																						"name": "_fallbackOracle",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 758,
																						"src": "5002:15:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IPriceOracleGetter_$711",
																							"typeString": "contract IPriceOracleGetter"
																						}
																					},
																					"id": 1004,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "getAssetPrice",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 710,
																					"src": "5002:29:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																						"typeString": "function (address) view external returns (uint256)"
																					}
																				},
																				"id": 1006,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5002:36:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"functionReturnParameters": 912,
																			"id": 1007,
																			"nodeType": "Return",
																			"src": "4995:43:9"
																		}
																	]
																},
																"id": 1009,
																"nodeType": "IfStatement",
																"src": "4627:420:9",
																"trueBody": {
																	"id": 1002,
																	"nodeType": "Block",
																	"src": "4642:337:9",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 998,
																								"name": "wrappedNativeUsdPrice",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 957,
																								"src": "4947:21:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								}
																							],
																							"id": 997,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4939:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 996,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "4939:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": null,
																									"typeString": null
																								}
																							}
																						},
																						"id": 999,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4939:30:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 993,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"arguments": [
																										{
																											"argumentTypes": null,
																											"hexValue": "3130",
																											"id": 990,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "4906:2:9",
																											"subdenomination": null,
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_10_by_1",
																												"typeString": "int_const 10"
																											},
																											"value": "10"
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_rational_10_by_1",
																												"typeString": "int_const 10"
																											}
																										],
																										"id": 989,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "4898:7:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_uint256_$",
																											"typeString": "type(uint256)"
																										},
																										"typeName": {
																											"id": 988,
																											"name": "uint256",
																											"nodeType": "ElementaryTypeName",
																											"src": "4898:7:9",
																											"typeDescriptions": {
																												"typeIdentifier": null,
																												"typeString": null
																											}
																										}
																									},
																									"id": 991,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "typeConversion",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "4898:11:9",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "**",
																								"rightExpression": {
																									"argumentTypes": null,
																									"id": 992,
																									"name": "_wrappedNativeDecimals",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 762,
																									"src": "4911:22:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"src": "4898:35:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"id": 985,
																										"name": "price",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 973,
																										"src": "4887:5:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_int256",
																											"typeString": "int256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_int256",
																											"typeString": "int256"
																										}
																									],
																									"id": 984,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4879:7:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 983,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4879:7:9",
																										"typeDescriptions": {
																											"typeIdentifier": null,
																											"typeString": null
																										}
																									}
																								},
																								"id": 986,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4879:14:9",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 987,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 561,
																							"src": "4879:18:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 994,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4879:55:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 995,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "div",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 578,
																					"src": "4879:59:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1000,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4879:91:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"functionReturnParameters": 912,
																			"id": 1001,
																			"nodeType": "Return",
																			"src": "4872:98:9"
																		}
																	]
																}
															}
														]
													},
													"id": 1011,
													"nodeType": "IfStatement",
													"src": "4159:894:9",
													"trueBody": {
														"id": 955,
														"nodeType": "Block",
														"src": "4243:58:9",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 952,
																			"name": "asset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 907,
																			"src": "4288:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 950,
																			"name": "_fallbackOracle",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 758,
																			"src": "4258:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IPriceOracleGetter_$711",
																				"typeString": "contract IPriceOracleGetter"
																			}
																		},
																		"id": 951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "getAssetPrice",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 710,
																		"src": "4258:29:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4258:36:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 912,
																"id": 954,
																"nodeType": "Return",
																"src": "4251:43:9"
															}
														]
													}
												},
												"id": 1012,
												"nodeType": "IfStatement",
												"src": "4024:1029:9",
												"trueBody": {
													"id": 930,
													"nodeType": "Block",
													"src": "4052:101:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4139:7:9",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"functionReturnParameters": 912,
															"id": 929,
															"nodeType": "Return",
															"src": "4132:14:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "3722:79:9",
										"text": "@notice Gets an asset price by address\n @param asset The asset address"
									},
									"functionSelector": "b3596f07",
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAssetPrice",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 909,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3854:8:9"
									},
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1014,
												"src": "3827:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3827:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3826:15:9"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1014,
												"src": "3872:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3872:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3871:9:9"
									},
									"scope": 1091,
									"src": "3804:1253:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "5271:184:9",
										"statements": [
											{
												"assignments": [
													1028
												],
												"declarations": [
													{
														"constant": false,
														"id": 1028,
														"mutability": "mutable",
														"name": "prices",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1061,
														"src": "5277:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1026,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5277:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1027,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "5277:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1035,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1032,
																"name": "assets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "5317:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																	"typeString": "address[] calldata"
																}
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5317:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1031,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "5303:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1029,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5307:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1030,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "5307:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5303:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5277:54:9"
											},
											{
												"body": {
													"id": 1057,
													"nodeType": "Block",
													"src": "5381:51:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1047,
																		"name": "prices",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1028,
																		"src": "5389:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1049,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1048,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "5396:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5389:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1051,
																				"name": "assets",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1018,
																				"src": "5415:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																					"typeString": "address[] calldata"
																				}
																			},
																			"id": 1053,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1052,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1037,
																				"src": "5422:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5415:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1050,
																		"name": "getAssetPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1014,
																		"src": "5401:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5401:24:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5389:36:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1056,
															"nodeType": "ExpressionStatement",
															"src": "5389:36:9"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1040,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1037,
														"src": "5357:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1041,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "5361:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1042,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5361:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5357:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1058,
												"initializationExpression": {
													"assignments": [
														1037
													],
													"declarations": [
														{
															"constant": false,
															"id": 1037,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1058,
															"src": "5342:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1036,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5342:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1039,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5354:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5342:13:9"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5376:3:9",
														"subExpression": {
															"argumentTypes": null,
															"id": 1044,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "5376:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1046,
													"nodeType": "ExpressionStatement",
													"src": "5376:3:9"
												},
												"nodeType": "ForStatement",
												"src": "5337:95:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1059,
													"name": "prices",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1028,
													"src": "5444:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1023,
												"id": 1060,
												"nodeType": "Return",
												"src": "5437:13:9"
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "5061:114:9",
										"text": "@notice Gets a list of prices from a list of assets addresses\n @param assets The list of assets addresses"
									},
									"functionSelector": "9d23d9f2",
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAssetsPrices",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1062,
												"src": "5203:25:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1016,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5203:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1017,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "5203:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5202:27:9"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1062,
												"src": "5253:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1020,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5253:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1021,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "5253:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5252:18:9"
									},
									"scope": 1091,
									"src": "5178:277:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "5690:47:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1072,
																"name": "assetsSources",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 756,
																"src": "5711:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_contract$_IChainlinkAggregator_$699_$",
																	"typeString": "mapping(address => contract IChainlinkAggregator)"
																}
															},
															"id": 1074,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1073,
																"name": "asset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1065,
																"src": "5725:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5711:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IChainlinkAggregator_$699",
																"typeString": "contract IChainlinkAggregator"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IChainlinkAggregator_$699",
																"typeString": "contract IChainlinkAggregator"
															}
														],
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5703:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1070,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5703:7:9",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5703:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1069,
												"id": 1076,
												"nodeType": "Return",
												"src": "5696:36:9"
											}
										]
									},
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "5459:155:9",
										"text": "@notice Gets the address of the source for an asset address\n @param asset The address of the asset\n @return address The address of the source"
									},
									"functionSelector": "92bf2be0",
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSourceOfAsset",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1078,
												"src": "5643:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5643:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5642:15:9"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1078,
												"src": "5681:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5681:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5680:9:9"
									},
									"scope": 1091,
									"src": "5617:120:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "5912:42:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1086,
															"name": "_fallbackOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "5933:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPriceOracleGetter_$711",
																"typeString": "contract IPriceOracleGetter"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IPriceOracleGetter_$711",
																"typeString": "contract IPriceOracleGetter"
															}
														],
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5925:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1084,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5925:7:9",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1083,
												"id": 1088,
												"nodeType": "Return",
												"src": "5918:31:9"
											}
										]
									},
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "5741:107:9",
										"text": "@notice Gets the address of the fallback oracle\n @return address The addres of the fallback oracle"
									},
									"functionSelector": "6210308c",
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFallbackOracle",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5877:2:9"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1090,
												"src": "5903:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5903:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5902:9:9"
									},
									"scope": 1091,
									"src": "5851:103:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1092,
							"src": "1112:4844:9"
						}
					],
					"src": "37:5920:9"
				},
				"id": 9
			}
		}
	}
}