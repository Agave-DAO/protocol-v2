{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "pool",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "underlyingAsset",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "symbol",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "incentivesController",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "fromUser",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "toUser",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "asset",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "BorrowAllowanceDelegated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "Burn",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "onBehalfOf",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "Mint",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "DEBT_TOKEN_REVISION",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "POOL",
				"outputs": [
					{
						"internalType": "contract ILendingPool",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "UNDERLYING_ASSET_ADDRESS",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "delegatee",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approveDelegation",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "fromUser",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "toUser",
						"type": "address"
					}
				],
				"name": "borrowAllowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "burn",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "subtractedValue",
						"type": "uint256"
					}
				],
				"name": "decreaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "getScaledUserBalanceAndSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "addedValue",
						"type": "uint256"
					}
				],
				"name": "increaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "decimals",
						"type": "uint8"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "symbol",
						"type": "string"
					}
				],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "onBehalfOf",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "mint",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "scaledBalanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "scaledTotalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Aave*",
			"kind": "dev",
			"methods": {
				"allowance(address,address)": {
					"details": "Returns the allowance of spender on the tokens owned by owner",
					"params": {
						"owner": "The owner of the tokens",
						"spender": "The user allowed to spend the owner's tokens"
					},
					"returns": {
						"_0": "The amount of owner's tokens spender is allowed to spend*"
					}
				},
				"approve(address,uint256)": {
					"details": "Allows `spender` to spend the tokens owned by _msgSender()",
					"params": {
						"spender": "The user allowed to spend _msgSender() tokens"
					},
					"returns": {
						"_0": "`true`*"
					}
				},
				"approveDelegation(address,uint256)": {
					"details": "delegates borrowing power to a user on the specific debt token",
					"params": {
						"amount": "the maximum amount being delegated. Delegation will still respect the liquidation constraints (even if delegated, a delegatee cannot force a delegator HF to go below 1)*",
						"delegatee": "the address receiving the delegated borrowing power"
					}
				},
				"balanceOf(address)": {
					"details": "Calculates the accumulated debt balance of the user",
					"returns": {
						"_0": "The debt balance of the user*"
					}
				},
				"borrowAllowance(address,address)": {
					"details": "returns the borrow allowance of the user",
					"params": {
						"fromUser": "The user to giving allowance",
						"toUser": "The user to give allowance to"
					},
					"returns": {
						"_0": "the current allowance of toUser*"
					}
				},
				"burn(address,uint256,uint256)": {
					"details": "Burns user variable debt - Only callable by the LendingPool",
					"params": {
						"amount": "The amount getting burned",
						"index": "The variable debt index of the reserve*",
						"user": "The user whose debt is getting burned"
					}
				},
				"decimals()": {
					"returns": {
						"_0": "The decimals of the token*"
					}
				},
				"decreaseAllowance(address,uint256)": {
					"details": "Decreases the allowance of spender to spend _msgSender() tokens",
					"params": {
						"spender": "The user allowed to spend on behalf of _msgSender()",
						"subtractedValue": "The amount being subtracted to the allowance"
					},
					"returns": {
						"_0": "`true`*"
					}
				},
				"getScaledUserBalanceAndSupply(address)": {
					"details": "Returns the principal balance of the user and principal total supply.",
					"params": {
						"user": "The address of the user"
					},
					"returns": {
						"_0": "The principal balance of the user",
						"_1": "The principal total supply*"
					}
				},
				"increaseAllowance(address,uint256)": {
					"details": "Increases the allowance of spender to spend _msgSender() tokens",
					"params": {
						"addedValue": "The amount being added to the allowance",
						"spender": "The user allowed to spend on behalf of _msgSender()"
					},
					"returns": {
						"_0": "`true`*"
					}
				},
				"initialize(uint8,string,string)": {
					"details": "Initializes the debt token.",
					"params": {
						"decimals": "The decimals of the token",
						"name": "The name of the token",
						"symbol": "The symbol of the token"
					}
				},
				"mint(address,address,uint256,uint256)": {
					"details": "Mints debt token to the `onBehalfOf` address -  Only callable by the LendingPool",
					"params": {
						"amount": "The amount of debt being minted",
						"index": "The variable debt index of the reserve",
						"onBehalfOf": "The address receiving the debt tokens",
						"user": "The address receiving the borrowed underlying, being the delegatee in case of credit delegate, or same as `onBehalfOf` otherwise"
					},
					"returns": {
						"_0": "`true` if the the previous balance of the user is 0*"
					}
				},
				"name()": {
					"returns": {
						"_0": "The name of the token*"
					}
				},
				"scaledBalanceOf(address)": {
					"details": "Returns the principal debt balance of the user from",
					"returns": {
						"_0": "The debt balance of the user since the last burn/mint action*"
					}
				},
				"scaledTotalSupply()": {
					"details": "Returns the scaled total supply of the variable debt token. Represents sum(debt/index)",
					"returns": {
						"_0": "the scaled total supply*"
					}
				},
				"symbol()": {
					"returns": {
						"_0": "The symbol of the token*"
					}
				},
				"totalSupply()": {
					"details": "Returns the total supply of the variable debt token. Represents the total debt accrued by the users",
					"returns": {
						"_0": "The total supply*"
					}
				},
				"transfer(address,uint256)": {
					"details": "Being non transferrable, the debt token does not implement any of the standard ERC20 functions for transfer and allowance.*"
				},
				"transferFrom(address,address,uint256)": {
					"details": "Executes a transfer of token from sender to recipient, if _msgSender() is allowed to do so",
					"params": {
						"amount": "The amount of tokens being transferred",
						"recipient": "The recipient of the tokens",
						"sender": "The owner of the tokens"
					},
					"returns": {
						"_0": "`true` if the transfer succeeds, `false` otherwise*"
					}
				}
			},
			"title": "VariableDebtToken",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "Implements a variable debt token to track the borrowing positions of users at variable rate mode",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/protocol/tokenization/VariableDebtToken.sol": "VariableDebtToken"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/dependencies/openzeppelin/contracts/Context.sol": {
			"keccak256": "0xe52c598aa6e76d57665914c1c43fc6fa13bbe3b0bd8e816a6cec1c2bca5014e1",
			"license": "MIT",
			"urls": [
				"bzz-raw://a665a54b2277889ba2bdb9c3860b3b71ec7b22757297a03b590a093257604e9d",
				"dweb:/ipfs/QmQ4mm9YnrtvjJwetDec3WoiKeJGoJMCs5kbPBhGVRcZ6N"
			]
		},
		"contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
			"keccak256": "0x6406b04abfeda2c8c80ea3faf797ce4501e66db41fb6ff4e299ebe0402879f44",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://33b0db81db37bd6fe20aa0b23581c6b0edef2f3c49d0bd88b4fe46c1164adb00",
				"dweb:/ipfs/QmYn1zYwt3ahpkLYwHh6h5b1UJrzP2xy5G3at9oEVNw2c1"
			]
		},
		"contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol": {
			"keccak256": "0x4dade975e9d49dcd7785b30f9e56f80ba9322f3b037a6e39912a32e49a6a817c",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://84b4c20094e95699e746ecf1fad83748139fadf844a548a09e4949840fb6232f",
				"dweb:/ipfs/Qme51kM9jqbjEyd7wQ8DNRNRAt5hY7FZHsaRxTP3xvXi5D"
			]
		},
		"contracts/dependencies/openzeppelin/contracts/SafeMath.sol": {
			"keccak256": "0xfca35d11bafb85cf4f2203b41f1a98238dca59b6a9faa28b86ea3f9f63da8ec5",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://7019345b024afa93000c6b5a2b095be59c3c5352eb658619c941d23d0af5bc65",
				"dweb:/ipfs/QmZLxJKSbM66Wd1Qd43jSdiXdg7JP6DQ9J6LuANUZummM4"
			]
		},
		"contracts/interfaces/IAaveIncentivesController.sol": {
			"keccak256": "0x19b7059e203933cca7782202e9f2abfbae4680e2e49d179857aa8a16c29513d5",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://eba6211fa0df888effbfc3ae5e6636e4fa273e0ce046723519f87cd73152221c",
				"dweb:/ipfs/QmT5We1cUQQNKw1TDaHTHJYvjtbckERogrMK3qE1nNQMjM"
			]
		},
		"contracts/interfaces/ICreditDelegationToken.sol": {
			"keccak256": "0x1e66f27c34fcc53d1d322c5623698ca5f6cb3f23d8333a3969f6fd9f48558810",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://fa11d8830334832287d1a07c1368b6841057b0a252397fabd1d36ffa1417c4e1",
				"dweb:/ipfs/QmXSfDemBYbAZR8hvrbJKV3mDSj9uWv8KMn4Au9YyYhPhT"
			]
		},
		"contracts/interfaces/ILendingPool.sol": {
			"keccak256": "0x5fa85a3137312e0d37602723af7408ed97636028699bdf7a7c7cc2dc34cdbafc",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://2f084d52067cbb14f10a00813b17c386681e17e295f878d3d8992cef63e67ac1",
				"dweb:/ipfs/QmWGjEYp4ZHmMxW7zkV8ctsmpc5kAYDw3yqaf1LZGsFFuJ"
			]
		},
		"contracts/interfaces/ILendingPoolAddressesProvider.sol": {
			"keccak256": "0xcb0e2c4c19c0bde86907b6ab45b6a1db4932d3642fc51410d56c9411a65b9f1d",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://38d01c9e664c64d46a15bbbda2933b5fb877d33f6746d2db32563962beea9119",
				"dweb:/ipfs/QmajEmcQZz3E6GzmLpeGvnEswuwCjVYy8svqdx8bxi4PuG"
			]
		},
		"contracts/interfaces/IScaledBalanceToken.sol": {
			"keccak256": "0x03f77c8f37be8f08723b82ccc7c000da0152839632a5c3952c292a2ea0b1b491",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://c8cbe31d5cd705ef15b40c0d9a48dace17797a314fa1d8d93edd412537e8ac98",
				"dweb:/ipfs/QmYuKD5D5NVakZ41XRxHvMUXUG4Hn83E9YyxJMrMCjPZxd"
			]
		},
		"contracts/interfaces/IVariableDebtToken.sol": {
			"keccak256": "0x1d19593a7d04c2a395c1f35f10baee4167624268d6e891cdc70c376e0a7e6062",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://e72f581ef2fe7bb5e69d2948663b1e49158d7aeaff7d84150cd5a7a93134aa4e",
				"dweb:/ipfs/QmaLhSGdBZotKRZQth8bMRZrJmCsFNus22zT4ka3yR7Zj2"
			]
		},
		"contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol": {
			"keccak256": "0x29712c302422dcd03a036df5fa6b34897982c35e943d59e9db0704142da0f892",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://d0bc9bed6b54b7b97c3a01123cee12de8f5c744575e1c231735ec7666db8ede7",
				"dweb:/ipfs/QmQUyz92ft5hM4CcwEduTgcMUgfmdimhUHaaLMzm6Gh8nh"
			]
		},
		"contracts/protocol/libraries/helpers/Errors.sol": {
			"keccak256": "0xfb70949637d81dc9a3883601bb15226981f4c4847f65035e64bf5d120994efeb",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://43fb108a5038fbeb33294d3f4a9e7e4e021bef16f0e7a8a2f3ad9142808c7a8f",
				"dweb:/ipfs/QmUvAnwcuwmprQu4g3r1k3gE2EztuVPGRKJBMVX3KRC8W6"
			]
		},
		"contracts/protocol/libraries/math/WadRayMath.sol": {
			"keccak256": "0xf66b7e208da18d12ca2b6a5c9d58f8091819da1524c028f30a36304993039c72",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://75519c3d78ad40da70a1d24cf10557068d6726c894bbc6674531c73302ecc610",
				"dweb:/ipfs/Qmea7Q6ysFm9WH69EZLak7wCeT7Fcw4H9qMZGAUA52QoRf"
			]
		},
		"contracts/protocol/libraries/types/DataTypes.sol": {
			"keccak256": "0xb1d3ae94d3e4b3bf23b3394d820a3a2b5ba56fd5389f561f3fdd73ed1c60c391",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://47c11d578cc1e0df27e4e85cfe5831a48b78d6e939d34e17db4bc65a54c899fe",
				"dweb:/ipfs/QmYdYLkYFJe3psmQUH1S1uNhGE9xyxeDunuEW9gBPg9vDB"
			]
		},
		"contracts/protocol/tokenization/IncentivizedERC20.sol": {
			"keccak256": "0xaca104a2a5f22fd5c8173da7ee1b6b1a9f5d1725cca8ea1e90ad7b37f2955b20",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://7a442c6c459fa455f4181abfa02c5fb6374eb30ef9b9013c9431100931e04586",
				"dweb:/ipfs/QmWMoqoLNCNQzx4X43RN4n4WXy5LioWRvc4or5ggY4DfRf"
			]
		},
		"contracts/protocol/tokenization/VariableDebtToken.sol": {
			"keccak256": "0x8bf6b7ad860bc65813cb2f9e61ca0bb259b1f021d8818d3145c27136005099cb",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://f0de6c43c7a8bb60dec7eab8f1751c6d7b2a3c66fa881ef262af70e4a76de88b",
				"dweb:/ipfs/QmRPU9fD2tzZ9oUVpYVqVrQoEgegTHfVTuPGK3LCHRwGHm"
			]
		},
		"contracts/protocol/tokenization/base/DebtTokenBase.sol": {
			"keccak256": "0x77fd2c21622f35832de9cb9a55591d741d3d71d94e1572560f81bb41188cf311",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://4899b896b957e4115a4a698df8df008121c3484c50ed548e101fbba696dec27c",
				"dweb:/ipfs/QmXHNMpiYK8tqmwCew5hTRmkKhFhf3x34uZQQbpzsb7JaX"
			]
		}
	},
	"version": 1
}