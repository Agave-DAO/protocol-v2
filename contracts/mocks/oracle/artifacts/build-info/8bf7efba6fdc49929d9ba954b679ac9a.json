{
	"id": "8bf7efba6fdc49929d9ba954b679ac9a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/mocks/oracle/LendingRateOracle.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\nimport {ILendingRateOracle} from '../../interfaces/ILendingRateOracle.sol';\nimport {Ownable} from '../../dependencies/openzeppelin/contracts/Ownable.sol';\n\ncontract LendingRateOracle is ILendingRateOracle, Ownable {\n  mapping(address => uint256) borrowRates;\n  mapping(address => uint256) liquidityRates;\n\n  function getMarketBorrowRate(address _asset) external view override returns (uint256) {\n    return borrowRates[_asset];\n  }\n\n  function setMarketBorrowRate(address _asset, uint256 _rate) external override onlyOwner {\n    borrowRates[_asset] = _rate;\n  }\n\n  function getMarketLiquidityRate(address _asset) external view returns (uint256) {\n    return liquidityRates[_asset];\n  }\n\n  function setMarketLiquidityRate(address _asset, uint256 _rate) external onlyOwner {\n    liquidityRates[_asset] = _rate;\n  }\n}\n"
			},
			"contracts/dependencies/openzeppelin/contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport './Context.sol';\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor() internal {\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(_owner == _msgSender(), 'Ownable: caller is not the owner');\n    _;\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby removing any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public virtual onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public virtual onlyOwner {\n    require(newOwner != address(0), 'Ownable: new owner is the zero address');\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n"
			},
			"contracts/interfaces/ILendingRateOracle.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\n/**\n * @title ILendingRateOracle interface\n * @notice Interface for the Aave borrow rate oracle. Provides the average market borrow rate to be used as a base for the stable borrow rate calculations\n **/\n\ninterface ILendingRateOracle {\n  /**\n    @dev returns the market borrow rate in ray\n    **/\n  function getMarketBorrowRate(address asset) external view returns (uint256);\n\n  /**\n    @dev sets the market borrow rate. Rate value must be in ray\n    **/\n  function setMarketBorrowRate(address asset, uint256 rate) external;\n}\n"
			},
			"contracts/dependencies/openzeppelin/contracts/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.12;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n  function _msgSender() internal view virtual returns (address payable) {\n    return msg.sender;\n  }\n\n  function _msgData() internal view virtual returns (bytes memory) {\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    return msg.data;\n  }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/dependencies/openzeppelin/contracts/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"keccak256\":\"0xe52c598aa6e76d57665914c1c43fc6fa13bbe3b0bd8e816a6cec1c2bca5014e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a665a54b2277889ba2bdb9c3860b3b71ec7b22757297a03b590a093257604e9d\",\"dweb:/ipfs/QmQ4mm9YnrtvjJwetDec3WoiKeJGoJMCs5kbPBhGVRcZ6N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/dependencies/openzeppelin/contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"keccak256\":\"0xe52c598aa6e76d57665914c1c43fc6fa13bbe3b0bd8e816a6cec1c2bca5014e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a665a54b2277889ba2bdb9c3860b3b71ec7b22757297a03b590a093257604e9d\",\"dweb:/ipfs/QmQ4mm9YnrtvjJwetDec3WoiKeJGoJMCs5kbPBhGVRcZ6N\"]},\"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":{\"keccak256\":\"0xe89abab730aac141126c194f910969c76f55a29536f2709c71c1c0c4ffce5508\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5667cdfe050014996ee748d1891155cc9a40ec5de28804d8c5e4b6c3a34e727\",\"dweb:/ipfs/QmWcSNdBecjXbiEau8QHSdBFes2HXw59H9hhJNjCww1Y8i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 30,
								"contract": "contracts/dependencies/openzeppelin/contracts/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ILendingRateOracle.sol": {
				"ILendingRateOracle": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getMarketBorrowRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rate",
									"type": "uint256"
								}
							],
							"name": "setMarketBorrowRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getMarketBorrowRate(address)": {
								"details": "returns the market borrow rate in ray*"
							},
							"setMarketBorrowRate(address,uint256)": {
								"details": "sets the market borrow rate. Rate value must be in ray*"
							}
						},
						"title": "ILendingRateOracle interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getMarketBorrowRate(address)": "bb85c0bb",
							"setMarketBorrowRate(address,uint256)": "72eb293d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getMarketBorrowRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"setMarketBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getMarketBorrowRate(address)\":{\"details\":\"returns the market borrow rate in ray*\"},\"setMarketBorrowRate(address,uint256)\":{\"details\":\"sets the market borrow rate. Rate value must be in ray*\"}},\"title\":\"ILendingRateOracle interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface for the Aave borrow rate oracle. Provides the average market borrow rate to be used as a base for the stable borrow rate calculations*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ILendingRateOracle.sol\":\"ILendingRateOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ILendingRateOracle.sol\":{\"keccak256\":\"0x4f7adee1cb217af64dac837ed3171abf3c4b7917aed7993b2d6850b9284675dc\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://ca2b82d6dc2d6e19bc0bf4184841302d707856d9080759c6033a40f619b0e935\",\"dweb:/ipfs/QmVLMeCWQjjeoym4wL5Hvw63th9BmU9JYPYcCM2G3XQ8V6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Interface for the Aave borrow rate oracle. Provides the average market borrow rate to be used as a base for the stable borrow rate calculations*",
						"version": 1
					}
				}
			},
			"contracts/mocks/oracle/LendingRateOracle.sol": {
				"LendingRateOracle": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_asset",
									"type": "address"
								}
							],
							"name": "getMarketBorrowRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_asset",
									"type": "address"
								}
							],
							"name": "getMarketLiquidityRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rate",
									"type": "uint256"
								}
							],
							"name": "setMarketBorrowRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rate",
									"type": "uint256"
								}
							],
							"name": "setMarketLiquidityRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/mocks/oracle/LendingRateOracle.sol\":218:876  contract LendingRateOracle is ILendingRateOracle, Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":844:861  address msgSender */\n  0x00\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":864:876  _msgSender() */\n  tag_4\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":864:874  _msgSender */\n  tag_5\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":864:876  _msgSender() */\n  jump\t// in\ntag_4:\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":882:888  _owner */\n  0x00\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":882:900  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":911:954  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":882:900  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":911:954  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":882:888  _owner */\n  dup3\n  swap1\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":911:954  OwnershipTransferred(address(0), msgSender) */\n  log3\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":815:959  constructor() internal {... */\n  pop\n    /* \"contracts/mocks/oracle/LendingRateOracle.sol\":218:876  contract LendingRateOracle is ILendingRateOracle, Ownable {... */\n  jump(tag_6)\n    /* \"contracts/dependencies/openzeppelin/contracts/Context.sol\":587:685  function _msgSender() internal view virtual returns (address payable) {... */\ntag_5:\n    /* \"contracts/dependencies/openzeppelin/contracts/Context.sol\":670:680  msg.sender */\n  caller\n    /* \"contracts/dependencies/openzeppelin/contracts/Context.sol\":587:685  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/mocks/oracle/LendingRateOracle.sol\":218:876  contract LendingRateOracle is ILendingRateOracle, Ownable {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":218:876  contract LendingRateOracle is ILendingRateOracle, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9f86a0ee\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x9f86a0ee\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xbb85c0bb\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xfbe5ba1e\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x72eb293d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1610:1745  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":497:623  function setMarketBorrowRate(address _asset, uint256 _rate) external override onlyOwner {... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_15\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1027:1098  function owner() public view returns (address) {... */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":751:874  function setMarketLiquidityRate(address _asset, uint256 _rate) external onlyOwner {... */\n    tag_6:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_20\n      jump\t// in\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":370:493  function getMarketBorrowRate(address _asset) external view override returns (uint256) {... */\n    tag_7:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_23\n      jump\t// in\n    tag_21:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1884:2110  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_26\n      jump\t// in\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":627:747  function getMarketLiquidityRate(address _asset) external view returns (uint256) {... */\n    tag_9:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_29\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1610:1745  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1235  _msgSender() */\n      tag_31\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1233  _msgSender */\n      tag_32\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1235  _msgSender() */\n      jump\t// in\n    tag_31:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1213:1219  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1213:1235  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1205:1272  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_33\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_33:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1712:1713  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1696:1702  _owner */\n      dup1\n      sload\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1675:1715  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1696:1702  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1675:1715  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1712:1713  0 */\n      dup4\n      swap1\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1675:1715  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1738:1739  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1721:1740  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1610:1745  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":497:623  function setMarketBorrowRate(address _asset, uint256 _rate) external override onlyOwner {... */\n    tag_15:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1235  _msgSender() */\n      tag_36\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1233  _msgSender */\n      tag_32\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1235  _msgSender() */\n      jump\t// in\n    tag_36:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1213:1219  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1213:1235  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1205:1272  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_37\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_37:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":591:610  borrowRates[_asset] */\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":591:602  borrowRates */\n      0x01\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":591:610  borrowRates[_asset] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":591:618  borrowRates[_asset] = _rate */\n      sstore\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":497:623  function setMarketBorrowRate(address _asset, uint256 _rate) external override onlyOwner {... */\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1027:1098  function owner() public view returns (address) {... */\n    tag_17:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1065:1072  address */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1087:1093  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1027:1098  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":751:874  function setMarketLiquidityRate(address _asset, uint256 _rate) external onlyOwner {... */\n    tag_20:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1235  _msgSender() */\n      tag_41\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1233  _msgSender */\n      tag_32\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1235  _msgSender() */\n      jump\t// in\n    tag_41:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1213:1219  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1213:1235  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1205:1272  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_42\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_42:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":839:861  liquidityRates[_asset] */\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":839:853  liquidityRates */\n      0x02\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":839:861  liquidityRates[_asset] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":839:869  liquidityRates[_asset] = _rate */\n      sstore\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":751:874  function setMarketLiquidityRate(address _asset, uint256 _rate) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":370:493  function getMarketBorrowRate(address _asset) external view override returns (uint256) {... */\n    tag_23:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":469:488  borrowRates[_asset] */\n      and\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":447:454  uint256 */\n      0x00\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":469:488  borrowRates[_asset] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":469:480  borrowRates */\n      0x01\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":469:488  borrowRates[_asset] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":370:493  function getMarketBorrowRate(address _asset) external view override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1884:2110  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1235  _msgSender() */\n      tag_46\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1233  _msgSender */\n      tag_32\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1235  _msgSender() */\n      jump\t// in\n    tag_46:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1213:1219  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1213:1235  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1205:1272  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_47\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_47:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1968:1990  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1960:2033  require(newOwner != address(0), 'Ownable: new owner is the zero address') */\n      tag_49\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_49:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":2065:2071  _owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":2044:2082  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":2065:2071  _owner */\n      swap3\n      and\n      swap2\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":2044:2082  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":2088:2094  _owner */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":2088:2105  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1884:2110  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":627:747  function getMarketLiquidityRate(address _asset) external view returns (uint256) {... */\n    tag_29:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":720:742  liquidityRates[_asset] */\n      and\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":698:705  uint256 */\n      0x00\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":720:742  liquidityRates[_asset] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":720:734  liquidityRates */\n      0x02\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":720:742  liquidityRates[_asset] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/mocks/oracle/LendingRateOracle.sol\":627:747  function getMarketLiquidityRate(address _asset) external view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/contracts/Context.sol\":587:685  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_32:\n        /* \"contracts/dependencies/openzeppelin/contracts/Context.sol\":670:680  msg.sender */\n      caller\n        /* \"contracts/dependencies/openzeppelin/contracts/Context.sol\":587:685  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe 4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n\n    auxdata: 0xa26469706673582212201d7f473788a285376533f5b96c895378fdff2a709aa8154545daaf976c8f1f9f64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b6104d38061007d6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80639f86a0ee1161005b5780639f86a0ee146100dc578063bb85c0bb14610108578063f2fde38b14610140578063fbe5ba1e146101665761007d565b8063715018a61461008257806372eb293d1461008c5780638da5cb5b146100b8575b600080fd5b61008a61018c565b005b61008a600480360360408110156100a257600080fd5b506001600160a01b03813516906020013561022e565b6100c06102a2565b604080516001600160a01b039092168252519081900360200190f35b61008a600480360360408110156100f257600080fd5b506001600160a01b0381351690602001356102b1565b61012e6004803603602081101561011e57600080fd5b50356001600160a01b0316610325565b60408051918252519081900360200190f35b61008a6004803603602081101561015657600080fd5b50356001600160a01b0316610340565b61012e6004803603602081101561017c57600080fd5b50356001600160a01b0316610438565b610194610453565b6000546001600160a01b039081169116146101e4576040805162461bcd60e51b8152602060048201819052602482015260008051602061047e833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b610236610453565b6000546001600160a01b03908116911614610286576040805162461bcd60e51b8152602060048201819052602482015260008051602061047e833981519152604482015290519081900360640190fd5b6001600160a01b03909116600090815260016020526040902055565b6000546001600160a01b031690565b6102b9610453565b6000546001600160a01b03908116911614610309576040805162461bcd60e51b8152602060048201819052602482015260008051602061047e833981519152604482015290519081900360640190fd5b6001600160a01b03909116600090815260026020526040902055565b6001600160a01b031660009081526001602052604090205490565b610348610453565b6000546001600160a01b03908116911614610398576040805162461bcd60e51b8152602060048201819052602482015260008051602061047e833981519152604482015290519081900360640190fd5b6001600160a01b0381166103dd5760405162461bcd60e51b81526004018080602001828103825260268152602001806104586026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b031660009081526002602052604090205490565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212201d7f473788a285376533f5b96c895378fdff2a709aa8154545daaf976c8f1f9f64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x1B PUSH2 0x6A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x6E JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x4D3 DUP1 PUSH2 0x7D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F86A0EE GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x9F86A0EE EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0xBB85C0BB EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xFBE5BA1E EQ PUSH2 0x166 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x72EB293D EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x18C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x22E JUMP JUMPDEST PUSH2 0xC0 PUSH2 0x2A2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2B1 JUMP JUMPDEST PUSH2 0x12E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x325 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x340 JUMP JUMPDEST PUSH2 0x12E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x438 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x453 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1E4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x47E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x236 PUSH2 0x453 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x286 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x47E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x2B9 PUSH2 0x453 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x309 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x47E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x348 PUSH2 0x453 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x398 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x47E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x458 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A26469706673582212201D7F SELFBALANCE CALLDATACOPY DUP9 LOG2 DUP6 CALLDATACOPY PUSH6 0x33F5B96C8953 PUSH25 0xFDFF2A709AA8154545DAAF976C8F1F9F64736F6C634300060C STOP CALLER ",
							"sourceMap": "218:658:3:-:0;;;;;;;;;;;;-1:-1:-1;844:17:1;864:12;:10;:12::i;:::-;882:6;:18;;-1:-1:-1;;;;;;882:18:1;-1:-1:-1;;;;;882:18:1;;;;;;;911:43;;882:18;;-1:-1:-1;882:18:1;911:43;;882:6;;911:43;815:144;218:658:3;;587:98:0;670:10;587:98;:::o;218:658:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80639f86a0ee1161005b5780639f86a0ee146100dc578063bb85c0bb14610108578063f2fde38b14610140578063fbe5ba1e146101665761007d565b8063715018a61461008257806372eb293d1461008c5780638da5cb5b146100b8575b600080fd5b61008a61018c565b005b61008a600480360360408110156100a257600080fd5b506001600160a01b03813516906020013561022e565b6100c06102a2565b604080516001600160a01b039092168252519081900360200190f35b61008a600480360360408110156100f257600080fd5b506001600160a01b0381351690602001356102b1565b61012e6004803603602081101561011e57600080fd5b50356001600160a01b0316610325565b60408051918252519081900360200190f35b61008a6004803603602081101561015657600080fd5b50356001600160a01b0316610340565b61012e6004803603602081101561017c57600080fd5b50356001600160a01b0316610438565b610194610453565b6000546001600160a01b039081169116146101e4576040805162461bcd60e51b8152602060048201819052602482015260008051602061047e833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b610236610453565b6000546001600160a01b03908116911614610286576040805162461bcd60e51b8152602060048201819052602482015260008051602061047e833981519152604482015290519081900360640190fd5b6001600160a01b03909116600090815260016020526040902055565b6000546001600160a01b031690565b6102b9610453565b6000546001600160a01b03908116911614610309576040805162461bcd60e51b8152602060048201819052602482015260008051602061047e833981519152604482015290519081900360640190fd5b6001600160a01b03909116600090815260026020526040902055565b6001600160a01b031660009081526001602052604090205490565b610348610453565b6000546001600160a01b03908116911614610398576040805162461bcd60e51b8152602060048201819052602482015260008051602061047e833981519152604482015290519081900360640190fd5b6001600160a01b0381166103dd5760405162461bcd60e51b81526004018080602001828103825260268152602001806104586026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b031660009081526002602052604090205490565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212201d7f473788a285376533f5b96c895378fdff2a709aa8154545daaf976c8f1f9f64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F86A0EE GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x9F86A0EE EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0xBB85C0BB EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xFBE5BA1E EQ PUSH2 0x166 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x72EB293D EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x18C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x22E JUMP JUMPDEST PUSH2 0xC0 PUSH2 0x2A2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2B1 JUMP JUMPDEST PUSH2 0x12E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x325 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x340 JUMP JUMPDEST PUSH2 0x12E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x438 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x453 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1E4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x47E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x236 PUSH2 0x453 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x286 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x47E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x2B9 PUSH2 0x453 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x309 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x47E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x348 PUSH2 0x453 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x398 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x47E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x458 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A26469706673582212201D7F SELFBALANCE CALLDATACOPY DUP9 LOG2 DUP6 CALLDATACOPY PUSH6 0x33F5B96C8953 PUSH25 0xFDFF2A709AA8154545DAAF976C8F1F9F64736F6C634300060C STOP CALLER ",
							"sourceMap": "218:658:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1610:135:1;;;:::i;:::-;;497:126:3;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;497:126:3;;;;;;;;:::i;1027:71:1:-;;;:::i;:::-;;;;-1:-1:-1;;;;;1027:71:1;;;;;;;;;;;;;;751:123:3;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;751:123:3;;;;;;;;:::i;370:::-;;;;;;;;;;;;;;;;-1:-1:-1;370:123:3;-1:-1:-1;;;;;370:123:3;;:::i;:::-;;;;;;;;;;;;;;;;1884:226:1;;;;;;;;;;;;;;;;-1:-1:-1;1884:226:1;-1:-1:-1;;;;;1884:226:1;;:::i;627:120:3:-;;;;;;;;;;;;;;;;-1:-1:-1;627:120:3;-1:-1:-1;;;;;627:120:3;;:::i;1610:135:1:-;1223:12;:10;:12::i;:::-;1213:6;;-1:-1:-1;;;;;1213:6:1;;;:22;;;1205:67;;;;;-1:-1:-1;;;1205:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1205:67:1;;;;;;;;;;;;;;;1712:1:::1;1696:6:::0;;1675:40:::1;::::0;-1:-1:-1;;;;;1696:6:1;;::::1;::::0;1675:40:::1;::::0;1712:1;;1675:40:::1;1738:1;1721:19:::0;;-1:-1:-1;;;;;;1721:19:1::1;::::0;;1610:135::o;497:126:3:-;1223:12:1;:10;:12::i;:::-;1213:6;;-1:-1:-1;;;;;1213:6:1;;;:22;;;1205:67;;;;;-1:-1:-1;;;1205:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1205:67:1;;;;;;;;;;;;;;;-1:-1:-1;;;;;591:19:3;;::::1;;::::0;;;:11:::1;:19;::::0;;;;:27;497:126::o;1027:71:1:-;1065:7;1087:6;-1:-1:-1;;;;;1087:6:1;1027:71;:::o;751:123:3:-;1223:12:1;:10;:12::i;:::-;1213:6;;-1:-1:-1;;;;;1213:6:1;;;:22;;;1205:67;;;;;-1:-1:-1;;;1205:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1205:67:1;;;;;;;;;;;;;;;-1:-1:-1;;;;;839:22:3;;::::1;;::::0;;;:14:::1;:22;::::0;;;;:30;751:123::o;370:::-;-1:-1:-1;;;;;469:19:3;447:7;469:19;;;:11;:19;;;;;;;370:123::o;1884:226:1:-;1223:12;:10;:12::i;:::-;1213:6;;-1:-1:-1;;;;;1213:6:1;;;:22;;;1205:67;;;;;-1:-1:-1;;;1205:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1205:67:1;;;;;;;;;;;;;;;-1:-1:-1;;;;;1968:22:1;::::1;1960:73;;;;-1:-1:-1::0;;;1960:73:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2065:6;::::0;;2044:38:::1;::::0;-1:-1:-1;;;;;2044:38:1;;::::1;::::0;2065:6;::::1;::::0;2044:38:::1;::::0;::::1;2088:6;:17:::0;;-1:-1:-1;;;;;;2088:17:1::1;-1:-1:-1::0;;;;;2088:17:1;;;::::1;::::0;;;::::1;::::0;;1884:226::o;627:120:3:-;-1:-1:-1;;;;;720:22:3;698:7;720:22;;;:14;:22;;;;;;;627:120::o;587:98:0:-;670:10;587:98;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "247000",
								"executionCost": "22722",
								"totalCost": "269722"
							},
							"external": {
								"getMarketBorrowRate(address)": "1164",
								"getMarketLiquidityRate(address)": "1208",
								"owner()": "1082",
								"renounceOwnership()": "infinite",
								"setMarketBorrowRate(address,uint256)": "infinite",
								"setMarketLiquidityRate(address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 218,
									"end": 876,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 218,
									"end": 876,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 218,
									"end": 876,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 218,
									"end": 876,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 218,
									"end": 876,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 218,
									"end": 876,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 218,
									"end": 876,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 218,
									"end": 876,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 218,
									"end": 876,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 218,
									"end": 876,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 218,
									"end": 876,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 218,
									"end": 876,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 218,
									"end": 876,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 844,
									"end": 861,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 864,
									"end": 876,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 864,
									"end": 874,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 864,
									"end": 876,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 864,
									"end": 876,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 864,
									"end": 876,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 882,
									"end": 888,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 900,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 882,
									"end": 900,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 882,
									"end": 900,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 882,
									"end": 900,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 882,
									"end": 900,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 882,
									"end": 900,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 882,
									"end": 900,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 882,
									"end": 900,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 882,
									"end": 900,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 882,
									"end": 900,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 911,
									"end": 954,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 911,
									"end": 954,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 882,
									"end": 900,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 882,
									"end": 900,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 882,
									"end": 900,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 911,
									"end": 954,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 911,
									"end": 954,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 882,
									"end": 888,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 882,
									"end": 888,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 911,
									"end": 954,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 815,
									"end": 959,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 218,
									"end": 876,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 218,
									"end": 876,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 587,
									"end": 685,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 587,
									"end": 685,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 670,
									"end": 680,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 587,
									"end": 685,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 587,
									"end": 685,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 218,
									"end": 876,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 218,
									"end": 876,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 218,
									"end": 876,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 218,
									"end": 876,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 218,
									"end": 876,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 218,
									"end": 876,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 218,
									"end": 876,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 218,
									"end": 876,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 218,
									"end": 876,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201d7f473788a285376533f5b96c895378fdff2a709aa8154545daaf976c8f1f9f64736f6c634300060c0033",
									".code": [
										{
											"begin": 218,
											"end": 876,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "PUSH",
											"source": 3,
											"value": "9F86A0EE"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "PUSH",
											"source": 3,
											"value": "9F86A0EE"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "PUSH",
											"source": 3,
											"value": "BB85C0BB"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "PUSH",
											"source": 3,
											"value": "FBE5BA1E"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "PUSH",
											"source": 3,
											"value": "72EB293D"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 218,
											"end": 876,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 218,
											"end": 876,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 497,
											"end": 623,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 497,
											"end": 623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 497,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 497,
											"end": 623,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 497,
											"end": 623,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 497,
											"end": 623,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 497,
											"end": 623,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 497,
											"end": 623,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 497,
											"end": 623,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 497,
											"end": 623,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 497,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 497,
											"end": 623,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 497,
											"end": 623,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 623,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 497,
											"end": 623,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 497,
											"end": 623,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 497,
											"end": 623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 497,
											"end": 623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 497,
											"end": 623,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 497,
											"end": 623,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 497,
											"end": 623,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 497,
											"end": 623,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 497,
											"end": 623,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 497,
											"end": 623,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 497,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 497,
											"end": 623,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 751,
											"end": 874,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 751,
											"end": 874,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 751,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 751,
											"end": 874,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 751,
											"end": 874,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 751,
											"end": 874,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 751,
											"end": 874,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 751,
											"end": 874,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 874,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 751,
											"end": 874,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 751,
											"end": 874,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 751,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 751,
											"end": 874,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 751,
											"end": 874,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 874,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 751,
											"end": 874,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 751,
											"end": 874,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 751,
											"end": 874,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 751,
											"end": 874,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 751,
											"end": 874,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 751,
											"end": 874,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 751,
											"end": 874,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 751,
											"end": 874,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 751,
											"end": 874,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 751,
											"end": 874,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 751,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 751,
											"end": 874,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 493,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 370,
											"end": 493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 370,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 370,
											"end": 493,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 370,
											"end": 493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 493,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 370,
											"end": 493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 370,
											"end": 493,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 370,
											"end": 493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 370,
											"end": 493,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 370,
											"end": 493,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 370,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 370,
											"end": 493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 493,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 370,
											"end": 493,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 370,
											"end": 493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 370,
											"end": 493,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 370,
											"end": 493,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 370,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 370,
											"end": 493,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 493,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 370,
											"end": 493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 370,
											"end": 493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 370,
											"end": 493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 370,
											"end": 493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 370,
											"end": 493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 370,
											"end": 493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 370,
											"end": 493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 370,
											"end": 493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 370,
											"end": 493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 370,
											"end": 493,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 370,
											"end": 493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 370,
											"end": 493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 493,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 627,
											"end": 747,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 627,
											"end": 747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 627,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 627,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 627,
											"end": 747,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 627,
											"end": 747,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 627,
											"end": 747,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 627,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 747,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 627,
											"end": 747,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 627,
											"end": 747,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 627,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 627,
											"end": 747,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 627,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 627,
											"end": 747,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 627,
											"end": 747,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 627,
											"end": 747,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 627,
											"end": 747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 627,
											"end": 747,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 627,
											"end": 747,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 627,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 627,
											"end": 747,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1223,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1713,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1675,
											"end": 1715,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1675,
											"end": 1715,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1675,
											"end": 1715,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1675,
											"end": 1715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1713,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1713,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1675,
											"end": 1715,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1721,
											"end": 1740,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1740,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1721,
											"end": 1740,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1740,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 497,
											"end": 623,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 497,
											"end": 623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1223,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 591,
											"end": 610,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 591,
											"end": 610,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 591,
											"end": 610,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 591,
											"end": 610,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 591,
											"end": 610,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 591,
											"end": 610,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 591,
											"end": 610,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 591,
											"end": 602,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 591,
											"end": 610,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 591,
											"end": 610,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 591,
											"end": 610,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 591,
											"end": 610,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 591,
											"end": 610,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 591,
											"end": 618,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 497,
											"end": 623,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 751,
											"end": 874,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 751,
											"end": 874,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1223,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 839,
											"end": 861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 861,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 839,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 839,
											"end": 853,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 839,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 839,
											"end": 861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 839,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 861,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 839,
											"end": 869,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 751,
											"end": 874,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 370,
											"end": 493,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 370,
											"end": 493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 469,
											"end": 488,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 447,
											"end": 454,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 488,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 469,
											"end": 488,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 469,
											"end": 488,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 469,
											"end": 480,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 469,
											"end": 488,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 469,
											"end": 488,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 469,
											"end": 488,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 488,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 469,
											"end": 488,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 469,
											"end": 488,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 469,
											"end": 488,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 493,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1223,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1968,
											"end": 1990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1968,
											"end": 1990,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "PUSH data",
											"source": 1,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2071,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2071,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2071,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2071,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2071,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 627,
											"end": 747,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 627,
											"end": 747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 720,
											"end": 742,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 698,
											"end": 705,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 742,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 720,
											"end": 742,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 720,
											"end": 742,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 720,
											"end": 734,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 720,
											"end": 742,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 742,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 720,
											"end": 742,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 720,
											"end": 742,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 720,
											"end": 742,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 720,
											"end": 742,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 720,
											"end": 742,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 627,
											"end": 747,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 587,
											"end": 685,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 587,
											"end": 685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 670,
											"end": 680,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 587,
											"end": 685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 587,
											"end": 685,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572"
									}
								}
							}
						},
						"methodIdentifiers": {
							"getMarketBorrowRate(address)": "bb85c0bb",
							"getMarketLiquidityRate(address)": "fbe5ba1e",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setMarketBorrowRate(address,uint256)": "72eb293d",
							"setMarketLiquidityRate(address,uint256)": "9f86a0ee",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"getMarketBorrowRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"getMarketLiquidityRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"setMarketBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"setMarketLiquidityRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/oracle/LendingRateOracle.sol\":\"LendingRateOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"keccak256\":\"0xe52c598aa6e76d57665914c1c43fc6fa13bbe3b0bd8e816a6cec1c2bca5014e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a665a54b2277889ba2bdb9c3860b3b71ec7b22757297a03b590a093257604e9d\",\"dweb:/ipfs/QmQ4mm9YnrtvjJwetDec3WoiKeJGoJMCs5kbPBhGVRcZ6N\"]},\"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":{\"keccak256\":\"0xe89abab730aac141126c194f910969c76f55a29536f2709c71c1c0c4ffce5508\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5667cdfe050014996ee748d1891155cc9a40ec5de28804d8c5e4b6c3a34e727\",\"dweb:/ipfs/QmWcSNdBecjXbiEau8QHSdBFes2HXw59H9hhJNjCww1Y8i\"]},\"contracts/interfaces/ILendingRateOracle.sol\":{\"keccak256\":\"0x4f7adee1cb217af64dac837ed3171abf3c4b7917aed7993b2d6850b9284675dc\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://ca2b82d6dc2d6e19bc0bf4184841302d707856d9080759c6033a40f619b0e935\",\"dweb:/ipfs/QmVLMeCWQjjeoym4wL5Hvw63th9BmU9JYPYcCM2G3XQ8V6\"]},\"contracts/mocks/oracle/LendingRateOracle.sol\":{\"keccak256\":\"0xcb2c7f40502518c08623abc57d338800a449cf1a572af5441994734a5c43adee\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://1fc990ff2ea121e419e0dd0b8790bbe6e8eccb3ff0ec9afba24f595d306e847f\",\"dweb:/ipfs/Qmatcg6QsytMK1dk44vefEuNRnwTHydjNkodmaKx1hjWKr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 30,
								"contract": "contracts/mocks/oracle/LendingRateOracle.sol:LendingRateOracle",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 165,
								"contract": "contracts/mocks/oracle/LendingRateOracle.sol:LendingRateOracle",
								"label": "borrowRates",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 169,
								"contract": "contracts/mocks/oracle/LendingRateOracle.sol:LendingRateOracle",
								"label": "liquidityRates",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/dependencies/openzeppelin/contracts/Context.sol": {
				"ast": {
					"absolutePath": "contracts/dependencies/openzeppelin/contracts/Context.sol",
					"exportedSymbols": {
						"Context": [
							22
						]
					},
					"id": 23,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "657:28:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "670:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "670:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "663:17:0"
											}
										]
									},
									"documentation": null,
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "606:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "640:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "639:17:0"
									},
									"scope": 22,
									"src": "587:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "754:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 15,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "760:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$22",
														"typeString": "contract Context"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "760:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 17,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "896:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "896:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 19,
												"nodeType": "Return",
												"src": "889:15:0"
											}
										]
									},
									"documentation": null,
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 21,
												"src": "740:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "740:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "739:14:0"
									},
									"scope": 22,
									"src": "689:220:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 23,
							"src": "557:354:0"
						}
					],
					"src": "32:880:0"
				},
				"id": 0
			},
			"contracts/dependencies/openzeppelin/contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/dependencies/openzeppelin/contracts/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							131
						]
					},
					"id": 132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 24,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/Context.sol",
							"file": "./Context.sol",
							"id": 25,
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 23,
							"src": "58:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 27,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "598:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 28,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"contractDependencies": [
								22
							],
							"contractKind": "contract",
							"documentation": {
								"id": 26,
								"nodeType": "StructuredDocumentation",
								"src": "83:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								22
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 30,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 131,
									"src": "610:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 29,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "610:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 36,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "664:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "695:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "663:57:1"
									},
									"src": "637:84:1"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "838:121:1",
										"statements": [
											{
												"assignments": [
													41
												],
												"declarations": [
													{
														"constant": false,
														"id": 41,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 57,
														"src": "844:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 40,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "844:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 44,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 42,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "864:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "864:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "844:32:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 45,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "882:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 46,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "891:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "882:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "882:18:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "940:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "932:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 50,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "932:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "932:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 54,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "944:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "911:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "911:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 56,
												"nodeType": "EmitStatement",
												"src": "906:48:1"
											}
										]
									},
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "725:87:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 58,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "826:2:1"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:1"
									},
									"scope": 131,
									"src": "815:144:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1074:24:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "1087:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1080:13:1"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "963:61:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1041:2:1"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "1065:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1065:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1064:9:1"
									},
									"scope": 131,
									"src": "1027:71:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "1199:85:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 71,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "1213:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 72,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "1223:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1223:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1213:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1237:34:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 70,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1205:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1205:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1205:67:1"
											},
											{
												"id": 78,
												"nodeType": "PlaceholderStatement",
												"src": "1278:1:1"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1102:73:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 80,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1196:2:1"
									},
									"src": "1178:106:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "1664:81:1",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 87,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "1696:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 90,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1712:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1704:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 88,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1704:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1704:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 86,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "1675:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1675:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 93,
												"nodeType": "EmitStatement",
												"src": "1670:45:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 94,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "1721:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1730:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 95,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1730:7:1",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1730:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1721:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "1721:19:1"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "1288:319:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 84,
											"modifierName": {
												"argumentTypes": null,
												"id": 83,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 80,
												"src": "1654:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1654:9:1"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1636:2:1"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1664:0:1"
									},
									"scope": 131,
									"src": "1610:135:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "1954:156:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 111,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "1968:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1988:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1980:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 112,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1980:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1980:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1968:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1992:40:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1960:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1960:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "1960:73:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 121,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2065:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 120,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "2044:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2044:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "EmitStatement",
												"src": "2039:43:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 125,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2088:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 126,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "2097:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2088:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "2088:17:1"
											}
										]
									},
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "1749:132:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 108,
											"modifierName": {
												"argumentTypes": null,
												"id": 107,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 80,
												"src": "1944:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1944:9:1"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 130,
												"src": "1911:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1911:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1910:18:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1954:0:1"
									},
									"scope": 131,
									"src": "1884:226:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 132,
							"src": "578:1534:1"
						}
					],
					"src": "33:2080:1"
				},
				"id": 1
			},
			"contracts/interfaces/ILendingRateOracle.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ILendingRateOracle.sol",
					"exportedSymbols": {
						"ILendingRateOracle": [
							151
						]
					},
					"id": 152,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 133,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 134,
								"nodeType": "StructuredDocumentation",
								"src": "62:202:2",
								"text": " @title ILendingRateOracle interface\n @notice Interface for the Aave borrow rate oracle. Provides the average market borrow rate to be used as a base for the stable borrow rate calculations*"
							},
							"fullyImplemented": false,
							"id": 151,
							"linearizedBaseContracts": [
								151
							],
							"name": "ILendingRateOracle",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "299:58:2",
										"text": "@dev returns the market borrow rate in ray*"
									},
									"functionSelector": "bb85c0bb",
									"id": 142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMarketBorrowRate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 142,
												"src": "389:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "388:15:2"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 142,
												"src": "427:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "426:9:2"
									},
									"scope": 151,
									"src": "360:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "440:75:2",
										"text": "@dev sets the market borrow rate. Rate value must be in ray*"
									},
									"functionSelector": "72eb293d",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMarketBorrowRate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 150,
												"src": "547:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "rate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 150,
												"src": "562:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "546:29:2"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "584:0:2"
									},
									"scope": 151,
									"src": "518:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 152,
							"src": "266:321:2"
						}
					],
					"src": "37:551:2"
				},
				"id": 2
			},
			"contracts/mocks/oracle/LendingRateOracle.sol": {
				"ast": {
					"absolutePath": "contracts/mocks/oracle/LendingRateOracle.sol",
					"exportedSymbols": {
						"LendingRateOracle": [
							228
						]
					},
					"id": 229,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 153,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:3"
						},
						{
							"absolutePath": "contracts/interfaces/ILendingRateOracle.sol",
							"file": "../../interfaces/ILendingRateOracle.sol",
							"id": 155,
							"nodeType": "ImportDirective",
							"scope": 229,
							"sourceUnit": 152,
							"src": "62:75:3",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 154,
										"name": "ILendingRateOracle",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "70:18:3",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/Ownable.sol",
							"file": "../../dependencies/openzeppelin/contracts/Ownable.sol",
							"id": 157,
							"nodeType": "ImportDirective",
							"scope": 229,
							"sourceUnit": 132,
							"src": "138:78:3",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 156,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "146:7:3",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 158,
										"name": "ILendingRateOracle",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 151,
										"src": "248:18:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ILendingRateOracle_$151",
											"typeString": "contract ILendingRateOracle"
										}
									},
									"id": 159,
									"nodeType": "InheritanceSpecifier",
									"src": "248:18:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 160,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 131,
										"src": "268:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$131",
											"typeString": "contract Ownable"
										}
									},
									"id": 161,
									"nodeType": "InheritanceSpecifier",
									"src": "268:7:3"
								}
							],
							"contractDependencies": [
								22,
								131,
								151
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 228,
							"linearizedBaseContracts": [
								228,
								131,
								22,
								151
							],
							"name": "LendingRateOracle",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "borrowRates",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 228,
									"src": "280:39:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 164,
										"keyType": {
											"id": 162,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "288:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "280:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 163,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "299:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "liquidityRates",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 228,
									"src": "323:42:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 168,
										"keyType": {
											"id": 166,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "331:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "323:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 167,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "342:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										142
									],
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "456:37:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 177,
														"name": "borrowRates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "469:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 179,
													"indexExpression": {
														"argumentTypes": null,
														"id": 178,
														"name": "_asset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "481:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "469:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 176,
												"id": 180,
												"nodeType": "Return",
												"src": "462:26:3"
											}
										]
									},
									"documentation": null,
									"functionSelector": "bb85c0bb",
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMarketBorrowRate",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 173,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "429:8:3"
									},
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "_asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 182,
												"src": "399:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "399:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "398:16:3"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 182,
												"src": "447:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "446:9:3"
									},
									"scope": 228,
									"src": "370:123:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										150
									],
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "585:38:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 192,
															"name": "borrowRates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "591:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 194,
														"indexExpression": {
															"argumentTypes": null,
															"id": 193,
															"name": "_asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "603:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "591:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 195,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "613:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "591:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "591:27:3"
											}
										]
									},
									"documentation": null,
									"functionSelector": "72eb293d",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 190,
											"modifierName": {
												"argumentTypes": null,
												"id": 189,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 80,
												"src": "575:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "575:9:3"
										}
									],
									"name": "setMarketBorrowRate",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 188,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "566:8:3"
									},
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "_asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 199,
												"src": "526:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "_rate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 199,
												"src": "542:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "525:31:3"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "585:0:3"
									},
									"scope": 228,
									"src": "497:126:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "707:40:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 206,
														"name": "liquidityRates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "720:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 208,
													"indexExpression": {
														"argumentTypes": null,
														"id": 207,
														"name": "_asset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "735:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "720:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "713:29:3"
											}
										]
									},
									"documentation": null,
									"functionSelector": "fbe5ba1e",
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMarketLiquidityRate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "_asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "659:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "658:16:3"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "698:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "698:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "697:9:3"
									},
									"scope": 228,
									"src": "627:120:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "833:41:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 220,
															"name": "liquidityRates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "839:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 222,
														"indexExpression": {
															"argumentTypes": null,
															"id": 221,
															"name": "_asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "854:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "839:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 223,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "864:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "839:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "839:30:3"
											}
										]
									},
									"documentation": null,
									"functionSelector": "9f86a0ee",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 218,
											"modifierName": {
												"argumentTypes": null,
												"id": 217,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 80,
												"src": "823:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "823:9:3"
										}
									],
									"name": "setMarketLiquidityRate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "_asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "783:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "783:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "_rate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "799:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "782:31:3"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "833:0:3"
									},
									"scope": 228,
									"src": "751:123:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 229,
							"src": "218:658:3"
						}
					],
					"src": "37:840:3"
				},
				"id": 3
			}
		}
	}
}