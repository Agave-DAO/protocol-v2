{
	"id": "677b766daaa083d0f71075b9265f18a3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\nimport './BaseAdminUpgradeabilityProxy.sol';\nimport './InitializableUpgradeabilityProxy.sol';\n\n/**\n * @title InitializableAdminUpgradeabilityProxy\n * @dev Extends from BaseAdminUpgradeabilityProxy with an initializer for\n * initializing the implementation, admin, and init data.\n */\ncontract InitializableAdminUpgradeabilityProxy is\n  BaseAdminUpgradeabilityProxy,\n  InitializableUpgradeabilityProxy\n{\n  /**\n   * Contract initializer.\n   * @param logic address of the initial implementation.\n   * @param admin Address of the proxy administrator.\n   * @param data Data to send as msg.data to the implementation to initialize the proxied contract.\n   * It should include the signature and the parameters of the function to be called, as described in\n   * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\n   * This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\n   */\n  function initialize(\n    address logic,\n    address admin,\n    bytes memory data\n  ) public payable {\n    require(_implementation() == address(0));\n    InitializableUpgradeabilityProxy.initialize(logic, data);\n    assert(ADMIN_SLOT == bytes32(uint256(keccak256('eip1967.proxy.admin')) - 1));\n    _setAdmin(admin);\n  }\n\n  /**\n   * @dev Only fall back when the sender is not the admin.\n   */\n  function _willFallback() internal override(BaseAdminUpgradeabilityProxy, Proxy) {\n    BaseAdminUpgradeabilityProxy._willFallback();\n  }\n}\n"
			},
			"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\nimport './BaseUpgradeabilityProxy.sol';\n\n/**\n * @title InitializableUpgradeabilityProxy\n * @dev Extends BaseUpgradeabilityProxy with an initializer for initializing\n * implementation and init data.\n */\ncontract InitializableUpgradeabilityProxy is BaseUpgradeabilityProxy {\n  /**\n   * @dev Contract initializer.\n   * @param _logic Address of the initial implementation.\n   * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.\n   * It should include the signature and the parameters of the function to be called, as described in\n   * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\n   * This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\n   */\n  function initialize(address _logic, bytes memory _data) public payable {\n    require(_implementation() == address(0));\n    assert(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256('eip1967.proxy.implementation')) - 1));\n    _setImplementation(_logic);\n    if (_data.length > 0) {\n      (bool success, ) = _logic.delegatecall(_data);\n      require(success);\n    }\n  }\n}\n"
			},
			"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\nimport './UpgradeabilityProxy.sol';\n\n/**\n * @title BaseAdminUpgradeabilityProxy\n * @dev This contract combines an upgradeability proxy with an authorization\n * mechanism for administrative tasks.\n * All external functions in this contract must be guarded by the\n * `ifAdmin` modifier. See ethereum/solidity#3864 for a Solidity\n * feature proposal that would enable this to be done automatically.\n */\ncontract BaseAdminUpgradeabilityProxy is BaseUpgradeabilityProxy {\n  /**\n   * @dev Emitted when the administration has been transferred.\n   * @param previousAdmin Address of the previous admin.\n   * @param newAdmin Address of the new admin.\n   */\n  event AdminChanged(address previousAdmin, address newAdmin);\n\n  /**\n   * @dev Storage slot with the admin of the contract.\n   * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n   * validated in the constructor.\n   */\n  bytes32 internal constant ADMIN_SLOT =\n    0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n  /**\n   * @dev Modifier to check whether the `msg.sender` is the admin.\n   * If it is, it will run the function. Otherwise, it will delegate the call\n   * to the implementation.\n   */\n  modifier ifAdmin() {\n    if (msg.sender == _admin()) {\n      _;\n    } else {\n      _fallback();\n    }\n  }\n\n  /**\n   * @return The address of the proxy admin.\n   */\n  function admin() external ifAdmin returns (address) {\n    return _admin();\n  }\n\n  /**\n   * @return The address of the implementation.\n   */\n  function implementation() external ifAdmin returns (address) {\n    return _implementation();\n  }\n\n  /**\n   * @dev Changes the admin of the proxy.\n   * Only the current admin can call this function.\n   * @param newAdmin Address to transfer proxy administration to.\n   */\n  function changeAdmin(address newAdmin) external ifAdmin {\n    require(newAdmin != address(0), 'Cannot change the admin of a proxy to the zero address');\n    emit AdminChanged(_admin(), newAdmin);\n    _setAdmin(newAdmin);\n  }\n\n  /**\n   * @dev Upgrade the backing implementation of the proxy.\n   * Only the admin can call this function.\n   * @param newImplementation Address of the new implementation.\n   */\n  function upgradeTo(address newImplementation) external ifAdmin {\n    _upgradeTo(newImplementation);\n  }\n\n  /**\n   * @dev Upgrade the backing implementation of the proxy and call a function\n   * on the new implementation.\n   * This is useful to initialize the proxied contract.\n   * @param newImplementation Address of the new implementation.\n   * @param data Data to send as msg.data in the low level call.\n   * It should include the signature and the parameters of the function to be called, as described in\n   * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\n   */\n  function upgradeToAndCall(address newImplementation, bytes calldata data)\n    external\n    payable\n    ifAdmin\n  {\n    _upgradeTo(newImplementation);\n    (bool success, ) = newImplementation.delegatecall(data);\n    require(success);\n  }\n\n  /**\n   * @return adm The admin slot.\n   */\n  function _admin() internal view returns (address adm) {\n    bytes32 slot = ADMIN_SLOT;\n    //solium-disable-next-line\n    assembly {\n      adm := sload(slot)\n    }\n  }\n\n  /**\n   * @dev Sets the address of the proxy admin.\n   * @param newAdmin Address of the new proxy admin.\n   */\n  function _setAdmin(address newAdmin) internal {\n    bytes32 slot = ADMIN_SLOT;\n    //solium-disable-next-line\n    assembly {\n      sstore(slot, newAdmin)\n    }\n  }\n\n  /**\n   * @dev Only fall back when the sender is not the admin.\n   */\n  function _willFallback() internal virtual override {\n    require(msg.sender != _admin(), 'Cannot call fallback function from the proxy admin');\n    super._willFallback();\n  }\n}\n"
			},
			"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\nimport './Proxy.sol';\nimport '../contracts/Address.sol';\n\n/**\n * @title BaseUpgradeabilityProxy\n * @dev This contract implements a proxy that allows to change the\n * implementation address to which it will delegate.\n * Such a change is called an implementation upgrade.\n */\ncontract BaseUpgradeabilityProxy is Proxy {\n  /**\n   * @dev Emitted when the implementation is upgraded.\n   * @param implementation Address of the new implementation.\n   */\n  event Upgraded(address indexed implementation);\n\n  /**\n   * @dev Storage slot with the address of the current implementation.\n   * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n   * validated in the constructor.\n   */\n  bytes32 internal constant IMPLEMENTATION_SLOT =\n    0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n  /**\n   * @dev Returns the current implementation.\n   * @return impl Address of the current implementation\n   */\n  function _implementation() internal view override returns (address impl) {\n    bytes32 slot = IMPLEMENTATION_SLOT;\n    //solium-disable-next-line\n    assembly {\n      impl := sload(slot)\n    }\n  }\n\n  /**\n   * @dev Upgrades the proxy to a new implementation.\n   * @param newImplementation Address of the new implementation.\n   */\n  function _upgradeTo(address newImplementation) internal {\n    _setImplementation(newImplementation);\n    emit Upgraded(newImplementation);\n  }\n\n  /**\n   * @dev Sets the implementation address of the proxy.\n   * @param newImplementation Address of the new implementation.\n   */\n  function _setImplementation(address newImplementation) internal {\n    require(\n      Address.isContract(newImplementation),\n      'Cannot set a proxy implementation to a non-contract address'\n    );\n\n    bytes32 slot = IMPLEMENTATION_SLOT;\n\n    //solium-disable-next-line\n    assembly {\n      sstore(slot, newImplementation)\n    }\n  }\n}\n"
			},
			"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\nimport './BaseUpgradeabilityProxy.sol';\n\n/**\n * @title UpgradeabilityProxy\n * @dev Extends BaseUpgradeabilityProxy with a constructor for initializing\n * implementation and init data.\n */\ncontract UpgradeabilityProxy is BaseUpgradeabilityProxy {\n  /**\n   * @dev Contract constructor.\n   * @param _logic Address of the initial implementation.\n   * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.\n   * It should include the signature and the parameters of the function to be called, as described in\n   * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\n   * This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\n   */\n  constructor(address _logic, bytes memory _data) public payable {\n    assert(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256('eip1967.proxy.implementation')) - 1));\n    _setImplementation(_logic);\n    if (_data.length > 0) {\n      (bool success, ) = _logic.delegatecall(_data);\n      require(success);\n    }\n  }\n}\n"
			},
			"contracts/dependencies/openzeppelin/contracts/Address.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n  /**\n   * @dev Returns true if `account` is a contract.\n   *\n   * [IMPORTANT]\n   * ====\n   * It is unsafe to assume that an address for which this function returns\n   * false is an externally-owned account (EOA) and not a contract.\n   *\n   * Among others, `isContract` will return false for the following\n   * types of addresses:\n   *\n   *  - an externally-owned account\n   *  - a contract in construction\n   *  - an address where a contract will be created\n   *  - an address where a contract lived, but was destroyed\n   * ====\n   */\n  function isContract(address account) internal view returns (bool) {\n    // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n    // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n    // for accounts without code, i.e. `keccak256('')`\n    bytes32 codehash;\n    bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n    // solhint-disable-next-line no-inline-assembly\n    assembly {\n      codehash := extcodehash(account)\n    }\n    return (codehash != accountHash && codehash != 0x0);\n  }\n\n  /**\n   * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n   * `recipient`, forwarding all available gas and reverting on errors.\n   *\n   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n   * of certain opcodes, possibly making contracts go over the 2300 gas limit\n   * imposed by `transfer`, making them unable to receive funds via\n   * `transfer`. {sendValue} removes this limitation.\n   *\n   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n   *\n   * IMPORTANT: because control is transferred to `recipient`, care must be\n   * taken to not create reentrancy vulnerabilities. Consider using\n   * {ReentrancyGuard} or the\n   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n   */\n  function sendValue(address payable recipient, uint256 amount) internal {\n    require(address(this).balance >= amount, 'Address: insufficient balance');\n\n    // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n    (bool success, ) = recipient.call{value: amount}('');\n    require(success, 'Address: unable to send value, recipient may have reverted');\n  }\n}\n"
			},
			"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity ^0.6.0;\n\n/**\n * @title Proxy\n * @dev Implements delegation of calls to other contracts, with proper\n * forwarding of return values and bubbling of failures.\n * It defines a fallback function that delegates all calls to the address\n * returned by the abstract _implementation() internal function.\n */\nabstract contract Proxy {\n  /**\n   * @dev Fallback function.\n   * Implemented entirely in `_fallback`.\n   */\n  fallback() external payable {\n    _fallback();\n  }\n\n  /**\n   * @return The Address of the implementation.\n   */\n  function _implementation() internal view virtual returns (address);\n\n  /**\n   * @dev Delegates execution to an implementation contract.\n   * This is a low level function that doesn't return to its internal call site.\n   * It will return to the external caller whatever the implementation returns.\n   * @param implementation Address to delegate.\n   */\n  function _delegate(address implementation) internal {\n    //solium-disable-next-line\n    assembly {\n      // Copy msg.data. We take full control of memory in this inline assembly\n      // block because it will not return to Solidity code. We overwrite the\n      // Solidity scratch pad at memory position 0.\n      calldatacopy(0, 0, calldatasize())\n\n      // Call the implementation.\n      // out and outsize are 0 because we don't know the size yet.\n      let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n      // Copy the returned data.\n      returndatacopy(0, 0, returndatasize())\n\n      switch result\n        // delegatecall returns 0 on error.\n        case 0 {\n          revert(0, returndatasize())\n        }\n        default {\n          return(0, returndatasize())\n        }\n    }\n  }\n\n  /**\n   * @dev Function that is run as the first thing in the fallback function.\n   * Can be redefined in derived contracts to add functionality.\n   * Redefinitions must call super._willFallback().\n   */\n  function _willFallback() internal virtual {}\n\n  /**\n   * @dev fallback implementation.\n   * Extracted to enable manual triggering.\n   */\n  function _fallback() internal {\n    _willFallback();\n    _delegate(_implementation());\n  }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/dependencies/openzeppelin/contracts/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":130:2528  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":130:2528  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122093d929e9255a31a618822d038a5070bc0f29f948496e43b9ca7e13af705eed6564736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093d929e9255a31a618822d038a5070bc0f29f948496e43b9ca7e13af705eed6564736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xD9 0x29 0xE9 0x25 GAS BALANCE 0xA6 XOR DUP3 0x2D SUB DUP11 POP PUSH17 0xBC0F29F948496E43B9CA7E13AF705EED65 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "130:2398:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093d929e9255a31a618822d038a5070bc0f29f948496e43b9ca7e13af705eed6564736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xD9 0x29 0xE9 0x25 GAS BALANCE 0xA6 XOR DUP3 0x2D SUB DUP11 POP PUSH17 0xBC0F29F948496E43B9CA7E13AF705EED65 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "130:2398:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 130,
									"end": 2528,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122093d929e9255a31a618822d038a5070bc0f29f948496e43b9ca7e13af705eed6564736f6c634300060c0033",
									".code": [
										{
											"begin": 130,
											"end": 2528,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 130,
											"end": 2528,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 130,
											"end": 2528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 130,
											"end": 2528,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 130,
											"end": 2528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 130,
											"end": 2528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 130,
											"end": 2528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 2528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 2528,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"keccak256\":\"0xb7f2cd193efe93976d7b473fc4fa27dda83bd4db5b81889cbcd4701f3b7023ae\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://2275632637acd2f30d576612dcddc1c6ba78d81af4d044fafe870e6a809a8b6e\",\"dweb:/ipfs/QmW3uMzrLbjzP45zVpP8e9V6o8WFSceHiHq8WDMJ8YjCeL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol": {
				"BaseAdminUpgradeabilityProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "changeAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This contract combines an upgradeability proxy with an authorization mechanism for administrative tasks. All external functions in this contract must be guarded by the `ifAdmin` modifier. See ethereum/solidity#3864 for a Solidity feature proposal that would enable this to be done automatically.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the administration has been transferred.",
								"params": {
									"newAdmin": "Address of the new admin.",
									"previousAdmin": "Address of the previous admin."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"admin()": {
								"returns": {
									"_0": "The address of the proxy admin."
								}
							},
							"changeAdmin(address)": {
								"details": "Changes the admin of the proxy. Only the current admin can call this function.",
								"params": {
									"newAdmin": "Address to transfer proxy administration to."
								}
							},
							"implementation()": {
								"returns": {
									"_0": "The address of the implementation."
								}
							},
							"upgradeTo(address)": {
								"details": "Upgrade the backing implementation of the proxy. Only the admin can call this function.",
								"params": {
									"newImplementation": "Address of the new implementation."
								}
							},
							"upgradeToAndCall(address,bytes)": {
								"details": "Upgrade the backing implementation of the proxy and call a function on the new implementation. This is useful to initialize the proxied contract.",
								"params": {
									"data": "Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.",
									"newImplementation": "Address of the new implementation."
								}
							}
						},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
							}
						},
						"title": "BaseAdminUpgradeabilityProxy",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":462:3848  contract BaseAdminUpgradeabilityProxy is BaseUpgradeabilityProxy {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":462:3848  contract BaseAdminUpgradeabilityProxy is BaseUpgradeabilityProxy {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3659cfe6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5c60da1b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8f283970\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_7\n      jumpi\n    tag_1:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":498:509  _fallback() */\n      tag_10\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":498:507  _fallback */\n      tag_11\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":498:509  _fallback() */\n      jump\t// in\n    tag_10:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":462:3848  contract BaseAdminUpgradeabilityProxy is BaseUpgradeabilityProxy {... */\n      stop\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2246:2349  function upgradeTo(address newImplementation) external ifAdmin {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_15\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2866:3102  function upgradeToAndCall(address newImplementation, bytes calldata data)... */\n    tag_4:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      and\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      0x40\n      dup2\n      add\n      0x20\n      dup3\n      add\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      tag_21\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1566:1662  function implementation() external ifAdmin returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1838:2062  function changeAdmin(address newAdmin) external ifAdmin {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_28\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1424:1502  function admin() external ifAdmin returns (address) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_23\n      tag_31\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2095:2185  function _fallback() internal {... */\n    tag_11:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2131:2146  _willFallback() */\n      tag_33\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2131:2144  _willFallback */\n      tag_34\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2131:2146  _willFallback() */\n      jump\t// in\n    tag_33:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2152:2180  _delegate(_implementation()) */\n      tag_35\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2162:2179  _implementation() */\n      tag_36\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2162:2177  _implementation */\n      tag_37\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2162:2179  _implementation() */\n      jump\t// in\n    tag_36:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2152:2161  _delegate */\n      tag_38\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2152:2180  _delegate(_implementation()) */\n      jump\t// in\n    tag_35:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2095:2185  function _fallback() internal {... */\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2246:2349  function upgradeTo(address newImplementation) external ifAdmin {... */\n    tag_15:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1309  _admin() */\n      tag_40\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1307  _admin */\n      tag_41\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1309  _admin() */\n      jump\t// in\n    tag_40:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1309  msg.sender == _admin() */\n      and\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1297  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1309  msg.sender == _admin() */\n      and\n      eq\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1283:1359  if (msg.sender == _admin()) {... */\n      iszero\n      tag_42\n      jumpi\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2315:2344  _upgradeTo(newImplementation) */\n      tag_44\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2326:2343  newImplementation */\n      dup2\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2315:2325  _upgradeTo */\n      tag_45\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2315:2344  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_44:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1283:1359  if (msg.sender == _admin()) {... */\n      jump(tag_47)\n    tag_42:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1341:1352  _fallback() */\n      tag_47\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1341:1350  _fallback */\n      tag_11\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1341:1352  _fallback() */\n      jump\t// in\n    tag_47:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2246:2349  function upgradeTo(address newImplementation) external ifAdmin {... */\n      pop\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2866:3102  function upgradeToAndCall(address newImplementation, bytes calldata data)... */\n    tag_21:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1309  _admin() */\n      tag_49\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1307  _admin */\n      tag_41\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1309  _admin() */\n      jump\t// in\n    tag_49:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1309  msg.sender == _admin() */\n      and\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1297  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1309  msg.sender == _admin() */\n      and\n      eq\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1283:1359  if (msg.sender == _admin()) {... */\n      iszero\n      tag_50\n      jumpi\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2985:3014  _upgradeTo(newImplementation) */\n      tag_52\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2996:3013  newImplementation */\n      dup4\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2985:2995  _upgradeTo */\n      tag_45\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2985:3014  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_52:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3021:3033  bool success */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3039:3056  newImplementation */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3039:3069  newImplementation.delegatecall */\n      and\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3070:3074  data */\n      dup4\n      dup4\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3039:3075  newImplementation.delegatecall(data) */\n      mload(0x40)\n      dup1\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      mload(0x40)\n      swap3\n      add\n      swap5\n      pop\n      0x00\n      swap4\n      pop\n      swap1\n      swap2\n      pop\n      pop\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_55\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_54)\n    tag_55:\n      0x60\n      swap2\n      pop\n    tag_54:\n      pop\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3020:3075  (bool success, ) = newImplementation.delegatecall(data) */\n      pop\n      swap1\n      pop\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3089:3096  success */\n      dup1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3081:3097  require(success) */\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1319:1320  _ */\n      pop\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1283:1359  if (msg.sender == _admin()) {... */\n      jump(tag_58)\n    tag_50:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1341:1352  _fallback() */\n      tag_58\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1341:1350  _fallback */\n      tag_11\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1341:1352  _fallback() */\n      jump\t// in\n    tag_58:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2866:3102  function upgradeToAndCall(address newImplementation, bytes calldata data)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1566:1662  function implementation() external ifAdmin returns (address) {... */\n    tag_24:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1618:1625  address */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1309  _admin() */\n      tag_60\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1307  _admin */\n      tag_41\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1309  _admin() */\n      jump\t// in\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1309  msg.sender == _admin() */\n      and\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1297  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1309  msg.sender == _admin() */\n      and\n      eq\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1283:1359  if (msg.sender == _admin()) {... */\n      iszero\n      tag_61\n      jumpi\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1640:1657  _implementation() */\n      tag_63\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1640:1655  _implementation */\n      tag_37\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1640:1657  _implementation() */\n      jump\t// in\n    tag_63:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1633:1657  return _implementation() */\n      swap1\n      pop\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1283:1359  if (msg.sender == _admin()) {... */\n      jump(tag_65)\n    tag_61:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1341:1352  _fallback() */\n      tag_65\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1341:1350  _fallback */\n      tag_11\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1341:1352  _fallback() */\n      jump\t// in\n    tag_65:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1566:1662  function implementation() external ifAdmin returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1838:2062  function changeAdmin(address newAdmin) external ifAdmin {... */\n    tag_28:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1309  _admin() */\n      tag_67\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1307  _admin */\n      tag_41\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1309  _admin() */\n      jump\t// in\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1309  msg.sender == _admin() */\n      and\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1297  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1309  msg.sender == _admin() */\n      and\n      eq\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1283:1359  if (msg.sender == _admin()) {... */\n      iszero\n      tag_42\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1908:1930  newAdmin != address(0) */\n      dup2\n      and\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1900:1989  require(newAdmin != address(0), 'Cannot change the admin of a proxy to the zero address') */\n      tag_70\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x36\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_37112268ceb11e15373f32f9374a1f3287d0a3e6e5a9a435ac06367e6cd0cf00\n      0x36\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2000:2032  AdminChanged(_admin(), newAdmin) */\n      0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2013:2021  _admin() */\n      tag_71\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2013:2019  _admin */\n      tag_41\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2013:2021  _admin() */\n      jump\t// in\n    tag_71:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2000:2032  AdminChanged(_admin(), newAdmin) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      dup4\n      and\n      dup2\n      mstore\n      swap2\n      dup5\n      and\n      0x20\n      dup4\n      add\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2038:2057  _setAdmin(newAdmin) */\n      tag_44\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2048:2056  newAdmin */\n      dup2\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2038:2047  _setAdmin */\n      tag_73\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2038:2057  _setAdmin(newAdmin) */\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1424:1502  function admin() external ifAdmin returns (address) {... */\n    tag_31:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1467:1474  address */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1309  _admin() */\n      tag_77\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1307  _admin */\n      tag_41\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1309  _admin() */\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1309  msg.sender == _admin() */\n      and\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1297  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1309  msg.sender == _admin() */\n      and\n      eq\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1283:1359  if (msg.sender == _admin()) {... */\n      iszero\n      tag_61\n      jumpi\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1489:1497  _admin() */\n      tag_63\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1489:1495  _admin */\n      tag_41\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1489:1497  _admin() */\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3672:3846  function _willFallback() internal virtual override {... */\n    tag_34:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3751:3759  _admin() */\n      tag_84\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3751:3757  _admin */\n      tag_41\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3751:3759  _admin() */\n      jump\t// in\n    tag_84:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3737:3759  msg.sender != _admin() */\n      and\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3737:3747  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3737:3759  msg.sender != _admin() */\n      and\n      eq\n      iszero\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3729:3814  require(msg.sender != _admin(), 'Cannot call fallback function from the proxy admin') */\n      tag_85\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x32\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_08b466bde770d6d309a22d90ec051a62ad397be6218a53e741989877ec297fc9\n      0x32\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3820:3841  super._willFallback() */\n      tag_35\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3820:3839  super._willFallback */\n      tag_35\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3820:3841  super._willFallback() */\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1008:1204  function _implementation() internal view override returns (address impl) {... */\n    tag_37:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":823:889  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1183:1194  sload(slot) */\n      sload\n      swap1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1167:1200  {... */\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":931:1747  function _delegate(address implementation) internal {... */\n    tag_38:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1264:1278  calldatasize() */\n      calldatasize\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1261:1262  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1258:1259  0 */\n      dup1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1245:1279  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1460:1461  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1457:1458  0 */\n      dup1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1441:1455  calldatasize() */\n      calldatasize\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1438:1439  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1422:1436  implementation */\n      dup5\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1415:1420  gas() */\n      gas\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1402:1462  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1524:1540  returndatasize() */\n      returndatasize\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1521:1522  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1518:1519  0 */\n      dup1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1503:1541  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1556:1562  result */\n      dup1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1615:1671  case 0 {... */\n      dup1\n      iszero\n      tag_91\n      jumpi\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1710:1726  returndatasize() */\n      returndatasize\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1707:1708  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1700:1727  return(0, returndatasize()) */\n      return\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1615:1671  case 0 {... */\n    tag_91:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1644:1660  returndatasize() */\n      returndatasize\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1641:1642  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1634:1661  revert(0, returndatasize()) */\n      revert\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3151:3318  function _admin() internal view returns (address adm) {... */\n    tag_41:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1002:1068  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 */\n      0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3297:3308  sload(slot) */\n      sload\n      swap1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3282:3314  {... */\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1339:1481  function _upgradeTo(address newImplementation) internal {... */\n    tag_45:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1401:1438  _setImplementation(newImplementation) */\n      tag_94\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1420:1437  newImplementation */\n      dup2\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1401:1419  _setImplementation */\n      tag_95\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1401:1438  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_94:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1449:1476  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1339:1481  function _upgradeTo(address newImplementation) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3434:3597  function _setAdmin(address newAdmin) internal {... */\n    tag_73:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1002:1068  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 */\n      0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3565:3587  sstore(slot, newAdmin) */\n      sstore\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3557:3593  {... */\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1618:1952  function _setImplementation(address newImplementation) internal {... */\n    tag_95:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1703:1740  Address.isContract(newImplementation) */\n      tag_99\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1722:1739  newImplementation */\n      dup2\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1703:1721  Address.isContract */\n      tag_100\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1703:1740  Address.isContract(newImplementation) */\n      jump\t// in\n    tag_99:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1688:1815  require(... */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c\n      0x3b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":823:889  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1911:1942  sstore(slot, newImplementation) */\n      sstore\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1903:1948  {... */\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":686:1272  function isContract(address account) internal view returns (bool) {... */\n    tag_100:\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":746:750  bool */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1185:1205  extcodehash(account) */\n      dup2\n      extcodehash\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1032:1098  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1224:1247  codehash != accountHash */\n      dup2\n      dup2\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1224:1266  codehash != accountHash && codehash != 0x0 */\n      tag_103\n      jumpi\n      pop\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1251:1266  codehash != 0x0 */\n      dup2\n      iszero\n      iszero\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1224:1266  codehash != accountHash && codehash != 0x0 */\n    tag_103:\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1216:1267  return (codehash != accountHash && codehash != 0x0) */\n      swap5\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":686:1272  function isContract(address account) internal view returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_08b466bde770d6d309a22d90ec051a62ad397be6218a53e741989877ec297fc9 43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e2066726f6d207468652070726f78792061646d696e\n    data_37112268ceb11e15373f32f9374a1f3287d0a3e6e5a9a435ac06367e6cd0cf00 43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f787920746f20746865207a65726f2061646472657373\n    data_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c 43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373\n\n    auxdata: 0xa2646970667358221220192c302e3ae6d263c9d93f41926adf158d0c2aec2a4da2a14ba8d7b28ac93bbc64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610652806100206000396000f3fe60806040526004361061004a5760003560e01c80633659cfe6146100545780634f1ef286146100875780635c60da1b146101075780638f28397014610138578063f851a4401461016b575b610052610180565b005b34801561006057600080fd5b506100526004803603602081101561007757600080fd5b50356001600160a01b031661019a565b6100526004803603604081101561009d57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100c857600080fd5b8201836020820111156100da57600080fd5b803590602001918460018302840111640100000000831117156100fc57600080fd5b5090925090506101d4565b34801561011357600080fd5b5061011c610281565b604080516001600160a01b039092168252519081900360200190f35b34801561014457600080fd5b506100526004803603602081101561015b57600080fd5b50356001600160a01b03166102be565b34801561017757600080fd5b5061011c610378565b6101886103a3565b610198610193610403565b610428565b565b6101a261044c565b6001600160a01b0316336001600160a01b031614156101c9576101c481610471565b6101d1565b6101d1610180565b50565b6101dc61044c565b6001600160a01b0316336001600160a01b03161415610274576101fe83610471565b6000836001600160a01b031683836040518083838082843760405192019450600093509091505080830381855af49150503d806000811461025b576040519150601f19603f3d011682016040523d82523d6000602084013e610260565b606091505b505090508061026e57600080fd5b5061027c565b61027c610180565b505050565b600061028b61044c565b6001600160a01b0316336001600160a01b031614156102b3576102ac610403565b90506102bb565b6102bb610180565b90565b6102c661044c565b6001600160a01b0316336001600160a01b031614156101c9576001600160a01b0381166103245760405162461bcd60e51b81526004018080602001828103825260368152602001806105ac6036913960400191505060405180910390fd5b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f61034d61044c565b604080516001600160a01b03928316815291841660208301528051918290030190a16101c4816104b1565b600061038261044c565b6001600160a01b0316336001600160a01b031614156102b3576102ac61044c565b6103ab61044c565b6001600160a01b0316336001600160a01b031614156103fb5760405162461bcd60e51b815260040180806020018281038252603281526020018061057a6032913960400191505060405180910390fd5b610198610198565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e808015610447573d6000f35b3d6000fd5b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b61047a816104d5565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b6104de8161053d565b6105195760405162461bcd60e51b815260040180806020018281038252603b8152602001806105e2603b913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061057157508115155b94935050505056fe43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e2066726f6d207468652070726f78792061646d696e43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f787920746f20746865207a65726f206164647265737343616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373a2646970667358221220192c302e3ae6d263c9d93f41926adf158d0c2aec2a4da2a14ba8d7b28ac93bbc64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x652 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x54 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x16B JUMPI JUMPDEST PUSH2 0x52 PUSH2 0x180 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x19A JUMP JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11C PUSH2 0x281 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11C PUSH2 0x378 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x198 PUSH2 0x193 PUSH2 0x403 JUMP JUMPDEST PUSH2 0x428 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1C9 JUMPI PUSH2 0x1C4 DUP2 PUSH2 0x471 JUMP JUMPDEST PUSH2 0x1D1 JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x180 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x44C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x274 JUMPI PUSH2 0x1FE DUP4 PUSH2 0x471 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 MLOAD SWAP3 ADD SWAP5 POP PUSH1 0x0 SWAP4 POP SWAP1 SWAP2 POP POP DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x25B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x260 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C JUMP JUMPDEST PUSH2 0x27C PUSH2 0x180 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B PUSH2 0x44C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2B3 JUMPI PUSH2 0x2AC PUSH2 0x403 JUMP JUMPDEST SWAP1 POP PUSH2 0x2BB JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x180 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x324 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5AC PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH2 0x34D PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 PUSH2 0x1C4 DUP2 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x382 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2B3 JUMPI PUSH2 0x2AC PUSH2 0x44C JUMP JUMPDEST PUSH2 0x3AB PUSH2 0x44C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x3FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x57A PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x198 PUSH2 0x198 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x447 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x47A DUP2 PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SSTORE JUMP JUMPDEST PUSH2 0x4DE DUP2 PUSH2 0x53D JUMP JUMPDEST PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5E2 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x571 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID NUMBER PUSH2 0x6E6E PUSH16 0x742063616C6C2066616C6C6261636B20 PUSH7 0x756E6374696F6E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH17 0x726F78792061646D696E43616E6E6F7420 PUSH4 0x68616E67 PUSH6 0x207468652061 PUSH5 0x6D696E206F PUSH7 0x20612070726F78 PUSH26 0x20746F20746865207A65726F206164647265737343616E6E6F74 KECCAK256 PUSH20 0x657420612070726F787920696D706C656D656E74 PUSH2 0x7469 PUSH16 0x6E20746F2061206E6F6E2D636F6E7472 PUSH2 0x6374 KECCAK256 PUSH2 0x6464 PUSH19 0x657373A2646970667358221220192C302E3AE6 0xD2 PUSH4 0xC9D93F41 SWAP3 PUSH11 0xDF158D0C2AEC2A4DA2A14B 0xA8 0xD7 0xB2 DUP11 0xC9 EXTCODESIZE 0xBC PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "462:3386:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004a5760003560e01c80633659cfe6146100545780634f1ef286146100875780635c60da1b146101075780638f28397014610138578063f851a4401461016b575b610052610180565b005b34801561006057600080fd5b506100526004803603602081101561007757600080fd5b50356001600160a01b031661019a565b6100526004803603604081101561009d57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100c857600080fd5b8201836020820111156100da57600080fd5b803590602001918460018302840111640100000000831117156100fc57600080fd5b5090925090506101d4565b34801561011357600080fd5b5061011c610281565b604080516001600160a01b039092168252519081900360200190f35b34801561014457600080fd5b506100526004803603602081101561015b57600080fd5b50356001600160a01b03166102be565b34801561017757600080fd5b5061011c610378565b6101886103a3565b610198610193610403565b610428565b565b6101a261044c565b6001600160a01b0316336001600160a01b031614156101c9576101c481610471565b6101d1565b6101d1610180565b50565b6101dc61044c565b6001600160a01b0316336001600160a01b03161415610274576101fe83610471565b6000836001600160a01b031683836040518083838082843760405192019450600093509091505080830381855af49150503d806000811461025b576040519150601f19603f3d011682016040523d82523d6000602084013e610260565b606091505b505090508061026e57600080fd5b5061027c565b61027c610180565b505050565b600061028b61044c565b6001600160a01b0316336001600160a01b031614156102b3576102ac610403565b90506102bb565b6102bb610180565b90565b6102c661044c565b6001600160a01b0316336001600160a01b031614156101c9576001600160a01b0381166103245760405162461bcd60e51b81526004018080602001828103825260368152602001806105ac6036913960400191505060405180910390fd5b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f61034d61044c565b604080516001600160a01b03928316815291841660208301528051918290030190a16101c4816104b1565b600061038261044c565b6001600160a01b0316336001600160a01b031614156102b3576102ac61044c565b6103ab61044c565b6001600160a01b0316336001600160a01b031614156103fb5760405162461bcd60e51b815260040180806020018281038252603281526020018061057a6032913960400191505060405180910390fd5b610198610198565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e808015610447573d6000f35b3d6000fd5b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b61047a816104d5565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b6104de8161053d565b6105195760405162461bcd60e51b815260040180806020018281038252603b8152602001806105e2603b913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061057157508115155b94935050505056fe43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e2066726f6d207468652070726f78792061646d696e43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f787920746f20746865207a65726f206164647265737343616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373a2646970667358221220192c302e3ae6d263c9d93f41926adf158d0c2aec2a4da2a14ba8d7b28ac93bbc64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x54 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x16B JUMPI JUMPDEST PUSH2 0x52 PUSH2 0x180 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x19A JUMP JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11C PUSH2 0x281 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11C PUSH2 0x378 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x198 PUSH2 0x193 PUSH2 0x403 JUMP JUMPDEST PUSH2 0x428 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1C9 JUMPI PUSH2 0x1C4 DUP2 PUSH2 0x471 JUMP JUMPDEST PUSH2 0x1D1 JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x180 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x44C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x274 JUMPI PUSH2 0x1FE DUP4 PUSH2 0x471 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 MLOAD SWAP3 ADD SWAP5 POP PUSH1 0x0 SWAP4 POP SWAP1 SWAP2 POP POP DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x25B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x260 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C JUMP JUMPDEST PUSH2 0x27C PUSH2 0x180 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B PUSH2 0x44C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2B3 JUMPI PUSH2 0x2AC PUSH2 0x403 JUMP JUMPDEST SWAP1 POP PUSH2 0x2BB JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x180 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x324 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5AC PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH2 0x34D PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 PUSH2 0x1C4 DUP2 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x382 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2B3 JUMPI PUSH2 0x2AC PUSH2 0x44C JUMP JUMPDEST PUSH2 0x3AB PUSH2 0x44C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x3FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x57A PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x198 PUSH2 0x198 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x447 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x47A DUP2 PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SSTORE JUMP JUMPDEST PUSH2 0x4DE DUP2 PUSH2 0x53D JUMP JUMPDEST PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5E2 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x571 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID NUMBER PUSH2 0x6E6E PUSH16 0x742063616C6C2066616C6C6261636B20 PUSH7 0x756E6374696F6E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH17 0x726F78792061646D696E43616E6E6F7420 PUSH4 0x68616E67 PUSH6 0x207468652061 PUSH5 0x6D696E206F PUSH7 0x20612070726F78 PUSH26 0x20746F20746865207A65726F206164647265737343616E6E6F74 KECCAK256 PUSH20 0x657420612070726F787920696D706C656D656E74 PUSH2 0x7469 PUSH16 0x6E20746F2061206E6F6E2D636F6E7472 PUSH2 0x6374 KECCAK256 PUSH2 0x6464 PUSH19 0x657373A2646970667358221220192C302E3AE6 0xD2 PUSH4 0xC9D93F41 SWAP3 PUSH11 0xDF158D0C2AEC2A4DA2A14B 0xA8 0xD7 0xB2 DUP11 0xC9 EXTCODESIZE 0xBC PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "462:3386:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;498:11:5;:9;:11::i;:::-;462:3386:1;2246:103;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2246:103:1;-1:-1:-1;;;;;2246:103:1;;:::i;2866:236::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2866:236:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2866:236:1;;-1:-1:-1;2866:236:1;-1:-1:-1;2866:236:1;:::i;1566:96::-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1566:96:1;;;;;;;;;;;;;;1838:224;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1838:224:1;-1:-1:-1;;;;;1838:224:1;;:::i;1424:78::-;;;;;;;;;;;;;:::i;2095:90:5:-;2131:15;:13;:15::i;:::-;2152:28;2162:17;:15;:17::i;:::-;2152:9;:28::i;:::-;2095:90::o;2246:103:1:-;1301:8;:6;:8::i;:::-;-1:-1:-1;;;;;1287:22:1;:10;-1:-1:-1;;;;;1287:22:1;;1283:76;;;2315:29:::1;2326:17;2315:10;:29::i;:::-;1283:76:::0;;;1341:11;:9;:11::i;:::-;2246:103;:::o;2866:236::-;1301:8;:6;:8::i;:::-;-1:-1:-1;;;;;1287:22:1;:10;-1:-1:-1;;;;;1287:22:1;;1283:76;;;2985:29:::1;2996:17;2985:10;:29::i;:::-;3021:12;3039:17;-1:-1:-1::0;;;;;3039:30:1::1;3070:4;;3039:36;;;;;;;;;;::::0;;::::1;::::0;-1:-1:-1;3039:36:1::1;::::0;-1:-1:-1;3039:36:1;;-1:-1:-1;;3039:36:1;;::::1;::::0;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3020:55;;;3089:7;3081:16;;;::::0;::::1;;1319:1;1283:76:::0;;;1341:11;:9;:11::i;:::-;2866:236;;;:::o;1566:96::-;1618:7;1301:8;:6;:8::i;:::-;-1:-1:-1;;;;;1287:22:1;:10;-1:-1:-1;;;;;1287:22:1;;1283:76;;;1640:17:::1;:15;:17::i;:::-;1633:24;;1283:76:::0;;;1341:11;:9;:11::i;:::-;1566:96;:::o;1838:224::-;1301:8;:6;:8::i;:::-;-1:-1:-1;;;;;1287:22:1;:10;-1:-1:-1;;;;;1287:22:1;;1283:76;;;-1:-1:-1;;;;;1908:22:1;::::1;1900:89;;;;-1:-1:-1::0;;;1900:89:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2000:32;2013:8;:6;:8::i;:::-;2000:32;::::0;;-1:-1:-1;;;;;2000:32:1;;::::1;::::0;;;;::::1;;::::0;::::1;::::0;;;;;;;;;::::1;2038:19;2048:8;2038:9;:19::i;1424:78::-:0;1467:7;1301:8;:6;:8::i;:::-;-1:-1:-1;;;;;1287:22:1;:10;-1:-1:-1;;;;;1287:22:1;;1283:76;;;1489:8:::1;:6;:8::i;3672:174::-:0;3751:8;:6;:8::i;:::-;-1:-1:-1;;;;;3737:22:1;:10;-1:-1:-1;;;;;3737:22:1;;;3729:85;;;;-1:-1:-1;;;3729:85:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3820:21;:19;:21::i;1008:196:2:-;823:66;1183:11;;1167:33::o;931:816:5:-;1264:14;1261:1;1258;1245:34;1460:1;1457;1441:14;1438:1;1422:14;1415:5;1402:60;1524:16;1521:1;1518;1503:38;1556:6;1615:56;;;;1710:16;1707:1;1700:27;1615:56;1644:16;1641:1;1634:27;3151:167:1;1002:66;3297:11;;3282:32::o;1339:142:2:-;1401:37;1420:17;1401:18;:37::i;:::-;1449:27;;-1:-1:-1;;;;;1449:27:2;;;;;;;;1339:142;:::o;3434:163:1:-;1002:66;3565:22;3557:36::o;1618:334:2:-;1703:37;1722:17;1703:18;:37::i;:::-;1688:127;;;;-1:-1:-1;;;1688:127:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;823:66;1911:31;1903:45::o;686:586:0:-;746:4;1185:20;;1032:66;1224:23;;;;;;:42;;-1:-1:-1;1251:15:0;;;1224:42;1216:51;686:586;-1:-1:-1;;;;686:586:0:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "323600",
								"executionCost": "362",
								"totalCost": "323962"
							},
							"external": {
								"": "infinite",
								"admin()": "infinite",
								"changeAdmin(address)": "infinite",
								"implementation()": "infinite",
								"upgradeTo(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_admin()": "815",
								"_setAdmin(address)": "20012",
								"_willFallback()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 462,
									"end": 3848,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 462,
									"end": 3848,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 462,
									"end": 3848,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 462,
									"end": 3848,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 462,
									"end": 3848,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 462,
									"end": 3848,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 462,
									"end": 3848,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 462,
									"end": 3848,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 462,
									"end": 3848,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 462,
									"end": 3848,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 462,
									"end": 3848,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 462,
									"end": 3848,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 462,
									"end": 3848,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 462,
									"end": 3848,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 462,
									"end": 3848,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 462,
									"end": 3848,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 462,
									"end": 3848,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 462,
									"end": 3848,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 462,
									"end": 3848,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 462,
									"end": 3848,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 462,
									"end": 3848,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220192c302e3ae6d263c9d93f41926adf158d0c2aec2a4da2a14ba8d7b28ac93bbc64736f6c634300060c0033",
									".code": [
										{
											"begin": 462,
											"end": 3848,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "PUSH",
											"source": 1,
											"value": "3659CFE6"
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "PUSH",
											"source": 1,
											"value": "4F1EF286"
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "PUSH",
											"source": 1,
											"value": "5C60DA1B"
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "PUSH",
											"source": 1,
											"value": "8F283970"
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "PUSH",
											"source": 1,
											"value": "F851A440"
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 498,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 498,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 498,
											"end": 509,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 498,
											"end": 509,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 498,
											"end": 509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 462,
											"end": 3848,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "100000000"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "100000000"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2095,
											"end": 2185,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2095,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2131,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2152,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2162,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2152,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2152,
											"end": 2180,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2152,
											"end": 2180,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2152,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2185,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1297,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2326,
											"end": 2343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2315,
											"end": 2344,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2315,
											"end": 2344,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2315,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1341,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1301,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1297,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2996,
											"end": 3013,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3039,
											"end": 3056,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3039,
											"end": 3069,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3074,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3074,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DELEGATECALL",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3075,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3081,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3081,
											"end": 3097,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3081,
											"end": 3097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3081,
											"end": 3097,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3081,
											"end": 3097,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3081,
											"end": 3097,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3081,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1319,
											"end": 1320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1341,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1301,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1297,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1640,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1640,
											"end": 1657,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1640,
											"end": 1657,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1640,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1633,
											"end": 1657,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1633,
											"end": 1657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1341,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1301,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1297,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1908,
											"end": 1930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 1930,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "PUSH",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "PUSH data",
											"source": 1,
											"value": "37112268CEB11E15373F32F9374A1F3287D0A3E6E5A9A435AC06367E6CD0CF00"
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "PUSH",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "PUSH",
											"source": 1,
											"value": "7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F"
										},
										{
											"begin": 2013,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2013,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2013,
											"end": 2021,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2021,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2013,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2048,
											"end": 2056,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2038,
											"end": 2057,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1301,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1297,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1489,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1489,
											"end": 1497,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3672,
											"end": 3846,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3672,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3751,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3751,
											"end": 3759,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3751,
											"end": 3759,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3751,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3737,
											"end": 3759,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3737,
											"end": 3747,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3737,
											"end": 3759,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3737,
											"end": 3759,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3737,
											"end": 3759,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "PUSH data",
											"source": 1,
											"value": "8B466BDE770D6D309A22D90EC051A62AD397BE6218A53E741989877EC297FC9"
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3820,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3820,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3820,
											"end": 3841,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1008,
											"end": 1204,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1008,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 823,
											"end": 889,
											"name": "PUSH",
											"source": 2,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1183,
											"end": 1194,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1200,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 931,
											"end": 1747,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 931,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1264,
											"end": 1278,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1261,
											"end": 1262,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1258,
											"end": 1259,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1245,
											"end": 1279,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1458,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1455,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1439,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1436,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1462,
											"name": "DELEGATECALL",
											"source": 5
										},
										{
											"begin": 1524,
											"end": 1540,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1521,
											"end": 1522,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1518,
											"end": 1519,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1541,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1556,
											"end": 1562,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1726,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1708,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1700,
											"end": 1727,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1660,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1641,
											"end": 1642,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1661,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3318,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3151,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1068,
											"name": "PUSH",
											"source": 1,
											"value": "B53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103"
										},
										{
											"begin": 3297,
											"end": 3308,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3297,
											"end": 3308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3282,
											"end": 3314,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1339,
											"end": 1481,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1339,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1420,
											"end": 1437,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1401,
											"end": 1438,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1401,
											"end": 1438,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1401,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "PUSH",
											"source": 2,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1481,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3434,
											"end": 3597,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3434,
											"end": 3597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1068,
											"name": "PUSH",
											"source": 1,
											"value": "B53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103"
										},
										{
											"begin": 3565,
											"end": 3587,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3593,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1618,
											"end": 1952,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1618,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1722,
											"end": 1739,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1703,
											"end": 1740,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1703,
											"end": 1740,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1703,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "3B"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH data",
											"source": 2,
											"value": "B5145A64CE8C406E5785204FE5B300F0CEDA96D6636350B38FDCCB9CD8C0C37C"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "3B"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 823,
											"end": 889,
											"name": "PUSH",
											"source": 2,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1911,
											"end": 1942,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1948,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 686,
											"end": 1272,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 686,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 746,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1205,
											"name": "EXTCODEHASH",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1098,
											"name": "PUSH",
											"source": 0,
											"value": "C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1224,
											"end": 1266,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1251,
											"end": 1266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1266,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1266,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1266,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1224,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1267,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 686,
											"end": 1272,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 686,
											"end": 1272,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"37112268CEB11E15373F32F9374A1F3287D0A3E6E5A9A435AC06367E6CD0CF00": "43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f787920746f20746865207a65726f2061646472657373",
										"8B466BDE770D6D309A22D90EC051A62AD397BE6218A53E741989877EC297FC9": "43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e2066726f6d207468652070726f78792061646d696e",
										"B5145A64CE8C406E5785204FE5B300F0CEDA96D6636350B38FDCCB9CD8C0C37C": "43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"admin()": "f851a440",
							"changeAdmin(address)": "8f283970",
							"implementation()": "5c60da1b",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract combines an upgradeability proxy with an authorization mechanism for administrative tasks. All external functions in this contract must be guarded by the `ifAdmin` modifier. See ethereum/solidity#3864 for a Solidity feature proposal that would enable this to be done automatically.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the administration has been transferred.\",\"params\":{\"newAdmin\":\"Address of the new admin.\",\"previousAdmin\":\"Address of the previous admin.\"}}},\"kind\":\"dev\",\"methods\":{\"admin()\":{\"returns\":{\"_0\":\"The address of the proxy admin.\"}},\"changeAdmin(address)\":{\"details\":\"Changes the admin of the proxy. Only the current admin can call this function.\",\"params\":{\"newAdmin\":\"Address to transfer proxy administration to.\"}},\"implementation()\":{\"returns\":{\"_0\":\"The address of the implementation.\"}},\"upgradeTo(address)\":{\"details\":\"Upgrade the backing implementation of the proxy. Only the admin can call this function.\",\"params\":{\"newImplementation\":\"Address of the new implementation.\"}},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the backing implementation of the proxy and call a function on the new implementation. This is useful to initialize the proxied contract.\",\"params\":{\"data\":\"Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\",\"newImplementation\":\"Address of the new implementation.\"}}},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"}},\"title\":\"BaseAdminUpgradeabilityProxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":\"BaseAdminUpgradeabilityProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"keccak256\":\"0xb7f2cd193efe93976d7b473fc4fa27dda83bd4db5b81889cbcd4701f3b7023ae\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://2275632637acd2f30d576612dcddc1c6ba78d81af4d044fafe870e6a809a8b6e\",\"dweb:/ipfs/QmW3uMzrLbjzP45zVpP8e9V6o8WFSceHiHq8WDMJ8YjCeL\"]},\"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":{\"keccak256\":\"0xdc62fd6989ad176a51f9a5f28241c96ae870f4f5750f477f6bf2f881cbbb17f1\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://9c974ce65116414e39965923f66c8a42e3a1fcd6f8524084480e4d841f72559b\",\"dweb:/ipfs/QmPyuD7zs5WxWDorQRcwyYkbMhS6qRBWkmKGBLGGKVqiJb\"]},\"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":{\"keccak256\":\"0x873eec666154f26e157e33a2732e4288aa2e62415b0a8c75f283878a6b00c21b\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://602c28fbb9704bfc08e32625f8181356d009ac32ca7daa3b120473a0ea3a30b8\",\"dweb:/ipfs/Qma8Mx2ggvZsCQTj664Chbv2PeeCMJSiNvrUTJ8bc6pq4Q\"]},\"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":{\"keccak256\":\"0x2b8af3eb1572f574aa114cf11395b6077f5be77f30599b13b882db5298cd32d4\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://d0374f1ecfbb3648078e52efddf6e493c8849a5d8862c3fcd259c620ab2b5285\",\"dweb:/ipfs/QmWNBxH7w8nJGTWJLDziNLETsBvohNj94eMg9cxAtDRJ5L\"]},\"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":{\"keccak256\":\"0x6e9d07b6de47504db122720079f0b3e521fdb762ab3693fbc47c35740ddcef06\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://31503694d6ca71a4ba427b1cea1fa7257c2f1855e378eb16a78146565c2ebd95\",\"dweb:/ipfs/QmUeka7SjeFZkMoiLY4e7nZtzYsNgHBdoTU83KzL5hdiwE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol": {
				"BaseUpgradeabilityProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "This contract implements a proxy that allows to change the implementation address to which it will delegate. Such a change is called an implementation upgrade.",
						"events": {
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded.",
								"params": {
									"implementation": "Address of the new implementation."
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
							}
						},
						"title": "BaseUpgradeabilityProxy",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":336:1954  contract BaseUpgradeabilityProxy is Proxy {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":336:1954  contract BaseUpgradeabilityProxy is Proxy {... */\n      mstore(0x40, 0x80)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":498:509  _fallback() */\n      tag_5\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":498:507  _fallback */\n      tag_6\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":498:509  _fallback() */\n      jump\t// in\n    tag_5:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":336:1954  contract BaseUpgradeabilityProxy is Proxy {... */\n      stop\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2095:2185  function _fallback() internal {... */\n    tag_6:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2131:2146  _willFallback() */\n      tag_8\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2131:2144  _willFallback */\n      tag_10\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2131:2146  _willFallback() */\n      jump\t// in\n    tag_8:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2152:2180  _delegate(_implementation()) */\n      tag_10\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2162:2179  _implementation() */\n      tag_11\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2162:2177  _implementation */\n      tag_12\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2162:2179  _implementation() */\n      jump\t// in\n    tag_11:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2152:2161  _delegate */\n      tag_13\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2152:2180  _delegate(_implementation()) */\n      jump\t// in\n    tag_10:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2095:2185  function _fallback() internal {... */\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1008:1204  function _implementation() internal view override returns (address impl) {... */\n    tag_12:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":823:889  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1183:1194  sload(slot) */\n      sload\n      swap1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1167:1200  {... */\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":931:1747  function _delegate(address implementation) internal {... */\n    tag_13:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1264:1278  calldatasize() */\n      calldatasize\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1261:1262  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1258:1259  0 */\n      dup1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1245:1279  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1460:1461  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1457:1458  0 */\n      dup1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1441:1455  calldatasize() */\n      calldatasize\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1438:1439  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1422:1436  implementation */\n      dup5\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1415:1420  gas() */\n      gas\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1402:1462  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1524:1540  returndatasize() */\n      returndatasize\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1521:1522  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1518:1519  0 */\n      dup1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1503:1541  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1556:1562  result */\n      dup1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1615:1671  case 0 {... */\n      dup1\n      iszero\n      tag_18\n      jumpi\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1710:1726  returndatasize() */\n      returndatasize\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1707:1708  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1700:1727  return(0, returndatasize()) */\n      return\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1615:1671  case 0 {... */\n    tag_18:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1644:1660  returndatasize() */\n      returndatasize\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1641:1642  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1634:1661  revert(0, returndatasize()) */\n      revert\n\n    auxdata: 0xa264697066735822122080238c1c240f36ee82095aaf1463780c0a37c9abffa58925670dde70c2d9507e64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50609e8061001e6000396000f3fe6080604052600a600c565b005b6012601e565b601e601a6020565b6045565b565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e8080156063573d6000f35b3d6000fdfea264697066735822122080238c1c240f36ee82095aaf1463780c0a37c9abffa58925670dde70c2d9507e64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9E DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x12 PUSH1 0x1E JUMP JUMPDEST PUSH1 0x1E PUSH1 0x1A PUSH1 0x20 JUMP JUMPDEST PUSH1 0x45 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x63 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0x23 DUP13 SHR 0x24 0xF CALLDATASIZE 0xEE DUP3 MULMOD GAS 0xAF EQ PUSH4 0x780C0A37 0xC9 0xAB SELFDESTRUCT 0xA5 DUP10 0x25 PUSH8 0xDDE70C2D9507E64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "336:1618:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600a600c565b005b6012601e565b601e601a6020565b6045565b565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e8080156063573d6000f35b3d6000fdfea264697066735822122080238c1c240f36ee82095aaf1463780c0a37c9abffa58925670dde70c2d9507e64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x12 PUSH1 0x1E JUMP JUMPDEST PUSH1 0x1E PUSH1 0x1A PUSH1 0x20 JUMP JUMPDEST PUSH1 0x45 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x63 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0x23 DUP13 SHR 0x24 0xF CALLDATASIZE 0xEE DUP3 MULMOD GAS 0xAF EQ PUSH4 0x780C0A37 0xC9 0xAB SELFDESTRUCT 0xA5 DUP10 0x25 PUSH8 0xDDE70C2D9507E64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "336:1618:2:-:0;;;498:11:5;:9;:11::i;:::-;336:1618:2;2095:90:5;2131:15;:13;:15::i;:::-;2152:28;2162:17;:15;:17::i;:::-;2152:9;:28::i;:::-;2095:90::o;1008:196:2:-;823:66;1183:11;;1167:33::o;931:816:5:-;1264:14;1261:1;1258;1245:34;1460:1;1457;1441:14;1438:1;1422:14;1415:5;1402:60;1524:16;1521:1;1518;1503:38;1556:6;1615:56;;;;1710:16;1707:1;1700:27;1615:56;1644:16;1641:1;1634:27"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "31600",
								"executionCost": "81",
								"totalCost": "31681"
							},
							"external": {
								"": "infinite"
							},
							"internal": {
								"_implementation()": "815",
								"_setImplementation(address)": "infinite",
								"_upgradeTo(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 336,
									"end": 1954,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 336,
									"end": 1954,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 336,
									"end": 1954,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 336,
									"end": 1954,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 336,
									"end": 1954,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 336,
									"end": 1954,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 336,
									"end": 1954,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 336,
									"end": 1954,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 336,
									"end": 1954,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 1954,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 336,
									"end": 1954,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 336,
									"end": 1954,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 336,
									"end": 1954,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 336,
									"end": 1954,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 336,
									"end": 1954,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 336,
									"end": 1954,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 336,
									"end": 1954,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 336,
									"end": 1954,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 1954,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 336,
									"end": 1954,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 1954,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122080238c1c240f36ee82095aaf1463780c0a37c9abffa58925670dde70c2d9507e64736f6c634300060c0033",
									".code": [
										{
											"begin": 336,
											"end": 1954,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 336,
											"end": 1954,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 336,
											"end": 1954,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 498,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 498,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 498,
											"end": 509,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 498,
											"end": 509,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 498,
											"end": 509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1954,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2185,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2095,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2131,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2152,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2162,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2152,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2152,
											"end": 2180,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2152,
											"end": 2180,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2152,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2185,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1008,
											"end": 1204,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1008,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 823,
											"end": 889,
											"name": "PUSH",
											"source": 2,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1183,
											"end": 1194,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1200,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 931,
											"end": 1747,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 931,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1264,
											"end": 1278,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1261,
											"end": 1262,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1258,
											"end": 1259,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1245,
											"end": 1279,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1458,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1455,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1439,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1436,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1462,
											"name": "DELEGATECALL",
											"source": 5
										},
										{
											"begin": 1524,
											"end": 1540,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1521,
											"end": 1522,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1518,
											"end": 1519,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1541,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1556,
											"end": 1562,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1726,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1708,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1700,
											"end": 1727,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1660,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1641,
											"end": 1642,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1661,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that allows to change the implementation address to which it will delegate. Such a change is called an implementation upgrade.\",\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\",\"params\":{\"implementation\":\"Address of the new implementation.\"}}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"title\":\"BaseUpgradeabilityProxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":\"BaseUpgradeabilityProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"keccak256\":\"0xb7f2cd193efe93976d7b473fc4fa27dda83bd4db5b81889cbcd4701f3b7023ae\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://2275632637acd2f30d576612dcddc1c6ba78d81af4d044fafe870e6a809a8b6e\",\"dweb:/ipfs/QmW3uMzrLbjzP45zVpP8e9V6o8WFSceHiHq8WDMJ8YjCeL\"]},\"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":{\"keccak256\":\"0x873eec666154f26e157e33a2732e4288aa2e62415b0a8c75f283878a6b00c21b\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://602c28fbb9704bfc08e32625f8181356d009ac32ca7daa3b120473a0ea3a30b8\",\"dweb:/ipfs/Qma8Mx2ggvZsCQTj664Chbv2PeeCMJSiNvrUTJ8bc6pq4Q\"]},\"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":{\"keccak256\":\"0x2b8af3eb1572f574aa114cf11395b6077f5be77f30599b13b882db5298cd32d4\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://d0374f1ecfbb3648078e52efddf6e493c8849a5d8862c3fcd259c620ab2b5285\",\"dweb:/ipfs/QmWNBxH7w8nJGTWJLDziNLETsBvohNj94eMg9cxAtDRJ5L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol": {
				"InitializableAdminUpgradeabilityProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "changeAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "logic",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_logic",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extends from BaseAdminUpgradeabilityProxy with an initializer for initializing the implementation, admin, and init data.",
						"kind": "dev",
						"methods": {
							"admin()": {
								"returns": {
									"_0": "The address of the proxy admin."
								}
							},
							"changeAdmin(address)": {
								"details": "Changes the admin of the proxy. Only the current admin can call this function.",
								"params": {
									"newAdmin": "Address to transfer proxy administration to."
								}
							},
							"implementation()": {
								"returns": {
									"_0": "The address of the implementation."
								}
							},
							"initialize(address,address,bytes)": {
								"params": {
									"admin": "Address of the proxy administrator.",
									"data": "Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.",
									"logic": "address of the initial implementation."
								}
							},
							"initialize(address,bytes)": {
								"details": "Contract initializer.",
								"params": {
									"_data": "Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.",
									"_logic": "Address of the initial implementation."
								}
							},
							"upgradeTo(address)": {
								"details": "Upgrade the backing implementation of the proxy. Only the admin can call this function.",
								"params": {
									"newImplementation": "Address of the new implementation."
								}
							},
							"upgradeToAndCall(address,bytes)": {
								"details": "Upgrade the backing implementation of the proxy and call a function on the new implementation. This is useful to initialize the proxied contract.",
								"params": {
									"data": "Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.",
									"newImplementation": "Address of the new implementation."
								}
							}
						},
						"title": "InitializableAdminUpgradeabilityProxy",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol\":345:1564  contract InitializableAdminUpgradeabilityProxy is... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol\":345:1564  contract InitializableAdminUpgradeabilityProxy is... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8f283970\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x8f283970\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xcf7a1d77\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xd1f57894\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_10:\n      dup1\n      0x3659cfe6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5c60da1b\n      eq\n      tag_5\n      jumpi\n    tag_1:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":498:509  _fallback() */\n      tag_13\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":498:507  _fallback */\n      tag_14\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":498:509  _fallback() */\n      jump\t// in\n    tag_13:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol\":345:1564  contract InitializableAdminUpgradeabilityProxy is... */\n      stop\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2246:2349  function upgradeTo(address newImplementation) external ifAdmin {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_18\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2866:3102  function upgradeToAndCall(address newImplementation, bytes calldata data)... */\n    tag_4:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      and\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      0x40\n      dup2\n      add\n      0x20\n      dup3\n      add\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      tag_24\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1566:1662  function implementation() external ifAdmin returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1838:2062  function changeAdmin(address newAdmin) external ifAdmin {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_31\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol\":1035:1352  function initialize(... */\n    tag_7:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      dup2\n      and\n      swap3\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap2\n      dup2\n      add\n      swap1\n      0x60\n      dup2\n      add\n      0x40\n      dup3\n      add\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_37\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":859:1224  function initialize(address _logic, bytes memory _data) public payable {... */\n    tag_8:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      and\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      0x40\n      dup2\n      add\n      0x20\n      dup3\n      add\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_43\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1424:1502  function admin() external ifAdmin returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_26\n      tag_46\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2095:2185  function _fallback() internal {... */\n    tag_14:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2131:2146  _willFallback() */\n      tag_48\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2131:2144  _willFallback */\n      tag_49\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2131:2146  _willFallback() */\n      jump\t// in\n    tag_48:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2152:2180  _delegate(_implementation()) */\n      tag_50\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2162:2179  _implementation() */\n      tag_51\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2162:2177  _implementation */\n      tag_52\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2162:2179  _implementation() */\n      jump\t// in\n    tag_51:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2152:2161  _delegate */\n      tag_53\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2152:2180  _delegate(_implementation()) */\n      jump\t// in\n    tag_50:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2095:2185  function _fallback() internal {... */\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2246:2349  function upgradeTo(address newImplementation) external ifAdmin {... */\n    tag_18:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1309  _admin() */\n      tag_55\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1307  _admin */\n      tag_56\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1309  _admin() */\n      jump\t// in\n    tag_55:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1309  msg.sender == _admin() */\n      and\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1297  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1309  msg.sender == _admin() */\n      and\n      eq\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1283:1359  if (msg.sender == _admin()) {... */\n      iszero\n      tag_57\n      jumpi\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2315:2344  _upgradeTo(newImplementation) */\n      tag_59\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2326:2343  newImplementation */\n      dup2\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2315:2325  _upgradeTo */\n      tag_60\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2315:2344  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_59:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1283:1359  if (msg.sender == _admin()) {... */\n      jump(tag_62)\n    tag_57:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1341:1352  _fallback() */\n      tag_62\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1341:1350  _fallback */\n      tag_14\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1341:1352  _fallback() */\n      jump\t// in\n    tag_62:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2246:2349  function upgradeTo(address newImplementation) external ifAdmin {... */\n      pop\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2866:3102  function upgradeToAndCall(address newImplementation, bytes calldata data)... */\n    tag_24:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1309  _admin() */\n      tag_64\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1307  _admin */\n      tag_56\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1309  _admin() */\n      jump\t// in\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1309  msg.sender == _admin() */\n      and\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1297  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1309  msg.sender == _admin() */\n      and\n      eq\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1283:1359  if (msg.sender == _admin()) {... */\n      iszero\n      tag_65\n      jumpi\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2985:3014  _upgradeTo(newImplementation) */\n      tag_67\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2996:3013  newImplementation */\n      dup4\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2985:2995  _upgradeTo */\n      tag_60\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2985:3014  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_67:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3021:3033  bool success */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3039:3056  newImplementation */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3039:3069  newImplementation.delegatecall */\n      and\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3070:3074  data */\n      dup4\n      dup4\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3039:3075  newImplementation.delegatecall(data) */\n      mload(0x40)\n      dup1\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      mload(0x40)\n      swap3\n      add\n      swap5\n      pop\n      0x00\n      swap4\n      pop\n      swap1\n      swap2\n      pop\n      pop\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_70\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_69)\n    tag_70:\n      0x60\n      swap2\n      pop\n    tag_69:\n      pop\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3020:3075  (bool success, ) = newImplementation.delegatecall(data) */\n      pop\n      swap1\n      pop\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3089:3096  success */\n      dup1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3081:3097  require(success) */\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1319:1320  _ */\n      pop\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1283:1359  if (msg.sender == _admin()) {... */\n      jump(tag_73)\n    tag_65:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1341:1352  _fallback() */\n      tag_73\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1341:1350  _fallback */\n      tag_14\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1341:1352  _fallback() */\n      jump\t// in\n    tag_73:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2866:3102  function upgradeToAndCall(address newImplementation, bytes calldata data)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1566:1662  function implementation() external ifAdmin returns (address) {... */\n    tag_27:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1618:1625  address */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1309  _admin() */\n      tag_75\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1307  _admin */\n      tag_56\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1309  _admin() */\n      jump\t// in\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1309  msg.sender == _admin() */\n      and\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1297  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1309  msg.sender == _admin() */\n      and\n      eq\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1283:1359  if (msg.sender == _admin()) {... */\n      iszero\n      tag_76\n      jumpi\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1640:1657  _implementation() */\n      tag_78\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1640:1655  _implementation */\n      tag_52\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1640:1657  _implementation() */\n      jump\t// in\n    tag_78:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1633:1657  return _implementation() */\n      swap1\n      pop\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1283:1359  if (msg.sender == _admin()) {... */\n      jump(tag_80)\n    tag_76:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1341:1352  _fallback() */\n      tag_80\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1341:1350  _fallback */\n      tag_14\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1341:1352  _fallback() */\n      jump\t// in\n    tag_80:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1566:1662  function implementation() external ifAdmin returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1838:2062  function changeAdmin(address newAdmin) external ifAdmin {... */\n    tag_31:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1309  _admin() */\n      tag_82\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1307  _admin */\n      tag_56\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1309  _admin() */\n      jump\t// in\n    tag_82:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1309  msg.sender == _admin() */\n      and\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1297  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1309  msg.sender == _admin() */\n      and\n      eq\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1283:1359  if (msg.sender == _admin()) {... */\n      iszero\n      tag_57\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1908:1930  newAdmin != address(0) */\n      dup2\n      and\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1900:1989  require(newAdmin != address(0), 'Cannot change the admin of a proxy to the zero address') */\n      tag_85\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x36\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_37112268ceb11e15373f32f9374a1f3287d0a3e6e5a9a435ac06367e6cd0cf00\n      0x36\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2000:2032  AdminChanged(_admin(), newAdmin) */\n      0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2013:2021  _admin() */\n      tag_86\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2013:2019  _admin */\n      tag_56\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2013:2021  _admin() */\n      jump\t// in\n    tag_86:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2000:2032  AdminChanged(_admin(), newAdmin) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      dup4\n      and\n      dup2\n      mstore\n      swap2\n      dup5\n      and\n      0x20\n      dup4\n      add\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2038:2057  _setAdmin(newAdmin) */\n      tag_59\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2048:2056  newAdmin */\n      dup2\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2038:2047  _setAdmin */\n      tag_88\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":2038:2057  _setAdmin(newAdmin) */\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol\":1035:1352  function initialize(... */\n    tag_37:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol\":1178:1179  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol\":1149:1166  _implementation() */\n      tag_92\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol\":1149:1164  _implementation */\n      tag_52\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol\":1149:1166  _implementation() */\n      jump\t// in\n    tag_92:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol\":1149:1180  _implementation() == address(0) */\n      and\n      eq\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol\":1141:1181  require(_implementation() == address(0)) */\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol\":1187:1243  InitializableUpgradeabilityProxy.initialize(logic, data) */\n      tag_94\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol\":1231:1236  logic */\n      dup4\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol\":1238:1242  data */\n      dup3\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol\":1187:1230  InitializableUpgradeabilityProxy.initialize */\n      tag_43\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol\":1187:1243  InitializableUpgradeabilityProxy.initialize(logic, data) */\n      jump\t// in\n    tag_94:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol\":1331:1347  _setAdmin(admin) */\n      tag_73\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol\":1341:1346  admin */\n      dup3\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol\":1331:1340  _setAdmin */\n      tag_88\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol\":1331:1347  _setAdmin(admin) */\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":859:1224  function initialize(address _logic, bytes memory _data) public payable {... */\n    tag_43:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":973:974  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":944:961  _implementation() */\n      tag_98\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":944:959  _implementation */\n      tag_52\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":944:961  _implementation() */\n      jump\t// in\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":944:975  _implementation() == address(0) */\n      and\n      eq\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":936:976  require(_implementation() == address(0)) */\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1082:1108  _setImplementation(_logic) */\n      tag_101\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1101:1107  _logic */\n      dup3\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1082:1100  _setImplementation */\n      tag_102\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1082:1108  _setImplementation(_logic) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1118:1130  _data.length */\n      dup1\n      mload\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1118:1134  _data.length > 0 */\n      iszero\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1114:1220  if (_data.length > 0) {... */\n      tag_103\n      jumpi\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1145:1157  bool success */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1163:1169  _logic */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1163:1182  _logic.delegatecall */\n      and\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1183:1188  _data */\n      dup3\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1163:1189  _logic.delegatecall(_data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_104:\n      0x20\n      dup4\n      lt\n      tag_106\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      not(0x1f)\n      swap1\n      swap3\n      add\n      swap2\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_104)\n    tag_106:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_109\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_108)\n    tag_109:\n      0x60\n      swap2\n      pop\n    tag_108:\n      pop\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1144:1189  (bool success, ) = _logic.delegatecall(_data) */\n      pop\n      swap1\n      pop\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1205:1212  success */\n      dup1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1197:1213  require(success) */\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1114:1220  if (_data.length > 0) {... */\n    tag_103:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":859:1224  function initialize(address _logic, bytes memory _data) public payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1424:1502  function admin() external ifAdmin returns (address) {... */\n    tag_46:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1467:1474  address */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1309  _admin() */\n      tag_112\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1307  _admin */\n      tag_56\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1301:1309  _admin() */\n      jump\t// in\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1309  msg.sender == _admin() */\n      and\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1297  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1287:1309  msg.sender == _admin() */\n      and\n      eq\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1283:1359  if (msg.sender == _admin()) {... */\n      iszero\n      tag_76\n      jumpi\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1489:1497  _admin() */\n      tag_78\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1489:1495  _admin */\n      tag_56\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1489:1497  _admin() */\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol\":1427:1562  function _willFallback() internal override(BaseAdminUpgradeabilityProxy, Proxy) {... */\n    tag_49:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol\":1513:1557  BaseAdminUpgradeabilityProxy._willFallback() */\n      tag_50\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol\":1513:1555  BaseAdminUpgradeabilityProxy._willFallback */\n      tag_120\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol\":1513:1557  BaseAdminUpgradeabilityProxy._willFallback() */\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1008:1204  function _implementation() internal view override returns (address impl) {... */\n    tag_52:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":823:889  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1183:1194  sload(slot) */\n      sload\n      swap1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1167:1200  {... */\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":931:1747  function _delegate(address implementation) internal {... */\n    tag_53:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1264:1278  calldatasize() */\n      calldatasize\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1261:1262  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1258:1259  0 */\n      dup1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1245:1279  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1460:1461  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1457:1458  0 */\n      dup1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1441:1455  calldatasize() */\n      calldatasize\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1438:1439  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1422:1436  implementation */\n      dup5\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1415:1420  gas() */\n      gas\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1402:1462  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1524:1540  returndatasize() */\n      returndatasize\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1521:1522  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1518:1519  0 */\n      dup1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1503:1541  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1556:1562  result */\n      dup1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1615:1671  case 0 {... */\n      dup1\n      iszero\n      tag_124\n      jumpi\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1710:1726  returndatasize() */\n      returndatasize\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1707:1708  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1700:1727  return(0, returndatasize()) */\n      return\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1615:1671  case 0 {... */\n    tag_124:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1644:1660  returndatasize() */\n      returndatasize\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1641:1642  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1634:1661  revert(0, returndatasize()) */\n      revert\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3151:3318  function _admin() internal view returns (address adm) {... */\n    tag_56:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1002:1068  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 */\n      0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3297:3308  sload(slot) */\n      sload\n      swap1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3282:3314  {... */\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1339:1481  function _upgradeTo(address newImplementation) internal {... */\n    tag_60:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1401:1438  _setImplementation(newImplementation) */\n      tag_127\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1420:1437  newImplementation */\n      dup2\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1401:1419  _setImplementation */\n      tag_102\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1401:1438  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_127:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1449:1476  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1339:1481  function _upgradeTo(address newImplementation) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3434:3597  function _setAdmin(address newAdmin) internal {... */\n    tag_88:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":1002:1068  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 */\n      0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3565:3587  sstore(slot, newAdmin) */\n      sstore\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3557:3593  {... */\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1618:1952  function _setImplementation(address newImplementation) internal {... */\n    tag_102:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1703:1740  Address.isContract(newImplementation) */\n      tag_130\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1722:1739  newImplementation */\n      dup2\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1703:1721  Address.isContract */\n      tag_131\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1703:1740  Address.isContract(newImplementation) */\n      jump\t// in\n    tag_130:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1688:1815  require(... */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c\n      0x3b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":823:889  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1911:1942  sstore(slot, newImplementation) */\n      sstore\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1903:1948  {... */\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3672:3846  function _willFallback() internal virtual override {... */\n    tag_120:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3751:3759  _admin() */\n      tag_134\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3751:3757  _admin */\n      tag_56\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3751:3759  _admin() */\n      jump\t// in\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3737:3759  msg.sender != _admin() */\n      and\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3737:3747  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3737:3759  msg.sender != _admin() */\n      and\n      eq\n      iszero\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3729:3814  require(msg.sender != _admin(), 'Cannot call fallback function from the proxy admin') */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x32\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_08b466bde770d6d309a22d90ec051a62ad397be6218a53e741989877ec297fc9\n      0x32\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3820:3841  super._willFallback() */\n      tag_50\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3820:3839  super._willFallback */\n      tag_50\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":3820:3841  super._willFallback() */\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":686:1272  function isContract(address account) internal view returns (bool) {... */\n    tag_131:\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":746:750  bool */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1185:1205  extcodehash(account) */\n      dup2\n      extcodehash\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1032:1098  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1224:1247  codehash != accountHash */\n      dup2\n      dup2\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1224:1266  codehash != accountHash && codehash != 0x0 */\n      tag_139\n      jumpi\n      pop\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1251:1266  codehash != 0x0 */\n      dup2\n      iszero\n      iszero\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1224:1266  codehash != accountHash && codehash != 0x0 */\n    tag_139:\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1216:1267  return (codehash != accountHash && codehash != 0x0) */\n      swap5\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":686:1272  function isContract(address account) internal view returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_08b466bde770d6d309a22d90ec051a62ad397be6218a53e741989877ec297fc9 43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e2066726f6d207468652070726f78792061646d696e\n    data_37112268ceb11e15373f32f9374a1f3287d0a3e6e5a9a435ac06367e6cd0cf00 43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f787920746f20746865207a65726f2061646472657373\n    data_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c 43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373\n\n    auxdata: 0xa2646970667358221220fe68a9812581c642698b9d572fd77ba9c99d18900f5df484d2cf6201692c0bbe64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610905806100206000396000f3fe6080604052600436106100705760003560e01c80638f2839701161004e5780638f2839701461015e578063cf7a1d7714610191578063d1f5789414610250578063f851a4401461030657610070565b80633659cfe61461007a5780634f1ef286146100ad5780635c60da1b1461012d575b61007861031b565b005b34801561008657600080fd5b506100786004803603602081101561009d57600080fd5b50356001600160a01b0316610335565b610078600480360360408110156100c357600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100ee57600080fd5b82018360208201111561010057600080fd5b8035906020019184600183028401116401000000008311171561012257600080fd5b50909250905061036f565b34801561013957600080fd5b5061014261041c565b604080516001600160a01b039092168252519081900360200190f35b34801561016a57600080fd5b506100786004803603602081101561018157600080fd5b50356001600160a01b0316610459565b610078600480360360608110156101a757600080fd5b6001600160a01b0382358116926020810135909116918101906060810160408201356401000000008111156101db57600080fd5b8201836020820111156101ed57600080fd5b8035906020019184600183028401116401000000008311171561020f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610513945050505050565b6100786004803603604081101561026657600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561029157600080fd5b8201836020820111156102a357600080fd5b803590602001918460018302840111640100000000831117156102c557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610543945050505050565b34801561031257600080fd5b50610142610623565b61032361064e565b61033361032e610656565b61067b565b565b61033d61069f565b6001600160a01b0316336001600160a01b031614156103645761035f816106c4565b61036c565b61036c61031b565b50565b61037761069f565b6001600160a01b0316336001600160a01b0316141561040f57610399836106c4565b6000836001600160a01b031683836040518083838082843760405192019450600093509091505080830381855af49150503d80600081146103f6576040519150601f19603f3d011682016040523d82523d6000602084013e6103fb565b606091505b505090508061040957600080fd5b50610417565b61041761031b565b505050565b600061042661069f565b6001600160a01b0316336001600160a01b0316141561044e57610447610656565b9050610456565b61045661031b565b90565b61046161069f565b6001600160a01b0316336001600160a01b03161415610364576001600160a01b0381166104bf5760405162461bcd60e51b815260040180806020018281038252603681526020018061085f6036913960400191505060405180910390fd5b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104e861069f565b604080516001600160a01b03928316815291841660208301528051918290030190a161035f81610704565b600061051d610656565b6001600160a01b03161461053057600080fd5b61053a8382610543565b61041782610704565b600061054d610656565b6001600160a01b03161461056057600080fd5b61056982610728565b80511561061f576000826001600160a01b0316826040518082805190602001908083835b602083106105ac5780518252601f19909201916020918201910161058d565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d806000811461060c576040519150601f19603f3d011682016040523d82523d6000602084013e610611565b606091505b505090508061041757600080fd5b5050565b600061062d61069f565b6001600160a01b0316336001600160a01b0316141561044e5761044761069f565b610333610790565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e80801561069a573d6000f35b3d6000fd5b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b6106cd81610728565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b610731816107f0565b61076c5760405162461bcd60e51b815260040180806020018281038252603b815260200180610895603b913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b61079861069f565b6001600160a01b0316336001600160a01b031614156107e85760405162461bcd60e51b815260040180806020018281038252603281526020018061082d6032913960400191505060405180910390fd5b610333610333565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061082457508115155b94935050505056fe43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e2066726f6d207468652070726f78792061646d696e43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f787920746f20746865207a65726f206164647265737343616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373a2646970667358221220fe68a9812581c642698b9d572fd77ba9c99d18900f5df484d2cf6201692c0bbe64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x905 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F283970 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xCF7A1D77 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0xD1F57894 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x306 JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x12D JUMPI JUMPDEST PUSH2 0x78 PUSH2 0x31B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x78 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x335 JUMP JUMPDEST PUSH2 0x78 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x36F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x142 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x78 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x459 JUMP JUMPDEST PUSH2 0x78 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x513 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x78 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x543 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x142 PUSH2 0x623 JUMP JUMPDEST PUSH2 0x323 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x333 PUSH2 0x32E PUSH2 0x656 JUMP JUMPDEST PUSH2 0x67B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x33D PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x364 JUMPI PUSH2 0x35F DUP2 PUSH2 0x6C4 JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST PUSH2 0x36C PUSH2 0x31B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x377 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x40F JUMPI PUSH2 0x399 DUP4 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 MLOAD SWAP3 ADD SWAP5 POP PUSH1 0x0 SWAP4 POP SWAP1 SWAP2 POP POP DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3F6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x417 JUMP JUMPDEST PUSH2 0x417 PUSH2 0x31B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x426 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x44E JUMPI PUSH2 0x447 PUSH2 0x656 JUMP JUMPDEST SWAP1 POP PUSH2 0x456 JUMP JUMPDEST PUSH2 0x456 PUSH2 0x31B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x461 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x364 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x85F PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH2 0x4E8 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 PUSH2 0x35F DUP2 PUSH2 0x704 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x656 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x53A DUP4 DUP3 PUSH2 0x543 JUMP JUMPDEST PUSH2 0x417 DUP3 PUSH2 0x704 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54D PUSH2 0x656 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x569 DUP3 PUSH2 0x728 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x5AC JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x58D JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x60C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x611 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62D PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x44E JUMPI PUSH2 0x447 PUSH2 0x69F JUMP JUMPDEST PUSH2 0x333 PUSH2 0x790 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x69A JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6CD DUP2 PUSH2 0x728 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SSTORE JUMP JUMPDEST PUSH2 0x731 DUP2 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x76C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x895 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE JUMP JUMPDEST PUSH2 0x798 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x82D PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x333 PUSH2 0x333 JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x824 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID NUMBER PUSH2 0x6E6E PUSH16 0x742063616C6C2066616C6C6261636B20 PUSH7 0x756E6374696F6E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH17 0x726F78792061646D696E43616E6E6F7420 PUSH4 0x68616E67 PUSH6 0x207468652061 PUSH5 0x6D696E206F PUSH7 0x20612070726F78 PUSH26 0x20746F20746865207A65726F206164647265737343616E6E6F74 KECCAK256 PUSH20 0x657420612070726F787920696D706C656D656E74 PUSH2 0x7469 PUSH16 0x6E20746F2061206E6F6E2D636F6E7472 PUSH2 0x6374 KECCAK256 PUSH2 0x6464 PUSH19 0x657373A2646970667358221220FE68A9812581 0xC6 TIMESTAMP PUSH10 0x8B9D572FD77BA9C99D18 SWAP1 0xF 0x5D DELEGATECALL DUP5 0xD2 0xCF PUSH3 0x1692C SIGNEXTEND 0xBE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "345:1219:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100705760003560e01c80638f2839701161004e5780638f2839701461015e578063cf7a1d7714610191578063d1f5789414610250578063f851a4401461030657610070565b80633659cfe61461007a5780634f1ef286146100ad5780635c60da1b1461012d575b61007861031b565b005b34801561008657600080fd5b506100786004803603602081101561009d57600080fd5b50356001600160a01b0316610335565b610078600480360360408110156100c357600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100ee57600080fd5b82018360208201111561010057600080fd5b8035906020019184600183028401116401000000008311171561012257600080fd5b50909250905061036f565b34801561013957600080fd5b5061014261041c565b604080516001600160a01b039092168252519081900360200190f35b34801561016a57600080fd5b506100786004803603602081101561018157600080fd5b50356001600160a01b0316610459565b610078600480360360608110156101a757600080fd5b6001600160a01b0382358116926020810135909116918101906060810160408201356401000000008111156101db57600080fd5b8201836020820111156101ed57600080fd5b8035906020019184600183028401116401000000008311171561020f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610513945050505050565b6100786004803603604081101561026657600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561029157600080fd5b8201836020820111156102a357600080fd5b803590602001918460018302840111640100000000831117156102c557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610543945050505050565b34801561031257600080fd5b50610142610623565b61032361064e565b61033361032e610656565b61067b565b565b61033d61069f565b6001600160a01b0316336001600160a01b031614156103645761035f816106c4565b61036c565b61036c61031b565b50565b61037761069f565b6001600160a01b0316336001600160a01b0316141561040f57610399836106c4565b6000836001600160a01b031683836040518083838082843760405192019450600093509091505080830381855af49150503d80600081146103f6576040519150601f19603f3d011682016040523d82523d6000602084013e6103fb565b606091505b505090508061040957600080fd5b50610417565b61041761031b565b505050565b600061042661069f565b6001600160a01b0316336001600160a01b0316141561044e57610447610656565b9050610456565b61045661031b565b90565b61046161069f565b6001600160a01b0316336001600160a01b03161415610364576001600160a01b0381166104bf5760405162461bcd60e51b815260040180806020018281038252603681526020018061085f6036913960400191505060405180910390fd5b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104e861069f565b604080516001600160a01b03928316815291841660208301528051918290030190a161035f81610704565b600061051d610656565b6001600160a01b03161461053057600080fd5b61053a8382610543565b61041782610704565b600061054d610656565b6001600160a01b03161461056057600080fd5b61056982610728565b80511561061f576000826001600160a01b0316826040518082805190602001908083835b602083106105ac5780518252601f19909201916020918201910161058d565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d806000811461060c576040519150601f19603f3d011682016040523d82523d6000602084013e610611565b606091505b505090508061041757600080fd5b5050565b600061062d61069f565b6001600160a01b0316336001600160a01b0316141561044e5761044761069f565b610333610790565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e80801561069a573d6000f35b3d6000fd5b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b6106cd81610728565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b610731816107f0565b61076c5760405162461bcd60e51b815260040180806020018281038252603b815260200180610895603b913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b61079861069f565b6001600160a01b0316336001600160a01b031614156107e85760405162461bcd60e51b815260040180806020018281038252603281526020018061082d6032913960400191505060405180910390fd5b610333610333565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061082457508115155b94935050505056fe43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e2066726f6d207468652070726f78792061646d696e43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f787920746f20746865207a65726f206164647265737343616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373a2646970667358221220fe68a9812581c642698b9d572fd77ba9c99d18900f5df484d2cf6201692c0bbe64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F283970 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xCF7A1D77 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0xD1F57894 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x306 JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x12D JUMPI JUMPDEST PUSH2 0x78 PUSH2 0x31B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x78 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x335 JUMP JUMPDEST PUSH2 0x78 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x36F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x142 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x78 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x459 JUMP JUMPDEST PUSH2 0x78 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x513 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x78 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x543 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x142 PUSH2 0x623 JUMP JUMPDEST PUSH2 0x323 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x333 PUSH2 0x32E PUSH2 0x656 JUMP JUMPDEST PUSH2 0x67B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x33D PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x364 JUMPI PUSH2 0x35F DUP2 PUSH2 0x6C4 JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST PUSH2 0x36C PUSH2 0x31B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x377 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x40F JUMPI PUSH2 0x399 DUP4 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 MLOAD SWAP3 ADD SWAP5 POP PUSH1 0x0 SWAP4 POP SWAP1 SWAP2 POP POP DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3F6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x417 JUMP JUMPDEST PUSH2 0x417 PUSH2 0x31B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x426 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x44E JUMPI PUSH2 0x447 PUSH2 0x656 JUMP JUMPDEST SWAP1 POP PUSH2 0x456 JUMP JUMPDEST PUSH2 0x456 PUSH2 0x31B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x461 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x364 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x85F PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH2 0x4E8 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 PUSH2 0x35F DUP2 PUSH2 0x704 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x656 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x53A DUP4 DUP3 PUSH2 0x543 JUMP JUMPDEST PUSH2 0x417 DUP3 PUSH2 0x704 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54D PUSH2 0x656 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x569 DUP3 PUSH2 0x728 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x5AC JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x58D JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x60C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x611 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62D PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x44E JUMPI PUSH2 0x447 PUSH2 0x69F JUMP JUMPDEST PUSH2 0x333 PUSH2 0x790 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x69A JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6CD DUP2 PUSH2 0x728 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SSTORE JUMP JUMPDEST PUSH2 0x731 DUP2 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x76C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x895 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE JUMP JUMPDEST PUSH2 0x798 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x82D PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x333 PUSH2 0x333 JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x824 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID NUMBER PUSH2 0x6E6E PUSH16 0x742063616C6C2066616C6C6261636B20 PUSH7 0x756E6374696F6E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH17 0x726F78792061646D696E43616E6E6F7420 PUSH4 0x68616E67 PUSH6 0x207468652061 PUSH5 0x6D696E206F PUSH7 0x20612070726F78 PUSH26 0x20746F20746865207A65726F206164647265737343616E6E6F74 KECCAK256 PUSH20 0x657420612070726F787920696D706C656D656E74 PUSH2 0x7469 PUSH16 0x6E20746F2061206E6F6E2D636F6E7472 PUSH2 0x6374 KECCAK256 PUSH2 0x6464 PUSH19 0x657373A2646970667358221220FE68A9812581 0xC6 TIMESTAMP PUSH10 0x8B9D572FD77BA9C99D18 SWAP1 0xF 0x5D DELEGATECALL DUP5 0xD2 0xCF PUSH3 0x1692C SIGNEXTEND 0xBE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "345:1219:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;498:11:5;:9;:11::i;:::-;345:1219:3;2246:103:1;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2246:103:1;-1:-1:-1;;;;;2246:103:1;;:::i;2866:236::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2866:236:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2866:236:1;;-1:-1:-1;2866:236:1;-1:-1:-1;2866:236:1;:::i;1566:96::-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1566:96:1;;;;;;;;;;;;;;1838:224;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1838:224:1;-1:-1:-1;;;;;1838:224:1;;:::i;1035:317:3:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1035:317:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1035:317:3;;-1:-1:-1;1035:317:3;;-1:-1:-1;;;;;1035:317:3:i;859:365:4:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;859:365:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;859:365:4;;-1:-1:-1;859:365:4;;-1:-1:-1;;;;;859:365:4:i;1424:78:1:-;;;;;;;;;;;;;:::i;2095:90:5:-;2131:15;:13;:15::i;:::-;2152:28;2162:17;:15;:17::i;:::-;2152:9;:28::i;:::-;2095:90::o;2246:103:1:-;1301:8;:6;:8::i;:::-;-1:-1:-1;;;;;1287:22:1;:10;-1:-1:-1;;;;;1287:22:1;;1283:76;;;2315:29:::1;2326:17;2315:10;:29::i;:::-;1283:76:::0;;;1341:11;:9;:11::i;:::-;2246:103;:::o;2866:236::-;1301:8;:6;:8::i;:::-;-1:-1:-1;;;;;1287:22:1;:10;-1:-1:-1;;;;;1287:22:1;;1283:76;;;2985:29:::1;2996:17;2985:10;:29::i;:::-;3021:12;3039:17;-1:-1:-1::0;;;;;3039:30:1::1;3070:4;;3039:36;;;;;;;;;;::::0;;::::1;::::0;-1:-1:-1;3039:36:1::1;::::0;-1:-1:-1;3039:36:1;;-1:-1:-1;;3039:36:1;;::::1;::::0;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3020:55;;;3089:7;3081:16;;;::::0;::::1;;1319:1;1283:76:::0;;;1341:11;:9;:11::i;:::-;2866:236;;;:::o;1566:96::-;1618:7;1301:8;:6;:8::i;:::-;-1:-1:-1;;;;;1287:22:1;:10;-1:-1:-1;;;;;1287:22:1;;1283:76;;;1640:17:::1;:15;:17::i;:::-;1633:24;;1283:76:::0;;;1341:11;:9;:11::i;:::-;1566:96;:::o;1838:224::-;1301:8;:6;:8::i;:::-;-1:-1:-1;;;;;1287:22:1;:10;-1:-1:-1;;;;;1287:22:1;;1283:76;;;-1:-1:-1;;;;;1908:22:1;::::1;1900:89;;;;-1:-1:-1::0;;;1900:89:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2000:32;2013:8;:6;:8::i;:::-;2000:32;::::0;;-1:-1:-1;;;;;2000:32:1;;::::1;::::0;;;;::::1;;::::0;::::1;::::0;;;;;;;;;::::1;2038:19;2048:8;2038:9;:19::i;1035:317:3:-:0;1178:1;1149:17;:15;:17::i;:::-;-1:-1:-1;;;;;1149:31:3;;1141:40;;;;;;1187:56;1231:5;1238:4;1187:43;:56::i;:::-;1331:16;1341:5;1331:9;:16::i;859:365:4:-;973:1;944:17;:15;:17::i;:::-;-1:-1:-1;;;;;944:31:4;;936:40;;;;;;1082:26;1101:6;1082:18;:26::i;:::-;1118:12;;:16;1114:106;;1145:12;1163:6;-1:-1:-1;;;;;1163:19:4;1183:5;1163:26;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1163:26:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:45;;;1205:7;1197:16;;;;;1114:106;859:365;;:::o;1424:78:1:-;1467:7;1301:8;:6;:8::i;:::-;-1:-1:-1;;;;;1287:22:1;:10;-1:-1:-1;;;;;1287:22:1;;1283:76;;;1489:8:::1;:6;:8::i;1427:135:3:-:0;1513:44;:42;:44::i;1008:196:2:-;823:66;1183:11;;1167:33::o;931:816:5:-;1264:14;1261:1;1258;1245:34;1460:1;1457;1441:14;1438:1;1422:14;1415:5;1402:60;1524:16;1521:1;1518;1503:38;1556:6;1615:56;;;;1710:16;1707:1;1700:27;1615:56;1644:16;1641:1;1634:27;3151:167:1;1002:66;3297:11;;3282:32::o;1339:142:2:-;1401:37;1420:17;1401:18;:37::i;:::-;1449:27;;-1:-1:-1;;;;;1449:27:2;;;;;;;;1339:142;:::o;3434:163:1:-;1002:66;3565:22;3557:36::o;1618:334:2:-;1703:37;1722:17;1703:18;:37::i;:::-;1688:127;;;;-1:-1:-1;;;1688:127:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;823:66;1911:31;1903:45::o;3672:174:1:-;3751:8;:6;:8::i;:::-;-1:-1:-1;;;;;3737:22:1;:10;-1:-1:-1;;;;;3737:22:1;;;3729:85;;;;-1:-1:-1;;;3729:85:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3820:21;:19;:21::i;686:586:0:-;746:4;1185:20;;1032:66;1224:23;;;;;;:42;;-1:-1:-1;1251:15:0;;;1224:42;1216:51;686:586;-1:-1:-1;;;;686:586:0:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "461800",
								"executionCost": "499",
								"totalCost": "462299"
							},
							"external": {
								"": "infinite",
								"admin()": "infinite",
								"changeAdmin(address)": "infinite",
								"implementation()": "infinite",
								"initialize(address,address,bytes)": "infinite",
								"initialize(address,bytes)": "infinite",
								"upgradeTo(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_willFallback()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 345,
									"end": 1564,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 345,
									"end": 1564,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 345,
									"end": 1564,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 345,
									"end": 1564,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 345,
									"end": 1564,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 345,
									"end": 1564,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 345,
									"end": 1564,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 345,
									"end": 1564,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 345,
									"end": 1564,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 345,
									"end": 1564,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 345,
									"end": 1564,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 345,
									"end": 1564,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 345,
									"end": 1564,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 345,
									"end": 1564,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 345,
									"end": 1564,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 345,
									"end": 1564,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 345,
									"end": 1564,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 345,
									"end": 1564,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 345,
									"end": 1564,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 345,
									"end": 1564,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 345,
									"end": 1564,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fe68a9812581c642698b9d572fd77ba9c99d18900f5df484d2cf6201692c0bbe64736f6c634300060c0033",
									".code": [
										{
											"begin": 345,
											"end": 1564,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "PUSH",
											"source": 3,
											"value": "8F283970"
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "PUSH",
											"source": 3,
											"value": "8F283970"
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "PUSH",
											"source": 3,
											"value": "CF7A1D77"
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "PUSH",
											"source": 3,
											"value": "D1F57894"
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "PUSH",
											"source": 3,
											"value": "F851A440"
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "PUSH",
											"source": 3,
											"value": "3659CFE6"
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "PUSH",
											"source": 3,
											"value": "4F1EF286"
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "PUSH",
											"source": 3,
											"value": "5C60DA1B"
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 498,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 498,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 498,
											"end": 509,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 498,
											"end": 509,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 498,
											"end": 509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 345,
											"end": 1564,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "100000000"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "100000000"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "100000000"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "100000000"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "100000000"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "100000000"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2095,
											"end": 2185,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2095,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2131,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2152,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2162,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2152,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2152,
											"end": 2180,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2152,
											"end": 2180,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2152,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2185,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1301,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1297,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2326,
											"end": 2343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2315,
											"end": 2344,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2315,
											"end": 2344,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2315,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1341,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2349,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1301,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1297,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2996,
											"end": 3013,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3039,
											"end": 3056,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3039,
											"end": 3069,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3074,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3074,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DELEGATECALL",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3075,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3081,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3081,
											"end": 3097,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3081,
											"end": 3097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3081,
											"end": 3097,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3081,
											"end": 3097,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3081,
											"end": 3097,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3081,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1319,
											"end": 1320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1341,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 3102,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1301,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1297,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1640,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1640,
											"end": 1657,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1640,
											"end": 1657,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1640,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1633,
											"end": 1657,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1633,
											"end": 1657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1341,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1662,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1838,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1301,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1297,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1908,
											"end": 1930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 1930,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "PUSH",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "PUSH data",
											"source": 1,
											"value": "37112268CEB11E15373F32F9374A1F3287D0A3E6E5A9A435AC06367E6CD0CF00"
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "PUSH",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1900,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "PUSH",
											"source": 1,
											"value": "7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F"
										},
										{
											"begin": 2013,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2013,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2013,
											"end": 2021,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2021,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2013,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2048,
											"end": 2056,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2038,
											"end": 2057,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1035,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1179,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1149,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1149,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1149,
											"end": 1166,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1166,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1149,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1149,
											"end": 1180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1180,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1141,
											"end": 1181,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1181,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1181,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1181,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1181,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1141,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1231,
											"end": 1236,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1242,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1187,
											"end": 1243,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1187,
											"end": 1243,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1187,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1341,
											"end": 1346,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1331,
											"end": 1347,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 973,
											"end": 974,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 944,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 944,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 944,
											"end": 961,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 944,
											"end": 961,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 944,
											"end": 961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 944,
											"end": 975,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 944,
											"end": 975,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 936,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 936,
											"end": 976,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 936,
											"end": 976,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 976,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 976,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 936,
											"end": 976,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 936,
											"end": 976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1082,
											"end": 1108,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1082,
											"end": 1108,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1082,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1118,
											"end": 1130,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1118,
											"end": 1130,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1118,
											"end": 1134,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1114,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1114,
											"end": 1220,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1157,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1169,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1163,
											"end": 1182,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1183,
											"end": 1188,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DELEGATECALL",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1212,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1197,
											"end": 1213,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1213,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1213,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1213,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1114,
											"end": 1220,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1114,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1424,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1301,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1297,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1283,
											"end": 1359,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1489,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1489,
											"end": 1497,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1427,
											"end": 1562,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1427,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1513,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1513,
											"end": 1557,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1008,
											"end": 1204,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1008,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 823,
											"end": 889,
											"name": "PUSH",
											"source": 2,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1183,
											"end": 1194,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1200,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 931,
											"end": 1747,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 931,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1264,
											"end": 1278,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1261,
											"end": 1262,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1258,
											"end": 1259,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1245,
											"end": 1279,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1458,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1455,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1439,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1436,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1462,
											"name": "DELEGATECALL",
											"source": 5
										},
										{
											"begin": 1524,
											"end": 1540,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1521,
											"end": 1522,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1518,
											"end": 1519,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1541,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1556,
											"end": 1562,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1726,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1708,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1700,
											"end": 1727,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1660,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1641,
											"end": 1642,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1661,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3318,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3151,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1068,
											"name": "PUSH",
											"source": 1,
											"value": "B53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103"
										},
										{
											"begin": 3297,
											"end": 3308,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3297,
											"end": 3308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3282,
											"end": 3314,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1339,
											"end": 1481,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1339,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1420,
											"end": 1437,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1401,
											"end": 1438,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1401,
											"end": 1438,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1401,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "PUSH",
											"source": 2,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1481,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3434,
											"end": 3597,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3434,
											"end": 3597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1068,
											"name": "PUSH",
											"source": 1,
											"value": "B53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103"
										},
										{
											"begin": 3565,
											"end": 3587,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3593,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1618,
											"end": 1952,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1618,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1722,
											"end": 1739,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1703,
											"end": 1740,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1703,
											"end": 1740,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1703,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "3B"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH data",
											"source": 2,
											"value": "B5145A64CE8C406E5785204FE5B300F0CEDA96D6636350B38FDCCB9CD8C0C37C"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "3B"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 823,
											"end": 889,
											"name": "PUSH",
											"source": 2,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1911,
											"end": 1942,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1948,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3672,
											"end": 3846,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3672,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3751,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3751,
											"end": 3759,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3751,
											"end": 3759,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3751,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3737,
											"end": 3759,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3737,
											"end": 3747,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3737,
											"end": 3759,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3737,
											"end": 3759,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3737,
											"end": 3759,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "PUSH data",
											"source": 1,
											"value": "8B466BDE770D6D309A22D90EC051A62AD397BE6218A53E741989877EC297FC9"
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3729,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3820,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3820,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3820,
											"end": 3841,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 686,
											"end": 1272,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 686,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 746,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1205,
											"name": "EXTCODEHASH",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1098,
											"name": "PUSH",
											"source": 0,
											"value": "C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1224,
											"end": 1266,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1251,
											"end": 1266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1266,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1266,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1266,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1224,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1267,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 686,
											"end": 1272,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 686,
											"end": 1272,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"37112268CEB11E15373F32F9374A1F3287D0A3E6E5A9A435AC06367E6CD0CF00": "43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f787920746f20746865207a65726f2061646472657373",
										"8B466BDE770D6D309A22D90EC051A62AD397BE6218A53E741989877EC297FC9": "43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e2066726f6d207468652070726f78792061646d696e",
										"B5145A64CE8C406E5785204FE5B300F0CEDA96D6636350B38FDCCB9CD8C0C37C": "43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"admin()": "f851a440",
							"changeAdmin(address)": "8f283970",
							"implementation()": "5c60da1b",
							"initialize(address,address,bytes)": "cf7a1d77",
							"initialize(address,bytes)": "d1f57894",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extends from BaseAdminUpgradeabilityProxy with an initializer for initializing the implementation, admin, and init data.\",\"kind\":\"dev\",\"methods\":{\"admin()\":{\"returns\":{\"_0\":\"The address of the proxy admin.\"}},\"changeAdmin(address)\":{\"details\":\"Changes the admin of the proxy. Only the current admin can call this function.\",\"params\":{\"newAdmin\":\"Address to transfer proxy administration to.\"}},\"implementation()\":{\"returns\":{\"_0\":\"The address of the implementation.\"}},\"initialize(address,address,bytes)\":{\"params\":{\"admin\":\"Address of the proxy administrator.\",\"data\":\"Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\",\"logic\":\"address of the initial implementation.\"}},\"initialize(address,bytes)\":{\"details\":\"Contract initializer.\",\"params\":{\"_data\":\"Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\",\"_logic\":\"Address of the initial implementation.\"}},\"upgradeTo(address)\":{\"details\":\"Upgrade the backing implementation of the proxy. Only the admin can call this function.\",\"params\":{\"newImplementation\":\"Address of the new implementation.\"}},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the backing implementation of the proxy and call a function on the new implementation. This is useful to initialize the proxied contract.\",\"params\":{\"data\":\"Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\",\"newImplementation\":\"Address of the new implementation.\"}}},\"title\":\"InitializableAdminUpgradeabilityProxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"initialize(address,address,bytes)\":{\"notice\":\"Contract initializer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol\":\"InitializableAdminUpgradeabilityProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"keccak256\":\"0xb7f2cd193efe93976d7b473fc4fa27dda83bd4db5b81889cbcd4701f3b7023ae\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://2275632637acd2f30d576612dcddc1c6ba78d81af4d044fafe870e6a809a8b6e\",\"dweb:/ipfs/QmW3uMzrLbjzP45zVpP8e9V6o8WFSceHiHq8WDMJ8YjCeL\"]},\"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":{\"keccak256\":\"0xdc62fd6989ad176a51f9a5f28241c96ae870f4f5750f477f6bf2f881cbbb17f1\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://9c974ce65116414e39965923f66c8a42e3a1fcd6f8524084480e4d841f72559b\",\"dweb:/ipfs/QmPyuD7zs5WxWDorQRcwyYkbMhS6qRBWkmKGBLGGKVqiJb\"]},\"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":{\"keccak256\":\"0x873eec666154f26e157e33a2732e4288aa2e62415b0a8c75f283878a6b00c21b\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://602c28fbb9704bfc08e32625f8181356d009ac32ca7daa3b120473a0ea3a30b8\",\"dweb:/ipfs/Qma8Mx2ggvZsCQTj664Chbv2PeeCMJSiNvrUTJ8bc6pq4Q\"]},\"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol\":{\"keccak256\":\"0xf2cad8cbed0384019ff416c4908d224cb4a134b30e52e83f0ae5730fbeaf6c84\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://d5b30ff82bfaf8f0a5197b63b4a66374d9b0eacb4ba3aebf79898bf641083223\",\"dweb:/ipfs/QmXomkYjDCJi7JBYE78tmr3FGpxiTh75RES4T5AH4Pde3x\"]},\"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":{\"keccak256\":\"0x9a0b77e7d43d1515e36f4acf849481b7aba27e526e631c9dda707a7c89a4ccb7\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://0ec09f5f893734be3fa59f997b976d09efcc8354b05d0e53170cd33f85e52aae\",\"dweb:/ipfs/QmQDxnkhnTCGno1BtQiHDvFAjPyvVd4EMyQbCtgEuiQrve\"]},\"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":{\"keccak256\":\"0x2b8af3eb1572f574aa114cf11395b6077f5be77f30599b13b882db5298cd32d4\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://d0374f1ecfbb3648078e52efddf6e493c8849a5d8862c3fcd259c620ab2b5285\",\"dweb:/ipfs/QmWNBxH7w8nJGTWJLDziNLETsBvohNj94eMg9cxAtDRJ5L\"]},\"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":{\"keccak256\":\"0x6e9d07b6de47504db122720079f0b3e521fdb762ab3693fbc47c35740ddcef06\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://31503694d6ca71a4ba427b1cea1fa7257c2f1855e378eb16a78146565c2ebd95\",\"dweb:/ipfs/QmUeka7SjeFZkMoiLY4e7nZtzYsNgHBdoTU83KzL5hdiwE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"initialize(address,address,bytes)": {
								"notice": "Contract initializer."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol": {
				"InitializableUpgradeabilityProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_logic",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extends BaseUpgradeabilityProxy with an initializer for initializing implementation and init data.",
						"kind": "dev",
						"methods": {
							"initialize(address,bytes)": {
								"details": "Contract initializer.",
								"params": {
									"_data": "Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.",
									"_logic": "Address of the initial implementation."
								}
							}
						},
						"title": "InitializableUpgradeabilityProxy",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":264:1226  contract InitializableUpgradeabilityProxy is BaseUpgradeabilityProxy {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":264:1226  contract InitializableUpgradeabilityProxy is BaseUpgradeabilityProxy {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xd1f57894\n      eq\n      tag_3\n      jumpi\n    tag_1:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":498:509  _fallback() */\n      tag_6\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":498:507  _fallback */\n      tag_7\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":498:509  _fallback() */\n      jump\t// in\n    tag_6:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":264:1226  contract InitializableUpgradeabilityProxy is BaseUpgradeabilityProxy {... */\n      stop\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":859:1224  function initialize(address _logic, bytes memory _data) public payable {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      and\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      0x40\n      dup2\n      add\n      0x20\n      dup3\n      add\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_13\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2095:2185  function _fallback() internal {... */\n    tag_7:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2131:2146  _willFallback() */\n      tag_15\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2131:2144  _willFallback */\n      tag_17\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2131:2146  _willFallback() */\n      jump\t// in\n    tag_15:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2152:2180  _delegate(_implementation()) */\n      tag_17\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2162:2179  _implementation() */\n      tag_18\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2162:2177  _implementation */\n      tag_19\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2162:2179  _implementation() */\n      jump\t// in\n    tag_18:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2152:2161  _delegate */\n      tag_20\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2152:2180  _delegate(_implementation()) */\n      jump\t// in\n    tag_17:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2095:2185  function _fallback() internal {... */\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":859:1224  function initialize(address _logic, bytes memory _data) public payable {... */\n    tag_13:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":973:974  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":944:961  _implementation() */\n      tag_22\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":944:959  _implementation */\n      tag_19\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":944:961  _implementation() */\n      jump\t// in\n    tag_22:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":944:975  _implementation() == address(0) */\n      and\n      eq\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":936:976  require(_implementation() == address(0)) */\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1082:1108  _setImplementation(_logic) */\n      tag_25\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1101:1107  _logic */\n      dup3\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1082:1100  _setImplementation */\n      tag_26\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1082:1108  _setImplementation(_logic) */\n      jump\t// in\n    tag_25:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1118:1130  _data.length */\n      dup1\n      mload\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1118:1134  _data.length > 0 */\n      iszero\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1114:1220  if (_data.length > 0) {... */\n      tag_27\n      jumpi\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1145:1157  bool success */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1163:1169  _logic */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1163:1182  _logic.delegatecall */\n      and\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1183:1188  _data */\n      dup3\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1163:1189  _logic.delegatecall(_data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_28:\n      0x20\n      dup4\n      lt\n      tag_30\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      not(0x1f)\n      swap1\n      swap3\n      add\n      swap2\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_28)\n    tag_30:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_33\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_32)\n    tag_33:\n      0x60\n      swap2\n      pop\n    tag_32:\n      pop\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1144:1189  (bool success, ) = _logic.delegatecall(_data) */\n      pop\n      swap1\n      pop\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1205:1212  success */\n      dup1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1197:1213  require(success) */\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":1114:1220  if (_data.length > 0) {... */\n      pop\n    tag_27:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":859:1224  function initialize(address _logic, bytes memory _data) public payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1008:1204  function _implementation() internal view override returns (address impl) {... */\n    tag_19:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":823:889  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1183:1194  sload(slot) */\n      sload\n      swap1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1167:1200  {... */\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":931:1747  function _delegate(address implementation) internal {... */\n    tag_20:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1264:1278  calldatasize() */\n      calldatasize\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1261:1262  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1258:1259  0 */\n      dup1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1245:1279  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1460:1461  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1457:1458  0 */\n      dup1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1441:1455  calldatasize() */\n      calldatasize\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1438:1439  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1422:1436  implementation */\n      dup5\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1415:1420  gas() */\n      gas\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1402:1462  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1524:1540  returndatasize() */\n      returndatasize\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1521:1522  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1518:1519  0 */\n      dup1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1503:1541  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1556:1562  result */\n      dup1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1615:1671  case 0 {... */\n      dup1\n      iszero\n      tag_39\n      jumpi\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1710:1726  returndatasize() */\n      returndatasize\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1707:1708  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1700:1727  return(0, returndatasize()) */\n      return\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1615:1671  case 0 {... */\n    tag_39:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1644:1660  returndatasize() */\n      returndatasize\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1641:1642  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1634:1661  revert(0, returndatasize()) */\n      revert\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1618:1952  function _setImplementation(address newImplementation) internal {... */\n    tag_26:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1703:1740  Address.isContract(newImplementation) */\n      tag_41\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1722:1739  newImplementation */\n      dup2\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1703:1721  Address.isContract */\n      tag_42\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1703:1740  Address.isContract(newImplementation) */\n      jump\t// in\n    tag_41:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1688:1815  require(... */\n      tag_43\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c\n      0x3b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_43:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":823:889  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1911:1942  sstore(slot, newImplementation) */\n      sstore\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1903:1948  {... */\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":686:1272  function isContract(address account) internal view returns (bool) {... */\n    tag_42:\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":746:750  bool */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1185:1205  extcodehash(account) */\n      dup2\n      extcodehash\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1032:1098  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1224:1247  codehash != accountHash */\n      dup2\n      dup2\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1224:1266  codehash != accountHash && codehash != 0x0 */\n      tag_45\n      jumpi\n      pop\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1251:1266  codehash != 0x0 */\n      dup2\n      iszero\n      iszero\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1224:1266  codehash != accountHash && codehash != 0x0 */\n    tag_45:\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1216:1267  return (codehash != accountHash && codehash != 0x0) */\n      swap5\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":686:1272  function isContract(address account) internal view returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c 43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373\n\n    auxdata: 0xa2646970667358221220c4c0bc96c924f782491c6fb1841f09c277c57ebf7fee1b32afe92e458b9a8da964736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610338806100206000396000f3fe60806040526004361061001e5760003560e01c8063d1f5789414610028575b6100266100de565b005b6100266004803603604081101561003e57600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561006957600080fd5b82018360208201111561007b57600080fd5b8035906020019184600183028401116401000000008311171561009d57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506100f8945050505050565b6100e66100f6565b6100f66100f16101da565b6101ff565b565b60006101026101da565b6001600160a01b03161461011557600080fd5b61011e82610223565b8051156101d6576000826001600160a01b0316826040518082805190602001908083835b602083106101615780518252601f199092019160209182019101610142565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d80600081146101c1576040519150601f19603f3d011682016040523d82523d6000602084013e6101c6565b606091505b50509050806101d457600080fd5b505b5050565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e80801561021e573d6000f35b3d6000fd5b61022c8161028b565b6102675760405162461bcd60e51b815260040180806020018281038252603b8152602001806102c8603b913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906102bf57508115155b94935050505056fe43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373a2646970667358221220c4c0bc96c924f782491c6fb1841f09c277c57ebf7fee1b32afe92e458b9a8da964736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x338 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD1F57894 EQ PUSH2 0x28 JUMPI JUMPDEST PUSH2 0x26 PUSH2 0xDE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xF8 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE6 PUSH2 0xF6 JUMP JUMPDEST PUSH2 0xF6 PUSH2 0xF1 PUSH2 0x1DA JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x102 PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11E DUP3 PUSH2 0x223 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x161 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x142 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x21E JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x22C DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH2 0x267 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C8 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x2BF JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID NUMBER PUSH2 0x6E6E PUSH16 0x742073657420612070726F787920696D PUSH17 0x6C656D656E746174696F6E20746F206120 PUSH15 0x6F6E2D636F6E747261637420616464 PUSH19 0x657373A2646970667358221220C4C0BC96C924 0xF7 DUP3 0x49 SHR PUSH16 0xB1841F09C277C57EBF7FEE1B32AFE92E GASLIMIT DUP12 SWAP11 DUP14 0xA9 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "264:962:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061001e5760003560e01c8063d1f5789414610028575b6100266100de565b005b6100266004803603604081101561003e57600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561006957600080fd5b82018360208201111561007b57600080fd5b8035906020019184600183028401116401000000008311171561009d57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506100f8945050505050565b6100e66100f6565b6100f66100f16101da565b6101ff565b565b60006101026101da565b6001600160a01b03161461011557600080fd5b61011e82610223565b8051156101d6576000826001600160a01b0316826040518082805190602001908083835b602083106101615780518252601f199092019160209182019101610142565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d80600081146101c1576040519150601f19603f3d011682016040523d82523d6000602084013e6101c6565b606091505b50509050806101d457600080fd5b505b5050565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e80801561021e573d6000f35b3d6000fd5b61022c8161028b565b6102675760405162461bcd60e51b815260040180806020018281038252603b8152602001806102c8603b913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906102bf57508115155b94935050505056fe43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373a2646970667358221220c4c0bc96c924f782491c6fb1841f09c277c57ebf7fee1b32afe92e458b9a8da964736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD1F57894 EQ PUSH2 0x28 JUMPI JUMPDEST PUSH2 0x26 PUSH2 0xDE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xF8 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE6 PUSH2 0xF6 JUMP JUMPDEST PUSH2 0xF6 PUSH2 0xF1 PUSH2 0x1DA JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x102 PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11E DUP3 PUSH2 0x223 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x161 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x142 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x21E JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x22C DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH2 0x267 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C8 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x2BF JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID NUMBER PUSH2 0x6E6E PUSH16 0x742073657420612070726F787920696D PUSH17 0x6C656D656E746174696F6E20746F206120 PUSH15 0x6F6E2D636F6E747261637420616464 PUSH19 0x657373A2646970667358221220C4C0BC96C924 0xF7 DUP3 0x49 SHR PUSH16 0xB1841F09C277C57EBF7FEE1B32AFE92E GASLIMIT DUP12 SWAP11 DUP14 0xA9 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "264:962:4:-:0;;;;;;;;;;;;;;;;;;498:11:5;:9;:11::i;:::-;264:962:4;859:365;;;;;;;;;;;;;;;;-1:-1:-1;;;;;859:365:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;859:365:4;;-1:-1:-1;859:365:4;;-1:-1:-1;;;;;859:365:4:i;2095:90:5:-;2131:15;:13;:15::i;:::-;2152:28;2162:17;:15;:17::i;:::-;2152:9;:28::i;:::-;2095:90::o;859:365:4:-;973:1;944:17;:15;:17::i;:::-;-1:-1:-1;;;;;944:31:4;;936:40;;;;;;1082:26;1101:6;1082:18;:26::i;:::-;1118:12;;:16;1114:106;;1145:12;1163:6;-1:-1:-1;;;;;1163:19:4;1183:5;1163:26;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1163:26:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:45;;;1205:7;1197:16;;;;;;1114:106;;859:365;;:::o;1008:196:2:-;823:66;1183:11;;1167:33::o;931:816:5:-;1264:14;1261:1;1258;1245:34;1460:1;1457;1441:14;1438:1;1422:14;1415:5;1402:60;1524:16;1521:1;1518;1503:38;1556:6;1615:56;;;;1710:16;1707:1;1700:27;1615:56;1644:16;1641:1;1634:27;1618:334:2;1703:37;1722:17;1703:18;:37::i;:::-;1688:127;;;;-1:-1:-1;;;1688:127:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;823:66;1911:31;1903:45::o;686:586:0:-;746:4;1185:20;;1032:66;1224:23;;;;;;:42;;-1:-1:-1;1251:15:0;;;1224:42;1216:51;686:586;-1:-1:-1;;;;686:586:0:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "164800",
								"executionCost": "208",
								"totalCost": "165008"
							},
							"external": {
								"": "infinite",
								"initialize(address,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 264,
									"end": 1226,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 264,
									"end": 1226,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 264,
									"end": 1226,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 264,
									"end": 1226,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 264,
									"end": 1226,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 264,
									"end": 1226,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 264,
									"end": 1226,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 264,
									"end": 1226,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 264,
									"end": 1226,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 1226,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 264,
									"end": 1226,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 264,
									"end": 1226,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 264,
									"end": 1226,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 264,
									"end": 1226,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 264,
									"end": 1226,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 264,
									"end": 1226,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 264,
									"end": 1226,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 264,
									"end": 1226,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 1226,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 264,
									"end": 1226,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 1226,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c4c0bc96c924f782491c6fb1841f09c277c57ebf7fee1b32afe92e458b9a8da964736f6c634300060c0033",
									".code": [
										{
											"begin": 264,
											"end": 1226,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 264,
											"end": 1226,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 1226,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 264,
											"end": 1226,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 264,
											"end": 1226,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 264,
											"end": 1226,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 264,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 264,
											"end": 1226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 264,
											"end": 1226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 1226,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 264,
											"end": 1226,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 264,
											"end": 1226,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 264,
											"end": 1226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 264,
											"end": 1226,
											"name": "PUSH",
											"source": 4,
											"value": "D1F57894"
										},
										{
											"begin": 264,
											"end": 1226,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 264,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 264,
											"end": 1226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 264,
											"end": 1226,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 264,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 498,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 498,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 498,
											"end": 509,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 498,
											"end": 509,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 498,
											"end": 509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 264,
											"end": 1226,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "100000000"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "100000000"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2095,
											"end": 2185,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2095,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 2131,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2152,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2162,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2152,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2152,
											"end": 2180,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2152,
											"end": 2180,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2152,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2185,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 973,
											"end": 974,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 944,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 944,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 944,
											"end": 961,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 944,
											"end": 961,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 944,
											"end": 961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 944,
											"end": 975,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 944,
											"end": 975,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 936,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 936,
											"end": 976,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 936,
											"end": 976,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 976,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 976,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 936,
											"end": 976,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 936,
											"end": 976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1082,
											"end": 1108,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1082,
											"end": 1108,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1082,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1118,
											"end": 1130,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1118,
											"end": 1130,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1118,
											"end": 1134,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1114,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1114,
											"end": 1220,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1157,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1169,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1163,
											"end": 1182,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1183,
											"end": 1188,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DELEGATECALL",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1212,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1197,
											"end": 1213,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1213,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1213,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1213,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1213,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1197,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1114,
											"end": 1220,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1114,
											"end": 1220,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1114,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 859,
											"end": 1224,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1008,
											"end": 1204,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1008,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 823,
											"end": 889,
											"name": "PUSH",
											"source": 2,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1183,
											"end": 1194,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1200,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 931,
											"end": 1747,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 931,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1264,
											"end": 1278,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1261,
											"end": 1262,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1258,
											"end": 1259,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1245,
											"end": 1279,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1458,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1455,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1439,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1436,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1462,
											"name": "DELEGATECALL",
											"source": 5
										},
										{
											"begin": 1524,
											"end": 1540,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1521,
											"end": 1522,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1518,
											"end": 1519,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1541,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1556,
											"end": 1562,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1726,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1708,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1700,
											"end": 1727,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1660,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1641,
											"end": 1642,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1661,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1952,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1618,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1722,
											"end": 1739,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1703,
											"end": 1740,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1703,
											"end": 1740,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1703,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "3B"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH data",
											"source": 2,
											"value": "B5145A64CE8C406E5785204FE5B300F0CEDA96D6636350B38FDCCB9CD8C0C37C"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "3B"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1688,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 823,
											"end": 889,
											"name": "PUSH",
											"source": 2,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1911,
											"end": 1942,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1948,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 686,
											"end": 1272,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 686,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 746,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1205,
											"name": "EXTCODEHASH",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1098,
											"name": "PUSH",
											"source": 0,
											"value": "C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1224,
											"end": 1266,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1251,
											"end": 1266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1266,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1266,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1266,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1224,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1267,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 686,
											"end": 1272,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 686,
											"end": 1272,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"B5145A64CE8C406E5785204FE5B300F0CEDA96D6636350B38FDCCB9CD8C0C37C": "43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"initialize(address,bytes)": "d1f57894"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extends BaseUpgradeabilityProxy with an initializer for initializing implementation and init data.\",\"kind\":\"dev\",\"methods\":{\"initialize(address,bytes)\":{\"details\":\"Contract initializer.\",\"params\":{\"_data\":\"Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\",\"_logic\":\"Address of the initial implementation.\"}}},\"title\":\"InitializableUpgradeabilityProxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":\"InitializableUpgradeabilityProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"keccak256\":\"0xb7f2cd193efe93976d7b473fc4fa27dda83bd4db5b81889cbcd4701f3b7023ae\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://2275632637acd2f30d576612dcddc1c6ba78d81af4d044fafe870e6a809a8b6e\",\"dweb:/ipfs/QmW3uMzrLbjzP45zVpP8e9V6o8WFSceHiHq8WDMJ8YjCeL\"]},\"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":{\"keccak256\":\"0x873eec666154f26e157e33a2732e4288aa2e62415b0a8c75f283878a6b00c21b\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://602c28fbb9704bfc08e32625f8181356d009ac32ca7daa3b120473a0ea3a30b8\",\"dweb:/ipfs/Qma8Mx2ggvZsCQTj664Chbv2PeeCMJSiNvrUTJ8bc6pq4Q\"]},\"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":{\"keccak256\":\"0x9a0b77e7d43d1515e36f4acf849481b7aba27e526e631c9dda707a7c89a4ccb7\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://0ec09f5f893734be3fa59f997b976d09efcc8354b05d0e53170cd33f85e52aae\",\"dweb:/ipfs/QmQDxnkhnTCGno1BtQiHDvFAjPyvVd4EMyQbCtgEuiQrve\"]},\"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":{\"keccak256\":\"0x2b8af3eb1572f574aa114cf11395b6077f5be77f30599b13b882db5298cd32d4\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://d0374f1ecfbb3648078e52efddf6e493c8849a5d8862c3fcd259c620ab2b5285\",\"dweb:/ipfs/QmWNBxH7w8nJGTWJLDziNLETsBvohNj94eMg9cxAtDRJ5L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "Implements delegation of calls to other contracts, with proper forwarding of return values and bubbling of failures. It defines a fallback function that delegates all calls to the address returned by the abstract _implementation() internal function.",
						"kind": "dev",
						"methods": {},
						"title": "Proxy",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"Implements delegation of calls to other contracts, with proper forwarding of return values and bubbling of failures. It defines a fallback function that delegates all calls to the address returned by the abstract _implementation() internal function.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Proxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":{\"keccak256\":\"0x2b8af3eb1572f574aa114cf11395b6077f5be77f30599b13b882db5298cd32d4\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://d0374f1ecfbb3648078e52efddf6e493c8849a5d8862c3fcd259c620ab2b5285\",\"dweb:/ipfs/QmWNBxH7w8nJGTWJLDziNLETsBvohNj94eMg9cxAtDRJ5L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol": {
				"UpgradeabilityProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_logic",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "Extends BaseUpgradeabilityProxy with a constructor for initializing implementation and init data.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Contract constructor.",
								"params": {
									"_data": "Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.",
									"_logic": "Address of the initial implementation."
								}
							}
						},
						"title": "UpgradeabilityProxy",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":250:1145  contract UpgradeabilityProxy is BaseUpgradeabilityProxy {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":832:1143  constructor(address _logic, bytes memory _data) public payable {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  dup2\n  mload\n  0x20\n  dup4\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap3\n  swap5\n  swap3\n  swap4\n  dup4\n  add\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_5:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_7\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_5)\ntag_7:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_8\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_8:\n  pop\n  0x40\n  mstore\n  pop\n    /* \"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":901:995  assert(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256('eip1967.proxy.implementation')) - 1)) */\n  tag_11\n  swap2\n  pop\n  pop\n  jump\ntag_11:\n    /* \"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":1001:1027  _setImplementation(_logic) */\n  tag_12\n    /* \"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":1020:1026  _logic */\n  dup3\n    /* \"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":1001:1019  _setImplementation */\n  tag_13\n    /* \"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":1001:1027  _setImplementation(_logic) */\n  jump\t// in\ntag_12:\n    /* \"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":1037:1049  _data.length */\n  dup1\n  mload\n    /* \"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":1037:1053  _data.length > 0 */\n  iszero\n    /* \"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":1033:1139  if (_data.length > 0) {... */\n  tag_14\n  jumpi\n    /* \"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":1064:1076  bool success */\n  0x00\n    /* \"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":1082:1088  _logic */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":1082:1101  _logic.delegatecall */\n  and\n    /* \"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":1102:1107  _data */\n  dup3\n    /* \"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":1082:1108  _logic.delegatecall(_data) */\n  mload(0x40)\n  dup1\n  dup3\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\ntag_15:\n  0x20\n  dup4\n  lt\n  tag_17\n  jumpi\n  dup1\n  mload\n  dup3\n  mstore\n  not(0x1f)\n  swap1\n  swap3\n  add\n  swap2\n  0x20\n  swap2\n  dup3\n  add\n  swap2\n  add\n  jump(tag_15)\ntag_17:\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  dup1\n  not\n  dup3\n  mload\n  and\n  dup2\n  dup5\n  mload\n  and\n  dup1\n  dup3\n  or\n  dup6\n  mstore\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  add\n  swap2\n  pop\n  pop\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_20\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_19)\ntag_20:\n  0x60\n  swap2\n  pop\ntag_19:\n  pop\n    /* \"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":1063:1108  (bool success, ) = _logic.delegatecall(_data) */\n  pop\n  swap1\n  pop\n    /* \"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":1124:1131  success */\n  dup1\n    /* \"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":1116:1132  require(success) */\n  tag_21\n  jumpi\n  0x00\n  dup1\n  revert\ntag_21:\n    /* \"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":1033:1139  if (_data.length > 0) {... */\n  pop\ntag_14:\n    /* \"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":832:1143  constructor(address _logic, bytes memory _data) public payable {... */\n  pop\n  pop\n    /* \"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":250:1145  contract UpgradeabilityProxy is BaseUpgradeabilityProxy {... */\n  jump(tag_22)\n    /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1618:1952  function _setImplementation(address newImplementation) internal {... */\ntag_13:\n    /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1703:1740  Address.isContract(newImplementation) */\n  tag_24\n    /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1722:1739  newImplementation */\n  dup2\n    /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1703:1721  Address.isContract */\n  or(tag_0_7, shl(0x20, tag_25))\n    /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1703:1740  Address.isContract(newImplementation) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1688:1815  require(... */\n  tag_26\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x3b\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c\n  0x3b\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_26:\n    /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":823:889  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1911:1942  sstore(slot, newImplementation) */\n  sstore\n    /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1903:1948  {... */\n  jump\t// out\n    /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":686:1272  function isContract(address account) internal view returns (bool) {... */\ntag_25:\n    /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":746:750  bool */\n  0x00\n    /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1185:1205  extcodehash(account) */\n  dup2\n  extcodehash\n    /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1032:1098  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n    /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1224:1247  codehash != accountHash */\n  dup2\n  dup2\n  eq\n  dup1\n  iszero\n  swap1\n    /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1224:1266  codehash != accountHash && codehash != 0x0 */\n  tag_28\n  jumpi\n  pop\n    /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1251:1266  codehash != 0x0 */\n  dup2\n  iszero\n  iszero\n    /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1224:1266  codehash != accountHash && codehash != 0x0 */\ntag_28:\n    /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1216:1267  return (codehash != accountHash && codehash != 0x0) */\n  swap5\n    /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":686:1272  function isContract(address account) internal view returns (bool) {... */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":250:1145  contract UpgradeabilityProxy is BaseUpgradeabilityProxy {... */\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c 43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373\n\nsub_0: assembly {\n        /* \"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":250:1145  contract UpgradeabilityProxy is BaseUpgradeabilityProxy {... */\n      mstore(0x40, 0x80)\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":498:509  _fallback() */\n      tag_5\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":498:507  _fallback */\n      tag_6\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":498:509  _fallback() */\n      jump\t// in\n    tag_5:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":250:1145  contract UpgradeabilityProxy is BaseUpgradeabilityProxy {... */\n      stop\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2095:2185  function _fallback() internal {... */\n    tag_6:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2131:2146  _willFallback() */\n      tag_9\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2131:2144  _willFallback */\n      tag_11\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2131:2146  _willFallback() */\n      jump\t// in\n    tag_9:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2152:2180  _delegate(_implementation()) */\n      tag_11\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2162:2179  _implementation() */\n      tag_12\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2162:2177  _implementation */\n      tag_13\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2162:2179  _implementation() */\n      jump\t// in\n    tag_12:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2152:2161  _delegate */\n      tag_14\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2152:2180  _delegate(_implementation()) */\n      jump\t// in\n    tag_11:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":2095:2185  function _fallback() internal {... */\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":686:1272  function isContract(address account) internal view returns (bool) {... */\n    tag_7:\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":746:750  bool */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1185:1205  extcodehash(account) */\n      dup2\n      extcodehash\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1032:1098  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1224:1247  codehash != accountHash */\n      dup2\n      dup2\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1224:1266  codehash != accountHash && codehash != 0x0 */\n      tag_16\n      jumpi\n      pop\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1251:1266  codehash != 0x0 */\n      dup2\n      iszero\n      iszero\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1224:1266  codehash != accountHash && codehash != 0x0 */\n    tag_16:\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1216:1267  return (codehash != accountHash && codehash != 0x0) */\n      swap5\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":686:1272  function isContract(address account) internal view returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1008:1204  function _implementation() internal view override returns (address impl) {... */\n    tag_13:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":823:889  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1183:1194  sload(slot) */\n      sload\n      swap1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":1167:1200  {... */\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":931:1747  function _delegate(address implementation) internal {... */\n    tag_14:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1264:1278  calldatasize() */\n      calldatasize\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1261:1262  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1258:1259  0 */\n      dup1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1245:1279  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1460:1461  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1457:1458  0 */\n      dup1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1441:1455  calldatasize() */\n      calldatasize\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1438:1439  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1422:1436  implementation */\n      dup5\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1415:1420  gas() */\n      gas\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1402:1462  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1524:1540  returndatasize() */\n      returndatasize\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1521:1522  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1518:1519  0 */\n      dup1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1503:1541  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1556:1562  result */\n      dup1\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1615:1671  case 0 {... */\n      dup1\n      iszero\n      tag_21\n      jumpi\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1710:1726  returndatasize() */\n      returndatasize\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1707:1708  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1700:1727  return(0, returndatasize()) */\n      return\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1615:1671  case 0 {... */\n    tag_21:\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1644:1660  returndatasize() */\n      returndatasize\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1641:1642  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":1634:1661  revert(0, returndatasize()) */\n      revert\n\n    auxdata: 0xa264697066735822122016eb1e9dc0c7c516ba3a47eb4d2576f3098ba954b9cc8aa04bc402f582d7a83d64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260405161037b38038061037b8339818101604052604081101561002657600080fd5b81516020830180516040519294929383019291908464010000000082111561004d57600080fd5b90830190602082018581111561006257600080fd5b825164010000000081118282018810171561007c57600080fd5b82525081516020918201929091019080838360005b838110156100a9578181015183820152602001610091565b50505050905090810190601f1680156100d65780820380516001836020036101000a031916815260200191505b50604052506100e3915050565b6100ec826101ab565b8051156101a4576000826001600160a01b0316826040518082805190602001908083835b6020831061012f5780518252601f199092019160209182019101610110565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d806000811461018f576040519150601f19603f3d011682016040523d82523d6000602084013e610194565b606091505b50509050806101a257600080fd5b505b5050610259565b6101be8161021d60201b6100201760201c565b6101f95760405162461bcd60e51b815260040180806020018281038252603b815260200180610340603b913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061025157508115155b949350505050565b60d9806102676000396000f3fe6080604052600a600c565b005b6012601e565b601e601a605b565b6080565b565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590605357508115155b949350505050565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e808015609e573d6000f35b3d6000fdfea264697066735822122016eb1e9dc0c7c516ba3a47eb4d2576f3098ba954b9cc8aa04bc402f582d7a83d64736f6c634300060c003343616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x37B CODESIZE SUB DUP1 PUSH2 0x37B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP3 SWAP5 SWAP3 SWAP4 DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x91 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xD6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP PUSH2 0xE3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEC DUP3 PUSH2 0x1AB JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x12F JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x110 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x18F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x194 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMPDEST POP POP PUSH2 0x259 JUMP JUMPDEST PUSH2 0x1BE DUP2 PUSH2 0x21D PUSH1 0x20 SHL PUSH2 0x20 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x340 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x251 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xD9 DUP1 PUSH2 0x267 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x12 PUSH1 0x1E JUMP JUMPDEST PUSH1 0x1E PUSH1 0x1A PUSH1 0x5B JUMP JUMPDEST PUSH1 0x80 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH1 0x53 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x9E JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xEB 0x1E SWAP14 0xC0 0xC7 0xC5 AND 0xBA GASPRICE SELFBALANCE 0xEB 0x4D 0x25 PUSH23 0xF3098BA954B9CC8AA04BC402F582D7A83D64736F6C6343 STOP MOD 0xC STOP CALLER NUMBER PUSH2 0x6E6E PUSH16 0x742073657420612070726F787920696D PUSH17 0x6C656D656E746174696F6E20746F206120 PUSH15 0x6F6E2D636F6E747261637420616464 PUSH19 0x65737300000000000000000000000000000000 ",
							"sourceMap": "250:895:6:-:0;;;832:311;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;832:311:6;;;;;;;;;;-1:-1:-1;832:311:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;832:311:6;;-1:-1:-1;901:94:6;;-1:-1:-1;;901:94:6;;1001:26;1020:6;1001:18;:26::i;:::-;1037:12;;:16;1033:106;;1064:12;1082:6;-1:-1:-1;;;;;1082:19:6;1102:5;1082:26;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1082:26:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:45;;;1124:7;1116:16;;;;;;1033:106;;832:311;;250:895;;1618:334:2;1703:37;1722:17;1703:18;;;;;:37;;:::i;:::-;1688:127;;;;-1:-1:-1;;;1688:127:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;823:66;1911:31;1903:45::o;686:586:0:-;746:4;1185:20;;1032:66;1224:23;;;;;;:42;;-1:-1:-1;1251:15:0;;;1224:42;1216:51;686:586;-1:-1:-1;;;;686:586:0:o;250:895:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600a600c565b005b6012601e565b601e601a605b565b6080565b565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590605357508115155b949350505050565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e808015609e573d6000f35b3d6000fdfea264697066735822122016eb1e9dc0c7c516ba3a47eb4d2576f3098ba954b9cc8aa04bc402f582d7a83d64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x12 PUSH1 0x1E JUMP JUMPDEST PUSH1 0x1E PUSH1 0x1A PUSH1 0x5B JUMP JUMPDEST PUSH1 0x80 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH1 0x53 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x9E JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xEB 0x1E SWAP14 0xC0 0xC7 0xC5 AND 0xBA GASPRICE SELFBALANCE 0xEB 0x4D 0x25 PUSH23 0xF3098BA954B9CC8AA04BC402F582D7A83D64736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "250:895:6:-:0;;;498:11:5;:9;:11::i;:::-;250:895:6;2095:90:5;2131:15;:13;:15::i;:::-;2152:28;2162:17;:15;:17::i;:::-;2152:9;:28::i;:::-;2095:90::o;686:586:0:-;746:4;1185:20;;1032:66;1224:23;;;;;;:42;;-1:-1:-1;1251:15:0;;;1224:42;1216:51;686:586;-1:-1:-1;;;;686:586:0:o;1008:196:2:-;823:66;1183:11;;1167:33::o;931:816:5:-;1264:14;1261:1;1258;1245:34;1460:1;1457;1441:14;1438:1;1422:14;1415:5;1402:60;1524:16;1521:1;1518;1503:38;1556:6;1615:56;;;;1710:16;1707:1;1700:27;1615:56;1644:16;1641:1;1634:27"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "43400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 250,
									"end": 1145,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 250,
									"end": 1145,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 250,
									"end": 1145,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH",
									"source": 6,
									"value": "100000000"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH",
									"source": 6,
									"value": "100000000"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "tag",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "tag",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 901,
									"end": 995,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 901,
									"end": 995,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 901,
									"end": 995,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 901,
									"end": 995,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 901,
									"end": 995,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1001,
									"end": 1027,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1020,
									"end": 1026,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1001,
									"end": 1019,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1001,
									"end": 1027,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1001,
									"end": 1027,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1001,
									"end": 1027,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1037,
									"end": 1049,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1037,
									"end": 1049,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1037,
									"end": 1053,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1139,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1033,
									"end": 1139,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1064,
									"end": 1076,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1082,
									"end": 1088,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1102,
									"end": 1107,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "GAS",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DELEGATECALL",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "3F"
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "RETURNDATACOPY",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1108,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1063,
									"end": 1108,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1063,
									"end": 1108,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1063,
									"end": 1108,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1124,
									"end": 1131,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1116,
									"end": 1132,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1116,
									"end": 1132,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1116,
									"end": 1132,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1116,
									"end": 1132,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1116,
									"end": 1132,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1116,
									"end": 1132,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1116,
									"end": 1132,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1139,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1139,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1033,
									"end": 1139,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 832,
									"end": 1143,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 250,
									"end": 1145,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 250,
									"end": 1145,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1618,
									"end": 1952,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1618,
									"end": 1952,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1740,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1722,
									"end": 1739,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1721,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 1703,
									"end": 1721,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1703,
									"end": 1721,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1721,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18446744073709551623"
								},
								{
									"begin": 1703,
									"end": 1721,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1740,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1703,
									"end": 1740,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1740,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1703,
									"end": 1740,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1703,
									"end": 1740,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "PUSH",
									"source": 2,
									"value": "3B"
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "PUSH data",
									"source": 2,
									"value": "B5145A64CE8C406E5785204FE5B300F0CEDA96D6636350B38FDCCB9CD8C0C37C"
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "PUSH",
									"source": 2,
									"value": "3B"
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 1688,
									"end": 1815,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 823,
									"end": 889,
									"name": "PUSH",
									"source": 2,
									"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
								},
								{
									"begin": 1911,
									"end": 1942,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1903,
									"end": 1948,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 686,
									"end": 1272,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 686,
									"end": 1272,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 746,
									"end": 750,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1185,
									"end": 1205,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1185,
									"end": 1205,
									"name": "EXTCODEHASH",
									"source": 0
								},
								{
									"begin": 1032,
									"end": 1098,
									"name": "PUSH",
									"source": 0,
									"value": "C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
								},
								{
									"begin": 1224,
									"end": 1247,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1224,
									"end": 1247,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1224,
									"end": 1247,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1224,
									"end": 1247,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1224,
									"end": 1247,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1224,
									"end": 1247,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1224,
									"end": 1266,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1224,
									"end": 1266,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1251,
									"end": 1266,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1251,
									"end": 1266,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1251,
									"end": 1266,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1224,
									"end": 1266,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1224,
									"end": 1266,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1216,
									"end": 1267,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 686,
									"end": 1272,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 686,
									"end": 1272,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 250,
									"end": 1145,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 250,
									"end": 1145,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 250,
									"end": 1145,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 1145,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 250,
									"end": 1145,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 1145,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 1145,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 250,
									"end": 1145,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 1145,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122016eb1e9dc0c7c516ba3a47eb4d2576f3098ba954b9cc8aa04bc402f582d7a83d64736f6c634300060c0033",
									".code": [
										{
											"begin": 250,
											"end": 1145,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 250,
											"end": 1145,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 250,
											"end": 1145,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 498,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 498,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 498,
											"end": 509,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 498,
											"end": 509,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 498,
											"end": 509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 250,
											"end": 1145,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2095,
											"end": 2185,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2095,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2131,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2152,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2162,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2152,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2152,
											"end": 2180,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2152,
											"end": 2180,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2152,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2185,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 686,
											"end": 1272,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 686,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 746,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1205,
											"name": "EXTCODEHASH",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1098,
											"name": "PUSH",
											"source": 0,
											"value": "C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1224,
											"end": 1266,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1251,
											"end": 1266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1266,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1266,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1266,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1224,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1267,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 686,
											"end": 1272,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 686,
											"end": 1272,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1008,
											"end": 1204,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1008,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 823,
											"end": 889,
											"name": "PUSH",
											"source": 2,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1183,
											"end": 1194,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1200,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 931,
											"end": 1747,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 931,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1264,
											"end": 1278,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1261,
											"end": 1262,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1258,
											"end": 1259,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1245,
											"end": 1279,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1458,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1455,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1439,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1436,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1462,
											"name": "DELEGATECALL",
											"source": 5
										},
										{
											"begin": 1524,
											"end": 1540,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1521,
											"end": 1522,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1518,
											"end": 1519,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1541,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1556,
											"end": 1562,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1726,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1708,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1700,
											"end": 1727,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1660,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1641,
											"end": 1642,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1661,
											"name": "REVERT",
											"source": 5
										}
									]
								},
								"B5145A64CE8C406E5785204FE5B300F0CEDA96D6636350B38FDCCB9CD8C0C37C": "43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373"
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"Extends BaseUpgradeabilityProxy with a constructor for initializing implementation and init data.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Contract constructor.\",\"params\":{\"_data\":\"Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\",\"_logic\":\"Address of the initial implementation.\"}}},\"title\":\"UpgradeabilityProxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":\"UpgradeabilityProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"keccak256\":\"0xb7f2cd193efe93976d7b473fc4fa27dda83bd4db5b81889cbcd4701f3b7023ae\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://2275632637acd2f30d576612dcddc1c6ba78d81af4d044fafe870e6a809a8b6e\",\"dweb:/ipfs/QmW3uMzrLbjzP45zVpP8e9V6o8WFSceHiHq8WDMJ8YjCeL\"]},\"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":{\"keccak256\":\"0x873eec666154f26e157e33a2732e4288aa2e62415b0a8c75f283878a6b00c21b\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://602c28fbb9704bfc08e32625f8181356d009ac32ca7daa3b120473a0ea3a30b8\",\"dweb:/ipfs/Qma8Mx2ggvZsCQTj664Chbv2PeeCMJSiNvrUTJ8bc6pq4Q\"]},\"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":{\"keccak256\":\"0x2b8af3eb1572f574aa114cf11395b6077f5be77f30599b13b882db5298cd32d4\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://d0374f1ecfbb3648078e52efddf6e493c8849a5d8862c3fcd259c620ab2b5285\",\"dweb:/ipfs/QmWNBxH7w8nJGTWJLDziNLETsBvohNj94eMg9cxAtDRJ5L\"]},\"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":{\"keccak256\":\"0x6e9d07b6de47504db122720079f0b3e521fdb762ab3693fbc47c35740ddcef06\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://31503694d6ca71a4ba427b1cea1fa7257c2f1855e378eb16a78146565c2ebd95\",\"dweb:/ipfs/QmUeka7SjeFZkMoiLY4e7nZtzYsNgHBdoTU83KzL5hdiwE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol:14:1: Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\ncontract BaseAdminUpgradeabilityProxy is BaseUpgradeabilityProxy {\n^ (Relevant source part starts here and spans across multiple lines).\ncontracts/dependencies/openzeppelin/upgradeability/Proxy.sol:16:3: The payable fallback function is defined here.\n  fallback() external payable {\n  ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 514,
						"file": "contracts/dependencies/openzeppelin/upgradeability/Proxy.sol",
						"message": "The payable fallback function is defined here.",
						"start": 464
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 3848,
					"file": "contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol",
					"start": 462
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol:11:1: Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\ncontract InitializableUpgradeabilityProxy is BaseUpgradeabilityProxy {\n^ (Relevant source part starts here and spans across multiple lines).\ncontracts/dependencies/openzeppelin/upgradeability/Proxy.sol:16:3: The payable fallback function is defined here.\n  fallback() external payable {\n  ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 514,
						"file": "contracts/dependencies/openzeppelin/upgradeability/Proxy.sol",
						"message": "The payable fallback function is defined here.",
						"start": 464
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 1226,
					"file": "contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol",
					"start": 264
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol:12:1: Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\ncontract InitializableAdminUpgradeabilityProxy is\n^ (Relevant source part starts here and spans across multiple lines).\ncontracts/dependencies/openzeppelin/upgradeability/Proxy.sol:16:3: The payable fallback function is defined here.\n  fallback() external payable {\n  ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 514,
						"file": "contracts/dependencies/openzeppelin/upgradeability/Proxy.sol",
						"message": "The payable fallback function is defined here.",
						"start": 464
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 1564,
					"file": "contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol",
					"start": 345
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/dependencies/openzeppelin/contracts/Address.sol": {
				"ast": {
					"absolutePath": "contracts/dependencies/openzeppelin/contracts/Address.sol",
					"exportedSymbols": {
						"Address": [
							63
						]
					},
					"id": 64,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "62:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 63,
							"linearizedBaseContracts": [
								63
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "752:520:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "codehash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 27,
														"src": "988:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 10,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "988:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 12,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "988:16:0"
											},
											{
												"assignments": [
													14
												],
												"declarations": [
													{
														"constant": false,
														"id": 14,
														"mutability": "mutable",
														"name": "accountHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 27,
														"src": "1010:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 13,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1010:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 16,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1032:66:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1010:88:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1165:46:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1173:32:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1197:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodehash",
																	"nodeType": "YulIdentifier",
																	"src": "1185:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1185:20:0"
															},
															"variableNames": [
																{
																	"name": "codehash",
																	"nodeType": "YulIdentifier",
																	"src": "1173:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1197:7:0",
														"valueSize": 1
													},
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "1173:8:0",
														"valueSize": 1
													}
												],
												"id": 17,
												"nodeType": "InlineAssembly",
												"src": "1156:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 18,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1224:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 19,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "1236:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1224:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 21,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1251:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "307830",
																	"id": 22,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1263:3:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "1251:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1224:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 25,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1223:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 26,
												"nodeType": "Return",
												"src": "1216:51:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "150:533:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "706:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "705:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "746:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "746:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "745:6:0"
									},
									"scope": 63,
									"src": "686:586:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2226:300:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 39,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2248:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$63",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$63",
																				"typeString": "library Address"
																			}
																		],
																		"id": 38,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2240:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 37,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2240:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 40,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2240:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2240:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 42,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "2265:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2240:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2273:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 36,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2232:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2232:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "2232:73:0"
											},
											{
												"assignments": [
													48,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 48,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 61,
														"src": "2386:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 47,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2386:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 55,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2434:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 49,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "2404:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2404:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 51,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "2426:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2404:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2404:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2385:52:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 57,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "2451:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2460:60:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2443:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2443:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "2443:78:0"
											}
										]
									},
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "1276:876:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 62,
												"src": "2174:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2174:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 62,
												"src": "2201:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2201:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2173:43:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2226:0:0"
									},
									"scope": 63,
									"src": "2155:371:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 64,
							"src": "130:2398:0"
						}
					],
					"src": "37:2492:0"
				},
				"id": 0
			},
			"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol": {
				"ast": {
					"absolutePath": "contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol",
					"exportedSymbols": {
						"BaseAdminUpgradeabilityProxy": [
							233
						]
					},
					"id": 234,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 65,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:1"
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol",
							"file": "./UpgradeabilityProxy.sol",
							"id": 66,
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 530,
							"src": "62:35:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 68,
										"name": "BaseUpgradeabilityProxy",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 298,
										"src": "503:23:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BaseUpgradeabilityProxy_$298",
											"typeString": "contract BaseUpgradeabilityProxy"
										}
									},
									"id": 69,
									"nodeType": "InheritanceSpecifier",
									"src": "503:23:1"
								}
							],
							"contractDependencies": [
								298,
								476
							],
							"contractKind": "contract",
							"documentation": {
								"id": 67,
								"nodeType": "StructuredDocumentation",
								"src": "99:362:1",
								"text": " @title BaseAdminUpgradeabilityProxy\n @dev This contract combines an upgradeability proxy with an authorization\n mechanism for administrative tasks.\n All external functions in this contract must be guarded by the\n `ifAdmin` modifier. See ethereum/solidity#3864 for a Solidity\n feature proposal that would enable this to be done automatically."
							},
							"fullyImplemented": true,
							"id": 233,
							"linearizedBaseContracts": [
								233,
								298,
								476
							],
							"name": "BaseAdminUpgradeabilityProxy",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "531:177:1",
										"text": " @dev Emitted when the administration has been transferred.\n @param previousAdmin Address of the previous admin.\n @param newAdmin Address of the new admin."
									},
									"id": 76,
									"name": "AdminChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "730:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "730:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "753:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "729:41:1"
									},
									"src": "711:60:1"
								},
								{
									"constant": true,
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "775:181:1",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 80,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 233,
									"src": "959:109:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 78,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "959:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 79,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1002:66:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "1277:86:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 83,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "1287:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1287:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 85,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "1301:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1301:8:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1287:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 93,
													"nodeType": "Block",
													"src": "1333:26:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 90,
																	"name": "_fallback",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "1341:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1341:11:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 92,
															"nodeType": "ExpressionStatement",
															"src": "1341:11:1"
														}
													]
												},
												"id": 94,
												"nodeType": "IfStatement",
												"src": "1283:76:1",
												"trueBody": {
													"id": 89,
													"nodeType": "Block",
													"src": "1311:16:1",
													"statements": [
														{
															"id": 88,
															"nodeType": "PlaceholderStatement",
															"src": "1319:1:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "1073:182:1",
										"text": " @dev Modifier to check whether the `msg.sender` is the admin.\n If it is, it will run the function. Otherwise, it will delegate the call\n to the implementation."
									},
									"id": 96,
									"name": "ifAdmin",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1274:2:1"
									},
									"src": "1258:105:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1476:26:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 104,
														"name": "_admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "1489:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1489:8:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 103,
												"id": 106,
												"nodeType": "Return",
												"src": "1482:15:1"
											}
										]
									},
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "1367:54:1",
										"text": " @return The address of the proxy admin."
									},
									"functionSelector": "f851a440",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 100,
											"modifierName": {
												"argumentTypes": null,
												"id": 99,
												"name": "ifAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 96,
												"src": "1450:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1450:7:1"
										}
									],
									"name": "admin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1438:2:1"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 108,
												"src": "1467:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1467:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1466:9:1"
									},
									"scope": 233,
									"src": "1424:78:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "1627:35:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 116,
														"name": "_implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															262
														],
														"referencedDeclaration": 262,
														"src": "1640:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1640:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "1633:24:1"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "1506:57:1",
										"text": " @return The address of the implementation."
									},
									"functionSelector": "5c60da1b",
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 112,
											"modifierName": {
												"argumentTypes": null,
												"id": 111,
												"name": "ifAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 96,
												"src": "1601:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1601:7:1"
										}
									],
									"name": "implementation",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1589:2:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 120,
												"src": "1618:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1618:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1617:9:1"
									},
									"scope": 233,
									"src": "1566:96:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "1894:168:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 129,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "1908:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1928:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1920:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 130,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1920:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1920:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1908:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f787920746f20746865207a65726f2061646472657373",
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1932:56:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_37112268ceb11e15373f32f9374a1f3287d0a3e6e5a9a435ac06367e6cd0cf00",
																"typeString": "literal_string \"Cannot change the admin of a proxy to the zero address\""
															},
															"value": "Cannot change the admin of a proxy to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_37112268ceb11e15373f32f9374a1f3287d0a3e6e5a9a435ac06367e6cd0cf00",
																"typeString": "literal_string \"Cannot change the admin of a proxy to the zero address\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1900:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1900:89:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "1900:89:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 139,
																"name": "_admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "2013:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2013:8:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 141,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "2023:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 138,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "2000:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2000:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "EmitStatement",
												"src": "1995:37:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 145,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "2048:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 144,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "2038:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2038:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "2038:19:1"
											}
										]
									},
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "1666:169:1",
										"text": " @dev Changes the admin of the proxy.\n Only the current admin can call this function.\n @param newAdmin Address to transfer proxy administration to."
									},
									"functionSelector": "8f283970",
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 126,
											"modifierName": {
												"argumentTypes": null,
												"id": 125,
												"name": "ifAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 96,
												"src": "1886:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1886:7:1"
										}
									],
									"name": "changeAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "newAdmin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "1859:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1859:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1858:18:1"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:0:1"
									},
									"scope": 233,
									"src": "1838:224:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "2309:40:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 158,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "2326:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 157,
														"name": "_upgradeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "2315:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2315:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "2315:29:1"
											}
										]
									},
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "2066:177:1",
										"text": " @dev Upgrade the backing implementation of the proxy.\n Only the admin can call this function.\n @param newImplementation Address of the new implementation."
									},
									"functionSelector": "3659cfe6",
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 155,
											"modifierName": {
												"argumentTypes": null,
												"id": 154,
												"name": "ifAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 96,
												"src": "2301:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2301:7:1"
										}
									],
									"name": "upgradeTo",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "newImplementation",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 162,
												"src": "2265:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2265:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2264:27:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2309:0:1"
									},
									"scope": 233,
									"src": "2246:103:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "2979:123:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 173,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "2996:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 172,
														"name": "_upgradeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "2985:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2985:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2985:29:1"
											},
											{
												"assignments": [
													177,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 187,
														"src": "3021:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 176,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3021:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 182,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 180,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "3070:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 178,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3039:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3039:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3039:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3020:55:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 184,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 183,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3081:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3081:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3081:16:1"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "2353:510:1",
										"text": " @dev Upgrade the backing implementation of the proxy and call a function\n on the new implementation.\n This is useful to initialize the proxied contract.\n @param newImplementation Address of the new implementation.\n @param data Data to send as msg.data in the low level call.\n It should include the signature and the parameters of the function to be called, as described in\n https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding."
									},
									"functionSelector": "4f1ef286",
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 170,
											"modifierName": {
												"argumentTypes": null,
												"id": 169,
												"name": "ifAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 96,
												"src": "2969:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2969:7:1"
										}
									],
									"name": "upgradeToAndCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "newImplementation",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 188,
												"src": "2892:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 188,
												"src": "2919:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 166,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2919:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2891:48:1"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2979:0:1"
									},
									"scope": 233,
									"src": "2866:236:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "3205:113:1",
										"statements": [
											{
												"assignments": [
													195
												],
												"declarations": [
													{
														"constant": false,
														"id": 195,
														"mutability": "mutable",
														"name": "slot",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 199,
														"src": "3211:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 194,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3211:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 197,
												"initialValue": {
													"argumentTypes": null,
													"id": 196,
													"name": "ADMIN_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 80,
													"src": "3226:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3211:25:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3282:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3290:18:1",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3303:4:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "3297:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3297:11:1"
															},
															"variableNames": [
																{
																	"name": "adm",
																	"nodeType": "YulIdentifier",
																	"src": "3290:3:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 192,
														"isOffset": false,
														"isSlot": false,
														"src": "3290:3:1",
														"valueSize": 1
													},
													{
														"declaration": 195,
														"isOffset": false,
														"isSlot": false,
														"src": "3303:4:1",
														"valueSize": 1
													}
												],
												"id": 198,
												"nodeType": "InlineAssembly",
												"src": "3273:41:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "3106:42:1",
										"text": " @return adm The admin slot."
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_admin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3166:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "adm",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 200,
												"src": "3192:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3192:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3191:13:1"
									},
									"scope": 233,
									"src": "3151:167:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "3480:117:1",
										"statements": [
											{
												"assignments": [
													207
												],
												"declarations": [
													{
														"constant": false,
														"id": 207,
														"mutability": "mutable",
														"name": "slot",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 211,
														"src": "3486:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 206,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3486:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 209,
												"initialValue": {
													"argumentTypes": null,
													"id": 208,
													"name": "ADMIN_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 80,
													"src": "3501:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3486:25:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3557:36:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3572:4:1"
																	},
																	{
																		"name": "newAdmin",
																		"nodeType": "YulIdentifier",
																		"src": "3578:8:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "3565:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3565:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3565:22:1"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 203,
														"isOffset": false,
														"isSlot": false,
														"src": "3578:8:1",
														"valueSize": 1
													},
													{
														"declaration": 207,
														"isOffset": false,
														"isSlot": false,
														"src": "3572:4:1",
														"valueSize": 1
													}
												],
												"id": 210,
												"nodeType": "InlineAssembly",
												"src": "3548:45:1"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "3322:109:1",
										"text": " @dev Sets the address of the proxy admin.\n @param newAdmin Address of the new proxy admin."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "newAdmin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 212,
												"src": "3453:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3452:18:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3480:0:1"
									},
									"scope": 233,
									"src": "3434:163:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										462
									],
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "3723:123:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 218,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "3737:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3737:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 220,
																	"name": "_admin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "3751:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3751:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3737:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e2066726f6d207468652070726f78792061646d696e",
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3761:52:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_08b466bde770d6d309a22d90ec051a62ad397be6218a53e741989877ec297fc9",
																"typeString": "literal_string \"Cannot call fallback function from the proxy admin\""
															},
															"value": "Cannot call fallback function from the proxy admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_08b466bde770d6d309a22d90ec051a62ad397be6218a53e741989877ec297fc9",
																"typeString": "literal_string \"Cannot call fallback function from the proxy admin\""
															}
														],
														"id": 217,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3729:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3729:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "3729:85:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 226,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -25,
															"src": "3820:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_super$_BaseAdminUpgradeabilityProxy_$233",
																"typeString": "contract super BaseAdminUpgradeabilityProxy"
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_willFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 462,
														"src": "3820:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3820:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "3820:21:1"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "3601:68:1",
										"text": " @dev Only fall back when the sender is not the admin."
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_willFallback",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 215,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3714:8:1"
									},
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3694:2:1"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3723:0:1"
									},
									"scope": 233,
									"src": "3672:174:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 234,
							"src": "462:3386:1"
						}
					],
					"src": "37:3812:1"
				},
				"id": 1
			},
			"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol": {
				"ast": {
					"absolutePath": "contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol",
					"exportedSymbols": {
						"BaseUpgradeabilityProxy": [
							298
						]
					},
					"id": 299,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:2"
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/upgradeability/Proxy.sol",
							"file": "./Proxy.sol",
							"id": 236,
							"nodeType": "ImportDirective",
							"scope": 299,
							"sourceUnit": 477,
							"src": "62:21:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/Address.sol",
							"file": "../contracts/Address.sol",
							"id": 237,
							"nodeType": "ImportDirective",
							"scope": 299,
							"sourceUnit": 64,
							"src": "84:34:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 239,
										"name": "Proxy",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 476,
										"src": "372:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Proxy_$476",
											"typeString": "contract Proxy"
										}
									},
									"id": 240,
									"nodeType": "InheritanceSpecifier",
									"src": "372:5:2"
								}
							],
							"contractDependencies": [
								476
							],
							"contractKind": "contract",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "120:215:2",
								"text": " @title BaseUpgradeabilityProxy\n @dev This contract implements a proxy that allows to change the\n implementation address to which it will delegate.\n Such a change is called an implementation upgrade."
							},
							"fullyImplemented": true,
							"id": 298,
							"linearizedBaseContracts": [
								298,
								476
							],
							"name": "BaseUpgradeabilityProxy",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "382:126:2",
										"text": " @dev Emitted when the implementation is upgraded.\n @param implementation Address of the new implementation."
									},
									"id": 245,
									"name": "Upgraded",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 245,
												"src": "526:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "525:32:2"
									},
									"src": "511:47:2"
								},
								{
									"constant": true,
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "562:206:2",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 249,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 298,
									"src": "771:118:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 247,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "771:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 248,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "823:66:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										449
									],
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "1081:123:2",
										"statements": [
											{
												"assignments": [
													257
												],
												"declarations": [
													{
														"constant": false,
														"id": 257,
														"mutability": "mutable",
														"name": "slot",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 261,
														"src": "1087:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 256,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1087:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 259,
												"initialValue": {
													"argumentTypes": null,
													"id": 258,
													"name": "IMPLEMENTATION_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 249,
													"src": "1102:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1087:34:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1167:33:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1175:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1189:4:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "1183:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1183:11:2"
															},
															"variableNames": [
																{
																	"name": "impl",
																	"nodeType": "YulIdentifier",
																	"src": "1175:4:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 254,
														"isOffset": false,
														"isSlot": false,
														"src": "1175:4:2",
														"valueSize": 1
													},
													{
														"declaration": 257,
														"isOffset": false,
														"isSlot": false,
														"src": "1189:4:2",
														"valueSize": 1
													}
												],
												"id": 260,
												"nodeType": "InlineAssembly",
												"src": "1158:42:2"
											}
										]
									},
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "894:111:2",
										"text": " @dev Returns the current implementation.\n @return impl Address of the current implementation"
									},
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 252,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1049:8:2"
									},
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1032:2:2"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "impl",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 262,
												"src": "1067:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1066:14:2"
									},
									"scope": 298,
									"src": "1008:196:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "1395:86:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 269,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "1420:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 268,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "1401:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1401:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "1401:37:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 273,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "1458:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 272,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "1449:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1449:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "EmitStatement",
												"src": "1444:32:2"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "1208:128:2",
										"text": " @dev Upgrades the proxy to a new implementation.\n @param newImplementation Address of the new implementation."
									},
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeTo",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "newImplementation",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 277,
												"src": "1359:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1359:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1358:27:2"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1395:0:2"
									},
									"scope": 298,
									"src": "1339:142:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "1682:270:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 286,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 280,
																	"src": "1722:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 284,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 63,
																	"src": "1703:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$63_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 28,
																"src": "1703:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1703:37:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373",
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1748:61:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c",
																"typeString": "literal_string \"Cannot set a proxy implementation to a non-contract address\""
															},
															"value": "Cannot set a proxy implementation to a non-contract address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c",
																"typeString": "literal_string \"Cannot set a proxy implementation to a non-contract address\""
															}
														],
														"id": 283,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1688:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1688:127:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "1688:127:2"
											},
											{
												"assignments": [
													292
												],
												"declarations": [
													{
														"constant": false,
														"id": 292,
														"mutability": "mutable",
														"name": "slot",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 296,
														"src": "1822:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 291,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 294,
												"initialValue": {
													"argumentTypes": null,
													"id": 293,
													"name": "IMPLEMENTATION_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 249,
													"src": "1837:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1822:34:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1903:45:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1918:4:2"
																	},
																	{
																		"name": "newImplementation",
																		"nodeType": "YulIdentifier",
																		"src": "1924:17:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "1911:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1911:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1911:31:2"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 280,
														"isOffset": false,
														"isSlot": false,
														"src": "1924:17:2",
														"valueSize": 1
													},
													{
														"declaration": 292,
														"isOffset": false,
														"isSlot": false,
														"src": "1918:4:2",
														"valueSize": 1
													}
												],
												"id": 295,
												"nodeType": "InlineAssembly",
												"src": "1894:54:2"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "1485:130:2",
										"text": " @dev Sets the implementation address of the proxy.\n @param newImplementation Address of the new implementation."
									},
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "newImplementation",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 297,
												"src": "1646:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1646:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1645:27:2"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1682:0:2"
									},
									"scope": 298,
									"src": "1618:334:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 299,
							"src": "336:1618:2"
						}
					],
					"src": "37:1918:2"
				},
				"id": 2
			},
			"contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol": {
				"ast": {
					"absolutePath": "contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy.sol",
					"exportedSymbols": {
						"InitializableAdminUpgradeabilityProxy": [
							369
						]
					},
					"id": 370,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 300,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:3"
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol",
							"file": "./BaseAdminUpgradeabilityProxy.sol",
							"id": 301,
							"nodeType": "ImportDirective",
							"scope": 370,
							"sourceUnit": 234,
							"src": "62:44:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol",
							"file": "./InitializableUpgradeabilityProxy.sol",
							"id": 302,
							"nodeType": "ImportDirective",
							"scope": 370,
							"sourceUnit": 433,
							"src": "107:48:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 304,
										"name": "BaseAdminUpgradeabilityProxy",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 233,
										"src": "397:28:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BaseAdminUpgradeabilityProxy_$233",
											"typeString": "contract BaseAdminUpgradeabilityProxy"
										}
									},
									"id": 305,
									"nodeType": "InheritanceSpecifier",
									"src": "397:28:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 306,
										"name": "InitializableUpgradeabilityProxy",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 432,
										"src": "429:32:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_InitializableUpgradeabilityProxy_$432",
											"typeString": "contract InitializableUpgradeabilityProxy"
										}
									},
									"id": 307,
									"nodeType": "InheritanceSpecifier",
									"src": "429:32:3"
								}
							],
							"contractDependencies": [
								233,
								298,
								432,
								476
							],
							"contractKind": "contract",
							"documentation": {
								"id": 303,
								"nodeType": "StructuredDocumentation",
								"src": "157:187:3",
								"text": " @title InitializableAdminUpgradeabilityProxy\n @dev Extends from BaseAdminUpgradeabilityProxy with an initializer for\n initializing the implementation, admin, and init data."
							},
							"fullyImplemented": true,
							"id": 369,
							"linearizedBaseContracts": [
								369,
								432,
								233,
								298,
								476
							],
							"name": "InitializableAdminUpgradeabilityProxy",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "1135:217:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 318,
																	"name": "_implementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		262
																	],
																	"referencedDeclaration": 262,
																	"src": "1149:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1149:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1178:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1170:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 320,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1170:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1170:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1149:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1141:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1141:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "1141:40:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 330,
															"name": "logic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "1231:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 331,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "1238:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 327,
															"name": "InitializableUpgradeabilityProxy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "1187:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_InitializableUpgradeabilityProxy_$432_$",
																"typeString": "type(contract InitializableUpgradeabilityProxy)"
															}
														},
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "initialize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 431,
														"src": "1187:43:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1187:56:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "1187:56:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 335,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1256:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "656970313936372e70726f78792e61646d696e",
																							"id": 341,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1296:21:3",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104",
																								"typeString": "literal_string \"eip1967.proxy.admin\""
																							},
																							"value": "eip1967.proxy.admin"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104",
																								"typeString": "literal_string \"eip1967.proxy.admin\""
																							}
																						],
																						"id": 340,
																						"name": "keccak256",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -8,
																						"src": "1286:9:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																							"typeString": "function (bytes memory) pure returns (bytes32)"
																						}
																					},
																					"id": 342,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1286:32:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1278:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 338,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1278:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1278:41:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1322:1:3",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1278:45:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1270:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 336,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1270:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1270:54:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "1256:68:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 334,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "1249:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1249:76:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "1249:76:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 351,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "1341:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 350,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "1331:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1331:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "1331:16:3"
											}
										]
									},
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "466:566:3",
										"text": " Contract initializer.\n @param logic address of the initial implementation.\n @param admin Address of the proxy administrator.\n @param data Data to send as msg.data to the implementation to initialize the proxied contract.\n It should include the signature and the parameters of the function to be called, as described in\n https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\n This parameter is optional, if no data is given the initialization call to proxied contract will be skipped."
									},
									"functionSelector": "cf7a1d77",
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "logic",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 355,
												"src": "1060:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "admin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 355,
												"src": "1079:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 355,
												"src": "1098:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 313,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1098:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1054:65:3"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1135:0:3"
									},
									"scope": 369,
									"src": "1035:317:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										232,
										462
									],
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "1507:55:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 362,
															"name": "BaseAdminUpgradeabilityProxy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "1513:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_BaseAdminUpgradeabilityProxy_$233_$",
																"typeString": "type(contract BaseAdminUpgradeabilityProxy)"
															}
														},
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_willFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 232,
														"src": "1513:42:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1513:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "1513:44:3"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "1356:68:3",
										"text": " @dev Only fall back when the sender is not the admin."
									},
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_willFallback",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 360,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"contractScope": null,
												"id": 358,
												"name": "BaseAdminUpgradeabilityProxy",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 233,
												"src": "1470:28:3",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_BaseAdminUpgradeabilityProxy_$233",
													"typeString": "contract BaseAdminUpgradeabilityProxy"
												}
											},
											{
												"contractScope": null,
												"id": 359,
												"name": "Proxy",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 476,
												"src": "1500:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Proxy_$476",
													"typeString": "contract Proxy"
												}
											}
										],
										"src": "1461:45:3"
									},
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1449:2:3"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1507:0:3"
									},
									"scope": 369,
									"src": "1427:135:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 370,
							"src": "345:1219:3"
						}
					],
					"src": "37:1528:3"
				},
				"id": 3
			},
			"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol": {
				"ast": {
					"absolutePath": "contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol",
					"exportedSymbols": {
						"InitializableUpgradeabilityProxy": [
							432
						]
					},
					"id": 433,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 371,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:4"
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol",
							"file": "./BaseUpgradeabilityProxy.sol",
							"id": 372,
							"nodeType": "ImportDirective",
							"scope": 433,
							"sourceUnit": 299,
							"src": "62:39:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 374,
										"name": "BaseUpgradeabilityProxy",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 298,
										"src": "309:23:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BaseUpgradeabilityProxy_$298",
											"typeString": "contract BaseUpgradeabilityProxy"
										}
									},
									"id": 375,
									"nodeType": "InheritanceSpecifier",
									"src": "309:23:4"
								}
							],
							"contractDependencies": [
								298,
								476
							],
							"contractKind": "contract",
							"documentation": {
								"id": 373,
								"nodeType": "StructuredDocumentation",
								"src": "103:160:4",
								"text": " @title InitializableUpgradeabilityProxy\n @dev Extends BaseUpgradeabilityProxy with an initializer for initializing\n implementation and init data."
							},
							"fullyImplemented": true,
							"id": 432,
							"linearizedBaseContracts": [
								432,
								298,
								476
							],
							"name": "InitializableUpgradeabilityProxy",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "930:294:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 384,
																	"name": "_implementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		262
																	],
																	"referencedDeclaration": 262,
																	"src": "944:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "944:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "973:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "965:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 386,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "965:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "965:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "944:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 383,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "936:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "936:40:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 394,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 249,
																"src": "989:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "656970313936372e70726f78792e696d706c656d656e746174696f6e",
																							"id": 400,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1038:30:4",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
																								"typeString": "literal_string \"eip1967.proxy.implementation\""
																							},
																							"value": "eip1967.proxy.implementation"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
																								"typeString": "literal_string \"eip1967.proxy.implementation\""
																							}
																						],
																						"id": 399,
																						"name": "keccak256",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -8,
																						"src": "1028:9:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																							"typeString": "function (bytes memory) pure returns (bytes32)"
																						}
																					},
																					"id": 401,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1028:41:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 398,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1020:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 397,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1020:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1020:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1073:1:4",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1020:54:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1012:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 395,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1012:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1012:63:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "989:86:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 393,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "982:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "982:94:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "982:94:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 410,
															"name": "_logic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "1101:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 409,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "1082:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1082:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "1082:26:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 413,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "1118:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1118:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1133:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1118:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 429,
												"nodeType": "IfStatement",
												"src": "1114:106:4",
												"trueBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "1136:84:4",
													"statements": [
														{
															"assignments": [
																418,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 418,
																	"mutability": "mutable",
																	"name": "success",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 428,
																	"src": "1145:12:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 417,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1145:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																},
																null
															],
															"id": 423,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 421,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 380,
																		"src": "1183:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 419,
																		"name": "_logic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "1163:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "delegatecall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1163:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) returns (bool,bytes memory)"
																	}
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1163:26:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1144:45:4"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 425,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 418,
																		"src": "1205:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 424,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "1197:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1197:16:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 427,
															"nodeType": "ExpressionStatement",
															"src": "1197:16:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "337:519:4",
										"text": " @dev Contract initializer.\n @param _logic Address of the initial implementation.\n @param _data Data to send as msg.data to the implementation to initialize the proxied contract.\n It should include the signature and the parameters of the function to be called, as described in\n https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\n This parameter is optional, if no data is given the initialization call to proxied contract will be skipped."
									},
									"functionSelector": "d1f57894",
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "_logic",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 431,
												"src": "879:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 431,
												"src": "895:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 379,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "895:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "878:36:4"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "930:0:4"
									},
									"scope": 432,
									"src": "859:365:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 433,
							"src": "264:962:4"
						}
					],
					"src": "37:1190:4"
				},
				"id": 4
			},
			"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol": {
				"ast": {
					"absolutePath": "contracts/dependencies/openzeppelin/upgradeability/Proxy.sol",
					"exportedSymbols": {
						"Proxy": [
							476
						]
					},
					"id": 477,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 434,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 435,
								"nodeType": "StructuredDocumentation",
								"src": "62:290:5",
								"text": " @title Proxy\n @dev Implements delegation of calls to other contracts, with proper\n forwarding of return values and bubbling of failures.\n It defines a fallback function that delegates all calls to the address\n returned by the abstract _implementation() internal function."
							},
							"fullyImplemented": false,
							"id": 476,
							"linearizedBaseContracts": [
								476
							],
							"name": "Proxy",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "492:22:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 439,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "498:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "498:11:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "498:11:5"
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "381:80:5",
										"text": " @dev Fallback function.\n Implemented entirely in `_fallback`."
									},
									"id": 443,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:2:5"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "492:0:5"
									},
									"scope": 476,
									"src": "464:50:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "518:57:5",
										"text": " @return The Address of the implementation."
									},
									"id": 449,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "602:2:5"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 449,
												"src": "636:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "635:9:5"
									},
									"scope": 476,
									"src": "578:67:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "983:764:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1029:714:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1258:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1261:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1264:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1264:14:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1245:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1245:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1245:34:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1388:74:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1415:5:5"
																	},
																	{
																		"name": "implementation",
																		"nodeType": "YulIdentifier",
																		"src": "1422:14:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1438:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1441:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1441:14:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1457:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1460:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "1402:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1402:60:5"
															},
															"variables": [
																{
																	"name": "result",
																	"nodeType": "YulTypedName",
																	"src": "1392:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1518:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1521:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1524:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1524:16:5"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1503:14:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1503:38:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1503:38:5"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1622:49:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1641:1:5",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1644:14:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1644:16:5"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1634:6:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1634:27:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1634:27:5"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1615:56:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1620:1:5",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1688:49:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1707:1:5",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1710:14:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1710:16:5"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "1700:6:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1700:27:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1700:27:5"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1680:57:5",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nodeType": "YulIdentifier",
																"src": "1556:6:5"
															},
															"nodeType": "YulSwitch",
															"src": "1549:188:5"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 452,
														"isOffset": false,
														"isSlot": false,
														"src": "1422:14:5",
														"valueSize": 1
													}
												],
												"id": 455,
												"nodeType": "InlineAssembly",
												"src": "1020:723:5"
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "649:279:5",
										"text": " @dev Delegates execution to an implementation contract.\n This is a low level function that doesn't return to its internal call site.\n It will return to the external caller whatever the implementation returns.\n @param implementation Address to delegate."
									},
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "implementation",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 457,
												"src": "950:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "950:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "949:24:5"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:0:5"
									},
									"scope": 476,
									"src": "931:816:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "1998:2:5",
										"statements": []
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "1751:202:5",
										"text": " @dev Function that is run as the first thing in the fallback function.\n Can be redefined in derived contracts to add functionality.\n Redefinitions must call super._willFallback()."
									},
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_willFallback",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1978:2:5"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1998:0:5"
									},
									"scope": 476,
									"src": "1956:44:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "2125:60:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 466,
														"name": "_willFallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "2131:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2131:15:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "2131:15:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 470,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "2162:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2162:17:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 469,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "2152:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2152:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "2152:28:5"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "2004:88:5",
										"text": " @dev fallback implementation.\n Extracted to enable manual triggering."
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2113:2:5"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2125:0:5"
									},
									"scope": 476,
									"src": "2095:90:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 477,
							"src": "353:1834:5"
						}
					],
					"src": "37:2151:5"
				},
				"id": 5
			},
			"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol": {
				"ast": {
					"absolutePath": "contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol",
					"exportedSymbols": {
						"UpgradeabilityProxy": [
							529
						]
					},
					"id": 530,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 478,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:6"
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol",
							"file": "./BaseUpgradeabilityProxy.sol",
							"id": 479,
							"nodeType": "ImportDirective",
							"scope": 530,
							"sourceUnit": 299,
							"src": "62:39:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 481,
										"name": "BaseUpgradeabilityProxy",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 298,
										"src": "282:23:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BaseUpgradeabilityProxy_$298",
											"typeString": "contract BaseUpgradeabilityProxy"
										}
									},
									"id": 482,
									"nodeType": "InheritanceSpecifier",
									"src": "282:23:6"
								}
							],
							"contractDependencies": [
								298,
								476
							],
							"contractKind": "contract",
							"documentation": {
								"id": 480,
								"nodeType": "StructuredDocumentation",
								"src": "103:146:6",
								"text": " @title UpgradeabilityProxy\n @dev Extends BaseUpgradeabilityProxy with a constructor for initializing\n implementation and init data."
							},
							"fullyImplemented": true,
							"id": 529,
							"linearizedBaseContracts": [
								529,
								298,
								476
							],
							"name": "UpgradeabilityProxy",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "895:248:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 491,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 249,
																"src": "908:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "656970313936372e70726f78792e696d706c656d656e746174696f6e",
																							"id": 497,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "957:30:6",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
																								"typeString": "literal_string \"eip1967.proxy.implementation\""
																							},
																							"value": "eip1967.proxy.implementation"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
																								"typeString": "literal_string \"eip1967.proxy.implementation\""
																							}
																						],
																						"id": 496,
																						"name": "keccak256",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -8,
																						"src": "947:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																							"typeString": "function (bytes memory) pure returns (bytes32)"
																						}
																					},
																					"id": 498,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "947:41:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 495,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "939:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 494,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "939:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "939:50:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "992:1:6",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "939:54:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "931:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 492,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "931:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "931:63:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "908:86:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 490,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "901:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "901:94:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "901:94:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 507,
															"name": "_logic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "1020:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 506,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "1001:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1001:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "1001:26:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 510,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "1037:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1037:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1052:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1037:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 526,
												"nodeType": "IfStatement",
												"src": "1033:106:6",
												"trueBody": {
													"id": 525,
													"nodeType": "Block",
													"src": "1055:84:6",
													"statements": [
														{
															"assignments": [
																515,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 515,
																	"mutability": "mutable",
																	"name": "success",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 525,
																	"src": "1064:12:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 514,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1064:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																},
																null
															],
															"id": 520,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 518,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 487,
																		"src": "1102:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 516,
																		"name": "_logic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "1082:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "delegatecall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1082:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) returns (bool,bytes memory)"
																	}
																},
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1082:26:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1063:45:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 522,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 515,
																		"src": "1124:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 521,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "1116:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1116:16:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 524,
															"nodeType": "ExpressionStatement",
															"src": "1116:16:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "310:519:6",
										"text": " @dev Contract constructor.\n @param _logic Address of the initial implementation.\n @param _data Data to send as msg.data to the implementation to initialize the proxied contract.\n It should include the signature and the parameters of the function to be called, as described in\n https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\n This parameter is optional, if no data is given the initialization call to proxied contract will be skipped."
									},
									"id": 528,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "_logic",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 528,
												"src": "844:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 528,
												"src": "860:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "860:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "843:36:6"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "895:0:6"
									},
									"scope": 529,
									"src": "832:311:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 530,
							"src": "250:895:6"
						}
					],
					"src": "37:1109:6"
				},
				"id": 6
			}
		}
	}
}