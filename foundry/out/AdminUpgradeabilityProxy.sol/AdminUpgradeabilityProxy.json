{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_logic",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526040516109353803806109358339818101604052606081101561002657600080fd5b8151602083015160408085018051915193959294830192918464010000000082111561005157600080fd5b90830190602082018581111561006657600080fd5b825164010000000081118282018810171561008057600080fd5b82525081516020918201929091019080838360005b838110156100ad578181015183820152602001610095565b50505050905090810190601f1680156100da5780820380516001836020036101000a031916815260200191505b50604052508491508290506100ee826101bf565b8051156101a6576000826001600160a01b0316826040518082805190602001908083835b602083106101315780518252601f199092019160209182019101610112565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610191576040519150601f19603f3d011682016040523d82523d6000602084013e610196565b606091505b50509050806101a457600080fd5b505b506101ae9050565b6101b782610231565b505050610291565b6101d28161025560201b6103a31760201c565b61020d5760405162461bcd60e51b815260040180806020018281038252603b8152602001806108fa603b913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061028957508115155b949350505050565b61065a806102a06000396000f3fe60806040526004361061004a5760003560e01c80633659cfe6146100545780634f1ef286146100875780635c60da1b146101075780638f28397014610138578063f851a4401461016b575b610052610180565b005b34801561006057600080fd5b506100526004803603602081101561007757600080fd5b50356001600160a01b031661019a565b6100526004803603604081101561009d57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100c857600080fd5b8201836020820111156100da57600080fd5b803590602001918460018302840111640100000000831117156100fc57600080fd5b5090925090506101d4565b34801561011357600080fd5b5061011c610281565b604080516001600160a01b039092168252519081900360200190f35b34801561014457600080fd5b506100526004803603602081101561015b57600080fd5b50356001600160a01b03166102be565b34801561017757600080fd5b5061011c610378565b6101886103df565b6101986101936103e7565b61040c565b565b6101a2610430565b6001600160a01b0316336001600160a01b031614156101c9576101c481610455565b6101d1565b6101d1610180565b50565b6101dc610430565b6001600160a01b0316336001600160a01b03161415610274576101fe83610455565b6000836001600160a01b031683836040518083838082843760405192019450600093509091505080830381855af49150503d806000811461025b576040519150601f19603f3d011682016040523d82523d6000602084013e610260565b606091505b505090508061026e57600080fd5b5061027c565b61027c610180565b505050565b600061028b610430565b6001600160a01b0316336001600160a01b031614156102b3576102ac6103e7565b90506102bb565b6102bb610180565b90565b6102c6610430565b6001600160a01b0316336001600160a01b031614156101c9576001600160a01b0381166103245760405162461bcd60e51b81526004018080602001828103825260368152602001806105b46036913960400191505060405180910390fd5b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f61034d610430565b604080516001600160a01b03928316815291841660208301528051918290030190a16101c481610495565b6000610382610430565b6001600160a01b0316336001600160a01b031614156102b3576102ac610430565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906103d757508115155b949350505050565b6101986104b9565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e80801561042b573d6000f35b3d6000fd5b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b61045e81610519565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b6104c1610430565b6001600160a01b0316336001600160a01b031614156105115760405162461bcd60e51b81526004018080602001828103825260328152602001806105826032913960400191505060405180910390fd5b610198610198565b610522816103a3565b61055d5760405162461bcd60e51b815260040180806020018281038252603b8152602001806105ea603b913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5556fe43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e2066726f6d207468652070726f78792061646d696e43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f787920746f20746865207a65726f206164647265737343616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373a26469706673582212209dafbe5adf7cc55f30aa02216e288d397fc7461947b82a594a31008c090b702b64736f6c634300060c003343616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373",
    "sourceMap": "282:1115:8:-:0;;;945:240;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;945:240:8;;;;;;;;;;-1:-1:-1;945:240:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;945:240:8;;-1:-1:-1;1060:6:8;;-1:-1:-1;1068:5:8;;-1:-1:-1;1001:26:15;1020:6;1001:18;:26::i;:::-;1037:12;;:16;1033:106;;1064:12;1082:6;-1:-1:-1;;;;;1082:19:15;1102:5;1082:26;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1082:26:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:45;;;1124:7;1116:16;;;;;;1033:106;;-1:-1:-1;1081:76:8::1;::::0;-1:-1:-1;1081:76:8;::::1;1163:17;1173:6:::0;1163:9:::1;:17::i;:::-;945:240:::0;;;282:1115;;1618:334:10;1703:37;1722:17;1703:18;;;;;:37;;:::i;:::-;1688:127;;;;-1:-1:-1;;;1688:127:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;823:66;1911:31;1903:45::o;3434:163:9:-;1002:66;3565:22;3557:36::o;686:586:0:-;746:4;1185:20;;1032:66;1224:23;;;;;;:42;;-1:-1:-1;1251:15:0;;;1224:42;1216:51;686:586;-1:-1:-1;;;;686:586:0:o;282:1115:8:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061004a5760003560e01c80633659cfe6146100545780634f1ef286146100875780635c60da1b146101075780638f28397014610138578063f851a4401461016b575b610052610180565b005b34801561006057600080fd5b506100526004803603602081101561007757600080fd5b50356001600160a01b031661019a565b6100526004803603604081101561009d57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100c857600080fd5b8201836020820111156100da57600080fd5b803590602001918460018302840111640100000000831117156100fc57600080fd5b5090925090506101d4565b34801561011357600080fd5b5061011c610281565b604080516001600160a01b039092168252519081900360200190f35b34801561014457600080fd5b506100526004803603602081101561015b57600080fd5b50356001600160a01b03166102be565b34801561017757600080fd5b5061011c610378565b6101886103df565b6101986101936103e7565b61040c565b565b6101a2610430565b6001600160a01b0316336001600160a01b031614156101c9576101c481610455565b6101d1565b6101d1610180565b50565b6101dc610430565b6001600160a01b0316336001600160a01b03161415610274576101fe83610455565b6000836001600160a01b031683836040518083838082843760405192019450600093509091505080830381855af49150503d806000811461025b576040519150601f19603f3d011682016040523d82523d6000602084013e610260565b606091505b505090508061026e57600080fd5b5061027c565b61027c610180565b505050565b600061028b610430565b6001600160a01b0316336001600160a01b031614156102b3576102ac6103e7565b90506102bb565b6102bb610180565b90565b6102c6610430565b6001600160a01b0316336001600160a01b031614156101c9576001600160a01b0381166103245760405162461bcd60e51b81526004018080602001828103825260368152602001806105b46036913960400191505060405180910390fd5b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f61034d610430565b604080516001600160a01b03928316815291841660208301528051918290030190a16101c481610495565b6000610382610430565b6001600160a01b0316336001600160a01b031614156102b3576102ac610430565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906103d757508115155b949350505050565b6101986104b9565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e80801561042b573d6000f35b3d6000fd5b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b61045e81610519565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b6104c1610430565b6001600160a01b0316336001600160a01b031614156105115760405162461bcd60e51b81526004018080602001828103825260328152602001806105826032913960400191505060405180910390fd5b610198610198565b610522816103a3565b61055d5760405162461bcd60e51b815260040180806020018281038252603b8152602001806105ea603b913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5556fe43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e2066726f6d207468652070726f78792061646d696e43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f787920746f20746865207a65726f206164647265737343616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373a26469706673582212209dafbe5adf7cc55f30aa02216e288d397fc7461947b82a594a31008c090b702b64736f6c634300060c0033",
    "sourceMap": "282:1115:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;498:11:14;:9;:11::i;:::-;282:1115:8;2246:103:9;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2246:103:9;-1:-1:-1;;;;;2246:103:9;;:::i;2866:236::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2866:236:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2866:236:9;;-1:-1:-1;2866:236:9;-1:-1:-1;2866:236:9;:::i;1566:96::-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1566:96:9;;;;;;;;;;;;;;1838:224;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1838:224:9;-1:-1:-1;;;;;1838:224:9;;:::i;1424:78::-;;;;;;;;;;;;;:::i;2095:90:14:-;2131:15;:13;:15::i;:::-;2152:28;2162:17;:15;:17::i;:::-;2152:9;:28::i;:::-;2095:90::o;2246:103:9:-;1301:8;:6;:8::i;:::-;-1:-1:-1;;;;;1287:22:9;:10;-1:-1:-1;;;;;1287:22:9;;1283:76;;;2315:29:::1;2326:17;2315:10;:29::i;:::-;1283:76:::0;;;1341:11;:9;:11::i;:::-;2246:103;:::o;2866:236::-;1301:8;:6;:8::i;:::-;-1:-1:-1;;;;;1287:22:9;:10;-1:-1:-1;;;;;1287:22:9;;1283:76;;;2985:29:::1;2996:17;2985:10;:29::i;:::-;3021:12;3039:17;-1:-1:-1::0;;;;;3039:30:9::1;3070:4;;3039:36;;;;;;;;;;::::0;;::::1;::::0;-1:-1:-1;3039:36:9::1;::::0;-1:-1:-1;3039:36:9;;-1:-1:-1;;3039:36:9;;::::1;::::0;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3020:55;;;3089:7;3081:16;;;::::0;::::1;;1319:1;1283:76:::0;;;1341:11;:9;:11::i;:::-;2866:236;;;:::o;1566:96::-;1618:7;1301:8;:6;:8::i;:::-;-1:-1:-1;;;;;1287:22:9;:10;-1:-1:-1;;;;;1287:22:9;;1283:76;;;1640:17:::1;:15;:17::i;:::-;1633:24;;1283:76:::0;;;1341:11;:9;:11::i;:::-;1566:96;:::o;1838:224::-;1301:8;:6;:8::i;:::-;-1:-1:-1;;;;;1287:22:9;:10;-1:-1:-1;;;;;1287:22:9;;1283:76;;;-1:-1:-1;;;;;1908:22:9;::::1;1900:89;;;;-1:-1:-1::0;;;1900:89:9::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2000:32;2013:8;:6;:8::i;:::-;2000:32;::::0;;-1:-1:-1;;;;;2000:32:9;;::::1;::::0;;;;::::1;;::::0;::::1;::::0;;;;;;;;;::::1;2038:19;2048:8;2038:9;:19::i;1424:78::-:0;1467:7;1301:8;:6;:8::i;:::-;-1:-1:-1;;;;;1287:22:9;:10;-1:-1:-1;;;;;1287:22:9;;1283:76;;;1489:8:::1;:6;:8::i;686:586:0:-:0;746:4;1185:20;;1032:66;1224:23;;;;;;:42;;-1:-1:-1;1251:15:0;;;1224:42;1216:51;686:586;-1:-1:-1;;;;686:586:0:o;1260:135:8:-;1346:44;:42;:44::i;1008:196:10:-;823:66;1183:11;;1167:33::o;931:816:14:-;1264:14;1261:1;1258;1245:34;1460:1;1457;1441:14;1438:1;1422:14;1415:5;1402:60;1524:16;1521:1;1518;1503:38;1556:6;1615:56;;;;1710:16;1707:1;1700:27;1615:56;1644:16;1641:1;1634:27;3151:167:9;1002:66;3297:11;;3282:32::o;1339:142:10:-;1401:37;1420:17;1401:18;:37::i;:::-;1449:27;;-1:-1:-1;;;;;1449:27:10;;;;;;;;1339:142;:::o;3434:163:9:-;1002:66;3565:22;3557:36::o;3672:174::-;3751:8;:6;:8::i;:::-;-1:-1:-1;;;;;3737:22:9;:10;-1:-1:-1;;;;;3737:22:9;;;3729:85;;;;-1:-1:-1;;;3729:85:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3820:21;:19;:21::i;1618:334:10:-;1703:37;1722:17;1703:18;:37::i;:::-;1688:127;;;;-1:-1:-1;;;1688:127:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;823:66;1911:31;1903:45::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "admin()": "f851a440",
    "changeAdmin(address)": "8f283970",
    "implementation()": "5c60da1b",
    "upgradeTo(address)": "3659cfe6",
    "upgradeToAndCall(address,bytes)": "4f1ef286"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extends from BaseAdminUpgradeabilityProxy with a constructor for initializing the implementation, admin, and init data.\",\"kind\":\"dev\",\"methods\":{\"admin()\":{\"returns\":{\"_0\":\"The address of the proxy admin.\"}},\"changeAdmin(address)\":{\"details\":\"Changes the admin of the proxy. Only the current admin can call this function.\",\"params\":{\"newAdmin\":\"Address to transfer proxy administration to.\"}},\"constructor\":{\"params\":{\"_admin\":\"Address of the proxy administrator.\",\"_data\":\"Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\",\"_logic\":\"address of the initial implementation.\"}},\"implementation()\":{\"returns\":{\"_0\":\"The address of the implementation.\"}},\"upgradeTo(address)\":{\"details\":\"Upgrade the backing implementation of the proxy. Only the admin can call this function.\",\"params\":{\"newImplementation\":\"Address of the new implementation.\"}},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the backing implementation of the proxy and call a function on the new implementation. This is useful to initialize the proxied contract.\",\"params\":{\"data\":\"Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\",\"newImplementation\":\"Address of the new implementation.\"}}},\"title\":\"AdminUpgradeabilityProxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":\"Contract constructor.\"},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/upgradeability/AdminUpgradeabilityProxy.sol\":\"AdminUpgradeabilityProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=foundry/lib/ds-test/src/\",\":forge-std/=foundry/lib/forge-std/src/\"]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"keccak256\":\"0xb7f2cd193efe93976d7b473fc4fa27dda83bd4db5b81889cbcd4701f3b7023ae\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://2275632637acd2f30d576612dcddc1c6ba78d81af4d044fafe870e6a809a8b6e\",\"dweb:/ipfs/QmW3uMzrLbjzP45zVpP8e9V6o8WFSceHiHq8WDMJ8YjCeL\"]},\"contracts/dependencies/openzeppelin/upgradeability/AdminUpgradeabilityProxy.sol\":{\"keccak256\":\"0x565b6b57296f9748999c03701c3e2e0ad4d8fd43b8330f11205e2d17b73a9de5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://da11aa827dcaf4a36b9a3e251ad314a211a3e0d7e2a265b0e6b3552d75843448\",\"dweb:/ipfs/Qmab9xy1zmPwyYLZF5StQYnPMSGDeq6ztAY4EBrX7q52sE\"]},\"contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol\":{\"keccak256\":\"0xdc62fd6989ad176a51f9a5f28241c96ae870f4f5750f477f6bf2f881cbbb17f1\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://9c974ce65116414e39965923f66c8a42e3a1fcd6f8524084480e4d841f72559b\",\"dweb:/ipfs/QmPyuD7zs5WxWDorQRcwyYkbMhS6qRBWkmKGBLGGKVqiJb\"]},\"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":{\"keccak256\":\"0x873eec666154f26e157e33a2732e4288aa2e62415b0a8c75f283878a6b00c21b\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://602c28fbb9704bfc08e32625f8181356d009ac32ca7daa3b120473a0ea3a30b8\",\"dweb:/ipfs/Qma8Mx2ggvZsCQTj664Chbv2PeeCMJSiNvrUTJ8bc6pq4Q\"]},\"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol\":{\"keccak256\":\"0x2b8af3eb1572f574aa114cf11395b6077f5be77f30599b13b882db5298cd32d4\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://d0374f1ecfbb3648078e52efddf6e493c8849a5d8862c3fcd259c620ab2b5285\",\"dweb:/ipfs/QmWNBxH7w8nJGTWJLDziNLETsBvohNj94eMg9cxAtDRJ5L\"]},\"contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol\":{\"keccak256\":\"0x6e9d07b6de47504db122720079f0b3e521fdb762ab3693fbc47c35740ddcef06\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://31503694d6ca71a4ba427b1cea1fa7257c2f1855e378eb16a78146565c2ebd95\",\"dweb:/ipfs/QmUeka7SjeFZkMoiLY4e7nZtzYsNgHBdoTU83KzL5hdiwE\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.6.12+commit.27d51765"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_logic",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeAdmin"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "implementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "admin()": {
            "returns": {
              "_0": "The address of the proxy admin."
            }
          },
          "changeAdmin(address)": {
            "details": "Changes the admin of the proxy. Only the current admin can call this function.",
            "params": {
              "newAdmin": "Address to transfer proxy administration to."
            }
          },
          "constructor": {
            "params": {
              "_admin": "Address of the proxy administrator.",
              "_data": "Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.",
              "_logic": "address of the initial implementation."
            }
          },
          "implementation()": {
            "returns": {
              "_0": "The address of the implementation."
            }
          },
          "upgradeTo(address)": {
            "details": "Upgrade the backing implementation of the proxy. Only the admin can call this function.",
            "params": {
              "newImplementation": "Address of the new implementation."
            }
          },
          "upgradeToAndCall(address,bytes)": {
            "details": "Upgrade the backing implementation of the proxy and call a function on the new implementation. This is useful to initialize the proxied contract.",
            "params": {
              "data": "Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.",
              "newImplementation": "Address of the new implementation."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": "Contract constructor."
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=foundry/lib/ds-test/src/",
        ":forge-std/=foundry/lib/forge-std/src/"
      ],
      "optimizer": {
        "runs": 200,
        "details": {
          "peephole": true,
          "jumpdestRemover": true,
          "orderLiterals": true,
          "deduplicate": true,
          "cse": true,
          "constantOptimizer": true,
          "yul": true,
          "yulDetails": {
            "stackAllocation": true,
            "optimizerSteps": "dhfoDgvulfnTUtnIf"
          }
        }
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/dependencies/openzeppelin/upgradeability/AdminUpgradeabilityProxy.sol": "AdminUpgradeabilityProxy"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/dependencies/openzeppelin/contracts/Address.sol": {
        "keccak256": "0xb7f2cd193efe93976d7b473fc4fa27dda83bd4db5b81889cbcd4701f3b7023ae",
        "urls": [
          "bzz-raw://2275632637acd2f30d576612dcddc1c6ba78d81af4d044fafe870e6a809a8b6e",
          "dweb:/ipfs/QmW3uMzrLbjzP45zVpP8e9V6o8WFSceHiHq8WDMJ8YjCeL"
        ],
        "license": "agpl-3.0"
      },
      "contracts/dependencies/openzeppelin/upgradeability/AdminUpgradeabilityProxy.sol": {
        "keccak256": "0x565b6b57296f9748999c03701c3e2e0ad4d8fd43b8330f11205e2d17b73a9de5",
        "urls": [
          "bzz-raw://da11aa827dcaf4a36b9a3e251ad314a211a3e0d7e2a265b0e6b3552d75843448",
          "dweb:/ipfs/Qmab9xy1zmPwyYLZF5StQYnPMSGDeq6ztAY4EBrX7q52sE"
        ],
        "license": "agpl-3.0"
      },
      "contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol": {
        "keccak256": "0xdc62fd6989ad176a51f9a5f28241c96ae870f4f5750f477f6bf2f881cbbb17f1",
        "urls": [
          "bzz-raw://9c974ce65116414e39965923f66c8a42e3a1fcd6f8524084480e4d841f72559b",
          "dweb:/ipfs/QmPyuD7zs5WxWDorQRcwyYkbMhS6qRBWkmKGBLGGKVqiJb"
        ],
        "license": "agpl-3.0"
      },
      "contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol": {
        "keccak256": "0x873eec666154f26e157e33a2732e4288aa2e62415b0a8c75f283878a6b00c21b",
        "urls": [
          "bzz-raw://602c28fbb9704bfc08e32625f8181356d009ac32ca7daa3b120473a0ea3a30b8",
          "dweb:/ipfs/Qma8Mx2ggvZsCQTj664Chbv2PeeCMJSiNvrUTJ8bc6pq4Q"
        ],
        "license": "agpl-3.0"
      },
      "contracts/dependencies/openzeppelin/upgradeability/Proxy.sol": {
        "keccak256": "0x2b8af3eb1572f574aa114cf11395b6077f5be77f30599b13b882db5298cd32d4",
        "urls": [
          "bzz-raw://d0374f1ecfbb3648078e52efddf6e493c8849a5d8862c3fcd259c620ab2b5285",
          "dweb:/ipfs/QmWNBxH7w8nJGTWJLDziNLETsBvohNj94eMg9cxAtDRJ5L"
        ],
        "license": "agpl-3.0"
      },
      "contracts/dependencies/openzeppelin/upgradeability/UpgradeabilityProxy.sol": {
        "keccak256": "0x6e9d07b6de47504db122720079f0b3e521fdb762ab3693fbc47c35740ddcef06",
        "urls": [
          "bzz-raw://31503694d6ca71a4ba427b1cea1fa7257c2f1855e378eb16a78146565c2ebd95",
          "dweb:/ipfs/QmUeka7SjeFZkMoiLY4e7nZtzYsNgHBdoTU83KzL5hdiwE"
        ],
        "license": "agpl-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/dependencies/openzeppelin/upgradeability/AdminUpgradeabilityProxy.sol",
    "id": 1213,
    "exportedSymbols": {
      "AdminUpgradeabilityProxy": [
        1212
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:1361:8",
    "nodes": [
      {
        "id": 1157,
        "nodeType": "PragmaDirective",
        "src": "37:23:8",
        "nodes": [],
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ]
      },
      {
        "id": 1158,
        "nodeType": "ImportDirective",
        "src": "62:44:8",
        "nodes": [],
        "absolutePath": "contracts/dependencies/openzeppelin/upgradeability/BaseAdminUpgradeabilityProxy.sol",
        "file": "./BaseAdminUpgradeabilityProxy.sol",
        "scope": 1213,
        "sourceUnit": 1383,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1212,
        "nodeType": "ContractDefinition",
        "src": "282:1115:8",
        "nodes": [
          {
            "id": 1198,
            "nodeType": "FunctionDefinition",
            "src": "945:240:8",
            "nodes": [],
            "body": {
              "id": 1197,
              "nodeType": "Block",
              "src": "1075:110:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1178,
                          "name": "ADMIN_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1229,
                          "src": "1088:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "656970313936372e70726f78792e61646d696e",
                                        "id": 1184,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1128:21:8",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104",
                                          "typeString": "literal_string \"eip1967.proxy.admin\""
                                        },
                                        "value": "eip1967.proxy.admin"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104",
                                          "typeString": "literal_string \"eip1967.proxy.admin\""
                                        }
                                      ],
                                      "id": 1183,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "1118:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 1185,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1118:32:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 1182,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1110:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 1181,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1110:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 1186,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1110:41:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 1187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1154:1:8",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1110:45:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1102:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 1179,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1102:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1102:54:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1088:68:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1177,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1081:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1081:76:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1192,
                  "nodeType": "ExpressionStatement",
                  "src": "1081:76:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1194,
                        "name": "_admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1168,
                        "src": "1173:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1193,
                      "name": "_setAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1361,
                      "src": "1163:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1163:17:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1196,
                  "nodeType": "ExpressionStatement",
                  "src": "1163:17:8"
                }
              ]
            },
            "documentation": {
              "id": 1164,
              "nodeType": "StructuredDocumentation",
              "src": "373:569:8",
              "text": " Contract constructor.\n @param _logic address of the initial implementation.\n @param _admin Address of the proxy administrator.\n @param _data Data to send as msg.data to the implementation to initialize the proxied contract.\n It should include the signature and the parameters of the function to be called, as described in\n https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\n This parameter is optional, if no data is given the initialization call to proxied contract will be skipped."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1173,
                    "name": "_logic",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1166,
                    "src": "1060:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1174,
                    "name": "_data",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1170,
                    "src": "1068:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 1175,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1172,
                  "name": "UpgradeabilityProxy",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1746,
                  "src": "1040:19:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_UpgradeabilityProxy_$1746_$",
                    "typeString": "type(contract UpgradeabilityProxy)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1040:34:8"
              }
            ],
            "name": "",
            "overrides": null,
            "parameters": {
              "id": 1171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1166,
                  "mutability": "mutable",
                  "name": "_logic",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1198,
                  "src": "962:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1165,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1168,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1198,
                  "src": "982:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "982:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1170,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1198,
                  "src": "1002:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1169,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1002:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "956:68:8"
            },
            "returnParameters": {
              "id": 1176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1075:0:8"
            },
            "scope": 1212,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1211,
            "nodeType": "FunctionDefinition",
            "src": "1260:135:8",
            "nodes": [],
            "body": {
              "id": 1210,
              "nodeType": "Block",
              "src": "1340:55:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1205,
                        "name": "BaseAdminUpgradeabilityProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1382,
                        "src": "1346:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BaseAdminUpgradeabilityProxy_$1382_$",
                          "typeString": "type(contract BaseAdminUpgradeabilityProxy)"
                        }
                      },
                      "id": 1207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_willFallback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1381,
                      "src": "1346:42:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1346:44:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1209,
                  "nodeType": "ExpressionStatement",
                  "src": "1346:44:8"
                }
              ]
            },
            "baseFunctions": [
              1381,
              1679
            ],
            "documentation": {
              "id": 1199,
              "nodeType": "StructuredDocumentation",
              "src": "1189:68:8",
              "text": " @dev Only fall back when the sender is not the admin."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_willFallback",
            "overrides": {
              "id": 1203,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 1201,
                  "name": "BaseAdminUpgradeabilityProxy",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1382,
                  "src": "1303:28:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BaseAdminUpgradeabilityProxy_$1382",
                    "typeString": "contract BaseAdminUpgradeabilityProxy"
                  }
                },
                {
                  "contractScope": null,
                  "id": 1202,
                  "name": "Proxy",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1693,
                  "src": "1333:5:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Proxy_$1693",
                    "typeString": "contract Proxy"
                  }
                }
              ],
              "src": "1294:45:8"
            },
            "parameters": {
              "id": 1200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1282:2:8"
            },
            "returnParameters": {
              "id": 1204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1340:0:8"
            },
            "scope": 1212,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1160,
              "name": "BaseAdminUpgradeabilityProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1382,
              "src": "319:28:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseAdminUpgradeabilityProxy_$1382",
                "typeString": "contract BaseAdminUpgradeabilityProxy"
              }
            },
            "id": 1161,
            "nodeType": "InheritanceSpecifier",
            "src": "319:28:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1162,
              "name": "UpgradeabilityProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1746,
              "src": "349:19:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UpgradeabilityProxy_$1746",
                "typeString": "contract UpgradeabilityProxy"
              }
            },
            "id": 1163,
            "nodeType": "InheritanceSpecifier",
            "src": "349:19:8"
          }
        ],
        "contractDependencies": [
          1382,
          1447,
          1693,
          1746
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1159,
          "nodeType": "StructuredDocumentation",
          "src": "108:173:8",
          "text": " @title AdminUpgradeabilityProxy\n @dev Extends from BaseAdminUpgradeabilityProxy with a constructor for\n initializing the implementation, admin, and init data."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1212,
          1746,
          1382,
          1447,
          1693
        ],
        "name": "AdminUpgradeabilityProxy",
        "scope": 1213
      }
    ],
    "license": "agpl-3.0"
  },
  "id": 8
}