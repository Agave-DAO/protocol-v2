{
	"id": "52adc9803e116ddfb2a7a42df83c5e4d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/misc/Reenter.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.6.12;\r\n\r\nimport './WETHGateway.sol';\r\nimport {IERC20} from '../dependencies/openzeppelin/contracts/IERC20.sol';\r\n\r\n\r\ncontract Test {\r\n    WETHGateway public gateway;\r\n    IERC20 private token;\r\n\r\n    event Received(address sender, uint256 amount);\r\n\r\n    constructor(address payable _gatewayAddress) public {\r\n        gateway = WETHGateway(_gatewayAddress);\r\n        token = IERC20(gateway.getAWETHAddress());\r\n        token.approve(_gatewayAddress, 1e18 );     \r\n    }\r\n    \r\n\r\n    fallback() external payable {\r\n        gateway.depositETH{value: 7 wei}({\r\n            onBehalfOf:address(this),\r\n            referralCode: 0x0\r\n        });\r\n        emit Received(msg.sender, msg.value);\r\n    }\r\n\r\n    function test123() public payable {\r\n        gateway.depositETH{value: 5 wei}({\r\n            onBehalfOf:address(this),\r\n            referralCode: 0x0\r\n        });\r\n        gateway.withdrawETH({\r\n            amount: 3 wei,\r\n            to: address(this)\r\n        });\r\n    }\r\n}"
			},
			"contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"contracts/misc/WETHGateway.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\npragma experimental ABIEncoderV2;\n\nimport {Ownable} from '../dependencies/openzeppelin/contracts/Ownable.sol';\nimport {IERC20} from '../dependencies/openzeppelin/contracts/IERC20.sol';\nimport {IWETH} from './interfaces/IWETH.sol';\nimport {IWETHGateway} from './interfaces/IWETHGateway.sol';\nimport {ILendingPool} from '../interfaces/ILendingPool.sol';\nimport {IAToken} from '../interfaces/IAToken.sol';\nimport {ReserveConfiguration} from '../protocol/libraries/configuration/ReserveConfiguration.sol';\nimport {UserConfiguration} from '../protocol/libraries/configuration/UserConfiguration.sol';\nimport {Helpers} from '../protocol/libraries/helpers/Helpers.sol';\nimport {DataTypes} from '../protocol/libraries/types/DataTypes.sol';\n\ncontract WETHGateway is IWETHGateway, Ownable {\n  using ReserveConfiguration for DataTypes.ReserveConfigurationMap;\n  using UserConfiguration for DataTypes.UserConfigurationMap;\n\n  IWETH internal immutable WETH;\n  ILendingPool internal immutable POOL;\n  IAToken internal immutable aWETH;\n\n  /**\n   * @dev Sets the WETH address and the LendingPoolAddressesProvider address. Infinite approves lending pool.\n   * @param weth Address of the Wrapped Ether contract\n   * @param pool Address of the LendingPool contract\n   **/\n  constructor(address weth, address pool) public {\n    ILendingPool poolInstance = ILendingPool(pool);\n    WETH = IWETH(weth);\n    POOL = poolInstance;\n    aWETH = IAToken(poolInstance.getReserveData(weth).aTokenAddress);\n    IWETH(weth).approve(pool, uint256(-1));\n  }\n\n  /**\n   * @dev deposits WETH into the reserve, using native ETH. A corresponding amount of the overlying asset (aTokens)\n   * is minted.\n   * @param onBehalfOf address of the user who will receive the aTokens representing the deposit\n   * @param referralCode integrators are assigned a referral code and can potentially receive rewards.\n   **/\n  function depositETH(address onBehalfOf, uint16 referralCode) external payable override {\n    WETH.deposit{value: msg.value}();\n    POOL.deposit(address(WETH), msg.value, onBehalfOf, referralCode);\n  }\n\n  /**\n   * @dev withdraws the WETH _reserves of msg.sender.\n   * @param amount amount of aWETH to withdraw and receive native ETH\n   * @param to address of the user who will receive native ETH\n   */\n  function withdrawETH(uint256 amount, address to) external override {\n    uint256 userBalance = aWETH.balanceOf(msg.sender);\n    uint256 amountToWithdraw = amount;\n\n    // if amount is equal to uint(-1), the user wants to redeem everything\n    if (amount == type(uint256).max) {\n      amountToWithdraw = userBalance;\n    }\n    aWETH.transferFrom(msg.sender, address(this), amountToWithdraw);\n    POOL.withdraw(address(WETH), amountToWithdraw, address(this));\n    WETH.withdraw(amountToWithdraw);\n    _safeTransferETH(to, amountToWithdraw);\n  }\n\n  /**\n   * @dev repays a borrow on the WETH reserve, for the specified amount (or for the whole amount, if uint256(-1) is specified).\n   * @param amount the amount to repay, or uint256(-1) if the user wants to repay everything\n   * @param rateMode the rate mode to repay\n   * @param onBehalfOf the address for which msg.sender is repaying\n   */\n  function repayETH(\n    uint256 amount,\n    uint256 rateMode,\n    address onBehalfOf\n  ) external payable override {\n    (uint256 stableDebt, uint256 variableDebt) =\n      Helpers.getUserCurrentDebtMemory(onBehalfOf, POOL.getReserveData(address(WETH)));\n\n    uint256 paybackAmount =\n      DataTypes.InterestRateMode(rateMode) == DataTypes.InterestRateMode.STABLE\n        ? stableDebt\n        : variableDebt;\n\n    if (amount < paybackAmount) {\n      paybackAmount = amount;\n    }\n    require(msg.value >= paybackAmount, 'msg.value is less than repayment amount');\n    WETH.deposit{value: paybackAmount}();\n    POOL.repay(address(WETH), msg.value, rateMode, onBehalfOf);\n\n    // refund remaining dust eth\n    if (msg.value > paybackAmount) _safeTransferETH(msg.sender, msg.value - paybackAmount);\n  }\n\n  /**\n   * @dev borrow WETH, unwraps to ETH and send both the ETH and DebtTokens to msg.sender, via `approveDelegation` and onBehalf argument in `LendingPool.borrow`.\n   * @param amount the amount of ETH to borrow\n   * @param interesRateMode the interest rate mode\n   * @param referralCode integrators are assigned a referral code and can potentially receive rewards\n   */\n  function borrowETH(\n    uint256 amount,\n    uint256 interesRateMode,\n    uint16 referralCode\n  ) external override {\n    POOL.borrow(address(WETH), amount, interesRateMode, referralCode, msg.sender);\n    WETH.withdraw(amount);\n    _safeTransferETH(msg.sender, amount);\n  }\n\n  /**\n   * @dev transfer ETH to an address, revert if it fails.\n   * @param to recipient of the transfer\n   * @param value the amount to send\n   */\n  function _safeTransferETH(address to, uint256 value) internal {\n    (bool success, ) = to.call{value: value}(new bytes(0));\n    require(success, 'ETH_TRANSFER_FAILED');\n  }\n\n  /**\n   * @dev transfer ERC20 from the utility contract, for ERC20 recovery in case of stuck tokens due\n   * direct transfers to the contract address.\n   * @param token token to transfer\n   * @param to recipient of the transfer\n   * @param amount amount to send\n   */\n  function emergencyTokenTransfer(\n    address token,\n    address to,\n    uint256 amount\n  ) external onlyOwner {\n    IERC20(token).transfer(to, amount);\n  }\n\n  /**\n   * @dev transfer native Ether from the utility contract, for native Ether recovery in case of stuck Ether\n   * due selfdestructs or transfer ether to pre-computated contract address before deployment.\n   * @param to recipient of the transfer\n   * @param amount amount to send\n   */\n  function emergencyEtherTransfer(address to, uint256 amount) external onlyOwner {\n    _safeTransferETH(to, amount);\n  }\n\n  /**\n   * @dev Get WETH address used by WETHGateway\n   */\n  function getWETHAddress() external view returns (address) {\n    return address(WETH);\n  }\n\n  /**\n   * @dev Get aWETH address used by WETHGateway\n   */\n  function getAWETHAddress() external view returns (address) {\n    return address(aWETH);\n  }\n\n  /**\n   * @dev Get LendingPool address used by WETHGateway\n   */\n  function getLendingPoolAddress() external view returns (address) {\n    return address(POOL);\n  }\n\n  /**\n   * @dev Only WETH contract is allowed to transfer ETH here. Prevent other addresses to send Ether to this contract.\n   */\n  receive() external payable {\n    require(msg.sender == address(WETH), 'Receive not allowed');\n  }\n\n  /**\n   * @dev Revert fallback calls\n   */\n  fallback() external payable {\n    revert('Fallback not allowed');\n  }\n}\n"
			},
			"contracts/protocol/libraries/types/DataTypes.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\nlibrary DataTypes {\n  // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\n  struct ReserveData {\n    //stores the reserve configuration\n    ReserveConfigurationMap configuration;\n    //the liquidity index. Expressed in ray\n    uint128 liquidityIndex;\n    //variable borrow index. Expressed in ray\n    uint128 variableBorrowIndex;\n    //the current supply rate. Expressed in ray\n    uint128 currentLiquidityRate;\n    //the current variable borrow rate. Expressed in ray\n    uint128 currentVariableBorrowRate;\n    //the current stable borrow rate. Expressed in ray\n    uint128 currentStableBorrowRate;\n    uint40 lastUpdateTimestamp;\n    //tokens addresses\n    address aTokenAddress;\n    address stableDebtTokenAddress;\n    address variableDebtTokenAddress;\n    //address of the interest rate strategy\n    address interestRateStrategyAddress;\n    //the id of the reserve. Represents the position in the list of the active reserves\n    uint8 id;\n  }\n\n  struct ReserveConfigurationMap {\n    //bit 0-15: LTV\n    //bit 16-31: Liq. threshold\n    //bit 32-47: Liq. bonus\n    //bit 48-55: Decimals\n    //bit 56: Reserve is active\n    //bit 57: reserve is frozen\n    //bit 58: borrowing is enabled\n    //bit 59: stable rate borrowing enabled\n    //bit 60-63: reserved\n    //bit 64-79: reserve factor\n    uint256 data;\n  }\n\n  struct UserConfigurationMap {\n    uint256 data;\n  }\n\n  enum InterestRateMode {NONE, STABLE, VARIABLE}\n}\n"
			},
			"contracts/protocol/libraries/helpers/Helpers.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\nimport {IERC20} from '../../../dependencies/openzeppelin/contracts/IERC20.sol';\nimport {DataTypes} from '../types/DataTypes.sol';\n\n/**\n * @title Helpers library\n * @author Aave\n */\nlibrary Helpers {\n  /**\n   * @dev Fetches the user current stable and variable debt balances\n   * @param user The user address\n   * @param reserve The reserve data object\n   * @return The stable and variable debt balance\n   **/\n  function getUserCurrentDebt(address user, DataTypes.ReserveData storage reserve)\n    internal\n    view\n    returns (uint256, uint256)\n  {\n    return (\n      IERC20(reserve.stableDebtTokenAddress).balanceOf(user),\n      IERC20(reserve.variableDebtTokenAddress).balanceOf(user)\n    );\n  }\n\n  function getUserCurrentDebtMemory(address user, DataTypes.ReserveData memory reserve)\n    internal\n    view\n    returns (uint256, uint256)\n  {\n    return (\n      IERC20(reserve.stableDebtTokenAddress).balanceOf(user),\n      IERC20(reserve.variableDebtTokenAddress).balanceOf(user)\n    );\n  }\n}\n"
			},
			"contracts/protocol/libraries/configuration/UserConfiguration.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\nimport {Errors} from '../helpers/Errors.sol';\nimport {DataTypes} from '../types/DataTypes.sol';\n\n/**\n * @title UserConfiguration library\n * @author Aave\n * @notice Implements the bitmap logic to handle the user configuration\n */\nlibrary UserConfiguration {\n  uint256 internal constant BORROWING_MASK =\n    0x5555555555555555555555555555555555555555555555555555555555555555;\n\n  /**\n   * @dev Sets if the user is borrowing the reserve identified by reserveIndex\n   * @param self The configuration object\n   * @param reserveIndex The index of the reserve in the bitmap\n   * @param borrowing True if the user is borrowing the reserve, false otherwise\n   **/\n  function setBorrowing(\n    DataTypes.UserConfigurationMap storage self,\n    uint256 reserveIndex,\n    bool borrowing\n  ) internal {\n    require(reserveIndex < 128, Errors.UL_INVALID_INDEX);\n    self.data =\n      (self.data & ~(1 << (reserveIndex * 2))) |\n      (uint256(borrowing ? 1 : 0) << (reserveIndex * 2));\n  }\n\n  /**\n   * @dev Sets if the user is using as collateral the reserve identified by reserveIndex\n   * @param self The configuration object\n   * @param reserveIndex The index of the reserve in the bitmap\n   * @param usingAsCollateral True if the user is usin the reserve as collateral, false otherwise\n   **/\n  function setUsingAsCollateral(\n    DataTypes.UserConfigurationMap storage self,\n    uint256 reserveIndex,\n    bool usingAsCollateral\n  ) internal {\n    require(reserveIndex < 128, Errors.UL_INVALID_INDEX);\n    self.data =\n      (self.data & ~(1 << (reserveIndex * 2 + 1))) |\n      (uint256(usingAsCollateral ? 1 : 0) << (reserveIndex * 2 + 1));\n  }\n\n  /**\n   * @dev Used to validate if a user has been using the reserve for borrowing or as collateral\n   * @param self The configuration object\n   * @param reserveIndex The index of the reserve in the bitmap\n   * @return True if the user has been using a reserve for borrowing or as collateral, false otherwise\n   **/\n  function isUsingAsCollateralOrBorrowing(\n    DataTypes.UserConfigurationMap memory self,\n    uint256 reserveIndex\n  ) internal pure returns (bool) {\n    require(reserveIndex < 128, Errors.UL_INVALID_INDEX);\n    return (self.data >> (reserveIndex * 2)) & 3 != 0;\n  }\n\n  /**\n   * @dev Used to validate if a user has been using the reserve for borrowing\n   * @param self The configuration object\n   * @param reserveIndex The index of the reserve in the bitmap\n   * @return True if the user has been using a reserve for borrowing, false otherwise\n   **/\n  function isBorrowing(DataTypes.UserConfigurationMap memory self, uint256 reserveIndex)\n    internal\n    pure\n    returns (bool)\n  {\n    require(reserveIndex < 128, Errors.UL_INVALID_INDEX);\n    return (self.data >> (reserveIndex * 2)) & 1 != 0;\n  }\n\n  /**\n   * @dev Used to validate if a user has been using the reserve as collateral\n   * @param self The configuration object\n   * @param reserveIndex The index of the reserve in the bitmap\n   * @return True if the user has been using a reserve as collateral, false otherwise\n   **/\n  function isUsingAsCollateral(DataTypes.UserConfigurationMap memory self, uint256 reserveIndex)\n    internal\n    pure\n    returns (bool)\n  {\n    require(reserveIndex < 128, Errors.UL_INVALID_INDEX);\n    return (self.data >> (reserveIndex * 2 + 1)) & 1 != 0;\n  }\n\n  /**\n   * @dev Used to validate if a user has been borrowing from any reserve\n   * @param self The configuration object\n   * @return True if the user has been borrowing any reserve, false otherwise\n   **/\n  function isBorrowingAny(DataTypes.UserConfigurationMap memory self) internal pure returns (bool) {\n    return self.data & BORROWING_MASK != 0;\n  }\n\n  /**\n   * @dev Used to validate if a user has not been using any reserve\n   * @param self The configuration object\n   * @return True if the user has been borrowing any reserve, false otherwise\n   **/\n  function isEmpty(DataTypes.UserConfigurationMap memory self) internal pure returns (bool) {\n    return self.data == 0;\n  }\n}\n"
			},
			"contracts/protocol/libraries/configuration/ReserveConfiguration.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\nimport {Errors} from '../helpers/Errors.sol';\nimport {DataTypes} from '../types/DataTypes.sol';\n\n/**\n * @title ReserveConfiguration library\n * @author Aave\n * @notice Implements the bitmap logic to handle the reserve configuration\n */\nlibrary ReserveConfiguration {\n  uint256 constant LTV_MASK =                   0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000; // prettier-ignore\n  uint256 constant LIQUIDATION_THRESHOLD_MASK = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFF; // prettier-ignore\n  uint256 constant LIQUIDATION_BONUS_MASK =     0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFF; // prettier-ignore\n  uint256 constant DECIMALS_MASK =              0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFF; // prettier-ignore\n  uint256 constant ACTIVE_MASK =                0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFF; // prettier-ignore\n  uint256 constant FROZEN_MASK =                0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFF; // prettier-ignore\n  uint256 constant BORROWING_MASK =             0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFFFFFF; // prettier-ignore\n  uint256 constant STABLE_BORROWING_MASK =      0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFF; // prettier-ignore\n  uint256 constant RESERVE_FACTOR_MASK =        0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFF; // prettier-ignore\n\n  /// @dev For the LTV, the start bit is 0 (up to 15), hence no bitshifting is needed\n  uint256 constant LIQUIDATION_THRESHOLD_START_BIT_POSITION = 16;\n  uint256 constant LIQUIDATION_BONUS_START_BIT_POSITION = 32;\n  uint256 constant RESERVE_DECIMALS_START_BIT_POSITION = 48;\n  uint256 constant IS_ACTIVE_START_BIT_POSITION = 56;\n  uint256 constant IS_FROZEN_START_BIT_POSITION = 57;\n  uint256 constant BORROWING_ENABLED_START_BIT_POSITION = 58;\n  uint256 constant STABLE_BORROWING_ENABLED_START_BIT_POSITION = 59;\n  uint256 constant RESERVE_FACTOR_START_BIT_POSITION = 64;\n\n  uint256 constant MAX_VALID_LTV = 65535;\n  uint256 constant MAX_VALID_LIQUIDATION_THRESHOLD = 65535;\n  uint256 constant MAX_VALID_LIQUIDATION_BONUS = 65535;\n  uint256 constant MAX_VALID_DECIMALS = 255;\n  uint256 constant MAX_VALID_RESERVE_FACTOR = 65535;\n\n  /**\n   * @dev Sets the Loan to Value of the reserve\n   * @param self The reserve configuration\n   * @param ltv the new ltv\n   **/\n  function setLtv(DataTypes.ReserveConfigurationMap memory self, uint256 ltv) internal pure {\n    require(ltv <= MAX_VALID_LTV, Errors.RC_INVALID_LTV);\n\n    self.data = (self.data & LTV_MASK) | ltv;\n  }\n\n  /**\n   * @dev Gets the Loan to Value of the reserve\n   * @param self The reserve configuration\n   * @return The loan to value\n   **/\n  function getLtv(DataTypes.ReserveConfigurationMap storage self) internal view returns (uint256) {\n    return self.data & ~LTV_MASK;\n  }\n\n  /**\n   * @dev Sets the liquidation threshold of the reserve\n   * @param self The reserve configuration\n   * @param threshold The new liquidation threshold\n   **/\n  function setLiquidationThreshold(DataTypes.ReserveConfigurationMap memory self, uint256 threshold)\n    internal\n    pure\n  {\n    require(threshold <= MAX_VALID_LIQUIDATION_THRESHOLD, Errors.RC_INVALID_LIQ_THRESHOLD);\n\n    self.data =\n      (self.data & LIQUIDATION_THRESHOLD_MASK) |\n      (threshold << LIQUIDATION_THRESHOLD_START_BIT_POSITION);\n  }\n\n  /**\n   * @dev Gets the liquidation threshold of the reserve\n   * @param self The reserve configuration\n   * @return The liquidation threshold\n   **/\n  function getLiquidationThreshold(DataTypes.ReserveConfigurationMap storage self)\n    internal\n    view\n    returns (uint256)\n  {\n    return (self.data & ~LIQUIDATION_THRESHOLD_MASK) >> LIQUIDATION_THRESHOLD_START_BIT_POSITION;\n  }\n\n  /**\n   * @dev Sets the liquidation bonus of the reserve\n   * @param self The reserve configuration\n   * @param bonus The new liquidation bonus\n   **/\n  function setLiquidationBonus(DataTypes.ReserveConfigurationMap memory self, uint256 bonus)\n    internal\n    pure\n  {\n    require(bonus <= MAX_VALID_LIQUIDATION_BONUS, Errors.RC_INVALID_LIQ_BONUS);\n\n    self.data =\n      (self.data & LIQUIDATION_BONUS_MASK) |\n      (bonus << LIQUIDATION_BONUS_START_BIT_POSITION);\n  }\n\n  /**\n   * @dev Gets the liquidation bonus of the reserve\n   * @param self The reserve configuration\n   * @return The liquidation bonus\n   **/\n  function getLiquidationBonus(DataTypes.ReserveConfigurationMap storage self)\n    internal\n    view\n    returns (uint256)\n  {\n    return (self.data & ~LIQUIDATION_BONUS_MASK) >> LIQUIDATION_BONUS_START_BIT_POSITION;\n  }\n\n  /**\n   * @dev Sets the decimals of the underlying asset of the reserve\n   * @param self The reserve configuration\n   * @param decimals The decimals\n   **/\n  function setDecimals(DataTypes.ReserveConfigurationMap memory self, uint256 decimals)\n    internal\n    pure\n  {\n    require(decimals <= MAX_VALID_DECIMALS, Errors.RC_INVALID_DECIMALS);\n\n    self.data = (self.data & DECIMALS_MASK) | (decimals << RESERVE_DECIMALS_START_BIT_POSITION);\n  }\n\n  /**\n   * @dev Gets the decimals of the underlying asset of the reserve\n   * @param self The reserve configuration\n   * @return The decimals of the asset\n   **/\n  function getDecimals(DataTypes.ReserveConfigurationMap storage self)\n    internal\n    view\n    returns (uint256)\n  {\n    return (self.data & ~DECIMALS_MASK) >> RESERVE_DECIMALS_START_BIT_POSITION;\n  }\n\n  /**\n   * @dev Sets the active state of the reserve\n   * @param self The reserve configuration\n   * @param active The active state\n   **/\n  function setActive(DataTypes.ReserveConfigurationMap memory self, bool active) internal pure {\n    self.data =\n      (self.data & ACTIVE_MASK) |\n      (uint256(active ? 1 : 0) << IS_ACTIVE_START_BIT_POSITION);\n  }\n\n  /**\n   * @dev Gets the active state of the reserve\n   * @param self The reserve configuration\n   * @return The active state\n   **/\n  function getActive(DataTypes.ReserveConfigurationMap storage self) internal view returns (bool) {\n    return (self.data & ~ACTIVE_MASK) != 0;\n  }\n\n  /**\n   * @dev Sets the frozen state of the reserve\n   * @param self The reserve configuration\n   * @param frozen The frozen state\n   **/\n  function setFrozen(DataTypes.ReserveConfigurationMap memory self, bool frozen) internal pure {\n    self.data =\n      (self.data & FROZEN_MASK) |\n      (uint256(frozen ? 1 : 0) << IS_FROZEN_START_BIT_POSITION);\n  }\n\n  /**\n   * @dev Gets the frozen state of the reserve\n   * @param self The reserve configuration\n   * @return The frozen state\n   **/\n  function getFrozen(DataTypes.ReserveConfigurationMap storage self) internal view returns (bool) {\n    return (self.data & ~FROZEN_MASK) != 0;\n  }\n\n  /**\n   * @dev Enables or disables borrowing on the reserve\n   * @param self The reserve configuration\n   * @param enabled True if the borrowing needs to be enabled, false otherwise\n   **/\n  function setBorrowingEnabled(DataTypes.ReserveConfigurationMap memory self, bool enabled)\n    internal\n    pure\n  {\n    self.data =\n      (self.data & BORROWING_MASK) |\n      (uint256(enabled ? 1 : 0) << BORROWING_ENABLED_START_BIT_POSITION);\n  }\n\n  /**\n   * @dev Gets the borrowing state of the reserve\n   * @param self The reserve configuration\n   * @return The borrowing state\n   **/\n  function getBorrowingEnabled(DataTypes.ReserveConfigurationMap storage self)\n    internal\n    view\n    returns (bool)\n  {\n    return (self.data & ~BORROWING_MASK) != 0;\n  }\n\n  /**\n   * @dev Enables or disables stable rate borrowing on the reserve\n   * @param self The reserve configuration\n   * @param enabled True if the stable rate borrowing needs to be enabled, false otherwise\n   **/\n  function setStableRateBorrowingEnabled(\n    DataTypes.ReserveConfigurationMap memory self,\n    bool enabled\n  ) internal pure {\n    self.data =\n      (self.data & STABLE_BORROWING_MASK) |\n      (uint256(enabled ? 1 : 0) << STABLE_BORROWING_ENABLED_START_BIT_POSITION);\n  }\n\n  /**\n   * @dev Gets the stable rate borrowing state of the reserve\n   * @param self The reserve configuration\n   * @return The stable rate borrowing state\n   **/\n  function getStableRateBorrowingEnabled(DataTypes.ReserveConfigurationMap storage self)\n    internal\n    view\n    returns (bool)\n  {\n    return (self.data & ~STABLE_BORROWING_MASK) != 0;\n  }\n\n  /**\n   * @dev Sets the reserve factor of the reserve\n   * @param self The reserve configuration\n   * @param reserveFactor The reserve factor\n   **/\n  function setReserveFactor(DataTypes.ReserveConfigurationMap memory self, uint256 reserveFactor)\n    internal\n    pure\n  {\n    require(reserveFactor <= MAX_VALID_RESERVE_FACTOR, Errors.RC_INVALID_RESERVE_FACTOR);\n\n    self.data =\n      (self.data & RESERVE_FACTOR_MASK) |\n      (reserveFactor << RESERVE_FACTOR_START_BIT_POSITION);\n  }\n\n  /**\n   * @dev Gets the reserve factor of the reserve\n   * @param self The reserve configuration\n   * @return The reserve factor\n   **/\n  function getReserveFactor(DataTypes.ReserveConfigurationMap storage self)\n    internal\n    view\n    returns (uint256)\n  {\n    return (self.data & ~RESERVE_FACTOR_MASK) >> RESERVE_FACTOR_START_BIT_POSITION;\n  }\n\n  /**\n   * @dev Gets the configuration flags of the reserve\n   * @param self The reserve configuration\n   * @return The state flags representing active, frozen, borrowing enabled, stableRateBorrowing enabled\n   **/\n  function getFlags(DataTypes.ReserveConfigurationMap storage self)\n    internal\n    view\n    returns (\n      bool,\n      bool,\n      bool,\n      bool\n    )\n  {\n    uint256 dataLocal = self.data;\n\n    return (\n      (dataLocal & ~ACTIVE_MASK) != 0,\n      (dataLocal & ~FROZEN_MASK) != 0,\n      (dataLocal & ~BORROWING_MASK) != 0,\n      (dataLocal & ~STABLE_BORROWING_MASK) != 0\n    );\n  }\n\n  /**\n   * @dev Gets the configuration paramters of the reserve\n   * @param self The reserve configuration\n   * @return The state params representing ltv, liquidation threshold, liquidation bonus, the reserve decimals\n   **/\n  function getParams(DataTypes.ReserveConfigurationMap storage self)\n    internal\n    view\n    returns (\n      uint256,\n      uint256,\n      uint256,\n      uint256,\n      uint256\n    )\n  {\n    uint256 dataLocal = self.data;\n\n    return (\n      dataLocal & ~LTV_MASK,\n      (dataLocal & ~LIQUIDATION_THRESHOLD_MASK) >> LIQUIDATION_THRESHOLD_START_BIT_POSITION,\n      (dataLocal & ~LIQUIDATION_BONUS_MASK) >> LIQUIDATION_BONUS_START_BIT_POSITION,\n      (dataLocal & ~DECIMALS_MASK) >> RESERVE_DECIMALS_START_BIT_POSITION,\n      (dataLocal & ~RESERVE_FACTOR_MASK) >> RESERVE_FACTOR_START_BIT_POSITION\n    );\n  }\n\n  /**\n   * @dev Gets the configuration paramters of the reserve from a memory object\n   * @param self The reserve configuration\n   * @return The state params representing ltv, liquidation threshold, liquidation bonus, the reserve decimals\n   **/\n  function getParamsMemory(DataTypes.ReserveConfigurationMap memory self)\n    internal\n    pure\n    returns (\n      uint256,\n      uint256,\n      uint256,\n      uint256,\n      uint256\n    )\n  {\n    return (\n      self.data & ~LTV_MASK,\n      (self.data & ~LIQUIDATION_THRESHOLD_MASK) >> LIQUIDATION_THRESHOLD_START_BIT_POSITION,\n      (self.data & ~LIQUIDATION_BONUS_MASK) >> LIQUIDATION_BONUS_START_BIT_POSITION,\n      (self.data & ~DECIMALS_MASK) >> RESERVE_DECIMALS_START_BIT_POSITION,\n      (self.data & ~RESERVE_FACTOR_MASK) >> RESERVE_FACTOR_START_BIT_POSITION\n    );\n  }\n\n  /**\n   * @dev Gets the configuration flags of the reserve from a memory object\n   * @param self The reserve configuration\n   * @return The state flags representing active, frozen, borrowing enabled, stableRateBorrowing enabled\n   **/\n  function getFlagsMemory(DataTypes.ReserveConfigurationMap memory self)\n    internal\n    pure\n    returns (\n      bool,\n      bool,\n      bool,\n      bool\n    )\n  {\n    return (\n      (self.data & ~ACTIVE_MASK) != 0,\n      (self.data & ~FROZEN_MASK) != 0,\n      (self.data & ~BORROWING_MASK) != 0,\n      (self.data & ~STABLE_BORROWING_MASK) != 0\n    );\n  }\n}\n"
			},
			"contracts/interfaces/IAToken.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\nimport {IERC20} from '../dependencies/openzeppelin/contracts/IERC20.sol';\nimport {IScaledBalanceToken} from './IScaledBalanceToken.sol';\n\ninterface IAToken is IERC20, IScaledBalanceToken {\n  /**\n   * @dev Emitted after the mint action\n   * @param from The address performing the mint\n   * @param value The amount being\n   * @param index The new liquidity index of the reserve\n   **/\n  event Mint(address indexed from, uint256 value, uint256 index);\n\n  /**\n   * @dev Mints `amount` aTokens to `user`\n   * @param user The address receiving the minted tokens\n   * @param amount The amount of tokens getting minted\n   * @param index The new liquidity index of the reserve\n   * @return `true` if the the previous balance of the user was 0\n   */\n  function mint(\n    address user,\n    uint256 amount,\n    uint256 index\n  ) external returns (bool);\n\n  /**\n   * @dev Emitted after aTokens are burned\n   * @param from The owner of the aTokens, getting them burned\n   * @param target The address that will receive the underlying\n   * @param value The amount being burned\n   * @param index The new liquidity index of the reserve\n   **/\n  event Burn(address indexed from, address indexed target, uint256 value, uint256 index);\n\n  /**\n   * @dev Emitted during the transfer action\n   * @param from The user whose tokens are being transferred\n   * @param to The recipient\n   * @param value The amount being transferred\n   * @param index The new liquidity index of the reserve\n   **/\n  event BalanceTransfer(address indexed from, address indexed to, uint256 value, uint256 index);\n\n  /**\n   * @dev Burns aTokens from `user` and sends the equivalent amount of underlying to `receiverOfUnderlying`\n   * @param user The owner of the aTokens, getting them burned\n   * @param receiverOfUnderlying The address that will receive the underlying\n   * @param amount The amount being burned\n   * @param index The new liquidity index of the reserve\n   **/\n  function burn(\n    address user,\n    address receiverOfUnderlying,\n    uint256 amount,\n    uint256 index\n  ) external;\n\n  /**\n   * @dev Mints aTokens to the reserve treasury\n   * @param amount The amount of tokens getting minted\n   * @param index The new liquidity index of the reserve\n   */\n  function mintToTreasury(uint256 amount, uint256 index) external;\n\n  /**\n   * @dev Transfers aTokens in the event of a borrow being liquidated, in case the liquidators reclaims the aToken\n   * @param from The address getting liquidated, current owner of the aTokens\n   * @param to The recipient\n   * @param value The amount of tokens getting transferred\n   **/\n  function transferOnLiquidation(\n    address from,\n    address to,\n    uint256 value\n  ) external;\n\n  /**\n   * @dev Transfers the underlying asset to `target`. Used by the LendingPool to transfer\n   * assets in borrow(), withdraw() and flashLoan()\n   * @param user The recipient of the aTokens\n   * @param amount The amount getting transferred\n   * @return The amount transferred\n   **/\n  function transferUnderlyingTo(address user, uint256 amount) external returns (uint256);\n}\n"
			},
			"contracts/interfaces/ILendingPool.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\npragma experimental ABIEncoderV2;\n\nimport {ILendingPoolAddressesProvider} from './ILendingPoolAddressesProvider.sol';\nimport {DataTypes} from '../protocol/libraries/types/DataTypes.sol';\n\ninterface ILendingPool {\n  /**\n   * @dev Emitted on deposit()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address initiating the deposit\n   * @param onBehalfOf The beneficiary of the deposit, receiving the aTokens\n   * @param amount The amount deposited\n   * @param referral The referral code used\n   **/\n  event Deposit(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint16 indexed referral\n  );\n\n  /**\n   * @dev Emitted on withdraw()\n   * @param reserve The address of the underlyng asset being withdrawn\n   * @param user The address initiating the withdrawal, owner of aTokens\n   * @param to Address that will receive the underlying\n   * @param amount The amount to be withdrawn\n   **/\n  event Withdraw(address indexed reserve, address indexed user, address indexed to, uint256 amount);\n\n  /**\n   * @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n   * @param reserve The address of the underlying asset being borrowed\n   * @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n   * initiator of the transaction on flashLoan()\n   * @param onBehalfOf The address that will be getting the debt\n   * @param amount The amount borrowed out\n   * @param borrowRateMode The rate mode: 1 for Stable, 2 for Variable\n   * @param borrowRate The numeric rate at which the user has borrowed\n   * @param referral The referral code used\n   **/\n  event Borrow(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint256 borrowRateMode,\n    uint256 borrowRate,\n    uint16 indexed referral\n  );\n\n  /**\n   * @dev Emitted on repay()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The beneficiary of the repayment, getting his debt reduced\n   * @param repayer The address of the user initiating the repay(), providing the funds\n   * @param amount The amount repaid\n   **/\n  event Repay(\n    address indexed reserve,\n    address indexed user,\n    address indexed repayer,\n    uint256 amount\n  );\n\n  /**\n   * @dev Emitted on swapBorrowRateMode()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user swapping his rate mode\n   * @param rateMode The rate mode that the user wants to swap to\n   **/\n  event Swap(address indexed reserve, address indexed user, uint256 rateMode);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   **/\n  event ReserveUsedAsCollateralEnabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   **/\n  event ReserveUsedAsCollateralDisabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on rebalanceStableBorrowRate()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user for which the rebalance has been executed\n   **/\n  event RebalanceStableBorrowRate(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on flashLoan()\n   * @param target The address of the flash loan receiver contract\n   * @param initiator The address initiating the flash loan\n   * @param asset The address of the asset being flash borrowed\n   * @param amount The amount flash borrowed\n   * @param premium The fee flash borrowed\n   * @param referralCode The referral code used\n   **/\n  event FlashLoan(\n    address indexed target,\n    address indexed initiator,\n    address indexed asset,\n    uint256 amount,\n    uint256 premium,\n    uint16 referralCode\n  );\n\n  /**\n   * @dev Emitted when the pause is triggered.\n   */\n  event Paused();\n\n  /**\n   * @dev Emitted when the pause is lifted.\n   */\n  event Unpaused();\n\n  /**\n   * @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\n   * LendingPoolCollateral manager using a DELEGATECALL\n   * This allows to have the events in the generated ABI for LendingPool.\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param liquidatedCollateralAmount The amount of collateral received by the liiquidator\n   * @param liquidator The address of the liquidator\n   * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   **/\n  event LiquidationCall(\n    address indexed collateralAsset,\n    address indexed debtAsset,\n    address indexed user,\n    uint256 debtToCover,\n    uint256 liquidatedCollateralAmount,\n    address liquidator,\n    bool receiveAToken\n  );\n\n  /**\n   * @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared\n   * in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\n   * the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\n   * gets added to the LendingPool ABI\n   * @param reserve The address of the underlying asset of the reserve\n   * @param liquidityRate The new liquidity rate\n   * @param stableBorrowRate The new stable borrow rate\n   * @param variableBorrowRate The new variable borrow rate\n   * @param liquidityIndex The new liquidity index\n   * @param variableBorrowIndex The new variable borrow index\n   **/\n  event ReserveDataUpdated(\n    address indexed reserve,\n    uint256 liquidityRate,\n    uint256 stableBorrowRate,\n    uint256 variableBorrowRate,\n    uint256 liquidityIndex,\n    uint256 variableBorrowIndex\n  );\n\n  /**\n   * @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n   * - E.g. User deposits 100 USDC and gets in return 100 aUSDC\n   * @param asset The address of the underlying asset to deposit\n   * @param amount The amount to be deposited\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   *   is a different wallet\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   **/\n  function deposit(\n    address asset,\n    uint256 amount,\n    address onBehalfOf,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n   * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n   * @param asset The address of the underlying asset to withdraw\n   * @param amount The underlying amount to be withdrawn\n   *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n   * @param to Address that will receive the underlying, same as msg.sender if the user\n   *   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   *   different wallet\n   * @return The final amount withdrawn\n   **/\n  function withdraw(\n    address asset,\n    uint256 amount,\n    address to\n  ) external returns (uint256);\n\n  /**\n   * @dev Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n   * already deposited enough collateral, or he was given enough allowance by a credit delegator on the\n   * corresponding debt token (StableDebtToken or VariableDebtToken)\n   * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n   * @param asset The address of the underlying asset to borrow\n   * @param amount The amount to be borrowed\n   * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   * @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself\n   * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n   * if he has been given credit delegation allowance\n   **/\n  function borrow(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode,\n    uint16 referralCode,\n    address onBehalfOf\n  ) external;\n\n  /**\n   * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n   * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n   * @param asset The address of the borrowed underlying asset previously borrowed\n   * @param amount The amount to repay\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n   * @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n   * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\n   * other borrower whose debt should be removed\n   * @return The final amount repaid\n   **/\n  function repay(\n    address asset,\n    uint256 amount,\n    uint256 rateMode,\n    address onBehalfOf\n  ) external returns (uint256);\n\n  /**\n   * @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa\n   * @param asset The address of the underlying asset borrowed\n   * @param rateMode The rate mode that the user wants to swap to\n   **/\n  function swapBorrowRateMode(address asset, uint256 rateMode) external;\n\n  /**\n   * @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n   * - Users can be rebalanced if the following conditions are satisfied:\n   *     1. Usage ratio is above 95%\n   *     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\n   *        borrowed at a stable rate and depositors are not earning enough\n   * @param asset The address of the underlying asset borrowed\n   * @param user The address of the user to be rebalanced\n   **/\n  function rebalanceStableBorrowRate(address asset, address user) external;\n\n  /**\n   * @dev Allows depositors to enable/disable a specific deposited asset as collateral\n   * @param asset The address of the underlying asset deposited\n   * @param useAsCollateral `true` if the user wants to use the deposit as collateral, `false` otherwise\n   **/\n  function setUserUseReserveAsCollateral(address asset, bool useAsCollateral) external;\n\n  /**\n   * @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n   * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   **/\n  function liquidationCall(\n    address collateralAsset,\n    address debtAsset,\n    address user,\n    uint256 debtToCover,\n    bool receiveAToken\n  ) external;\n\n  /**\n   * @dev Allows smartcontracts to access the liquidity of the pool within one transaction,\n   * as long as the amount taken plus a fee is returned.\n   * IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\n   * For further details please visit https://developers.aave.com\n   * @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\n   * @param assets The addresses of the assets being flash-borrowed\n   * @param amounts The amounts amounts being flash-borrowed\n   * @param modes Types of the debt to open if the flash loan is not returned:\n   *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n   * @param params Variadic packed params to pass to the receiver as extra information\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   **/\n  function flashLoan(\n    address receiverAddress,\n    address[] calldata assets,\n    uint256[] calldata amounts,\n    uint256[] calldata modes,\n    address onBehalfOf,\n    bytes calldata params,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @dev Returns the user account data across all the reserves\n   * @param user The address of the user\n   * @return totalCollateralETH the total collateral in ETH of the user\n   * @return totalDebtETH the total debt in ETH of the user\n   * @return availableBorrowsETH the borrowing power left of the user\n   * @return currentLiquidationThreshold the liquidation threshold of the user\n   * @return ltv the loan to value of the user\n   * @return healthFactor the current health factor of the user\n   **/\n  function getUserAccountData(address user)\n    external\n    view\n    returns (\n      uint256 totalCollateralETH,\n      uint256 totalDebtETH,\n      uint256 availableBorrowsETH,\n      uint256 currentLiquidationThreshold,\n      uint256 ltv,\n      uint256 healthFactor\n    );\n\n  function initReserve(\n    address reserve,\n    address aTokenAddress,\n    address stableDebtAddress,\n    address variableDebtAddress,\n    address interestRateStrategyAddress\n  ) external;\n\n  function setReserveInterestRateStrategyAddress(address reserve, address rateStrategyAddress)\n    external;\n\n  function setConfiguration(address reserve, uint256 configuration) external;\n\n  /**\n   * @dev Returns the configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The configuration of the reserve\n   **/\n  function getConfiguration(address asset)\n    external\n    view\n    returns (DataTypes.ReserveConfigurationMap memory);\n\n  /**\n   * @dev Returns the configuration of the user across all the reserves\n   * @param user The user address\n   * @return The configuration of the user\n   **/\n  function getUserConfiguration(address user)\n    external\n    view\n    returns (DataTypes.UserConfigurationMap memory);\n\n  /**\n   * @dev Returns the normalized income normalized income of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve's normalized income\n   */\n  function getReserveNormalizedIncome(address asset) external view returns (uint256);\n\n  /**\n   * @dev Returns the normalized variable debt per unit of asset\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve normalized variable debt\n   */\n  function getReserveNormalizedVariableDebt(address asset) external view returns (uint256);\n\n  /**\n   * @dev Returns the state and configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The state of the reserve\n   **/\n  function getReserveData(address asset) external view returns (DataTypes.ReserveData memory);\n\n  function finalizeTransfer(\n    address asset,\n    address from,\n    address to,\n    uint256 amount,\n    uint256 balanceFromAfter,\n    uint256 balanceToBefore\n  ) external;\n\n  function getReservesList() external view returns (address[] memory);\n\n  function getAddressesProvider() external view returns (ILendingPoolAddressesProvider);\n\n  function setPause(bool val) external;\n\n  function paused() external view returns (bool);\n}\n"
			},
			"contracts/misc/interfaces/IWETHGateway.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\ninterface IWETHGateway {\n  function depositETH(address onBehalfOf, uint16 referralCode) external payable;\n\n  function withdrawETH(uint256 amount, address onBehalfOf) external;\n\n  function repayETH(\n    uint256 amount,\n    uint256 rateMode,\n    address onBehalfOf\n  ) external payable;\n\n  function borrowETH(\n    uint256 amount,\n    uint256 interesRateMode,\n    uint16 referralCode\n  ) external;\n}\n"
			},
			"contracts/misc/interfaces/IWETH.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\ninterface IWETH {\n  function deposit() external payable;\n\n  function withdraw(uint256) external;\n\n  function approve(address guy, uint256 wad) external returns (bool);\n\n  function transferFrom(\n    address src,\n    address dst,\n    uint256 wad\n  ) external returns (bool);\n}\n"
			},
			"contracts/dependencies/openzeppelin/contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport './Context.sol';\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor() internal {\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(_owner == _msgSender(), 'Ownable: caller is not the owner');\n    _;\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby removing any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public virtual onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public virtual onlyOwner {\n    require(newOwner != address(0), 'Ownable: new owner is the zero address');\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n"
			},
			"contracts/protocol/libraries/helpers/Errors.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\n/**\n * @title Errors library\n * @author Aave\n * @notice Defines the error messages emitted by the different contracts of the Aave protocol\n * @dev Error messages prefix glossary:\n *  - VL = ValidationLogic\n *  - MATH = Math libraries\n *  - CT = Common errors between tokens (AToken, VariableDebtToken and StableDebtToken)\n *  - AT = AToken\n *  - SDT = StableDebtToken\n *  - VDT = VariableDebtToken\n *  - LP = LendingPool\n *  - LPAPR = LendingPoolAddressesProviderRegistry\n *  - LPC = LendingPoolConfiguration\n *  - RL = ReserveLogic\n *  - LPCM = LendingPoolCollateralManager\n *  - P = Pausable\n */\nlibrary Errors {\n  //common errors\n  string public constant CALLER_NOT_POOL_ADMIN = '33'; // 'The caller must be the pool admin'\n  string public constant BORROW_ALLOWANCE_NOT_ENOUGH = '59'; // User borrows on behalf, but allowance are too small\n\n  //contract specific errors\n  string public constant VL_INVALID_AMOUNT = '1'; // 'Amount must be greater than 0'\n  string public constant VL_NO_ACTIVE_RESERVE = '2'; // 'Action requires an active reserve'\n  string public constant VL_RESERVE_FROZEN = '3'; // 'Action cannot be performed because the reserve is frozen'\n  string public constant VL_CURRENT_AVAILABLE_LIQUIDITY_NOT_ENOUGH = '4'; // 'The current liquidity is not enough'\n  string public constant VL_NOT_ENOUGH_AVAILABLE_USER_BALANCE = '5'; // 'User cannot withdraw more than the available balance'\n  string public constant VL_TRANSFER_NOT_ALLOWED = '6'; // 'Transfer cannot be allowed.'\n  string public constant VL_BORROWING_NOT_ENABLED = '7'; // 'Borrowing is not enabled'\n  string public constant VL_INVALID_INTEREST_RATE_MODE_SELECTED = '8'; // 'Invalid interest rate mode selected'\n  string public constant VL_COLLATERAL_BALANCE_IS_0 = '9'; // 'The collateral balance is 0'\n  string public constant VL_HEALTH_FACTOR_LOWER_THAN_LIQUIDATION_THRESHOLD = '10'; // 'Health factor is lesser than the liquidation threshold'\n  string public constant VL_COLLATERAL_CANNOT_COVER_NEW_BORROW = '11'; // 'There is not enough collateral to cover a new borrow'\n  string public constant VL_STABLE_BORROWING_NOT_ENABLED = '12'; // stable borrowing not enabled\n  string public constant VL_COLLATERAL_SAME_AS_BORROWING_CURRENCY = '13'; // collateral is (mostly) the same currency that is being borrowed\n  string public constant VL_AMOUNT_BIGGER_THAN_MAX_LOAN_SIZE_STABLE = '14'; // 'The requested amount is greater than the max loan size in stable rate mode\n  string public constant VL_NO_DEBT_OF_SELECTED_TYPE = '15'; // 'for repayment of stable debt, the user needs to have stable debt, otherwise, he needs to have variable debt'\n  string public constant VL_NO_EXPLICIT_AMOUNT_TO_REPAY_ON_BEHALF = '16'; // 'To repay on behalf of an user an explicit amount to repay is needed'\n  string public constant VL_NO_STABLE_RATE_LOAN_IN_RESERVE = '17'; // 'User does not have a stable rate loan in progress on this reserve'\n  string public constant VL_NO_VARIABLE_RATE_LOAN_IN_RESERVE = '18'; // 'User does not have a variable rate loan in progress on this reserve'\n  string public constant VL_UNDERLYING_BALANCE_NOT_GREATER_THAN_0 = '19'; // 'The underlying balance needs to be greater than 0'\n  string public constant VL_DEPOSIT_ALREADY_IN_USE = '20'; // 'User deposit is already being used as collateral'\n  string public constant LP_NOT_ENOUGH_STABLE_BORROW_BALANCE = '21'; // 'User does not have any stable rate loan for this reserve'\n  string public constant LP_INTEREST_RATE_REBALANCE_CONDITIONS_NOT_MET = '22'; // 'Interest rate rebalance conditions were not met'\n  string public constant LP_LIQUIDATION_CALL_FAILED = '23'; // 'Liquidation call failed'\n  string public constant LP_NOT_ENOUGH_LIQUIDITY_TO_BORROW = '24'; // 'There is not enough liquidity available to borrow'\n  string public constant LP_REQUESTED_AMOUNT_TOO_SMALL = '25'; // 'The requested amount is too small for a FlashLoan.'\n  string public constant LP_INCONSISTENT_PROTOCOL_ACTUAL_BALANCE = '26'; // 'The actual balance of the protocol is inconsistent'\n  string public constant LP_CALLER_NOT_LENDING_POOL_CONFIGURATOR = '27'; // 'The caller of the function is not the lending pool configurator'\n  string public constant LP_INCONSISTENT_FLASHLOAN_PARAMS = '28';\n  string public constant CT_CALLER_MUST_BE_LENDING_POOL = '29'; // 'The caller of this function must be a lending pool'\n  string public constant CT_CANNOT_GIVE_ALLOWANCE_TO_HIMSELF = '30'; // 'User cannot give allowance to himself'\n  string public constant CT_TRANSFER_AMOUNT_NOT_GT_0 = '31'; // 'Transferred amount needs to be greater than zero'\n  string public constant RL_RESERVE_ALREADY_INITIALIZED = '32'; // 'Reserve has already been initialized'\n  string public constant LPC_RESERVE_LIQUIDITY_NOT_0 = '34'; // 'The liquidity of the reserve needs to be 0'\n  string public constant LPC_INVALID_ATOKEN_POOL_ADDRESS = '35'; // 'The liquidity of the reserve needs to be 0'\n  string public constant LPC_INVALID_STABLE_DEBT_TOKEN_POOL_ADDRESS = '36'; // 'The liquidity of the reserve needs to be 0'\n  string public constant LPC_INVALID_VARIABLE_DEBT_TOKEN_POOL_ADDRESS = '37'; // 'The liquidity of the reserve needs to be 0'\n  string public constant LPC_INVALID_STABLE_DEBT_TOKEN_UNDERLYING_ADDRESS = '38'; // 'The liquidity of the reserve needs to be 0'\n  string public constant LPC_INVALID_VARIABLE_DEBT_TOKEN_UNDERLYING_ADDRESS = '39'; // 'The liquidity of the reserve needs to be 0'\n  string public constant LPC_INVALID_ADDRESSES_PROVIDER_ID = '40'; // 'The liquidity of the reserve needs to be 0'\n  string public constant LPC_INVALID_CONFIGURATION = '75'; // 'Invalid risk parameters for the reserve'\n  string public constant LPC_CALLER_NOT_EMERGENCY_ADMIN = '76'; // 'The caller must be the emergency admin'\n  string public constant LPAPR_PROVIDER_NOT_REGISTERED = '41'; // 'Provider is not registered'\n  string public constant LPCM_HEALTH_FACTOR_NOT_BELOW_THRESHOLD = '42'; // 'Health factor is not below the threshold'\n  string public constant LPCM_COLLATERAL_CANNOT_BE_LIQUIDATED = '43'; // 'The collateral chosen cannot be liquidated'\n  string public constant LPCM_SPECIFIED_CURRENCY_NOT_BORROWED_BY_USER = '44'; // 'User did not borrow the specified currency'\n  string public constant LPCM_NOT_ENOUGH_LIQUIDITY_TO_LIQUIDATE = '45'; // \"There isn't enough liquidity available to liquidate\"\n  string public constant LPCM_NO_ERRORS = '46'; // 'No errors'\n  string public constant LP_INVALID_FLASHLOAN_MODE = '47'; //Invalid flashloan mode selected\n  string public constant MATH_MULTIPLICATION_OVERFLOW = '48';\n  string public constant MATH_ADDITION_OVERFLOW = '49';\n  string public constant MATH_DIVISION_BY_ZERO = '50';\n  string public constant RL_LIQUIDITY_INDEX_OVERFLOW = '51'; //  Liquidity index overflows uint128\n  string public constant RL_VARIABLE_BORROW_INDEX_OVERFLOW = '52'; //  Variable borrow index overflows uint128\n  string public constant RL_LIQUIDITY_RATE_OVERFLOW = '53'; //  Liquidity rate overflows uint128\n  string public constant RL_VARIABLE_BORROW_RATE_OVERFLOW = '54'; //  Variable borrow rate overflows uint128\n  string public constant RL_STABLE_BORROW_RATE_OVERFLOW = '55'; //  Stable borrow rate overflows uint128\n  string public constant CT_INVALID_MINT_AMOUNT = '56'; //invalid amount to mint\n  string public constant LP_FAILED_REPAY_WITH_COLLATERAL = '57';\n  string public constant CT_INVALID_BURN_AMOUNT = '58'; //invalid amount to burn\n  string public constant LP_FAILED_COLLATERAL_SWAP = '60';\n  string public constant LP_INVALID_EQUAL_ASSETS_TO_SWAP = '61';\n  string public constant LP_REENTRANCY_NOT_ALLOWED = '62';\n  string public constant LP_CALLER_MUST_BE_AN_ATOKEN = '63';\n  string public constant LP_IS_PAUSED = '64'; // 'Pool is paused'\n  string public constant LP_NO_MORE_RESERVES_ALLOWED = '65';\n  string public constant LP_INVALID_FLASH_LOAN_EXECUTOR_RETURN = '66';\n  string public constant RC_INVALID_LTV = '67';\n  string public constant RC_INVALID_LIQ_THRESHOLD = '68';\n  string public constant RC_INVALID_LIQ_BONUS = '69';\n  string public constant RC_INVALID_DECIMALS = '70';\n  string public constant RC_INVALID_RESERVE_FACTOR = '71';\n  string public constant LPAPR_INVALID_ADDRESSES_PROVIDER_ID = '72';\n  string public constant VL_INCONSISTENT_FLASHLOAN_PARAMS = '73';\n  string public constant LP_INCONSISTENT_PARAMS_LENGTH = '74';\n  string public constant UL_INVALID_INDEX = '77';\n  string public constant LP_NOT_CONTRACT = '78';\n  string public constant SDT_STABLE_DEBT_OVERFLOW = '79';\n  string public constant SDT_BURN_EXCEEDS_BALANCE = '80';\n\n  enum CollateralManagerErrors {\n    NO_ERROR,\n    NO_COLLATERAL_AVAILABLE,\n    COLLATERAL_CANNOT_BE_LIQUIDATED,\n    CURRRENCY_NOT_BORROWED,\n    HEALTH_FACTOR_ABOVE_THRESHOLD,\n    NOT_ENOUGH_LIQUIDITY,\n    NO_ACTIVE_RESERVE,\n    HEALTH_FACTOR_LOWER_THAN_LIQUIDATION_THRESHOLD,\n    INVALID_EQUAL_ASSETS_TO_SWAP,\n    FROZEN_RESERVE\n  }\n}\n"
			},
			"contracts/interfaces/ILendingPoolAddressesProvider.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\n/**\n * @title LendingPoolAddressesProvider contract\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\n * - Owned by the Aave Governance\n * @author Aave\n **/\ninterface ILendingPoolAddressesProvider {\n  event MarketIdSet(string newMarketId);\n  event LendingPoolUpdated(address indexed newAddress);\n  event ConfigurationAdminUpdated(address indexed newAddress);\n  event EmergencyAdminUpdated(address indexed newAddress);\n  event LendingPoolConfiguratorUpdated(address indexed newAddress);\n  event LendingPoolCollateralManagerUpdated(address indexed newAddress);\n  event PriceOracleUpdated(address indexed newAddress);\n  event LendingRateOracleUpdated(address indexed newAddress);\n  event ProxyCreated(bytes32 id, address indexed newAddress);\n  event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\n\n  function getMarketId() external view returns (string memory);\n\n  function setMarketId(string calldata marketId) external;\n\n  function setAddress(bytes32 id, address newAddress) external;\n\n  function setAddressAsProxy(bytes32 id, address impl) external;\n\n  function getAddress(bytes32 id) external view returns (address);\n\n  function getLendingPool() external view returns (address);\n\n  function setLendingPoolImpl(address pool) external;\n\n  function getLendingPoolConfigurator() external view returns (address);\n\n  function setLendingPoolConfiguratorImpl(address configurator) external;\n\n  function getLendingPoolCollateralManager() external view returns (address);\n\n  function setLendingPoolCollateralManager(address manager) external;\n\n  function getPoolAdmin() external view returns (address);\n\n  function setPoolAdmin(address admin) external;\n\n  function getEmergencyAdmin() external view returns (address);\n\n  function setEmergencyAdmin(address admin) external;\n\n  function getPriceOracle() external view returns (address);\n\n  function setPriceOracle(address priceOracle) external;\n\n  function getLendingRateOracle() external view returns (address);\n\n  function setLendingRateOracle(address lendingRateOracle) external;\n}\n"
			},
			"contracts/interfaces/IScaledBalanceToken.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\ninterface IScaledBalanceToken {\n  /**\n   * @dev Returns the scaled balance of the user. The scaled balance is the sum of all the\n   * updated stored balance divided by the reserve's liquidity index at the moment of the update\n   * @param user The user whose balance is calculated\n   * @return The scaled balance of the user\n   **/\n  function scaledBalanceOf(address user) external view returns (uint256);\n\n  /**\n   * @dev Returns the scaled balance of the user and the scaled total supply.\n   * @param user The address of the user\n   * @return The scaled balance of the user\n   * @return The scaled balance and the scaled total supply\n   **/\n  function getScaledUserBalanceAndSupply(address user) external view returns (uint256, uint256);\n\n  /**\n   * @dev Returns the scaled total supply of the variable debt token. Represents sum(debt/index)\n   * @return The scaled total supply\n   **/\n  function scaledTotalSupply() external view returns (uint256);\n}\n"
			},
			"contracts/dependencies/openzeppelin/contracts/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.12;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n  function _msgSender() internal view virtual returns (address payable) {\n    return msg.sender;\n  }\n\n  function _msgData() internal view virtual returns (bytes memory) {\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    return msg.data;\n  }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/dependencies/openzeppelin/contracts/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"keccak256\":\"0xe52c598aa6e76d57665914c1c43fc6fa13bbe3b0bd8e816a6cec1c2bca5014e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a665a54b2277889ba2bdb9c3860b3b71ec7b22757297a03b590a093257604e9d\",\"dweb:/ipfs/QmQ4mm9YnrtvjJwetDec3WoiKeJGoJMCs5kbPBhGVRcZ6N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0x6406b04abfeda2c8c80ea3faf797ce4501e66db41fb6ff4e299ebe0402879f44\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://33b0db81db37bd6fe20aa0b23581c6b0edef2f3c49d0bd88b4fe46c1164adb00\",\"dweb:/ipfs/QmYn1zYwt3ahpkLYwHh6h5b1UJrzP2xy5G3at9oEVNw2c1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/dependencies/openzeppelin/contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"keccak256\":\"0xe52c598aa6e76d57665914c1c43fc6fa13bbe3b0bd8e816a6cec1c2bca5014e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a665a54b2277889ba2bdb9c3860b3b71ec7b22757297a03b590a093257604e9d\",\"dweb:/ipfs/QmQ4mm9YnrtvjJwetDec3WoiKeJGoJMCs5kbPBhGVRcZ6N\"]},\"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":{\"keccak256\":\"0xe89abab730aac141126c194f910969c76f55a29536f2709c71c1c0c4ffce5508\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5667cdfe050014996ee748d1891155cc9a40ec5de28804d8c5e4b6c3a34e727\",\"dweb:/ipfs/QmWcSNdBecjXbiEau8QHSdBFes2HXw59H9hhJNjCww1Y8i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 108,
								"contract": "contracts/dependencies/openzeppelin/contracts/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IAToken.sol": {
				"IAToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "BalanceTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiverOfUnderlying",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getScaledUserBalanceAndSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "mintToTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "scaledBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "scaledTotalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferOnLiquidation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferUnderlyingTo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"BalanceTransfer(address,address,uint256,uint256)": {
								"details": "Emitted during the transfer action",
								"params": {
									"from": "The user whose tokens are being transferred",
									"index": "The new liquidity index of the reserve*",
									"to": "The recipient",
									"value": "The amount being transferred"
								}
							},
							"Burn(address,address,uint256,uint256)": {
								"details": "Emitted after aTokens are burned",
								"params": {
									"from": "The owner of the aTokens, getting them burned",
									"index": "The new liquidity index of the reserve*",
									"target": "The address that will receive the underlying",
									"value": "The amount being burned"
								}
							},
							"Mint(address,uint256,uint256)": {
								"details": "Emitted after the mint action",
								"params": {
									"from": "The address performing the mint",
									"index": "The new liquidity index of the reserve*",
									"value": "The amount being"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"burn(address,address,uint256,uint256)": {
								"details": "Burns aTokens from `user` and sends the equivalent amount of underlying to `receiverOfUnderlying`",
								"params": {
									"amount": "The amount being burned",
									"index": "The new liquidity index of the reserve*",
									"receiverOfUnderlying": "The address that will receive the underlying",
									"user": "The owner of the aTokens, getting them burned"
								}
							},
							"getScaledUserBalanceAndSupply(address)": {
								"details": "Returns the scaled balance of the user and the scaled total supply.",
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The scaled balance of the user",
									"_1": "The scaled balance and the scaled total supply*"
								}
							},
							"mint(address,uint256,uint256)": {
								"details": "Mints `amount` aTokens to `user`",
								"params": {
									"amount": "The amount of tokens getting minted",
									"index": "The new liquidity index of the reserve",
									"user": "The address receiving the minted tokens"
								},
								"returns": {
									"_0": "`true` if the the previous balance of the user was 0"
								}
							},
							"mintToTreasury(uint256,uint256)": {
								"details": "Mints aTokens to the reserve treasury",
								"params": {
									"amount": "The amount of tokens getting minted",
									"index": "The new liquidity index of the reserve"
								}
							},
							"scaledBalanceOf(address)": {
								"details": "Returns the scaled balance of the user. The scaled balance is the sum of all the updated stored balance divided by the reserve's liquidity index at the moment of the update",
								"params": {
									"user": "The user whose balance is calculated"
								},
								"returns": {
									"_0": "The scaled balance of the user*"
								}
							},
							"scaledTotalSupply()": {
								"details": "Returns the scaled total supply of the variable debt token. Represents sum(debt/index)",
								"returns": {
									"_0": "The scaled total supply*"
								}
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferOnLiquidation(address,address,uint256)": {
								"details": "Transfers aTokens in the event of a borrow being liquidated, in case the liquidators reclaims the aToken",
								"params": {
									"from": "The address getting liquidated, current owner of the aTokens",
									"to": "The recipient",
									"value": "The amount of tokens getting transferred*"
								}
							},
							"transferUnderlyingTo(address,uint256)": {
								"details": "Transfers the underlying asset to `target`. Used by the LendingPool to transfer assets in borrow(), withdraw() and flashLoan()",
								"params": {
									"amount": "The amount getting transferred",
									"user": "The recipient of the aTokens"
								},
								"returns": {
									"_0": "The amount transferred*"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,address,uint256,uint256)": "d7020d0a",
							"getScaledUserBalanceAndSupply(address)": "0afbcdc9",
							"mint(address,uint256,uint256)": "156e29f6",
							"mintToTreasury(uint256,uint256)": "7df5bd3b",
							"scaledBalanceOf(address)": "1da24f3e",
							"scaledTotalSupply()": "b1bf962d",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOnLiquidation(address,address,uint256)": "f866c319",
							"transferUnderlyingTo(address,uint256)": "4efecaa5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"BalanceTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverOfUnderlying\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getScaledUserBalanceAndSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"mintToTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"scaledBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scaledTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferOnLiquidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferUnderlyingTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"BalanceTransfer(address,address,uint256,uint256)\":{\"details\":\"Emitted during the transfer action\",\"params\":{\"from\":\"The user whose tokens are being transferred\",\"index\":\"The new liquidity index of the reserve*\",\"to\":\"The recipient\",\"value\":\"The amount being transferred\"}},\"Burn(address,address,uint256,uint256)\":{\"details\":\"Emitted after aTokens are burned\",\"params\":{\"from\":\"The owner of the aTokens, getting them burned\",\"index\":\"The new liquidity index of the reserve*\",\"target\":\"The address that will receive the underlying\",\"value\":\"The amount being burned\"}},\"Mint(address,uint256,uint256)\":{\"details\":\"Emitted after the mint action\",\"params\":{\"from\":\"The address performing the mint\",\"index\":\"The new liquidity index of the reserve*\",\"value\":\"The amount being\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"burn(address,address,uint256,uint256)\":{\"details\":\"Burns aTokens from `user` and sends the equivalent amount of underlying to `receiverOfUnderlying`\",\"params\":{\"amount\":\"The amount being burned\",\"index\":\"The new liquidity index of the reserve*\",\"receiverOfUnderlying\":\"The address that will receive the underlying\",\"user\":\"The owner of the aTokens, getting them burned\"}},\"getScaledUserBalanceAndSupply(address)\":{\"details\":\"Returns the scaled balance of the user and the scaled total supply.\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The scaled balance of the user\",\"_1\":\"The scaled balance and the scaled total supply*\"}},\"mint(address,uint256,uint256)\":{\"details\":\"Mints `amount` aTokens to `user`\",\"params\":{\"amount\":\"The amount of tokens getting minted\",\"index\":\"The new liquidity index of the reserve\",\"user\":\"The address receiving the minted tokens\"},\"returns\":{\"_0\":\"`true` if the the previous balance of the user was 0\"}},\"mintToTreasury(uint256,uint256)\":{\"details\":\"Mints aTokens to the reserve treasury\",\"params\":{\"amount\":\"The amount of tokens getting minted\",\"index\":\"The new liquidity index of the reserve\"}},\"scaledBalanceOf(address)\":{\"details\":\"Returns the scaled balance of the user. The scaled balance is the sum of all the updated stored balance divided by the reserve's liquidity index at the moment of the update\",\"params\":{\"user\":\"The user whose balance is calculated\"},\"returns\":{\"_0\":\"The scaled balance of the user*\"}},\"scaledTotalSupply()\":{\"details\":\"Returns the scaled total supply of the variable debt token. Represents sum(debt/index)\",\"returns\":{\"_0\":\"The scaled total supply*\"}},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferOnLiquidation(address,address,uint256)\":{\"details\":\"Transfers aTokens in the event of a borrow being liquidated, in case the liquidators reclaims the aToken\",\"params\":{\"from\":\"The address getting liquidated, current owner of the aTokens\",\"to\":\"The recipient\",\"value\":\"The amount of tokens getting transferred*\"}},\"transferUnderlyingTo(address,uint256)\":{\"details\":\"Transfers the underlying asset to `target`. Used by the LendingPool to transfer assets in borrow(), withdraw() and flashLoan()\",\"params\":{\"amount\":\"The amount getting transferred\",\"user\":\"The recipient of the aTokens\"},\"returns\":{\"_0\":\"The amount transferred*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAToken.sol\":\"IAToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0x6406b04abfeda2c8c80ea3faf797ce4501e66db41fb6ff4e299ebe0402879f44\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://33b0db81db37bd6fe20aa0b23581c6b0edef2f3c49d0bd88b4fe46c1164adb00\",\"dweb:/ipfs/QmYn1zYwt3ahpkLYwHh6h5b1UJrzP2xy5G3at9oEVNw2c1\"]},\"contracts/interfaces/IAToken.sol\":{\"keccak256\":\"0x75298f98d270973cc1a469a0d72a184c0d9bbc0ae279a05ebcfa248138576681\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://2c92a428d2b9ac20aaadffc0300fd1448635d1a8d57a04f38a41ea116a51d162\",\"dweb:/ipfs/QmPd9qvveX85kcqGcyuZQzz39Y6uPvYohyFaBWJhTpUPk1\"]},\"contracts/interfaces/IScaledBalanceToken.sol\":{\"keccak256\":\"0x03f77c8f37be8f08723b82ccc7c000da0152839632a5c3952c292a2ea0b1b491\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://c8cbe31d5cd705ef15b40c0d9a48dace17797a314fa1d8d93edd412537e8ac98\",\"dweb:/ipfs/QmYuKD5D5NVakZ41XRxHvMUXUG4Hn83E9YyxJMrMCjPZxd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ILendingPool.sol": {
				"ILendingPool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "borrowRateMode",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "borrowRate",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referral",
									"type": "uint16"
								}
							],
							"name": "Borrow",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referral",
									"type": "uint16"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "initiator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "premium",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "FlashLoan",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "collateralAsset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "debtAsset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "debtToCover",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidatedCollateralAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "liquidator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "receiveAToken",
									"type": "bool"
								}
							],
							"name": "LiquidationCall",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "RebalanceStableBorrowRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "repayer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Repay",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidityRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stableBorrowRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableBorrowRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidityIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableBorrowIndex",
									"type": "uint256"
								}
							],
							"name": "ReserveDataUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "ReserveUsedAsCollateralDisabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "ReserveUsedAsCollateralEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rateMode",
									"type": "uint256"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRateMode",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								}
							],
							"name": "borrow",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balanceFromAfter",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balanceToBefore",
									"type": "uint256"
								}
							],
							"name": "finalizeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiverAddress",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "modes",
									"type": "uint256[]"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "params",
									"type": "bytes"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "flashLoan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAddressesProvider",
							"outputs": [
								{
									"internalType": "contract ILendingPoolAddressesProvider",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getConfiguration",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "data",
											"type": "uint256"
										}
									],
									"internalType": "struct DataTypes.ReserveConfigurationMap",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveData",
							"outputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "data",
													"type": "uint256"
												}
											],
											"internalType": "struct DataTypes.ReserveConfigurationMap",
											"name": "configuration",
											"type": "tuple"
										},
										{
											"internalType": "uint128",
											"name": "liquidityIndex",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "variableBorrowIndex",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentLiquidityRate",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentVariableBorrowRate",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentStableBorrowRate",
											"type": "uint128"
										},
										{
											"internalType": "uint40",
											"name": "lastUpdateTimestamp",
											"type": "uint40"
										},
										{
											"internalType": "address",
											"name": "aTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "stableDebtTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "variableDebtTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "interestRateStrategyAddress",
											"type": "address"
										},
										{
											"internalType": "uint8",
											"name": "id",
											"type": "uint8"
										}
									],
									"internalType": "struct DataTypes.ReserveData",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveNormalizedIncome",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveNormalizedVariableDebt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReservesList",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserAccountData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalCollateralETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalDebtETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "availableBorrowsETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "currentLiquidationThreshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ltv",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "healthFactor",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserConfiguration",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "data",
											"type": "uint256"
										}
									],
									"internalType": "struct DataTypes.UserConfigurationMap",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "aTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "stableDebtAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "variableDebtAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "interestRateStrategyAddress",
									"type": "address"
								}
							],
							"name": "initReserve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collateralAsset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "debtAsset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "debtToCover",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "receiveAToken",
									"type": "bool"
								}
							],
							"name": "liquidationCall",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "rebalanceStableBorrowRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rateMode",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								}
							],
							"name": "repay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "configuration",
									"type": "uint256"
								}
							],
							"name": "setConfiguration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "val",
									"type": "bool"
								}
							],
							"name": "setPause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rateStrategyAddress",
									"type": "address"
								}
							],
							"name": "setReserveInterestRateStrategyAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "useAsCollateral",
									"type": "bool"
								}
							],
							"name": "setUserUseReserveAsCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rateMode",
									"type": "uint256"
								}
							],
							"name": "swapBorrowRateMode",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Borrow(address,address,address,uint256,uint256,uint256,uint16)": {
								"details": "Emitted on borrow() and flashLoan() when debt needs to be opened",
								"params": {
									"amount": "The amount borrowed out",
									"borrowRate": "The numeric rate at which the user has borrowed",
									"borrowRateMode": "The rate mode: 1 for Stable, 2 for Variable",
									"onBehalfOf": "The address that will be getting the debt",
									"referral": "The referral code used*",
									"reserve": "The address of the underlying asset being borrowed",
									"user": "The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()"
								}
							},
							"Deposit(address,address,address,uint256,uint16)": {
								"details": "Emitted on deposit()",
								"params": {
									"amount": "The amount deposited",
									"onBehalfOf": "The beneficiary of the deposit, receiving the aTokens",
									"referral": "The referral code used*",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address initiating the deposit"
								}
							},
							"FlashLoan(address,address,address,uint256,uint256,uint16)": {
								"details": "Emitted on flashLoan()",
								"params": {
									"amount": "The amount flash borrowed",
									"asset": "The address of the asset being flash borrowed",
									"initiator": "The address initiating the flash loan",
									"premium": "The fee flash borrowed",
									"referralCode": "The referral code used*",
									"target": "The address of the flash loan receiver contract"
								}
							},
							"LiquidationCall(address,address,address,uint256,uint256,address,bool)": {
								"details": "Emitted when a borrower is liquidated. This event is emitted by the LendingPool via LendingPoolCollateral manager using a DELEGATECALL This allows to have the events in the generated ABI for LendingPool.",
								"params": {
									"collateralAsset": "The address of the underlying asset used as collateral, to receive as result of the liquidation",
									"debtAsset": "The address of the underlying borrowed asset to be repaid with the liquidation",
									"debtToCover": "The debt amount of borrowed `asset` the liquidator wants to cover",
									"liquidatedCollateralAmount": "The amount of collateral received by the liiquidator",
									"liquidator": "The address of the liquidator",
									"receiveAToken": "`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*",
									"user": "The address of the borrower getting liquidated"
								}
							},
							"Paused()": {
								"details": "Emitted when the pause is triggered."
							},
							"RebalanceStableBorrowRate(address,address)": {
								"details": "Emitted on rebalanceStableBorrowRate()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user for which the rebalance has been executed*"
								}
							},
							"Repay(address,address,address,uint256)": {
								"details": "Emitted on repay()",
								"params": {
									"amount": "The amount repaid*",
									"repayer": "The address of the user initiating the repay(), providing the funds",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The beneficiary of the repayment, getting his debt reduced"
								}
							},
							"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)": {
								"details": "Emitted when the state of a reserve is updated. NOTE: This event is actually declared in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal, the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it gets added to the LendingPool ABI",
								"params": {
									"liquidityIndex": "The new liquidity index",
									"liquidityRate": "The new liquidity rate",
									"reserve": "The address of the underlying asset of the reserve",
									"stableBorrowRate": "The new stable borrow rate",
									"variableBorrowIndex": "The new variable borrow index*",
									"variableBorrowRate": "The new variable borrow rate"
								}
							},
							"ReserveUsedAsCollateralDisabled(address,address)": {
								"details": "Emitted on setUserUseReserveAsCollateral()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user enabling the usage as collateral*"
								}
							},
							"ReserveUsedAsCollateralEnabled(address,address)": {
								"details": "Emitted on setUserUseReserveAsCollateral()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user enabling the usage as collateral*"
								}
							},
							"Swap(address,address,uint256)": {
								"details": "Emitted on swapBorrowRateMode()",
								"params": {
									"rateMode": "The rate mode that the user wants to swap to*",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user swapping his rate mode"
								}
							},
							"Unpaused()": {
								"details": "Emitted when the pause is lifted."
							},
							"Withdraw(address,address,address,uint256)": {
								"details": "Emitted on withdraw()",
								"params": {
									"amount": "The amount to be withdrawn*",
									"reserve": "The address of the underlyng asset being withdrawn",
									"to": "Address that will receive the underlying",
									"user": "The address initiating the withdrawal, owner of aTokens"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"borrow(address,uint256,uint256,uint16,address)": {
								"details": "Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already deposited enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`",
								"params": {
									"amount": "The amount to be borrowed",
									"asset": "The address of the underlying asset to borrow",
									"interestRateMode": "The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable",
									"onBehalfOf": "Address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance*",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"deposit(address,uint256,address,uint16)": {
								"details": "Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User deposits 100 USDC and gets in return 100 aUSDC",
								"params": {
									"amount": "The amount to be deposited",
									"asset": "The address of the underlying asset to deposit",
									"onBehalfOf": "The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"
								}
							},
							"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
								"details": "Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned. IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://developers.aave.com",
								"params": {
									"amounts": "The amounts amounts being flash-borrowed",
									"assets": "The addresses of the assets being flash-borrowed",
									"modes": "Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address",
									"onBehalfOf": "The address  that will receive the debt in the case of using on `modes` 1 or 2",
									"params": "Variadic packed params to pass to the receiver as extra information",
									"receiverAddress": "The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"
								}
							},
							"getConfiguration(address)": {
								"details": "Returns the configuration of the reserve",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The configuration of the reserve*"
								}
							},
							"getReserveData(address)": {
								"details": "Returns the state and configuration of the reserve",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The state of the reserve*"
								}
							},
							"getReserveNormalizedIncome(address)": {
								"details": "Returns the normalized income normalized income of the reserve",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The reserve's normalized income"
								}
							},
							"getReserveNormalizedVariableDebt(address)": {
								"details": "Returns the normalized variable debt per unit of asset",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The reserve normalized variable debt"
								}
							},
							"getUserAccountData(address)": {
								"details": "Returns the user account data across all the reserves",
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"availableBorrowsETH": "the borrowing power left of the user",
									"currentLiquidationThreshold": "the liquidation threshold of the user",
									"healthFactor": "the current health factor of the user*",
									"ltv": "the loan to value of the user",
									"totalCollateralETH": "the total collateral in ETH of the user",
									"totalDebtETH": "the total debt in ETH of the user"
								}
							},
							"getUserConfiguration(address)": {
								"details": "Returns the configuration of the user across all the reserves",
								"params": {
									"user": "The user address"
								},
								"returns": {
									"_0": "The configuration of the user*"
								}
							},
							"liquidationCall(address,address,address,uint256,bool)": {
								"details": "Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk",
								"params": {
									"collateralAsset": "The address of the underlying asset used as collateral, to receive as result of the liquidation",
									"debtAsset": "The address of the underlying borrowed asset to be repaid with the liquidation",
									"debtToCover": "The debt amount of borrowed `asset` the liquidator wants to cover",
									"receiveAToken": "`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*",
									"user": "The address of the borrower getting liquidated"
								}
							},
							"rebalanceStableBorrowRate(address,address)": {
								"details": "Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been        borrowed at a stable rate and depositors are not earning enough",
								"params": {
									"asset": "The address of the underlying asset borrowed",
									"user": "The address of the user to be rebalanced*"
								}
							},
							"repay(address,uint256,uint256,address)": {
								"params": {
									"amount": "The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`",
									"asset": "The address of the borrowed underlying asset previously borrowed",
									"onBehalfOf": "Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed",
									"rateMode": "The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable"
								},
								"returns": {
									"_0": "The final amount repaid*"
								}
							},
							"setUserUseReserveAsCollateral(address,bool)": {
								"details": "Allows depositors to enable/disable a specific deposited asset as collateral",
								"params": {
									"asset": "The address of the underlying asset deposited",
									"useAsCollateral": "`true` if the user wants to use the deposit as collateral, `false` otherwise*"
								}
							},
							"swapBorrowRateMode(address,uint256)": {
								"details": "Allows a borrower to swap his debt between stable and variable mode, or viceversa",
								"params": {
									"asset": "The address of the underlying asset borrowed",
									"rateMode": "The rate mode that the user wants to swap to*"
								}
							},
							"withdraw(address,uint256,address)": {
								"details": "Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC",
								"params": {
									"amount": "The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance",
									"asset": "The address of the underlying asset to withdraw",
									"to": "Address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet"
								},
								"returns": {
									"_0": "The final amount withdrawn*"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"borrow(address,uint256,uint256,uint16,address)": "a415bcad",
							"deposit(address,uint256,address,uint16)": "e8eda9df",
							"finalizeTransfer(address,address,address,uint256,uint256,uint256)": "d5ed3933",
							"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": "ab9c4b5d",
							"getAddressesProvider()": "fe65acfe",
							"getConfiguration(address)": "c44b11f7",
							"getReserveData(address)": "35ea6a75",
							"getReserveNormalizedIncome(address)": "d15e0053",
							"getReserveNormalizedVariableDebt(address)": "386497fd",
							"getReservesList()": "d1946dbc",
							"getUserAccountData(address)": "bf92857c",
							"getUserConfiguration(address)": "4417a583",
							"initReserve(address,address,address,address,address)": "7a708e92",
							"liquidationCall(address,address,address,uint256,bool)": "00a718a9",
							"paused()": "5c975abb",
							"rebalanceStableBorrowRate(address,address)": "cd112382",
							"repay(address,uint256,uint256,address)": "573ade81",
							"setConfiguration(address,uint256)": "b8d29276",
							"setPause(bool)": "bedb86fb",
							"setReserveInterestRateStrategyAddress(address,address)": "1d2118f9",
							"setUserUseReserveAsCollateral(address,bool)": "5a3b74b9",
							"swapBorrowRateMode(address,uint256)": "94ba89a2",
							"withdraw(address,uint256,address)": "69328dec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowRateMode\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referral\",\"type\":\"uint16\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referral\",\"type\":\"uint16\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidatedCollateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"LiquidationCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"RebalanceStableBorrowRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"repayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowIndex\",\"type\":\"uint256\"}],\"name\":\"ReserveDataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceFromAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceToBefore\",\"type\":\"uint256\"}],\"name\":\"finalizeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"modes\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddressesProvider\",\"outputs\":[{\"internalType\":\"contract ILendingPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"},{\"internalType\":\"uint128\",\"name\":\"liquidityIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"variableBorrowIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentLiquidityRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentVariableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentStableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"internalType\":\"struct DataTypes.ReserveData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedVariableDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReservesList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserAccountData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalCollateralETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDebtETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableBorrowsETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentLiquidationThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ltv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"healthFactor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.UserConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"}],\"name\":\"initReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"liquidationCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"rebalanceStableBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"repay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"configuration\",\"type\":\"uint256\"}],\"name\":\"setConfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"val\",\"type\":\"bool\"}],\"name\":\"setPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rateStrategyAddress\",\"type\":\"address\"}],\"name\":\"setReserveInterestRateStrategyAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useAsCollateral\",\"type\":\"bool\"}],\"name\":\"setUserUseReserveAsCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"}],\"name\":\"swapBorrowRateMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Borrow(address,address,address,uint256,uint256,uint256,uint16)\":{\"details\":\"Emitted on borrow() and flashLoan() when debt needs to be opened\",\"params\":{\"amount\":\"The amount borrowed out\",\"borrowRate\":\"The numeric rate at which the user has borrowed\",\"borrowRateMode\":\"The rate mode: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address that will be getting the debt\",\"referral\":\"The referral code used*\",\"reserve\":\"The address of the underlying asset being borrowed\",\"user\":\"The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()\"}},\"Deposit(address,address,address,uint256,uint16)\":{\"details\":\"Emitted on deposit()\",\"params\":{\"amount\":\"The amount deposited\",\"onBehalfOf\":\"The beneficiary of the deposit, receiving the aTokens\",\"referral\":\"The referral code used*\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the deposit\"}},\"FlashLoan(address,address,address,uint256,uint256,uint16)\":{\"details\":\"Emitted on flashLoan()\",\"params\":{\"amount\":\"The amount flash borrowed\",\"asset\":\"The address of the asset being flash borrowed\",\"initiator\":\"The address initiating the flash loan\",\"premium\":\"The fee flash borrowed\",\"referralCode\":\"The referral code used*\",\"target\":\"The address of the flash loan receiver contract\"}},\"LiquidationCall(address,address,address,uint256,uint256,address,bool)\":{\"details\":\"Emitted when a borrower is liquidated. This event is emitted by the LendingPool via LendingPoolCollateral manager using a DELEGATECALL This allows to have the events in the generated ABI for LendingPool.\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"liquidatedCollateralAmount\":\"The amount of collateral received by the liiquidator\",\"liquidator\":\"The address of the liquidator\",\"receiveAToken\":\"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*\",\"user\":\"The address of the borrower getting liquidated\"}},\"Paused()\":{\"details\":\"Emitted when the pause is triggered.\"},\"RebalanceStableBorrowRate(address,address)\":{\"details\":\"Emitted on rebalanceStableBorrowRate()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user for which the rebalance has been executed*\"}},\"Repay(address,address,address,uint256)\":{\"details\":\"Emitted on repay()\",\"params\":{\"amount\":\"The amount repaid*\",\"repayer\":\"The address of the user initiating the repay(), providing the funds\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The beneficiary of the repayment, getting his debt reduced\"}},\"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when the state of a reserve is updated. NOTE: This event is actually declared in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal, the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it gets added to the LendingPool ABI\",\"params\":{\"liquidityIndex\":\"The new liquidity index\",\"liquidityRate\":\"The new liquidity rate\",\"reserve\":\"The address of the underlying asset of the reserve\",\"stableBorrowRate\":\"The new stable borrow rate\",\"variableBorrowIndex\":\"The new variable borrow index*\",\"variableBorrowRate\":\"The new variable borrow rate\"}},\"ReserveUsedAsCollateralDisabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral*\"}},\"ReserveUsedAsCollateralEnabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral*\"}},\"Swap(address,address,uint256)\":{\"details\":\"Emitted on swapBorrowRateMode()\",\"params\":{\"rateMode\":\"The rate mode that the user wants to swap to*\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user swapping his rate mode\"}},\"Unpaused()\":{\"details\":\"Emitted when the pause is lifted.\"},\"Withdraw(address,address,address,uint256)\":{\"details\":\"Emitted on withdraw()\",\"params\":{\"amount\":\"The amount to be withdrawn*\",\"reserve\":\"The address of the underlyng asset being withdrawn\",\"to\":\"Address that will receive the underlying\",\"user\":\"The address initiating the withdrawal, owner of aTokens\"}}},\"kind\":\"dev\",\"methods\":{\"borrow(address,uint256,uint256,uint16,address)\":{\"details\":\"Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already deposited enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`\",\"params\":{\"amount\":\"The amount to be borrowed\",\"asset\":\"The address of the underlying asset to borrow\",\"interestRateMode\":\"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"Address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance*\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"deposit(address,uint256,address,uint16)\":{\"details\":\"Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User deposits 100 USDC and gets in return 100 aUSDC\",\"params\":{\"amount\":\"The amount to be deposited\",\"asset\":\"The address of the underlying asset to deposit\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*\"}},\"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)\":{\"details\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned. IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://developers.aave.com\",\"params\":{\"amounts\":\"The amounts amounts being flash-borrowed\",\"assets\":\"The addresses of the assets being flash-borrowed\",\"modes\":\"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\",\"onBehalfOf\":\"The address  that will receive the debt in the case of using on `modes` 1 or 2\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*\"}},\"getConfiguration(address)\":{\"details\":\"Returns the configuration of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The configuration of the reserve*\"}},\"getReserveData(address)\":{\"details\":\"Returns the state and configuration of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The state of the reserve*\"}},\"getReserveNormalizedIncome(address)\":{\"details\":\"Returns the normalized income normalized income of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve's normalized income\"}},\"getReserveNormalizedVariableDebt(address)\":{\"details\":\"Returns the normalized variable debt per unit of asset\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve normalized variable debt\"}},\"getUserAccountData(address)\":{\"details\":\"Returns the user account data across all the reserves\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"availableBorrowsETH\":\"the borrowing power left of the user\",\"currentLiquidationThreshold\":\"the liquidation threshold of the user\",\"healthFactor\":\"the current health factor of the user*\",\"ltv\":\"the loan to value of the user\",\"totalCollateralETH\":\"the total collateral in ETH of the user\",\"totalDebtETH\":\"the total debt in ETH of the user\"}},\"getUserConfiguration(address)\":{\"details\":\"Returns the configuration of the user across all the reserves\",\"params\":{\"user\":\"The user address\"},\"returns\":{\"_0\":\"The configuration of the user*\"}},\"liquidationCall(address,address,address,uint256,bool)\":{\"details\":\"Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"receiveAToken\":\"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*\",\"user\":\"The address of the borrower getting liquidated\"}},\"rebalanceStableBorrowRate(address,address)\":{\"details\":\"Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been        borrowed at a stable rate and depositors are not earning enough\",\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"user\":\"The address of the user to be rebalanced*\"}},\"repay(address,uint256,uint256,address)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"onBehalfOf\":\"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\",\"rateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\"},\"returns\":{\"_0\":\"The final amount repaid*\"}},\"setUserUseReserveAsCollateral(address,bool)\":{\"details\":\"Allows depositors to enable/disable a specific deposited asset as collateral\",\"params\":{\"asset\":\"The address of the underlying asset deposited\",\"useAsCollateral\":\"`true` if the user wants to use the deposit as collateral, `false` otherwise*\"}},\"swapBorrowRateMode(address,uint256)\":{\"details\":\"Allows a borrower to swap his debt between stable and variable mode, or viceversa\",\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"rateMode\":\"The rate mode that the user wants to swap to*\"}},\"withdraw(address,uint256,address)\":{\"details\":\"Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\",\"params\":{\"amount\":\"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance\",\"asset\":\"The address of the underlying asset to withdraw\",\"to\":\"Address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet\"},\"returns\":{\"_0\":\"The final amount withdrawn*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"repay(address,uint256,uint256,address)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ILendingPool.sol\":\"ILendingPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ILendingPool.sol\":{\"keccak256\":\"0x5fa85a3137312e0d37602723af7408ed97636028699bdf7a7c7cc2dc34cdbafc\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://2f084d52067cbb14f10a00813b17c386681e17e295f878d3d8992cef63e67ac1\",\"dweb:/ipfs/QmWGjEYp4ZHmMxW7zkV8ctsmpc5kAYDw3yqaf1LZGsFFuJ\"]},\"contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0xcb0e2c4c19c0bde86907b6ab45b6a1db4932d3642fc51410d56c9411a65b9f1d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://38d01c9e664c64d46a15bbbda2933b5fb877d33f6746d2db32563962beea9119\",\"dweb:/ipfs/QmajEmcQZz3E6GzmLpeGvnEswuwCjVYy8svqdx8bxi4PuG\"]},\"contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0xb1d3ae94d3e4b3bf23b3394d820a3a2b5ba56fd5389f561f3fdd73ed1c60c391\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://47c11d578cc1e0df27e4e85cfe5831a48b78d6e939d34e17db4bc65a54c899fe\",\"dweb:/ipfs/QmYdYLkYFJe3psmQUH1S1uNhGE9xyxeDunuEW9gBPg9vDB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"repay(address,uint256,uint256,address)": {
								"notice": "Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ILendingPoolAddressesProvider.sol": {
				"ILendingPoolAddressesProvider": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "hasProxy",
									"type": "bool"
								}
							],
							"name": "AddressSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ConfigurationAdminUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "EmergencyAdminUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingPoolCollateralManagerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingPoolConfiguratorUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingPoolUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingRateOracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "newMarketId",
									"type": "string"
								}
							],
							"name": "MarketIdSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PriceOracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ProxyCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "getAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getEmergencyAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPoolCollateralManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPoolConfigurator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingRateOracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMarketId",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPriceOracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "setAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "impl",
									"type": "address"
								}
							],
							"name": "setAddressAsProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "setEmergencyAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "manager",
									"type": "address"
								}
							],
							"name": "setLendingPoolCollateralManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "configurator",
									"type": "address"
								}
							],
							"name": "setLendingPoolConfiguratorImpl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "setLendingPoolImpl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lendingRateOracle",
									"type": "address"
								}
							],
							"name": "setLendingRateOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "marketId",
									"type": "string"
								}
							],
							"name": "setMarketId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "setPoolAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "priceOracle",
									"type": "address"
								}
							],
							"name": "setPriceOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aave*",
						"details": "Main registry of addresses part of or connected to the protocol, including permissioned roles - Acting also as factory of proxies and admin of those, so with right to change its implementations - Owned by the Aave Governance",
						"kind": "dev",
						"methods": {},
						"title": "LendingPoolAddressesProvider contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAddress(bytes32)": "21f8a721",
							"getEmergencyAdmin()": "ddcaa9ea",
							"getLendingPool()": "0261bf8b",
							"getLendingPoolCollateralManager()": "712d9171",
							"getLendingPoolConfigurator()": "85c858b1",
							"getLendingRateOracle()": "3618abba",
							"getMarketId()": "568ef470",
							"getPoolAdmin()": "aecda378",
							"getPriceOracle()": "fca513a8",
							"setAddress(bytes32,address)": "ca446dd9",
							"setAddressAsProxy(bytes32,address)": "5dcc528c",
							"setEmergencyAdmin(address)": "35da3394",
							"setLendingPoolCollateralManager(address)": "398e5553",
							"setLendingPoolConfiguratorImpl(address)": "c12542df",
							"setLendingPoolImpl(address)": "5aef021f",
							"setLendingRateOracle(address)": "820d1274",
							"setMarketId(string)": "f67b1847",
							"setPoolAdmin(address)": "283d62ad",
							"setPriceOracle(address)": "530e784f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"hasProxy\",\"type\":\"bool\"}],\"name\":\"AddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ConfigurationAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"EmergencyAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolCollateralManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolConfiguratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingRateOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"MarketIdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ProxyCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEmergencyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolCollateralManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolConfigurator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingRateOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"setAddressAsProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setEmergencyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"setLendingPoolCollateralManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"configurator\",\"type\":\"address\"}],\"name\":\"setLendingPoolConfiguratorImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"setLendingPoolImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lendingRateOracle\",\"type\":\"address\"}],\"name\":\"setLendingRateOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"marketId\",\"type\":\"string\"}],\"name\":\"setMarketId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setPoolAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave*\",\"details\":\"Main registry of addresses part of or connected to the protocol, including permissioned roles - Acting also as factory of proxies and admin of those, so with right to change its implementations - Owned by the Aave Governance\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LendingPoolAddressesProvider contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ILendingPoolAddressesProvider.sol\":\"ILendingPoolAddressesProvider\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0xcb0e2c4c19c0bde86907b6ab45b6a1db4932d3642fc51410d56c9411a65b9f1d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://38d01c9e664c64d46a15bbbda2933b5fb877d33f6746d2db32563962beea9119\",\"dweb:/ipfs/QmajEmcQZz3E6GzmLpeGvnEswuwCjVYy8svqdx8bxi4PuG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IScaledBalanceToken.sol": {
				"IScaledBalanceToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getScaledUserBalanceAndSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "scaledBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "scaledTotalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getScaledUserBalanceAndSupply(address)": {
								"details": "Returns the scaled balance of the user and the scaled total supply.",
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The scaled balance of the user",
									"_1": "The scaled balance and the scaled total supply*"
								}
							},
							"scaledBalanceOf(address)": {
								"details": "Returns the scaled balance of the user. The scaled balance is the sum of all the updated stored balance divided by the reserve's liquidity index at the moment of the update",
								"params": {
									"user": "The user whose balance is calculated"
								},
								"returns": {
									"_0": "The scaled balance of the user*"
								}
							},
							"scaledTotalSupply()": {
								"details": "Returns the scaled total supply of the variable debt token. Represents sum(debt/index)",
								"returns": {
									"_0": "The scaled total supply*"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getScaledUserBalanceAndSupply(address)": "0afbcdc9",
							"scaledBalanceOf(address)": "1da24f3e",
							"scaledTotalSupply()": "b1bf962d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getScaledUserBalanceAndSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"scaledBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scaledTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getScaledUserBalanceAndSupply(address)\":{\"details\":\"Returns the scaled balance of the user and the scaled total supply.\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The scaled balance of the user\",\"_1\":\"The scaled balance and the scaled total supply*\"}},\"scaledBalanceOf(address)\":{\"details\":\"Returns the scaled balance of the user. The scaled balance is the sum of all the updated stored balance divided by the reserve's liquidity index at the moment of the update\",\"params\":{\"user\":\"The user whose balance is calculated\"},\"returns\":{\"_0\":\"The scaled balance of the user*\"}},\"scaledTotalSupply()\":{\"details\":\"Returns the scaled total supply of the variable debt token. Represents sum(debt/index)\",\"returns\":{\"_0\":\"The scaled total supply*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IScaledBalanceToken.sol\":\"IScaledBalanceToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IScaledBalanceToken.sol\":{\"keccak256\":\"0x03f77c8f37be8f08723b82ccc7c000da0152839632a5c3952c292a2ea0b1b491\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://c8cbe31d5cd705ef15b40c0d9a48dace17797a314fa1d8d93edd412537e8ac98\",\"dweb:/ipfs/QmYuKD5D5NVakZ41XRxHvMUXUG4Hn83E9YyxJMrMCjPZxd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/misc/Reenter.sol": {
				"Test": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_gatewayAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Received",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "gateway",
							"outputs": [
								{
									"internalType": "contract WETHGateway",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "test123",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/misc/Reenter.sol\":173:1032  contract Test {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/misc/Reenter.sol\":311:525  constructor(address payable _gatewayAddress) public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  mload\n    /* \"contracts/misc/Reenter.sol\":374:381  gateway */\n  0x00\n    /* \"contracts/misc/Reenter.sol\":374:412  gateway = WETHGateway(_gatewayAddress) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup1\n  dup5\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap2\n  dup3\n  swap1\n  sstore\n    /* \"contracts/misc/Reenter.sol\":438:463  gateway.getAWETHAddress() */\n  0x40\n  dup1\n  mload\n  shl(0xe2, 0x0e886beb)\n  dup2\n  mstore\n  swap1\n  mload\n    /* \"contracts/misc/Reenter.sol\":438:445  gateway */\n  swap3\n  swap1\n  swap2\n  and\n  swap2\n    /* \"contracts/misc/Reenter.sol\":438:461  gateway.getAWETHAddress */\n  0x3a21afac\n  swap2\n    /* \"contracts/misc/Reenter.sol\":438:463  gateway.getAWETHAddress() */\n  0x04\n  dup1\n  dup3\n  add\n  swap3\n    /* \"contracts/misc/Reenter.sol\":311:525  constructor(address payable _gatewayAddress) public {\r... */\n  0x20\n  swap3\n    /* \"contracts/misc/Reenter.sol\":438:463  gateway.getAWETHAddress() */\n  swap1\n  swap2\n  swap1\n  dup3\n  swap1\n  sub\n  add\n  dup2\n    /* \"contracts/misc/Reenter.sol\":438:445  gateway */\n  dup7\n    /* \"contracts/misc/Reenter.sol\":438:463  gateway.getAWETHAddress() */\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  pop\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_7\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_7:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  0x20\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  0x00\n  dup1\n  revert\ntag_8:\n  pop\n  mload\n    /* \"contracts/misc/Reenter.sol\":423:428  token */\n  0x01\n    /* \"contracts/misc/Reenter.sol\":423:464  token = IERC20(gateway.getAWETHAddress()) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  dup4\n  and\n  or\n  swap1\n  dup2\n  swap1\n  sstore\n    /* \"contracts/misc/Reenter.sol\":475:512  token.approve(_gatewayAddress, 1e18 ) */\n  0x40\n  dup1\n  mload\n  shl(0xe0, 0x095ea7b3)\n  dup2\n  mstore\n  dup5\n  dup5\n  and\n  0x04\n  dup3\n  add\n  mstore\n    /* \"contracts/misc/Reenter.sol\":506:510  1e18 */\n  0x0de0b6b3a7640000\n    /* \"contracts/misc/Reenter.sol\":475:512  token.approve(_gatewayAddress, 1e18 ) */\n  0x24\n  dup3\n  add\n  mstore\n  swap1\n  mload\n    /* \"contracts/misc/Reenter.sol\":475:480  token */\n  swap2\n  swap1\n  swap3\n  and\n  swap2\n    /* \"contracts/misc/Reenter.sol\":475:488  token.approve */\n  0x095ea7b3\n  swap2\n    /* \"contracts/misc/Reenter.sol\":475:512  token.approve(_gatewayAddress, 1e18 ) */\n  0x44\n  dup1\n  dup4\n  add\n  swap3\n    /* \"contracts/misc/Reenter.sol\":438:463  gateway.getAWETHAddress() */\n  0x20\n  swap3\n    /* \"contracts/misc/Reenter.sol\":475:512  token.approve(_gatewayAddress, 1e18 ) */\n  swap2\n  swap1\n  dup3\n  swap1\n  sub\n  add\n  dup2\n  0x00\n    /* \"contracts/misc/Reenter.sol\":475:480  token */\n  dup8\n    /* \"contracts/misc/Reenter.sol\":475:512  token.approve(_gatewayAddress, 1e18 ) */\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_9\n  jumpi\n  0x00\n  dup1\n  revert\ntag_9:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_11\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_11:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  0x20\n  dup2\n  lt\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  pop\n  pop\n  pop\n    /* \"contracts/misc/Reenter.sol\":173:1032  contract Test {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/misc/Reenter.sol\":173:1032  contract Test {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x116191b6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb90c4034\n      eq\n      tag_4\n      jumpi\n    tag_1:\n        /* \"contracts/misc/Reenter.sol\":578:585  gateway */\n      0x00\n      dup1\n      sload\n        /* \"contracts/misc/Reenter.sol\":578:694  gateway.depositETH{value: 7 wei}({\r... */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x58c22be7)\n      dup2\n      mstore\n        /* \"contracts/misc/Reenter.sol\":645:649  this */\n      address\n        /* \"contracts/misc/Reenter.sol\":578:694  gateway.depositETH{value: 7 wei}({\r... */\n      0x04\n      dup3\n      add\n      mstore\n      0x24\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/Reenter.sol\":578:585  gateway */\n      swap1\n      swap3\n      and\n      swap3\n        /* \"contracts/misc/Reenter.sol\":578:596  gateway.depositETH */\n      0x58c22be7\n      swap3\n        /* \"contracts/misc/Reenter.sol\":604:609  7 wei */\n      0x07\n      swap3\n        /* \"contracts/misc/Reenter.sol\":578:694  gateway.depositETH{value: 7 wei}({\r... */\n      0x44\n      dup1\n      dup3\n      add\n      swap4\n        /* \"contracts/misc/Reenter.sol\":578:585  gateway */\n      swap3\n        /* \"contracts/misc/Reenter.sol\":578:694  gateway.depositETH{value: 7 wei}({\r... */\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/misc/Reenter.sol\":604:609  7 wei */\n      dup6\n        /* \"contracts/misc/Reenter.sol\":578:585  gateway */\n      dup9\n        /* \"contracts/misc/Reenter.sol\":578:694  gateway.depositETH{value: 7 wei}({\r... */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_9\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_9:\n      pop\n      pop\n        /* \"contracts/misc/Reenter.sol\":710:741  Received(msg.sender, msg.value) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/misc/Reenter.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/misc/Reenter.sol\":710:741  Received(msg.sender, msg.value) */\n      dup2\n      mstore\n        /* \"contracts/misc/Reenter.sol\":731:740  msg.value */\n      callvalue\n        /* \"contracts/misc/Reenter.sol\":710:741  Received(msg.sender, msg.value) */\n      0x20\n      dup3\n      add\n      mstore\n      dup2\n      mload\n      0x88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874\n      swap6\n      pop\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap3\n      pop\n      swap1\n      pop\n      log1\n        /* \"contracts/misc/Reenter.sol\":173:1032  contract Test {\r... */\n      stop\n        /* \"contracts/misc/Reenter.sol\":194:220  WETHGateway public gateway */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/misc/Reenter.sol\":757:1029  function test123() public payable {\r... */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/misc/Reenter.sol\":194:220  WETHGateway public gateway */\n    tag_12:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      dup2\n      jump\t// out\n        /* \"contracts/misc/Reenter.sol\":757:1029  function test123() public payable {\r... */\n    tag_14:\n        /* \"contracts/misc/Reenter.sol\":802:809  gateway */\n      0x00\n      dup1\n      sload\n        /* \"contracts/misc/Reenter.sol\":802:918  gateway.depositETH{value: 5 wei}({\r... */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x58c22be7)\n      dup2\n      mstore\n        /* \"contracts/misc/Reenter.sol\":869:873  this */\n      address\n        /* \"contracts/misc/Reenter.sol\":802:918  gateway.depositETH{value: 5 wei}({\r... */\n      0x04\n      dup3\n      add\n      mstore\n      0x24\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/Reenter.sol\":802:809  gateway */\n      swap1\n      swap3\n      and\n      swap3\n        /* \"contracts/misc/Reenter.sol\":802:820  gateway.depositETH */\n      0x58c22be7\n      swap3\n        /* \"contracts/misc/Reenter.sol\":828:833  5 wei */\n      0x05\n      swap3\n        /* \"contracts/misc/Reenter.sol\":802:918  gateway.depositETH{value: 5 wei}({\r... */\n      0x44\n      dup1\n      dup3\n      add\n      swap4\n        /* \"contracts/misc/Reenter.sol\":802:809  gateway */\n      swap3\n        /* \"contracts/misc/Reenter.sol\":802:918  gateway.depositETH{value: 5 wei}({\r... */\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/misc/Reenter.sol\":828:833  5 wei */\n      dup6\n        /* \"contracts/misc/Reenter.sol\":802:809  gateway */\n      dup9\n        /* \"contracts/misc/Reenter.sol\":802:918  gateway.depositETH{value: 5 wei}({\r... */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_18\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_18:\n      pop\n      pop\n        /* \"contracts/misc/Reenter.sol\":929:936  gateway */\n      0x00\n      dup1\n      sload\n        /* \"contracts/misc/Reenter.sol\":929:1021  gateway.withdrawETH({\r... */\n      0x40\n      dup1\n      mload\n      shl(0xe1, 0x1b08c5a9)\n      dup2\n      mstore\n        /* \"contracts/misc/Reenter.sol\":972:977  3 wei */\n      0x03\n        /* \"contracts/misc/Reenter.sol\":929:1021  gateway.withdrawETH({\r... */\n      0x04\n      dup3\n      add\n      mstore\n        /* \"contracts/misc/Reenter.sol\":1004:1008  this */\n      address\n        /* \"contracts/misc/Reenter.sol\":929:1021  gateway.withdrawETH({\r... */\n      0x24\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/Reenter.sol\":929:936  gateway */\n      swap1\n      swap3\n      and\n      swap6\n      pop\n        /* \"contracts/misc/Reenter.sol\":929:948  gateway.withdrawETH */\n      0x36118b52\n      swap5\n      pop\n        /* \"contracts/misc/Reenter.sol\":929:1021  gateway.withdrawETH({\r... */\n      0x44\n      dup1\n      dup3\n      add\n      swap5\n      pop\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/misc/Reenter.sol\":929:936  gateway */\n      dup4\n      dup8\n        /* \"contracts/misc/Reenter.sol\":929:1021  gateway.withdrawETH({\r... */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_21:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/misc/Reenter.sol\":757:1029  function test123() public payable {\r... */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205fde4696c4b554ef3d76a8c52530ce57d8e77af56216408c2737b4fd76bd2ca664736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516103903803806103908339818101604052602081101561003357600080fd5b5051600080546001600160a01b0319166001600160a01b03808416919091179182905560408051630e886beb60e21b815290519290911691633a21afac91600480820192602092909190829003018186803b15801561009157600080fd5b505afa1580156100a5573d6000803e3d6000fd5b505050506040513d60208110156100bb57600080fd5b5051600180546001600160a01b0319166001600160a01b0392831617908190556040805163095ea7b360e01b81528484166004820152670de0b6b3a764000060248201529051919092169163095ea7b39160448083019260209291908290030181600087803b15801561012d57600080fd5b505af1158015610141573d6000803e3d6000fd5b505050506040513d602081101561015757600080fd5b505050610227806101696000396000f3fe6080604052600436106100295760003560e01c8063116191b6146100d2578063b90c403414610103575b60008054604080516358c22be760e01b81523060048201526024810184905290516001600160a01b03909216926358c22be792600792604480820193929182900301818588803b15801561007c57600080fd5b505af1158015610090573d6000803e3d6000fd5b50506040805133815234602082015281517f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f8852587495509081900390910192509050a1005b3480156100de57600080fd5b506100e761010d565b604080516001600160a01b039092168252519081900360200190f35b61010b61011c565b005b6000546001600160a01b031681565b60008054604080516358c22be760e01b81523060048201526024810184905290516001600160a01b03909216926358c22be792600592604480820193929182900301818588803b15801561016f57600080fd5b505af1158015610183573d6000803e3d6000fd5b50506000805460408051631b08c5a960e11b81526003600482015230602482015290516001600160a01b0390921695506336118b529450604480820194509082900301818387803b1580156101d757600080fd5b505af11580156101eb573d6000803e3d6000fd5b5050505056fea26469706673582212205fde4696c4b554ef3d76a8c52530ce57d8e77af56216408c2737b4fd76bd2ca664736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x390 CODESIZE SUB DUP1 PUSH2 0x390 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0xE886BEB PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP1 SWAP2 AND SWAP2 PUSH4 0x3A21AFAC SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE DUP5 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x95EA7B3 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x141 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0x227 DUP1 PUSH2 0x169 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x116191B6 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0xB90C4034 EQ PUSH2 0x103 JUMPI JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x58C22BE7 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x58C22BE7 SWAP3 PUSH1 0x7 SWAP3 PUSH1 0x44 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x90 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 SWAP6 POP SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP3 POP SWAP1 POP LOG1 STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE7 PUSH2 0x10D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x10B PUSH2 0x11C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x58C22BE7 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x58C22BE7 SWAP3 PUSH1 0x5 SWAP3 PUSH1 0x44 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x183 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1B08C5A9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x3 PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP6 POP PUSH4 0x36118B52 SWAP5 POP PUSH1 0x44 DUP1 DUP3 ADD SWAP5 POP SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xDE CHAINID SWAP7 0xC4 0xB5 SLOAD 0xEF RETURNDATASIZE PUSH23 0xA8C52530CE57D8E77AF56216408C2737B4FD76BD2CA664 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "173:859:7:-:0;;;311:214;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;311:214:7;374:7;:38;;-1:-1:-1;;;;;;374:38:7;-1:-1:-1;;;;;374:38:7;;;;;;;;;;;438:25;;;-1:-1:-1;;;438:25:7;;;;:7;;;;;:23;;:25;;;;;311:214;;438:25;;;;;;;;:7;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;438:25:7;423:5;:41;;-1:-1:-1;;;;;;423:41:7;-1:-1:-1;;;;;423:41:7;;;;;;;;475:37;;;-1:-1:-1;;;475:37:7;;;;;;;;;506:4;475:37;;;;;;:5;;;;;:13;;:37;;;;;438:25;;475:37;;;;;;;-1:-1:-1;475:5:7;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;173:859:7;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c8063116191b6146100d2578063b90c403414610103575b60008054604080516358c22be760e01b81523060048201526024810184905290516001600160a01b03909216926358c22be792600792604480820193929182900301818588803b15801561007c57600080fd5b505af1158015610090573d6000803e3d6000fd5b50506040805133815234602082015281517f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f8852587495509081900390910192509050a1005b3480156100de57600080fd5b506100e761010d565b604080516001600160a01b039092168252519081900360200190f35b61010b61011c565b005b6000546001600160a01b031681565b60008054604080516358c22be760e01b81523060048201526024810184905290516001600160a01b03909216926358c22be792600592604480820193929182900301818588803b15801561016f57600080fd5b505af1158015610183573d6000803e3d6000fd5b50506000805460408051631b08c5a960e11b81526003600482015230602482015290516001600160a01b0390921695506336118b529450604480820194509082900301818387803b1580156101d757600080fd5b505af11580156101eb573d6000803e3d6000fd5b5050505056fea26469706673582212205fde4696c4b554ef3d76a8c52530ce57d8e77af56216408c2737b4fd76bd2ca664736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x116191B6 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0xB90C4034 EQ PUSH2 0x103 JUMPI JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x58C22BE7 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x58C22BE7 SWAP3 PUSH1 0x7 SWAP3 PUSH1 0x44 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x90 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 SWAP6 POP SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP3 POP SWAP1 POP LOG1 STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE7 PUSH2 0x10D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x10B PUSH2 0x11C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x58C22BE7 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x58C22BE7 SWAP3 PUSH1 0x5 SWAP3 PUSH1 0x44 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x183 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1B08C5A9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x3 PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP6 POP PUSH4 0x36118B52 SWAP5 POP PUSH1 0x44 DUP1 DUP3 ADD SWAP5 POP SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xDE CHAINID SWAP7 0xC4 0xB5 SLOAD 0xEF RETURNDATASIZE PUSH23 0xA8C52530CE57D8E77AF56216408C2737B4FD76BD2CA664 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "173:859:7:-:0;;;;;;;;;;;;;;;;;;;;;;;578:7;;;:116;;;-1:-1:-1;;;578:116:7;;645:4;578:116;;;;;;;;;;;;-1:-1:-1;;;;;578:7:7;;;;:18;;604:5;;578:116;;;;;:7;:116;;;;;;604:5;578:7;:116;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;710:31:7;;;719:10;710:31;;731:9;710:31;;;;;;;;-1:-1:-1;710:31:7;;;;;;;;-1:-1:-1;710:31:7;-1:-1:-1;710:31:7;173:859;194:26;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;194:26:7;;;;;;;;;;;;;;757:272;;;:::i;:::-;;194:26;;;-1:-1:-1;;;;;194:26:7;;:::o;757:272::-;802:7;;;:116;;;-1:-1:-1;;;802:116:7;;869:4;802:116;;;;;;;;;;;;-1:-1:-1;;;;;802:7:7;;;;:18;;828:5;;802:116;;;;;:7;:116;;;;;;828:5;802:7;:116;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;929:7:7;;;:92;;;-1:-1:-1;;;929:92:7;;972:5;929:92;;;;1004:4;929:92;;;;;;-1:-1:-1;;;;;929:7:7;;;;-1:-1:-1;929:19:7;;-1:-1:-1;929:92:7;;;;;-1:-1:-1;929:92:7;;;;;;:7;;:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;757:272::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "110200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"gateway()": "1015",
								"test123()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 173,
									"end": 1032,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 173,
									"end": 1032,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 173,
									"end": 1032,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 311,
									"end": 525,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 311,
									"end": 525,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 311,
									"end": 525,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 311,
									"end": 525,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 311,
									"end": 525,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 311,
									"end": 525,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 311,
									"end": 525,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 311,
									"end": 525,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 311,
									"end": 525,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 311,
									"end": 525,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 374,
									"end": 381,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 374,
									"end": 412,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 374,
									"end": 412,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 374,
									"end": 412,
									"name": "AND",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 374,
									"end": 412,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 374,
									"end": 412,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 374,
									"end": 412,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 374,
									"end": 412,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 374,
									"end": 412,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 374,
									"end": 412,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 374,
									"end": 412,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 374,
									"end": 412,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 374,
									"end": 412,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 374,
									"end": 412,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 374,
									"end": 412,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 463,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E886BEB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 438,
									"end": 463,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 438,
									"end": 445,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 438,
									"end": 445,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 438,
									"end": 445,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 438,
									"end": 445,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 438,
									"end": 445,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 438,
									"end": 461,
									"name": "PUSH",
									"source": 7,
									"value": "3A21AFAC"
								},
								{
									"begin": 438,
									"end": 461,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 438,
									"end": 463,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 311,
									"end": 525,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 311,
									"end": 525,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 438,
									"end": 445,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "EXTCODESIZE",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 438,
									"end": 463,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 438,
									"end": 463,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "tag",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 438,
									"end": 463,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "GAS",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "STATICCALL",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 438,
									"end": 463,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 438,
									"end": 463,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "RETURNDATACOPY",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 438,
									"end": 463,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 438,
									"end": 463,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 463,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 438,
									"end": 463,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 438,
									"end": 463,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 438,
									"end": 463,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 438,
									"end": 463,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 438,
									"end": 463,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 423,
									"end": 428,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 423,
									"end": 464,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 423,
									"end": 464,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 423,
									"end": 464,
									"name": "AND",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 423,
									"end": 464,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 423,
									"end": 464,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 423,
									"end": 464,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 423,
									"end": 464,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 423,
									"end": 464,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 423,
									"end": 464,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 423,
									"end": 464,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 423,
									"end": 464,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 475,
									"end": 512,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "95EA7B3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 475,
									"end": 512,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 475,
									"end": 512,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 506,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 475,
									"end": 512,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 475,
									"end": 512,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 475,
									"end": 480,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 475,
									"end": 480,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 475,
									"end": 480,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 475,
									"end": 480,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 475,
									"end": 480,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 475,
									"end": 488,
									"name": "PUSH",
									"source": 7,
									"value": "95EA7B3"
								},
								{
									"begin": 475,
									"end": 488,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 475,
									"end": 512,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 438,
									"end": 463,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 438,
									"end": 463,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 475,
									"end": 480,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "EXTCODESIZE",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 475,
									"end": 512,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 475,
									"end": 512,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 475,
									"end": 512,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "GAS",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "CALL",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 475,
									"end": 512,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 475,
									"end": 512,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "RETURNDATACOPY",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 475,
									"end": 512,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 475,
									"end": 512,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 475,
									"end": 512,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 475,
									"end": 512,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 475,
									"end": 512,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 475,
									"end": 512,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 475,
									"end": 512,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 475,
									"end": 512,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 173,
									"end": 1032,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 173,
									"end": 1032,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 173,
									"end": 1032,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 173,
									"end": 1032,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 1032,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 173,
									"end": 1032,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 1032,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205fde4696c4b554ef3d76a8c52530ce57d8e77af56216408c2737b4fd76bd2ca664736f6c634300060c0033",
									".code": [
										{
											"begin": 173,
											"end": 1032,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 173,
											"end": 1032,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 173,
											"end": 1032,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 173,
											"end": 1032,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 173,
											"end": 1032,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 173,
											"end": 1032,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 173,
											"end": 1032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 173,
											"end": 1032,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 173,
											"end": 1032,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 1032,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 173,
											"end": 1032,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 173,
											"end": 1032,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 173,
											"end": 1032,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 173,
											"end": 1032,
											"name": "PUSH",
											"source": 7,
											"value": "116191B6"
										},
										{
											"begin": 173,
											"end": 1032,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 173,
											"end": 1032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 173,
											"end": 1032,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 173,
											"end": 1032,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 173,
											"end": 1032,
											"name": "PUSH",
											"source": 7,
											"value": "B90C4034"
										},
										{
											"begin": 173,
											"end": 1032,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 173,
											"end": 1032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 173,
											"end": 1032,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 173,
											"end": 1032,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 173,
											"end": 1032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 578,
											"end": 585,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 585,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 578,
											"end": 585,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 578,
											"end": 694,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58C22BE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 578,
											"end": 694,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 645,
											"end": 649,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 578,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 578,
											"end": 694,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 578,
											"end": 585,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 578,
											"end": 585,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 578,
											"end": 585,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 578,
											"end": 585,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 578,
											"end": 596,
											"name": "PUSH",
											"source": 7,
											"value": "58C22BE7"
										},
										{
											"begin": 578,
											"end": 596,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 604,
											"end": 609,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 604,
											"end": 609,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 578,
											"end": 694,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 578,
											"end": 585,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 604,
											"end": 609,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 578,
											"end": 585,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 578,
											"end": 694,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 694,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 578,
											"end": 694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 578,
											"end": 694,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 694,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 694,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 578,
											"end": 694,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 578,
											"end": 694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 710,
											"end": 741,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 741,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 710,
											"end": 741,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 710,
											"end": 741,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 710,
											"end": 741,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 731,
											"end": 740,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 710,
											"end": 741,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 710,
											"end": 741,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 710,
											"end": 741,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 710,
											"end": 741,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 710,
											"end": 741,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 710,
											"end": 741,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 710,
											"end": 741,
											"name": "PUSH",
											"source": 7,
											"value": "88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874"
										},
										{
											"begin": 710,
											"end": 741,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 710,
											"end": 741,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 710,
											"end": 741,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 710,
											"end": 741,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 710,
											"end": 741,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 710,
											"end": 741,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 710,
											"end": 741,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 710,
											"end": 741,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 710,
											"end": 741,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 710,
											"end": 741,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 710,
											"end": 741,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 173,
											"end": 1032,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 194,
											"end": 220,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 194,
											"end": 220,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 220,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 194,
											"end": 220,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 194,
											"end": 220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 194,
											"end": 220,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 194,
											"end": 220,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 194,
											"end": 220,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 220,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 194,
											"end": 220,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 194,
											"end": 220,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 757,
											"end": 1029,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 757,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 757,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 757,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 757,
											"end": 1029,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 757,
											"end": 1029,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 757,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 757,
											"end": 1029,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 194,
											"end": 220,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 220,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 194,
											"end": 220,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 194,
											"end": 220,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 757,
											"end": 1029,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 757,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 802,
											"end": 809,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 809,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 802,
											"end": 809,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 802,
											"end": 918,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58C22BE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 802,
											"end": 918,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 869,
											"end": 873,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 802,
											"end": 918,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 802,
											"end": 918,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 802,
											"end": 809,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 802,
											"end": 809,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 802,
											"end": 809,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 802,
											"end": 809,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 802,
											"end": 820,
											"name": "PUSH",
											"source": 7,
											"value": "58C22BE7"
										},
										{
											"begin": 802,
											"end": 820,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 828,
											"end": 833,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 828,
											"end": 833,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 802,
											"end": 918,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 802,
											"end": 809,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 828,
											"end": 833,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 802,
											"end": 809,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 802,
											"end": 918,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 918,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 802,
											"end": 918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 802,
											"end": 918,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 918,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 918,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 802,
											"end": 918,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 802,
											"end": 918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 929,
											"end": 936,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 936,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 929,
											"end": 936,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B08C5A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 972,
											"end": 977,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1004,
											"end": 1008,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 929,
											"end": 936,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 929,
											"end": 936,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 929,
											"end": 936,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 929,
											"end": 936,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 929,
											"end": 948,
											"name": "PUSH",
											"source": 7,
											"value": "36118B52"
										},
										{
											"begin": 929,
											"end": 948,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 929,
											"end": 936,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 929,
											"end": 936,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 757,
											"end": 1029,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"gateway()": "116191b6",
							"test123()": "b90c4034"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_gatewayAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"gateway\",\"outputs\":[{\"internalType\":\"contract WETHGateway\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test123\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/misc/Reenter.sol\":\"Test\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"keccak256\":\"0xe52c598aa6e76d57665914c1c43fc6fa13bbe3b0bd8e816a6cec1c2bca5014e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a665a54b2277889ba2bdb9c3860b3b71ec7b22757297a03b590a093257604e9d\",\"dweb:/ipfs/QmQ4mm9YnrtvjJwetDec3WoiKeJGoJMCs5kbPBhGVRcZ6N\"]},\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0x6406b04abfeda2c8c80ea3faf797ce4501e66db41fb6ff4e299ebe0402879f44\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://33b0db81db37bd6fe20aa0b23581c6b0edef2f3c49d0bd88b4fe46c1164adb00\",\"dweb:/ipfs/QmYn1zYwt3ahpkLYwHh6h5b1UJrzP2xy5G3at9oEVNw2c1\"]},\"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":{\"keccak256\":\"0xe89abab730aac141126c194f910969c76f55a29536f2709c71c1c0c4ffce5508\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5667cdfe050014996ee748d1891155cc9a40ec5de28804d8c5e4b6c3a34e727\",\"dweb:/ipfs/QmWcSNdBecjXbiEau8QHSdBFes2HXw59H9hhJNjCww1Y8i\"]},\"contracts/interfaces/IAToken.sol\":{\"keccak256\":\"0x75298f98d270973cc1a469a0d72a184c0d9bbc0ae279a05ebcfa248138576681\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://2c92a428d2b9ac20aaadffc0300fd1448635d1a8d57a04f38a41ea116a51d162\",\"dweb:/ipfs/QmPd9qvveX85kcqGcyuZQzz39Y6uPvYohyFaBWJhTpUPk1\"]},\"contracts/interfaces/ILendingPool.sol\":{\"keccak256\":\"0x5fa85a3137312e0d37602723af7408ed97636028699bdf7a7c7cc2dc34cdbafc\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://2f084d52067cbb14f10a00813b17c386681e17e295f878d3d8992cef63e67ac1\",\"dweb:/ipfs/QmWGjEYp4ZHmMxW7zkV8ctsmpc5kAYDw3yqaf1LZGsFFuJ\"]},\"contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0xcb0e2c4c19c0bde86907b6ab45b6a1db4932d3642fc51410d56c9411a65b9f1d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://38d01c9e664c64d46a15bbbda2933b5fb877d33f6746d2db32563962beea9119\",\"dweb:/ipfs/QmajEmcQZz3E6GzmLpeGvnEswuwCjVYy8svqdx8bxi4PuG\"]},\"contracts/interfaces/IScaledBalanceToken.sol\":{\"keccak256\":\"0x03f77c8f37be8f08723b82ccc7c000da0152839632a5c3952c292a2ea0b1b491\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://c8cbe31d5cd705ef15b40c0d9a48dace17797a314fa1d8d93edd412537e8ac98\",\"dweb:/ipfs/QmYuKD5D5NVakZ41XRxHvMUXUG4Hn83E9YyxJMrMCjPZxd\"]},\"contracts/misc/Reenter.sol\":{\"keccak256\":\"0xd05dce126c0c93a744d8db89b42659ce351acf70cec5475fb2dfc6b7c787d4cf\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://12fdb416451e123fdaab0e38964b8ed6d67e3e4096ea91c236a63beb5128b491\",\"dweb:/ipfs/QmWZGJzGDe7Sg95KRMchj3BHm52EcvCQtrMJah5MtErD2m\"]},\"contracts/misc/WETHGateway.sol\":{\"keccak256\":\"0x85ad705fef8629204284097f54136c8e0ff46f6766bec4c16fe5e3c79046a40f\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://8d8edb383c9e0c3a8f45be5cd972184aedd6079b95fb0a5d4952f02d873cdecd\",\"dweb:/ipfs/Qmf2at9db84219mEtHtzPbQStCpdyxVNwev5ybbhLHi2xC\"]},\"contracts/misc/interfaces/IWETH.sol\":{\"keccak256\":\"0x69bb82fa6993ab94261fba0ddfdfdfe22c44c068af8fa2d8cc8b4627472c4e2a\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://674a88d9b1e460d6cf8df18874a0fed442b5cd7000786de75b45b4814df1d74c\",\"dweb:/ipfs/QmUT3bExyLkRMQLk4eZJPCTC7ABrqi9UUAVW4VnbR5H8Np\"]},\"contracts/misc/interfaces/IWETHGateway.sol\":{\"keccak256\":\"0x469cf8eaec291debfaf2c6b39491ecab67fdbdebf48de2ba39f765d2f3a00b32\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://aaf938658fe0b602047d658483024c5d13764a23e4a5c67adc90c36e97ee179c\",\"dweb:/ipfs/QmPtqzfXAW5dJjHvagfuohvxVtRx39rkN7uhMRgu5MeJMS\"]},\"contracts/protocol/libraries/configuration/ReserveConfiguration.sol\":{\"keccak256\":\"0x7e3691bd4353fea9391f96894241d929c6528fad315d21281725a1fe61600485\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://8b1beb77c3485458045a4079642cddd3bfe2fd27c87ac95fccde67d18ec21597\",\"dweb:/ipfs/QmV8HQGK6Gb9Va32tzGJ9a52jw2h1vbRJ1osx7bLW49LDi\"]},\"contracts/protocol/libraries/configuration/UserConfiguration.sol\":{\"keccak256\":\"0xa17b77c331710ab7373cc905810f3b6861f865c59e06c8c929d9ffbe58d05c6f\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://6e6faf6aa17a2f0590d0acbe833b36dd46d9e29029e9e556dc56e6f415b07fc2\",\"dweb:/ipfs/QmdKrRVC6Lr2rAwRfJB855PqJKjHjPDFFKnqJwCidFtBm5\"]},\"contracts/protocol/libraries/helpers/Errors.sol\":{\"keccak256\":\"0xfb70949637d81dc9a3883601bb15226981f4c4847f65035e64bf5d120994efeb\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://43fb108a5038fbeb33294d3f4a9e7e4e021bef16f0e7a8a2f3ad9142808c7a8f\",\"dweb:/ipfs/QmUvAnwcuwmprQu4g3r1k3gE2EztuVPGRKJBMVX3KRC8W6\"]},\"contracts/protocol/libraries/helpers/Helpers.sol\":{\"keccak256\":\"0xd513d293086becdf6b507d50a334c6ecffdbffcc5a132f498e73357d89f08a93\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://eb8d7a37fdb4a8b585e6fb6a4bf7f1f73dfeb100a42e2afd2d143c898d6f30dd\",\"dweb:/ipfs/Qmc4iuJGKRDLy4Yik3deNyBmCkRnsBAo9t3UBheCXUSDmd\"]},\"contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0xb1d3ae94d3e4b3bf23b3394d820a3a2b5ba56fd5389f561f3fdd73ed1c60c391\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://47c11d578cc1e0df27e4e85cfe5831a48b78d6e939d34e17db4bc65a54c899fe\",\"dweb:/ipfs/QmYdYLkYFJe3psmQUH1S1uNhGE9xyxeDunuEW9gBPg9vDB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 863,
								"contract": "contracts/misc/Reenter.sol:Test",
								"label": "gateway",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(WETHGateway)1393"
							},
							{
								"astId": 865,
								"contract": "contracts/misc/Reenter.sol:Test",
								"label": "token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)100"
							}
						],
						"types": {
							"t_contract(IERC20)100": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(WETHGateway)1393": {
								"encoding": "inplace",
								"label": "contract WETHGateway",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/misc/WETHGateway.sol": {
				"WETHGateway": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "weth",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interesRateMode",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "borrowETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "depositETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "emergencyEtherTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "emergencyTokenTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAWETHAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPoolAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getWETHAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rateMode",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								}
							],
							"name": "repayETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "withdrawETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"borrowETH(uint256,uint256,uint16)": {
								"details": "borrow WETH, unwraps to ETH and send both the ETH and DebtTokens to msg.sender, via `approveDelegation` and onBehalf argument in `LendingPool.borrow`.",
								"params": {
									"amount": "the amount of ETH to borrow",
									"interesRateMode": "the interest rate mode",
									"referralCode": "integrators are assigned a referral code and can potentially receive rewards"
								}
							},
							"constructor": {
								"details": "Sets the WETH address and the LendingPoolAddressesProvider address. Infinite approves lending pool.",
								"params": {
									"pool": "Address of the LendingPool contract*",
									"weth": "Address of the Wrapped Ether contract"
								}
							},
							"depositETH(address,uint16)": {
								"details": "deposits WETH into the reserve, using native ETH. A corresponding amount of the overlying asset (aTokens) is minted.",
								"params": {
									"onBehalfOf": "address of the user who will receive the aTokens representing the deposit",
									"referralCode": "integrators are assigned a referral code and can potentially receive rewards.*"
								}
							},
							"emergencyEtherTransfer(address,uint256)": {
								"details": "transfer native Ether from the utility contract, for native Ether recovery in case of stuck Ether due selfdestructs or transfer ether to pre-computated contract address before deployment.",
								"params": {
									"amount": "amount to send",
									"to": "recipient of the transfer"
								}
							},
							"emergencyTokenTransfer(address,address,uint256)": {
								"details": "transfer ERC20 from the utility contract, for ERC20 recovery in case of stuck tokens due direct transfers to the contract address.",
								"params": {
									"amount": "amount to send",
									"to": "recipient of the transfer",
									"token": "token to transfer"
								}
							},
							"getAWETHAddress()": {
								"details": "Get aWETH address used by WETHGateway"
							},
							"getLendingPoolAddress()": {
								"details": "Get LendingPool address used by WETHGateway"
							},
							"getWETHAddress()": {
								"details": "Get WETH address used by WETHGateway"
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"repayETH(uint256,uint256,address)": {
								"details": "repays a borrow on the WETH reserve, for the specified amount (or for the whole amount, if uint256(-1) is specified).",
								"params": {
									"amount": "the amount to repay, or uint256(-1) if the user wants to repay everything",
									"onBehalfOf": "the address for which msg.sender is repaying",
									"rateMode": "the rate mode to repay"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdrawETH(uint256,address)": {
								"details": "withdraws the WETH _reserves of msg.sender.",
								"params": {
									"amount": "amount of aWETH to withdraw and receive native ETH",
									"to": "address of the user who will receive native ETH"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/misc/WETHGateway.sol\":793:6658  contract WETHGateway is IWETHGateway, Ownable {... */\n  mstore(0x40, 0xe0)\n    /* \"contracts/misc/WETHGateway.sol\":1315:1582  constructor(address weth, address pool) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":844:861  address msgSender */\n  0x00\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":864:876  _msgSender() */\n  tag_7\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":864:874  _msgSender */\n  tag_8\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":864:876  _msgSender() */\n  jump\t// in\ntag_7:\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":882:888  _owner */\n  0x00\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":882:900  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":911:954  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":882:900  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":911:954  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":882:888  _owner */\n  dup3\n  swap1\n    /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":911:954  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n  not(sub(shl(0x60, 0x01), 0x01))\n    /* \"contracts/misc/WETHGateway.sol\":1420:1438  WETH = IWETH(weth) */\n  0x60\n  dup4\n  dup2\n  shl\n  dup3\n  and\n  0x80\n  mstore\n    /* \"contracts/misc/WETHGateway.sol\":1444:1463  POOL = poolInstance */\n  dup3\n  swap1\n  shl\n  and\n  0xa0\n  mstore\n    /* \"contracts/misc/WETHGateway.sol\":1485:1518  poolInstance.getReserveData(weth) */\n  mload(0x40)\n  shl(0xe0, 0x35ea6a75)\n  dup2\n  mstore\n    /* \"contracts/misc/WETHGateway.sol\":1409:1413  pool */\n  dup2\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/misc/WETHGateway.sol\":1444:1463  POOL = poolInstance */\n  dup3\n  and\n  swap1\n    /* \"contracts/misc/WETHGateway.sol\":1485:1512  poolInstance.getReserveData */\n  0x35ea6a75\n  swap1\n    /* \"contracts/misc/WETHGateway.sol\":1485:1518  poolInstance.getReserveData(weth) */\n  tag_10\n  swap1\n    /* \"contracts/misc/WETHGateway.sol\":1433:1437  weth */\n  dup7\n  swap1\n    /* \"contracts/misc/WETHGateway.sol\":1485:1518  poolInstance.getReserveData(weth) */\n  0x04\n  add\n  tag_11\n  jump\t// in\ntag_10:\n  0x0180\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  pop\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_14\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_14:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n    /* \"contracts/misc/WETHGateway.sol\":1485:1532  poolInstance.getReserveData(weth).aTokenAddress */\n  0xe0\n  add\n  mload\n    /* \"contracts/misc/WETHGateway.sol\":1469:1533  aWETH = IAToken(poolInstance.getReserveData(weth).aTokenAddress) */\n  0x60\n  shl\n  not(sub(shl(0x60, 0x01), 0x01))\n  and\n  0xc0\n  mstore\n    /* \"contracts/misc/WETHGateway.sol\":1539:1577  IWETH(weth).approve(pool, uint256(-1)) */\n  mload(0x40)\n  shl(0xe0, 0x095ea7b3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/misc/WETHGateway.sol\":1539:1558  IWETH(weth).approve */\n  dup5\n  and\n  swap1\n  0x095ea7b3\n  swap1\n    /* \"contracts/misc/WETHGateway.sol\":1539:1577  IWETH(weth).approve(pool, uint256(-1)) */\n  tag_17\n  swap1\n    /* \"contracts/misc/WETHGateway.sol\":1559:1563  pool */\n  dup6\n  swap1\n  not(0x00)\n    /* \"contracts/misc/WETHGateway.sol\":1573:1575  -1 */\n  swap1\n    /* \"contracts/misc/WETHGateway.sol\":1539:1577  IWETH(weth).approve(pool, uint256(-1)) */\n  0x04\n  add\n  tag_18\n  jump\t// in\ntag_17:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup1\n  revert\ntag_19:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_21\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_21:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_22\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  pop\n    /* \"contracts/misc/WETHGateway.sol\":1315:1582  constructor(address weth, address pool) public {... */\n  pop\n  pop\n  pop\n    /* \"contracts/misc/WETHGateway.sol\":793:6658  contract WETHGateway is IWETHGateway, Ownable {... */\n  jump(tag_26)\n    /* \"contracts/dependencies/openzeppelin/contracts/Context.sol\":587:685  function _msgSender() internal view virtual returns (address payable) {... */\ntag_8:\n    /* \"contracts/dependencies/openzeppelin/contracts/Context.sol\":670:680  msg.sender */\n  caller\n    /* \"contracts/dependencies/openzeppelin/contracts/Context.sol\":587:685  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"--CODEGEN--\":5:139   */\ntag_27:\n    /* \"--CODEGEN--\":83:96   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"--CODEGEN--\":6024:6078   */\n  dup2\n  and\n    /* \"--CODEGEN--\":6413:6448   */\n  dup2\n  eq\n    /* \"--CODEGEN--\":6403:6405   */\n  tag_29\n  jumpi\n    /* \"--CODEGEN--\":6462:6463   */\n  0x00\n  dup1\n    /* \"--CODEGEN--\":6452:6464   */\n  revert\n    /* \"--CODEGEN--\":6403:6405   */\ntag_29:\n    /* \"--CODEGEN--\":68:139   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"--CODEGEN--\":328:689   */\ntag_30:\n  0x00\n    /* \"--CODEGEN--\":469:473   */\n  0x20\n    /* \"--CODEGEN--\":457:466   */\n  dup3\n    /* \"--CODEGEN--\":452:455   */\n  dup5\n    /* \"--CODEGEN--\":448:467   */\n  sub\n    /* \"--CODEGEN--\":444:474   */\n  slt\n    /* \"--CODEGEN--\":441:443   */\n  iszero\n  tag_32\n  jumpi\n  dup1\n  dup2\n    /* \"--CODEGEN--\":477:489   */\n  revert\n    /* \"--CODEGEN--\":441:443   */\ntag_32:\n    /* \"--CODEGEN--\":505:525   */\n  tag_33\n    /* \"--CODEGEN--\":469:473   */\n  0x20\n    /* \"--CODEGEN--\":505:525   */\n  tag_34\n  jump\t// in\ntag_33:\n    /* \"--CODEGEN--\":3242:3255   */\n  swap2\n  mload\n    /* \"--CODEGEN--\":582:668   */\n  dup3\n  mstore\n  pop\n    /* \"--CODEGEN--\":496:525   */\n  swap2\n    /* \"--CODEGEN--\":435:689   */\n  swap1\n  pop\n  jump\t// out\n    /* \"--CODEGEN--\":3023:3157   */\ntag_35:\n    /* \"--CODEGEN--\":3101:3114   */\n  dup1\n  mload\n  sub(shl(0x80, 0x01), 0x01)\n    /* \"--CODEGEN--\":5904:5950   */\n  dup2\n  and\n    /* \"--CODEGEN--\":6655:6690   */\n  dup2\n  eq\n    /* \"--CODEGEN--\":6645:6647   */\n  tag_29\n  jumpi\n    /* \"--CODEGEN--\":6704:6705   */\n  0x00\n  dup1\n    /* \"--CODEGEN--\":6694:6706   */\n  revert\n    /* \"--CODEGEN--\":3305:3437   */\ntag_38:\n    /* \"--CODEGEN--\":3382:3395   */\n  dup1\n  mload\n    /* \"--CODEGEN--\":6241:6253   */\n  0xffffffffff\n    /* \"--CODEGEN--\":6230:6254   */\n  dup2\n  and\n    /* \"--CODEGEN--\":6902:6936   */\n  dup2\n  eq\n    /* \"--CODEGEN--\":6892:6894   */\n  tag_29\n  jumpi\n    /* \"--CODEGEN--\":6950:6951   */\n  0x00\n  dup1\n    /* \"--CODEGEN--\":6940:6952   */\n  revert\n    /* \"--CODEGEN--\":3444:3574   */\ntag_41:\n    /* \"--CODEGEN--\":3520:3533   */\n  dup1\n  mload\n    /* \"--CODEGEN--\":6337:6341   */\n  0xff\n    /* \"--CODEGEN--\":6326:6342   */\n  dup2\n  and\n    /* \"--CODEGEN--\":7023:7056   */\n  dup2\n  eq\n    /* \"--CODEGEN--\":7013:7015   */\n  tag_29\n  jumpi\n    /* \"--CODEGEN--\":7070:7071   */\n  0x00\n  dup1\n    /* \"--CODEGEN--\":7060:7072   */\n  revert\n    /* \"--CODEGEN--\":3581:3980   */\ntag_3:\n  0x00\n  dup1\n    /* \"--CODEGEN--\":3713:3715   */\n  0x40\n    /* \"--CODEGEN--\":3701:3710   */\n  dup4\n    /* \"--CODEGEN--\":3692:3699   */\n  dup6\n    /* \"--CODEGEN--\":3688:3711   */\n  sub\n    /* \"--CODEGEN--\":3684:3716   */\n  slt\n    /* \"--CODEGEN--\":3681:3683   */\n  iszero\n  tag_45\n  jumpi\n  dup2\n  dup3\n    /* \"--CODEGEN--\":3719:3731   */\n  revert\n    /* \"--CODEGEN--\":3681:3683   */\ntag_45:\n    /* \"--CODEGEN--\":89:95   */\n  dup3\n    /* \"--CODEGEN--\":83:96   */\n  mload\n    /* \"--CODEGEN--\":101:134   */\n  tag_46\n    /* \"--CODEGEN--\":128:133   */\n  dup2\n    /* \"--CODEGEN--\":101:134   */\n  tag_47\n  jump\t// in\ntag_46:\n    /* \"--CODEGEN--\":3882:3884   */\n  0x20\n    /* \"--CODEGEN--\":3932:3954   */\n  dup5\n  add\n    /* \"--CODEGEN--\":83:96   */\n  mload\n    /* \"--CODEGEN--\":3771:3845   */\n  swap1\n  swap3\n  pop\n    /* \"--CODEGEN--\":101:134   */\n  tag_48\n    /* \"--CODEGEN--\":83:96   */\n  dup2\n    /* \"--CODEGEN--\":101:134   */\n  tag_47\n  jump\t// in\ntag_48:\n    /* \"--CODEGEN--\":3890:3964   */\n  dup1\n  swap2\n  pop\n  pop\n    /* \"--CODEGEN--\":3675:3980   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"--CODEGEN--\":3987:4244   */\ntag_23:\n  0x00\n    /* \"--CODEGEN--\":4099:4101   */\n  0x20\n    /* \"--CODEGEN--\":4087:4096   */\n  dup3\n    /* \"--CODEGEN--\":4078:4085   */\n  dup5\n    /* \"--CODEGEN--\":4074:4097   */\n  sub\n    /* \"--CODEGEN--\":4070:4102   */\n  slt\n    /* \"--CODEGEN--\":4067:4069   */\n  iszero\n  tag_50\n  jumpi\n  dup1\n  dup2\n    /* \"--CODEGEN--\":4105:4117   */\n  revert\n    /* \"--CODEGEN--\":4067:4069   */\ntag_50:\n    /* \"--CODEGEN--\":227:233   */\n  dup2\n    /* \"--CODEGEN--\":221:234   */\n  mload\n    /* \"--CODEGEN--\":6559:6564   */\n  dup1\n    /* \"--CODEGEN--\":5816:5829   */\n  iszero\n    /* \"--CODEGEN--\":5809:5830   */\n  iszero\n    /* \"--CODEGEN--\":6537:6542   */\n  dup2\n    /* \"--CODEGEN--\":6534:6566   */\n  eq\n    /* \"--CODEGEN--\":6524:6526   */\n  tag_51\n  jumpi\n  dup2\n  dup3\n    /* \"--CODEGEN--\":6570:6582   */\n  revert\n    /* \"--CODEGEN--\":6524:6526   */\ntag_51:\n    /* \"--CODEGEN--\":4157:4228   */\n  swap4\n    /* \"--CODEGEN--\":4061:4244   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"--CODEGEN--\":4251:4573   */\ntag_16:\n  0x00\n    /* \"--CODEGEN--\":4395:4398   */\n  0x0180\n  dup1\n    /* \"--CODEGEN--\":4383:4392   */\n  dup4\n    /* \"--CODEGEN--\":4374:4381   */\n  dup6\n    /* \"--CODEGEN--\":4370:4393   */\n  sub\n    /* \"--CODEGEN--\":4366:4399   */\n  slt\n    /* \"--CODEGEN--\":4363:4365   */\n  iszero\n  tag_53\n  jumpi\n  dup2\n  dup3\n    /* \"--CODEGEN--\":4402:4414   */\n  revert\n    /* \"--CODEGEN--\":4363:4365   */\ntag_53:\n    /* \"--CODEGEN--\":898:920   */\n  tag_54\n    /* \"--CODEGEN--\":4395:4398   */\n  dup2\n    /* \"--CODEGEN--\":898:920   */\n  tag_34\n  jump\t// in\ntag_54:\n    /* \"--CODEGEN--\":889:920   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":1011:1112   */\n  tag_55\n    /* \"--CODEGEN--\":1108:1111   */\n  dup5\n    /* \"--CODEGEN--\":1084:1106   */\n  dup5\n    /* \"--CODEGEN--\":1011:1112   */\n  tag_30\n  jump\t// in\ntag_55:\n    /* \"--CODEGEN--\":993:1009   */\n  dup2\n    /* \"--CODEGEN--\":986:1113   */\n  mstore\n    /* \"--CODEGEN--\":1217:1277   */\n  tag_56\n    /* \"--CODEGEN--\":1273:1276   */\n  dup5\n    /* \"--CODEGEN--\":1184:1186   */\n  0x20\n    /* \"--CODEGEN--\":1253:1262   */\n  dup6\n    /* \"--CODEGEN--\":1249:1271   */\n  add\n    /* \"--CODEGEN--\":1217:1277   */\n  tag_35\n  jump\t// in\ntag_56:\n    /* \"--CODEGEN--\":1184:1186   */\n  0x20\n    /* \"--CODEGEN--\":1203:1208   */\n  dup3\n    /* \"--CODEGEN--\":1199:1215   */\n  add\n    /* \"--CODEGEN--\":1192:1278   */\n  mstore\n    /* \"--CODEGEN--\":1387:1447   */\n  tag_57\n    /* \"--CODEGEN--\":1443:1446   */\n  dup5\n    /* \"--CODEGEN--\":1354:1356   */\n  0x40\n    /* \"--CODEGEN--\":1423:1432   */\n  dup6\n    /* \"--CODEGEN--\":1419:1441   */\n  add\n    /* \"--CODEGEN--\":1387:1447   */\n  tag_35\n  jump\t// in\ntag_57:\n    /* \"--CODEGEN--\":1354:1356   */\n  0x40\n    /* \"--CODEGEN--\":1373:1378   */\n  dup3\n    /* \"--CODEGEN--\":1369:1385   */\n  add\n    /* \"--CODEGEN--\":1362:1448   */\n  mstore\n    /* \"--CODEGEN--\":1558:1618   */\n  tag_58\n    /* \"--CODEGEN--\":1614:1617   */\n  dup5\n    /* \"--CODEGEN--\":1525:1527   */\n  0x60\n    /* \"--CODEGEN--\":1594:1603   */\n  dup6\n    /* \"--CODEGEN--\":1590:1612   */\n  add\n    /* \"--CODEGEN--\":1558:1618   */\n  tag_35\n  jump\t// in\ntag_58:\n    /* \"--CODEGEN--\":1525:1527   */\n  0x60\n    /* \"--CODEGEN--\":1544:1549   */\n  dup3\n    /* \"--CODEGEN--\":1540:1556   */\n  add\n    /* \"--CODEGEN--\":1533:1619   */\n  mstore\n    /* \"--CODEGEN--\":1735:1795   */\n  tag_59\n    /* \"--CODEGEN--\":1791:1794   */\n  dup5\n    /* \"--CODEGEN--\":1701:1704   */\n  0x80\n    /* \"--CODEGEN--\":1771:1780   */\n  dup6\n    /* \"--CODEGEN--\":1767:1789   */\n  add\n    /* \"--CODEGEN--\":1735:1795   */\n  tag_35\n  jump\t// in\ntag_59:\n    /* \"--CODEGEN--\":1701:1704   */\n  0x80\n    /* \"--CODEGEN--\":1721:1726   */\n  dup3\n    /* \"--CODEGEN--\":1717:1733   */\n  add\n    /* \"--CODEGEN--\":1710:1796   */\n  mstore\n    /* \"--CODEGEN--\":1910:1970   */\n  tag_60\n    /* \"--CODEGEN--\":1966:1969   */\n  dup5\n    /* \"--CODEGEN--\":1876:1879   */\n  0xa0\n    /* \"--CODEGEN--\":1946:1955   */\n  dup6\n    /* \"--CODEGEN--\":1942:1964   */\n  add\n    /* \"--CODEGEN--\":1910:1970   */\n  tag_35\n  jump\t// in\ntag_60:\n    /* \"--CODEGEN--\":1876:1879   */\n  0xa0\n    /* \"--CODEGEN--\":1896:1901   */\n  dup3\n    /* \"--CODEGEN--\":1892:1908   */\n  add\n    /* \"--CODEGEN--\":1885:1971   */\n  mstore\n    /* \"--CODEGEN--\":2081:2140   */\n  tag_61\n    /* \"--CODEGEN--\":2136:2139   */\n  dup5\n    /* \"--CODEGEN--\":2047:2050   */\n  0xc0\n    /* \"--CODEGEN--\":2116:2125   */\n  dup6\n    /* \"--CODEGEN--\":2112:2134   */\n  add\n    /* \"--CODEGEN--\":2081:2140   */\n  tag_38\n  jump\t// in\ntag_61:\n    /* \"--CODEGEN--\":2047:2050   */\n  0xc0\n    /* \"--CODEGEN--\":2067:2072   */\n  dup3\n    /* \"--CODEGEN--\":2063:2079   */\n  add\n    /* \"--CODEGEN--\":2056:2141   */\n  mstore\n    /* \"--CODEGEN--\":2245:2305   */\n  tag_62\n    /* \"--CODEGEN--\":2301:2304   */\n  dup5\n    /* \"--CODEGEN--\":2211:2214   */\n  0xe0\n    /* \"--CODEGEN--\":2281:2290   */\n  dup6\n    /* \"--CODEGEN--\":2277:2299   */\n  add\n    /* \"--CODEGEN--\":2245:2305   */\n  tag_27\n  jump\t// in\ntag_62:\n    /* \"--CODEGEN--\":2211:2214   */\n  0xe0\n    /* \"--CODEGEN--\":2231:2236   */\n  dup3\n    /* \"--CODEGEN--\":2227:2243   */\n  add\n    /* \"--CODEGEN--\":2220:2306   */\n  mstore\n    /* \"--CODEGEN--\":2385:2388   */\n  0x0100\n    /* \"--CODEGEN--\":2421:2481   */\n  tag_63\n    /* \"--CODEGEN--\":2477:2480   */\n  dup6\n    /* \"--CODEGEN--\":2385:2388   */\n  dup3\n    /* \"--CODEGEN--\":2457:2466   */\n  dup7\n    /* \"--CODEGEN--\":2453:2475   */\n  add\n    /* \"--CODEGEN--\":2421:2481   */\n  tag_27\n  jump\t// in\ntag_63:\n    /* \"--CODEGEN--\":2401:2419   */\n  swap1\n  dup3\n  add\n    /* \"--CODEGEN--\":2394:2482   */\n  mstore\n    /* \"--CODEGEN--\":2563:2566   */\n  0x0120\n    /* \"--CODEGEN--\":2599:2659   */\n  tag_64\n    /* \"--CODEGEN--\":2655:2658   */\n  dup6\n    /* \"--CODEGEN--\":2631:2653   */\n  dup6\n  dup4\n  add\n    /* \"--CODEGEN--\":2599:2659   */\n  tag_27\n  jump\t// in\ntag_64:\n    /* \"--CODEGEN--\":2579:2597   */\n  swap1\n  dup3\n  add\n    /* \"--CODEGEN--\":2572:2660   */\n  mstore\n    /* \"--CODEGEN--\":2744:2747   */\n  0x0140\n    /* \"--CODEGEN--\":2780:2840   */\n  tag_65\n    /* \"--CODEGEN--\":2836:2839   */\n  dup6\n    /* \"--CODEGEN--\":2812:2834   */\n  dup6\n  dup4\n  add\n    /* \"--CODEGEN--\":2780:2840   */\n  tag_27\n  jump\t// in\ntag_65:\n    /* \"--CODEGEN--\":2760:2778   */\n  swap1\n  dup3\n  add\n    /* \"--CODEGEN--\":2753:2841   */\n  mstore\n    /* \"--CODEGEN--\":2900:2903   */\n  0x0160\n    /* \"--CODEGEN--\":2936:2994   */\n  tag_66\n    /* \"--CODEGEN--\":2990:2993   */\n  dup6\n    /* \"--CODEGEN--\":2966:2988   */\n  dup6\n  dup4\n  add\n    /* \"--CODEGEN--\":2936:2994   */\n  tag_41\n  jump\t// in\ntag_66:\n    /* \"--CODEGEN--\":2916:2934   */\n  swap1\n  dup3\n  add\n    /* \"--CODEGEN--\":2909:2995   */\n  mstore\n    /* \"--CODEGEN--\":2920:2925   */\n  swap4\n    /* \"--CODEGEN--\":4357:4573   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"--CODEGEN--\":4820:5042   */\ntag_11:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"--CODEGEN--\":6024:6078   */\n  swap2\n  swap1\n  swap2\n  and\n    /* \"--CODEGEN--\":4651:4688   */\n  dup2\n  mstore\n    /* \"--CODEGEN--\":4947:4949   */\n  0x20\n    /* \"--CODEGEN--\":4932:4950   */\n  add\n  swap1\n    /* \"--CODEGEN--\":4918:5042   */\n  jump\t// out\n    /* \"--CODEGEN--\":5049:5382   */\ntag_18:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"--CODEGEN--\":6024:6078   */\n  swap3\n  swap1\n  swap3\n  and\n    /* \"--CODEGEN--\":4651:4688   */\n  dup3\n  mstore\n    /* \"--CODEGEN--\":5368:5370   */\n  0x20\n    /* \"--CODEGEN--\":5353:5371   */\n  dup3\n  add\n    /* \"--CODEGEN--\":4771:4808   */\n  mstore\n    /* \"--CODEGEN--\":5204:5206   */\n  0x40\n    /* \"--CODEGEN--\":5189:5207   */\n  add\n  swap1\n    /* \"--CODEGEN--\":5175:5382   */\n  jump\t// out\n    /* \"--CODEGEN--\":5389:5645   */\ntag_34:\n    /* \"--CODEGEN--\":5451:5453   */\n  0x40\n    /* \"--CODEGEN--\":5445:5454   */\n  mload\n    /* \"--CODEGEN--\":5477:5494   */\n  dup2\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"--CODEGEN--\":5537:5571   */\n  dup2\n  gt\n    /* \"--CODEGEN--\":5573:5595   */\n  dup3\n  dup3\n  lt\n    /* \"--CODEGEN--\":5534:5596   */\n  or\n    /* \"--CODEGEN--\":5531:5533   */\n  iszero\n  tag_70\n  jumpi\n    /* \"--CODEGEN--\":5609:5610   */\n  0x00\n  dup1\n    /* \"--CODEGEN--\":5599:5611   */\n  revert\n    /* \"--CODEGEN--\":5531:5533   */\ntag_70:\n    /* \"--CODEGEN--\":5451:5453   */\n  0x40\n    /* \"--CODEGEN--\":5618:5640   */\n  mstore\n    /* \"--CODEGEN--\":5429:5645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"--CODEGEN--\":6354:6471   */\ntag_47:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"--CODEGEN--\":6024:6078   */\n  dup2\n  and\n    /* \"--CODEGEN--\":6413:6448   */\n  dup2\n  eq\n    /* \"--CODEGEN--\":6403:6405   */\n  tag_72\n  jumpi\n    /* \"--CODEGEN--\":6462:6463   */\n  0x00\n  dup1\n    /* \"--CODEGEN--\":6452:6464   */\n  revert\n    /* \"--CODEGEN--\":6403:6405   */\ntag_72:\n    /* \"--CODEGEN--\":6397:6471   */\n  pop\n  jump\t// out\ntag_26:\n    /* \"contracts/misc/WETHGateway.sol\":793:6658  contract WETHGateway is IWETHGateway, Ownable {... */\n  shr(0x60, mload(0x80))\n  shr(0x60, mload(0xa0))\n  shr(0x60, mload(0xc0))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x57d03f72a618a841c753598d7d2cbcbbd5f43a73c69f9abc886bd29cf4101ea1\")\n  assignImmutable(\"0xcf21cf47e35318e13218f9c3f39ba16ca3aa2939803f4ecb20a4a9dd3e03f1fb\")\n  assignImmutable(\"0x9d86ea630c09ef2f1acbc248368c7b7030882e2a5db3011ef0f1f27cf79c9d56\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/misc/WETHGateway.sol\":793:6658  contract WETHGateway is IWETHGateway, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa3d5b255\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xaffa8817\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xeed88b8d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf538ba51\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x36118b52\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3a21afac\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x58c22be7\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5f36a742\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7d5155fd\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/misc/WETHGateway.sol\":6483:6493  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/WETHGateway.sol\":6505:6509  WETH */\n      immutable(\"0x9d86ea630c09ef2f1acbc248368c7b7030882e2a5db3011ef0f1f27cf79c9d56\")\n        /* \"contracts/misc/WETHGateway.sol\":6483:6510  msg.sender == address(WETH) */\n      and\n      eq\n        /* \"contracts/misc/WETHGateway.sol\":6475:6534  require(msg.sender == address(WETH), 'Receive not allowed') */\n      tag_18\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_18:\n        /* \"contracts/misc/WETHGateway.sol\":793:6658  contract WETHGateway is IWETHGateway, Ownable {... */\n      stop\n    tag_2:\n        /* \"contracts/misc/WETHGateway.sol\":6621:6651  revert('Fallback not allowed') */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap1\n      tag_24\n      jump\t// in\n        /* \"contracts/misc/WETHGateway.sol\":2334:2876  function withdrawETH(uint256 amount, address to) external override {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_18\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n        /* \"contracts/misc/WETHGateway.sol\":6051:6142  function getAWETHAddress() external view returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/misc/WETHGateway.sol\":1931:2131  function depositETH(address onBehalfOf, uint16 referralCode) external payable override {... */\n    tag_5:\n      tag_18\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n        /* \"contracts/misc/WETHGateway.sol\":6212:6308  function getLendingPoolAddress() external view returns (address) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_31\n      tag_41\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1610:1745  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_18\n      tag_45\n      jump\t// in\n        /* \"contracts/misc/WETHGateway.sol\":4399:4671  function borrowETH(... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_18\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1027:1098  function owner() public view returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_31\n      tag_53\n      jump\t// in\n        /* \"contracts/misc/WETHGateway.sol\":5268:5423  function emergencyTokenTransfer(... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_18\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n        /* \"contracts/misc/WETHGateway.sol\":5898:5987  function getWETHAddress() external view returns (address) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_31\n      tag_62\n      jump\t// in\n        /* \"contracts/misc/WETHGateway.sol\":5717:5835  function emergencyEtherTransfer(address to, uint256 amount) external onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_18\n      tag_66\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1884:2110  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_18\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"contracts/misc/WETHGateway.sol\":3225:4022  function repayETH(... */\n    tag_14:\n      tag_18\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"contracts/misc/WETHGateway.sol\":2334:2876  function withdrawETH(uint256 amount, address to) external override {... */\n    tag_29:\n        /* \"contracts/misc/WETHGateway.sol\":2429:2456  aWETH.balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/misc/WETHGateway.sol\":2407:2426  uint256 userBalance */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/WETHGateway.sol\":2429:2434  aWETH */\n      immutable(\"0x57d03f72a618a841c753598d7d2cbcbbd5f43a73c69f9abc886bd29cf4101ea1\")\n        /* \"contracts/misc/WETHGateway.sol\":2429:2444  aWETH.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":2429:2456  aWETH.balanceOf(msg.sender) */\n      tag_79\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":2445:2455  msg.sender */\n      caller\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":2429:2456  aWETH.balanceOf(msg.sender) */\n      0x04\n      add\n      tag_34\n      jump\t// in\n    tag_79:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"contracts/misc/WETHGateway.sol\":2407:2456  uint256 userBalance = aWETH.balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/misc/WETHGateway.sol\":2489:2495  amount */\n      dup3\n      not(0x00)\n        /* \"contracts/misc/WETHGateway.sol\":2581:2608  amount == type(uint256).max */\n      dup2\n      eq\n        /* \"contracts/misc/WETHGateway.sol\":2577:2655  if (amount == type(uint256).max) {... */\n      iszero\n      tag_86\n      jumpi\n      pop\n        /* \"contracts/misc/WETHGateway.sol\":2637:2648  userBalance */\n      dup1\n        /* \"contracts/misc/WETHGateway.sol\":2577:2655  if (amount == type(uint256).max) {... */\n    tag_86:\n        /* \"contracts/misc/WETHGateway.sol\":2660:2723  aWETH.transferFrom(msg.sender, address(this), amountToWithdraw) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/WETHGateway.sol\":2660:2665  aWETH */\n      immutable(\"0x57d03f72a618a841c753598d7d2cbcbbd5f43a73c69f9abc886bd29cf4101ea1\")\n        /* \"contracts/misc/WETHGateway.sol\":2660:2678  aWETH.transferFrom */\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":2660:2723  aWETH.transferFrom(msg.sender, address(this), amountToWithdraw) */\n      tag_87\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":2679:2689  msg.sender */\n      caller\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":2699:2703  this */\n      address\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":2706:2722  amountToWithdraw */\n      dup7\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":2660:2723  aWETH.transferFrom(msg.sender, address(this), amountToWithdraw) */\n      0x04\n      add\n      tag_88\n      jump\t// in\n    tag_87:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      pop\n        /* \"contracts/misc/WETHGateway.sol\":2729:2790  POOL.withdraw(address(WETH), amountToWithdraw, address(this)) */\n      mload(0x40)\n      shl(0xe2, 0x1a4ca37b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/WETHGateway.sol\":2729:2733  POOL */\n      immutable(\"0xcf21cf47e35318e13218f9c3f39ba16ca3aa2939803f4ecb20a4a9dd3e03f1fb\")\n        /* \"contracts/misc/WETHGateway.sol\":2729:2742  POOL.withdraw */\n      and\n      swap1\n      0x69328dec\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":2729:2790  POOL.withdraw(address(WETH), amountToWithdraw, address(this)) */\n      tag_94\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":2751:2755  WETH */\n      immutable(\"0x9d86ea630c09ef2f1acbc248368c7b7030882e2a5db3011ef0f1f27cf79c9d56\")\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":2758:2774  amountToWithdraw */\n      dup6\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":2784:2788  this */\n      address\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":2729:2790  POOL.withdraw(address(WETH), amountToWithdraw, address(this)) */\n      0x04\n      add\n      tag_95\n      jump\t// in\n    tag_94:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_99:\n      pop\n        /* \"contracts/misc/WETHGateway.sol\":2796:2827  WETH.withdraw(amountToWithdraw) */\n      mload(0x40)\n      shl(0xe0, 0x2e1a7d4d)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/WETHGateway.sol\":2796:2800  WETH */\n      immutable(\"0x9d86ea630c09ef2f1acbc248368c7b7030882e2a5db3011ef0f1f27cf79c9d56\")\n        /* \"contracts/misc/WETHGateway.sol\":2796:2809  WETH.withdraw */\n      and\n      swap1\n      0x2e1a7d4d\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":2796:2827  WETH.withdraw(amountToWithdraw) */\n      tag_100\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":2810:2826  amountToWithdraw */\n      dup5\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":2796:2827  WETH.withdraw(amountToWithdraw) */\n      0x04\n      add\n      tag_101\n      jump\t// in\n    tag_100:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/misc/WETHGateway.sol\":2833:2871  _safeTransferETH(to, amountToWithdraw) */\n      tag_105\n        /* \"contracts/misc/WETHGateway.sol\":2850:2852  to */\n      dup4\n        /* \"contracts/misc/WETHGateway.sol\":2854:2870  amountToWithdraw */\n      dup3\n        /* \"contracts/misc/WETHGateway.sol\":2833:2849  _safeTransferETH */\n      tag_106\n        /* \"contracts/misc/WETHGateway.sol\":2833:2871  _safeTransferETH(to, amountToWithdraw) */\n      jump\t// in\n    tag_105:\n        /* \"contracts/misc/WETHGateway.sol\":2334:2876  function withdrawETH(uint256 amount, address to) external override {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/misc/WETHGateway.sol\":6051:6142  function getAWETHAddress() external view returns (address) {... */\n    tag_32:\n        /* \"contracts/misc/WETHGateway.sol\":6131:6136  aWETH */\n      immutable(\"0x57d03f72a618a841c753598d7d2cbcbbd5f43a73c69f9abc886bd29cf4101ea1\")\n        /* \"contracts/misc/WETHGateway.sol\":6051:6142  function getAWETHAddress() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/misc/WETHGateway.sol\":1931:2131  function depositETH(address onBehalfOf, uint16 referralCode) external payable override {... */\n    tag_38:\n        /* \"contracts/misc/WETHGateway.sol\":2024:2028  WETH */\n      immutable(\"0x9d86ea630c09ef2f1acbc248368c7b7030882e2a5db3011ef0f1f27cf79c9d56\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/WETHGateway.sol\":2024:2036  WETH.deposit */\n      and\n      0xd0e30db0\n        /* \"contracts/misc/WETHGateway.sol\":2044:2053  msg.value */\n      callvalue\n        /* \"contracts/misc/WETHGateway.sol\":2024:2056  WETH.deposit{value: msg.value}() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_111:\n      pop\n      pop\n        /* \"contracts/misc/WETHGateway.sol\":2062:2126  POOL.deposit(address(WETH), msg.value, onBehalfOf, referralCode) */\n      mload(0x40)\n      shl(0xe0, 0xe8eda9df)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/WETHGateway.sol\":2062:2066  POOL */\n      immutable(\"0xcf21cf47e35318e13218f9c3f39ba16ca3aa2939803f4ecb20a4a9dd3e03f1fb\")\n        /* \"contracts/misc/WETHGateway.sol\":2062:2074  POOL.deposit */\n      and\n      swap4\n      pop\n      0xe8eda9df\n      swap3\n      pop\n        /* \"contracts/misc/WETHGateway.sol\":2062:2126  POOL.deposit(address(WETH), msg.value, onBehalfOf, referralCode) */\n      tag_112\n      swap2\n      pop\n        /* \"contracts/misc/WETHGateway.sol\":2083:2087  WETH */\n      immutable(\"0x9d86ea630c09ef2f1acbc248368c7b7030882e2a5db3011ef0f1f27cf79c9d56\")\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":2090:2099  msg.value */\n      callvalue\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":2101:2111  onBehalfOf */\n      dup8\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":2113:2125  referralCode */\n      dup8\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":2062:2126  POOL.deposit(address(WETH), msg.value, onBehalfOf, referralCode) */\n      0x04\n      add\n      tag_113\n      jump\t// in\n    tag_112:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_116\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_116:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/misc/WETHGateway.sol\":1931:2131  function depositETH(address onBehalfOf, uint16 referralCode) external payable override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/misc/WETHGateway.sol\":6212:6308  function getLendingPoolAddress() external view returns (address) {... */\n    tag_41:\n        /* \"contracts/misc/WETHGateway.sol\":6298:6302  POOL */\n      immutable(\"0xcf21cf47e35318e13218f9c3f39ba16ca3aa2939803f4ecb20a4a9dd3e03f1fb\")\n        /* \"contracts/misc/WETHGateway.sol\":6212:6308  function getLendingPoolAddress() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1610:1745  function renounceOwnership() public virtual onlyOwner {... */\n    tag_45:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1235  _msgSender() */\n      tag_119\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1233  _msgSender */\n      tag_120\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1235  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1213:1219  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1213:1235  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1205:1272  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_121\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap1\n      tag_123\n      jump\t// in\n    tag_121:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1712:1713  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1696:1702  _owner */\n      dup1\n      sload\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1675:1715  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1696:1702  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1675:1715  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1712:1713  0 */\n      dup4\n      swap1\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1675:1715  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1738:1739  0 */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1721:1740  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1610:1745  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/misc/WETHGateway.sol\":4399:4671  function borrowETH(... */\n    tag_50:\n        /* \"contracts/misc/WETHGateway.sol\":4520:4597  POOL.borrow(address(WETH), amount, interesRateMode, referralCode, msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0xa415bcad)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/WETHGateway.sol\":4520:4524  POOL */\n      immutable(\"0xcf21cf47e35318e13218f9c3f39ba16ca3aa2939803f4ecb20a4a9dd3e03f1fb\")\n        /* \"contracts/misc/WETHGateway.sol\":4520:4531  POOL.borrow */\n      and\n      swap1\n      0xa415bcad\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":4520:4597  POOL.borrow(address(WETH), amount, interesRateMode, referralCode, msg.sender) */\n      tag_126\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":4540:4544  WETH */\n      immutable(\"0x9d86ea630c09ef2f1acbc248368c7b7030882e2a5db3011ef0f1f27cf79c9d56\")\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":4547:4553  amount */\n      dup8\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":4555:4570  interesRateMode */\n      dup8\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":4572:4584  referralCode */\n      dup8\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":4586:4596  msg.sender */\n      caller\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":4520:4597  POOL.borrow(address(WETH), amount, interesRateMode, referralCode, msg.sender) */\n      0x04\n      add\n      tag_127\n      jump\t// in\n    tag_126:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_130\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_130:\n      pop\n      pop\n        /* \"contracts/misc/WETHGateway.sol\":4603:4624  WETH.withdraw(amount) */\n      mload(0x40)\n      shl(0xe0, 0x2e1a7d4d)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/WETHGateway.sol\":4603:4607  WETH */\n      immutable(\"0x9d86ea630c09ef2f1acbc248368c7b7030882e2a5db3011ef0f1f27cf79c9d56\")\n        /* \"contracts/misc/WETHGateway.sol\":4603:4616  WETH.withdraw */\n      and\n      swap3\n      pop\n      0x2e1a7d4d\n      swap2\n      pop\n        /* \"contracts/misc/WETHGateway.sol\":4603:4624  WETH.withdraw(amount) */\n      tag_131\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":4617:4623  amount */\n      dup7\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":4603:4624  WETH.withdraw(amount) */\n      0x04\n      add\n      tag_101\n      jump\t// in\n    tag_131:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/misc/WETHGateway.sol\":4630:4666  _safeTransferETH(msg.sender, amount) */\n      tag_135\n        /* \"contracts/misc/WETHGateway.sol\":4647:4657  msg.sender */\n      caller\n        /* \"contracts/misc/WETHGateway.sol\":4659:4665  amount */\n      dup5\n        /* \"contracts/misc/WETHGateway.sol\":4630:4646  _safeTransferETH */\n      tag_106\n        /* \"contracts/misc/WETHGateway.sol\":4630:4666  _safeTransferETH(msg.sender, amount) */\n      jump\t// in\n    tag_135:\n        /* \"contracts/misc/WETHGateway.sol\":4399:4671  function borrowETH(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1027:1098  function owner() public view returns (address) {... */\n    tag_53:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1065:1072  address */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1087:1093  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1027:1098  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/misc/WETHGateway.sol\":5268:5423  function emergencyTokenTransfer(... */\n    tag_59:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1235  _msgSender() */\n      tag_138\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1233  _msgSender */\n      tag_120\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1235  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1213:1219  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1213:1235  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1205:1272  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap1\n      tag_123\n      jump\t// in\n    tag_139:\n        /* \"contracts/misc/WETHGateway.sol\":5384:5418  IERC20(token).transfer(to, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/WETHGateway.sol\":5384:5406  IERC20(token).transfer */\n      dup5\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":5384:5418  IERC20(token).transfer(to, amount) */\n      tag_142\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":5407:5409  to */\n      dup6\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":5411:5417  amount */\n      dup6\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":5384:5418  IERC20(token).transfer(to, amount) */\n      0x04\n      add\n      tag_143\n      jump\t// in\n    tag_142:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_146\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_146:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n        /* \"contracts/misc/WETHGateway.sol\":5898:5987  function getWETHAddress() external view returns (address) {... */\n    tag_62:\n        /* \"contracts/misc/WETHGateway.sol\":5977:5981  WETH */\n      immutable(\"0x9d86ea630c09ef2f1acbc248368c7b7030882e2a5db3011ef0f1f27cf79c9d56\")\n        /* \"contracts/misc/WETHGateway.sol\":5898:5987  function getWETHAddress() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/misc/WETHGateway.sol\":5717:5835  function emergencyEtherTransfer(address to, uint256 amount) external onlyOwner {... */\n    tag_68:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1235  _msgSender() */\n      tag_150\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1233  _msgSender */\n      tag_120\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1235  _msgSender() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1213:1219  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1213:1235  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1205:1272  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap1\n      tag_123\n      jump\t// in\n    tag_151:\n        /* \"contracts/misc/WETHGateway.sol\":5802:5830  _safeTransferETH(to, amount) */\n      tag_154\n        /* \"contracts/misc/WETHGateway.sol\":5819:5821  to */\n      dup3\n        /* \"contracts/misc/WETHGateway.sol\":5823:5829  amount */\n      dup3\n        /* \"contracts/misc/WETHGateway.sol\":5802:5818  _safeTransferETH */\n      tag_106\n        /* \"contracts/misc/WETHGateway.sol\":5802:5830  _safeTransferETH(to, amount) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/misc/WETHGateway.sol\":5717:5835  function emergencyEtherTransfer(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1884:2110  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_73:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1235  _msgSender() */\n      tag_156\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1233  _msgSender */\n      tag_120\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1223:1235  _msgSender() */\n      jump\t// in\n    tag_156:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1213:1219  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1213:1235  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1205:1272  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_157\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap1\n      tag_123\n      jump\t// in\n    tag_157:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1968:1990  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1960:2033  require(newOwner != address(0), 'Ownable: new owner is the zero address') */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap1\n      tag_162\n      jump\t// in\n    tag_160:\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":2065:2071  _owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":2044:2082  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":2065:2071  _owner */\n      swap3\n      and\n      swap2\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":2044:2082  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":2088:2094  _owner */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":2088:2105  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1884:2110  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/misc/WETHGateway.sol\":3225:4022  function repayETH(... */\n    tag_77:\n        /* \"contracts/misc/WETHGateway.sol\":3346:3364  uint256 stableDebt */\n      0x00\n        /* \"contracts/misc/WETHGateway.sol\":3366:3386  uint256 variableDebt */\n      dup1\n        /* \"contracts/misc/WETHGateway.sol\":3396:3476  Helpers.getUserCurrentDebtMemory(onBehalfOf, POOL.getReserveData(address(WETH))) */\n      tag_164\n        /* \"contracts/misc/WETHGateway.sol\":3429:3439  onBehalfOf */\n      dup4\n        /* \"contracts/misc/WETHGateway.sol\":3441:3445  POOL */\n      immutable(\"0xcf21cf47e35318e13218f9c3f39ba16ca3aa2939803f4ecb20a4a9dd3e03f1fb\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/WETHGateway.sol\":3441:3460  POOL.getReserveData */\n      and\n      0x35ea6a75\n        /* \"contracts/misc/WETHGateway.sol\":3469:3473  WETH */\n      immutable(\"0x9d86ea630c09ef2f1acbc248368c7b7030882e2a5db3011ef0f1f27cf79c9d56\")\n        /* \"contracts/misc/WETHGateway.sol\":3441:3475  POOL.getReserveData(address(WETH)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_165:\n      0x0180\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_166\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_166:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_168\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_168:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_169\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"contracts/misc/WETHGateway.sol\":3396:3428  Helpers.getUserCurrentDebtMemory */\n      tag_171\n        /* \"contracts/misc/WETHGateway.sol\":3396:3476  Helpers.getUserCurrentDebtMemory(onBehalfOf, POOL.getReserveData(address(WETH))) */\n      jump\t// in\n    tag_164:\n        /* \"contracts/misc/WETHGateway.sol\":3345:3476  (uint256 stableDebt, uint256 variableDebt) =... */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"contracts/misc/WETHGateway.sol\":3483:3504  uint256 paybackAmount */\n      0x00\n        /* \"contracts/misc/WETHGateway.sol\":3553:3586  DataTypes.InterestRateMode.STABLE */\n      0x01\n        /* \"contracts/misc/WETHGateway.sol\":3540:3548  rateMode */\n      dup6\n        /* \"contracts/misc/WETHGateway.sol\":3513:3549  DataTypes.InterestRateMode(rateMode) */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_173\n      jumpi\n      invalid\n    tag_173:\n        /* \"contracts/misc/WETHGateway.sol\":3513:3586  DataTypes.InterestRateMode(rateMode) == DataTypes.InterestRateMode.STABLE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_174\n      jumpi\n      invalid\n    tag_174:\n      eq\n        /* \"contracts/misc/WETHGateway.sol\":3513:3630  DataTypes.InterestRateMode(rateMode) == DataTypes.InterestRateMode.STABLE... */\n      tag_175\n      jumpi\n        /* \"contracts/misc/WETHGateway.sol\":3618:3630  variableDebt */\n      dup2\n        /* \"contracts/misc/WETHGateway.sol\":3513:3630  DataTypes.InterestRateMode(rateMode) == DataTypes.InterestRateMode.STABLE... */\n      jump(tag_176)\n    tag_175:\n        /* \"contracts/misc/WETHGateway.sol\":3597:3607  stableDebt */\n      dup3\n        /* \"contracts/misc/WETHGateway.sol\":3513:3630  DataTypes.InterestRateMode(rateMode) == DataTypes.InterestRateMode.STABLE... */\n    tag_176:\n        /* \"contracts/misc/WETHGateway.sol\":3483:3630  uint256 paybackAmount =... */\n      swap1\n      pop\n        /* \"contracts/misc/WETHGateway.sol\":3650:3663  paybackAmount */\n      dup1\n        /* \"contracts/misc/WETHGateway.sol\":3641:3647  amount */\n      dup7\n        /* \"contracts/misc/WETHGateway.sol\":3641:3663  amount < paybackAmount */\n      lt\n        /* \"contracts/misc/WETHGateway.sol\":3637:3702  if (amount < paybackAmount) {... */\n      iszero\n      tag_177\n      jumpi\n      pop\n        /* \"contracts/misc/WETHGateway.sol\":3689:3695  amount */\n      dup5\n        /* \"contracts/misc/WETHGateway.sol\":3637:3702  if (amount < paybackAmount) {... */\n    tag_177:\n        /* \"contracts/misc/WETHGateway.sol\":3728:3741  paybackAmount */\n      dup1\n        /* \"contracts/misc/WETHGateway.sol\":3715:3724  msg.value */\n      callvalue\n        /* \"contracts/misc/WETHGateway.sol\":3715:3741  msg.value >= paybackAmount */\n      lt\n      iszero\n        /* \"contracts/misc/WETHGateway.sol\":3707:3785  require(msg.value >= paybackAmount, 'msg.value is less than repayment amount') */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap1\n      tag_180\n      jump\t// in\n    tag_178:\n        /* \"contracts/misc/WETHGateway.sol\":3791:3795  WETH */\n      immutable(\"0x9d86ea630c09ef2f1acbc248368c7b7030882e2a5db3011ef0f1f27cf79c9d56\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/WETHGateway.sol\":3791:3803  WETH.deposit */\n      and\n      0xd0e30db0\n        /* \"contracts/misc/WETHGateway.sol\":3811:3824  paybackAmount */\n      dup3\n        /* \"contracts/misc/WETHGateway.sol\":3791:3827  WETH.deposit{value: paybackAmount}() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_183\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_183:\n      pop\n      pop\n        /* \"contracts/misc/WETHGateway.sol\":3833:3891  POOL.repay(address(WETH), msg.value, rateMode, onBehalfOf) */\n      mload(0x40)\n      shl(0xe0, 0x573ade81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/WETHGateway.sol\":3833:3837  POOL */\n      immutable(\"0xcf21cf47e35318e13218f9c3f39ba16ca3aa2939803f4ecb20a4a9dd3e03f1fb\")\n        /* \"contracts/misc/WETHGateway.sol\":3833:3843  POOL.repay */\n      and\n      swap4\n      pop\n      0x573ade81\n      swap3\n      pop\n        /* \"contracts/misc/WETHGateway.sol\":3833:3891  POOL.repay(address(WETH), msg.value, rateMode, onBehalfOf) */\n      tag_184\n      swap2\n      pop\n        /* \"contracts/misc/WETHGateway.sol\":3852:3856  WETH */\n      immutable(\"0x9d86ea630c09ef2f1acbc248368c7b7030882e2a5db3011ef0f1f27cf79c9d56\")\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":3859:3868  msg.value */\n      callvalue\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":3870:3878  rateMode */\n      dup11\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":3880:3890  onBehalfOf */\n      dup11\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":3833:3891  POOL.repay(address(WETH), msg.value, rateMode, onBehalfOf) */\n      0x04\n      add\n      tag_185\n      jump\t// in\n    tag_184:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_186:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_188\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_188:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_189\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_189:\n      pop\n        /* \"contracts/misc/WETHGateway.sol\":3947:3960  paybackAmount */\n      dup1\n        /* \"contracts/misc/WETHGateway.sol\":3935:3944  msg.value */\n      callvalue\n        /* \"contracts/misc/WETHGateway.sol\":3935:3960  msg.value > paybackAmount */\n      gt\n        /* \"contracts/misc/WETHGateway.sol\":3931:4017  if (msg.value > paybackAmount) _safeTransferETH(msg.sender, msg.value - paybackAmount) */\n      iszero\n      tag_116\n      jumpi\n        /* \"contracts/misc/WETHGateway.sol\":3962:4017  _safeTransferETH(msg.sender, msg.value - paybackAmount) */\n      tag_116\n        /* \"contracts/misc/WETHGateway.sol\":3979:3989  msg.sender */\n      caller\n        /* \"contracts/misc/WETHGateway.sol\":4003:4016  paybackAmount */\n      dup3\n        /* \"contracts/misc/WETHGateway.sol\":3991:4000  msg.value */\n      callvalue\n        /* \"contracts/misc/WETHGateway.sol\":3991:4016  msg.value - paybackAmount */\n      sub\n        /* \"contracts/misc/WETHGateway.sol\":4823:4995  function _safeTransferETH(address to, uint256 value) internal {... */\n    tag_106:\n        /* \"contracts/misc/WETHGateway.sol\":4932:4944  new bytes(0) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/misc/WETHGateway.sol\":4892:4904  bool success */\n      0x00\n        /* \"contracts/misc/WETHGateway.sol\":4932:4944  new bytes(0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/WETHGateway.sol\":4910:4917  to.call */\n      dup5\n      and\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":4925:4930  value */\n      dup4\n      swap1\n        /* \"contracts/misc/WETHGateway.sol\":4910:4945  to.call{value: value}(new bytes(0)) */\n      mload(0x40)\n      tag_195\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_199\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_198)\n    tag_199:\n      0x60\n      swap2\n      pop\n    tag_198:\n      pop\n        /* \"contracts/misc/WETHGateway.sol\":4891:4945  (bool success, ) = to.call{value: value}(new bytes(0)) */\n      pop\n      swap1\n      pop\n        /* \"contracts/misc/WETHGateway.sol\":4959:4966  success */\n      dup1\n        /* \"contracts/misc/WETHGateway.sol\":4951:4990  require(success, 'ETH_TRANSFER_FAILED') */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap1\n      tag_202\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/contracts/Context.sol\":587:685  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_120:\n        /* \"contracts/dependencies/openzeppelin/contracts/Context.sol\":670:680  msg.sender */\n      caller\n        /* \"contracts/dependencies/openzeppelin/contracts/Context.sol\":587:685  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Helpers.sol\":763:1054  function getUserCurrentDebtMemory(address user, DataTypes.ReserveData memory reserve)... */\n    tag_171:\n        /* \"contracts/protocol/libraries/helpers/Helpers.sol\":884:891  uint256 */\n      0x00\n        /* \"contracts/protocol/libraries/helpers/Helpers.sol\":893:900  uint256 */\n      dup1\n        /* \"contracts/protocol/libraries/helpers/Helpers.sol\":932:939  reserve */\n      dup3\n        /* \"contracts/protocol/libraries/helpers/Helpers.sol\":932:962  reserve.stableDebtTokenAddress */\n      0x0100\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/libraries/helpers/Helpers.sol\":925:973  IERC20(reserve.stableDebtTokenAddress).balanceOf */\n      and\n      0x70a08231\n        /* \"contracts/protocol/libraries/helpers/Helpers.sol\":974:978  user */\n      dup6\n        /* \"contracts/protocol/libraries/helpers/Helpers.sol\":925:979  IERC20(reserve.stableDebtTokenAddress).balanceOf(user) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_205:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_206\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_206:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_208\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_208:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_209\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_209:\n        /* \"contracts/protocol/libraries/helpers/Helpers.sol\":994:1001  reserve */\n      dup4\n        /* \"contracts/protocol/libraries/helpers/Helpers.sol\":994:1026  reserve.variableDebtTokenAddress */\n      0x0120\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/protocol/libraries/helpers/Helpers.sol\":987:1037  IERC20(reserve.variableDebtTokenAddress).balanceOf */\n      and\n      0x70a08231\n        /* \"contracts/protocol/libraries/helpers/Helpers.sol\":1038:1042  user */\n      dup7\n        /* \"contracts/protocol/libraries/helpers/Helpers.sol\":987:1043  IERC20(reserve.variableDebtTokenAddress).balanceOf(user) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_210:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_211\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_211:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_213\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_213:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_214\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_214:\n        /* \"contracts/protocol/libraries/helpers/Helpers.sol\":910:1049  return (... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/protocol/libraries/helpers/Helpers.sol\":763:1054  function getUserCurrentDebtMemory(address user, DataTypes.ReserveData memory reserve)... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":142:276   */\n    tag_216:\n        /* \"--CODEGEN--\":220:233   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":238:271   */\n      tag_218\n        /* \"--CODEGEN--\":220:233   */\n      dup2\n        /* \"--CODEGEN--\":238:271   */\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"--CODEGEN--\":205:276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":465:826   */\n    tag_220:\n      0x00\n        /* \"--CODEGEN--\":606:610   */\n      0x20\n        /* \"--CODEGEN--\":594:603   */\n      dup3\n        /* \"--CODEGEN--\":589:592   */\n      dup5\n        /* \"--CODEGEN--\":585:604   */\n      sub\n        /* \"--CODEGEN--\":581:611   */\n      slt\n        /* \"--CODEGEN--\":578:580   */\n      iszero\n      tag_222\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":614:626   */\n      revert\n        /* \"--CODEGEN--\":578:580   */\n    tag_222:\n        /* \"--CODEGEN--\":642:662   */\n      tag_223\n        /* \"--CODEGEN--\":606:610   */\n      0x20\n        /* \"--CODEGEN--\":642:662   */\n      tag_224\n      jump\t// in\n    tag_223:\n        /* \"--CODEGEN--\":3651:3664   */\n      swap2\n      mload\n        /* \"--CODEGEN--\":719:805   */\n      dup3\n      mstore\n      pop\n        /* \"--CODEGEN--\":633:662   */\n      swap2\n        /* \"--CODEGEN--\":572:826   */\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":3160:3294   */\n    tag_225:\n        /* \"--CODEGEN--\":3238:3251   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":18271:18305   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":18260:18306   */\n      dup2\n      and\n        /* \"--CODEGEN--\":19758:19793   */\n      dup2\n      eq\n        /* \"--CODEGEN--\":19748:19750   */\n      tag_218\n      jumpi\n        /* \"--CODEGEN--\":19807:19808   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":19797:19809   */\n      revert\n        /* \"--CODEGEN--\":3301:3429   */\n    tag_228:\n        /* \"--CODEGEN--\":3367:3387   */\n      dup1\n      calldataload\n        /* \"--CODEGEN--\":18390:18396   */\n      0xffff\n        /* \"--CODEGEN--\":18379:18397   */\n      dup2\n      and\n        /* \"--CODEGEN--\":19881:19915   */\n      dup2\n      eq\n        /* \"--CODEGEN--\":19871:19873   */\n      tag_218\n      jumpi\n        /* \"--CODEGEN--\":19929:19930   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":19919:19931   */\n      revert\n        /* \"--CODEGEN--\":3714:3846   */\n    tag_231:\n        /* \"--CODEGEN--\":3791:3804   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":18688:18700   */\n      0xffffffffff\n        /* \"--CODEGEN--\":18677:18701   */\n      dup2\n      and\n        /* \"--CODEGEN--\":20127:20161   */\n      dup2\n      eq\n        /* \"--CODEGEN--\":20117:20119   */\n      tag_218\n      jumpi\n        /* \"--CODEGEN--\":20175:20176   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":20165:20177   */\n      revert\n        /* \"--CODEGEN--\":3853:3983   */\n    tag_234:\n        /* \"--CODEGEN--\":3929:3942   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":18784:18788   */\n      0xff\n        /* \"--CODEGEN--\":18773:18789   */\n      dup2\n      and\n        /* \"--CODEGEN--\":20248:20281   */\n      dup2\n      eq\n        /* \"--CODEGEN--\":20238:20240   */\n      tag_218\n      jumpi\n        /* \"--CODEGEN--\":20295:20296   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":20285:20297   */\n      revert\n        /* \"--CODEGEN--\":3990:4231   */\n    tag_72:\n      0x00\n        /* \"--CODEGEN--\":4094:4096   */\n      0x20\n        /* \"--CODEGEN--\":4082:4091   */\n      dup3\n        /* \"--CODEGEN--\":4073:4080   */\n      dup5\n        /* \"--CODEGEN--\":4069:4092   */\n      sub\n        /* \"--CODEGEN--\":4065:4097   */\n      slt\n        /* \"--CODEGEN--\":4062:4064   */\n      iszero\n      tag_238\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":4100:4112   */\n      revert\n        /* \"--CODEGEN--\":4062:4064   */\n    tag_238:\n        /* \"--CODEGEN--\":85:91   */\n      dup2\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_239\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_219\n      jump\t// in\n    tag_239:\n        /* \"--CODEGEN--\":4152:4215   */\n      swap4\n        /* \"--CODEGEN--\":4056:4231   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":4238:4729   */\n    tag_58:\n      0x00\n      dup1\n      0x00\n        /* \"--CODEGEN--\":4376:4378   */\n      0x60\n        /* \"--CODEGEN--\":4364:4373   */\n      dup5\n        /* \"--CODEGEN--\":4355:4362   */\n      dup7\n        /* \"--CODEGEN--\":4351:4374   */\n      sub\n        /* \"--CODEGEN--\":4347:4379   */\n      slt\n        /* \"--CODEGEN--\":4344:4346   */\n      iszero\n      tag_241\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":4382:4394   */\n      revert\n        /* \"--CODEGEN--\":4344:4346   */\n    tag_241:\n        /* \"--CODEGEN--\":85:91   */\n      dup4\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_242\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_219\n      jump\t// in\n    tag_242:\n        /* \"--CODEGEN--\":4434:4497   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":4534:4536   */\n      0x20\n        /* \"--CODEGEN--\":4573:4595   */\n      dup5\n      add\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_243\n        /* \"--CODEGEN--\":72:92   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_219\n      jump\t// in\n    tag_243:\n        /* \"--CODEGEN--\":4338:4729   */\n      swap3\n      swap6\n        /* \"--CODEGEN--\":4542:4605   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"--CODEGEN--\":4642:4644   */\n      0x40\n        /* \"--CODEGEN--\":4681:4703   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":3503:3523   */\n      calldataload\n      swap1\n        /* \"--CODEGEN--\":4338:4729   */\n      jump\t// out\n        /* \"--CODEGEN--\":4736:5100   */\n    tag_37:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":4856:4858   */\n      0x40\n        /* \"--CODEGEN--\":4844:4853   */\n      dup4\n        /* \"--CODEGEN--\":4835:4842   */\n      dup6\n        /* \"--CODEGEN--\":4831:4854   */\n      sub\n        /* \"--CODEGEN--\":4827:4859   */\n      slt\n        /* \"--CODEGEN--\":4824:4826   */\n      iszero\n      tag_245\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":4862:4874   */\n      revert\n        /* \"--CODEGEN--\":4824:4826   */\n    tag_245:\n        /* \"--CODEGEN--\":85:91   */\n      dup3\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_246\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_219\n      jump\t// in\n    tag_246:\n        /* \"--CODEGEN--\":4914:4977   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":5032:5084   */\n      tag_247\n        /* \"--CODEGEN--\":5076:5083   */\n      dup5\n        /* \"--CODEGEN--\":5014:5016   */\n      0x20\n        /* \"--CODEGEN--\":5052:5074   */\n      dup6\n      add\n        /* \"--CODEGEN--\":5032:5084   */\n      tag_228\n      jump\t// in\n    tag_247:\n        /* \"--CODEGEN--\":5022:5084   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":4818:5100   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":5107:5473   */\n    tag_67:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":5228:5230   */\n      0x40\n        /* \"--CODEGEN--\":5216:5225   */\n      dup4\n        /* \"--CODEGEN--\":5207:5214   */\n      dup6\n        /* \"--CODEGEN--\":5203:5226   */\n      sub\n        /* \"--CODEGEN--\":5199:5231   */\n      slt\n        /* \"--CODEGEN--\":5196:5198   */\n      iszero\n      tag_249\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":5234:5246   */\n      revert\n        /* \"--CODEGEN--\":5196:5198   */\n    tag_249:\n        /* \"--CODEGEN--\":85:91   */\n      dup3\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_250\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_219\n      jump\t// in\n    tag_250:\n        /* \"--CODEGEN--\":5286:5349   */\n      swap5\n        /* \"--CODEGEN--\":5386:5388   */\n      0x20\n        /* \"--CODEGEN--\":5425:5447   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"--CODEGEN--\":3503:3523   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"--CODEGEN--\":5190:5473   */\n      jump\t// out\n        /* \"--CODEGEN--\":5480:5737   */\n    tag_93:\n      0x00\n        /* \"--CODEGEN--\":5592:5594   */\n      0x20\n        /* \"--CODEGEN--\":5580:5589   */\n      dup3\n        /* \"--CODEGEN--\":5571:5578   */\n      dup5\n        /* \"--CODEGEN--\":5567:5590   */\n      sub\n        /* \"--CODEGEN--\":5563:5595   */\n      slt\n        /* \"--CODEGEN--\":5560:5562   */\n      iszero\n      tag_252\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":5598:5610   */\n      revert\n        /* \"--CODEGEN--\":5560:5562   */\n    tag_252:\n        /* \"--CODEGEN--\":364:370   */\n      dup2\n        /* \"--CODEGEN--\":358:371   */\n      mload\n        /* \"--CODEGEN--\":19662:19667   */\n      dup1\n        /* \"--CODEGEN--\":18172:18185   */\n      iszero\n        /* \"--CODEGEN--\":18165:18186   */\n      iszero\n        /* \"--CODEGEN--\":19640:19645   */\n      dup2\n        /* \"--CODEGEN--\":19637:19669   */\n      eq\n        /* \"--CODEGEN--\":19627:19629   */\n      tag_239\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":19673:19685   */\n      revert\n        /* \"--CODEGEN--\":5744:6066   */\n    tag_170:\n      0x00\n        /* \"--CODEGEN--\":5888:5891   */\n      0x0180\n      dup1\n        /* \"--CODEGEN--\":5876:5885   */\n      dup4\n        /* \"--CODEGEN--\":5867:5874   */\n      dup6\n        /* \"--CODEGEN--\":5863:5886   */\n      sub\n        /* \"--CODEGEN--\":5859:5892   */\n      slt\n        /* \"--CODEGEN--\":5856:5858   */\n      iszero\n      tag_255\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":5895:5907   */\n      revert\n        /* \"--CODEGEN--\":5856:5858   */\n    tag_255:\n        /* \"--CODEGEN--\":1035:1057   */\n      tag_256\n        /* \"--CODEGEN--\":5888:5891   */\n      dup2\n        /* \"--CODEGEN--\":1035:1057   */\n      tag_224\n      jump\t// in\n    tag_256:\n        /* \"--CODEGEN--\":1026:1057   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1148:1249   */\n      tag_257\n        /* \"--CODEGEN--\":1245:1248   */\n      dup5\n        /* \"--CODEGEN--\":1221:1243   */\n      dup5\n        /* \"--CODEGEN--\":1148:1249   */\n      tag_220\n      jump\t// in\n    tag_257:\n        /* \"--CODEGEN--\":1130:1146   */\n      dup2\n        /* \"--CODEGEN--\":1123:1250   */\n      mstore\n        /* \"--CODEGEN--\":1354:1414   */\n      tag_258\n        /* \"--CODEGEN--\":1410:1413   */\n      dup5\n        /* \"--CODEGEN--\":1321:1323   */\n      0x20\n        /* \"--CODEGEN--\":1390:1399   */\n      dup6\n        /* \"--CODEGEN--\":1386:1408   */\n      add\n        /* \"--CODEGEN--\":1354:1414   */\n      tag_225\n      jump\t// in\n    tag_258:\n        /* \"--CODEGEN--\":1321:1323   */\n      0x20\n        /* \"--CODEGEN--\":1340:1345   */\n      dup3\n        /* \"--CODEGEN--\":1336:1352   */\n      add\n        /* \"--CODEGEN--\":1329:1415   */\n      mstore\n        /* \"--CODEGEN--\":1524:1584   */\n      tag_259\n        /* \"--CODEGEN--\":1580:1583   */\n      dup5\n        /* \"--CODEGEN--\":1491:1493   */\n      0x40\n        /* \"--CODEGEN--\":1560:1569   */\n      dup6\n        /* \"--CODEGEN--\":1556:1578   */\n      add\n        /* \"--CODEGEN--\":1524:1584   */\n      tag_225\n      jump\t// in\n    tag_259:\n        /* \"--CODEGEN--\":1491:1493   */\n      0x40\n        /* \"--CODEGEN--\":1510:1515   */\n      dup3\n        /* \"--CODEGEN--\":1506:1522   */\n      add\n        /* \"--CODEGEN--\":1499:1585   */\n      mstore\n        /* \"--CODEGEN--\":1695:1755   */\n      tag_260\n        /* \"--CODEGEN--\":1751:1754   */\n      dup5\n        /* \"--CODEGEN--\":1662:1664   */\n      0x60\n        /* \"--CODEGEN--\":1731:1740   */\n      dup6\n        /* \"--CODEGEN--\":1727:1749   */\n      add\n        /* \"--CODEGEN--\":1695:1755   */\n      tag_225\n      jump\t// in\n    tag_260:\n        /* \"--CODEGEN--\":1662:1664   */\n      0x60\n        /* \"--CODEGEN--\":1681:1686   */\n      dup3\n        /* \"--CODEGEN--\":1677:1693   */\n      add\n        /* \"--CODEGEN--\":1670:1756   */\n      mstore\n        /* \"--CODEGEN--\":1872:1932   */\n      tag_261\n        /* \"--CODEGEN--\":1928:1931   */\n      dup5\n        /* \"--CODEGEN--\":1838:1841   */\n      0x80\n        /* \"--CODEGEN--\":1908:1917   */\n      dup6\n        /* \"--CODEGEN--\":1904:1926   */\n      add\n        /* \"--CODEGEN--\":1872:1932   */\n      tag_225\n      jump\t// in\n    tag_261:\n        /* \"--CODEGEN--\":1838:1841   */\n      0x80\n        /* \"--CODEGEN--\":1858:1863   */\n      dup3\n        /* \"--CODEGEN--\":1854:1870   */\n      add\n        /* \"--CODEGEN--\":1847:1933   */\n      mstore\n        /* \"--CODEGEN--\":2047:2107   */\n      tag_262\n        /* \"--CODEGEN--\":2103:2106   */\n      dup5\n        /* \"--CODEGEN--\":2013:2016   */\n      0xa0\n        /* \"--CODEGEN--\":2083:2092   */\n      dup6\n        /* \"--CODEGEN--\":2079:2101   */\n      add\n        /* \"--CODEGEN--\":2047:2107   */\n      tag_225\n      jump\t// in\n    tag_262:\n        /* \"--CODEGEN--\":2013:2016   */\n      0xa0\n        /* \"--CODEGEN--\":2033:2038   */\n      dup3\n        /* \"--CODEGEN--\":2029:2045   */\n      add\n        /* \"--CODEGEN--\":2022:2108   */\n      mstore\n        /* \"--CODEGEN--\":2218:2277   */\n      tag_263\n        /* \"--CODEGEN--\":2273:2276   */\n      dup5\n        /* \"--CODEGEN--\":2184:2187   */\n      0xc0\n        /* \"--CODEGEN--\":2253:2262   */\n      dup6\n        /* \"--CODEGEN--\":2249:2271   */\n      add\n        /* \"--CODEGEN--\":2218:2277   */\n      tag_231\n      jump\t// in\n    tag_263:\n        /* \"--CODEGEN--\":2184:2187   */\n      0xc0\n        /* \"--CODEGEN--\":2204:2209   */\n      dup3\n        /* \"--CODEGEN--\":2200:2216   */\n      add\n        /* \"--CODEGEN--\":2193:2278   */\n      mstore\n        /* \"--CODEGEN--\":2382:2442   */\n      tag_264\n        /* \"--CODEGEN--\":2438:2441   */\n      dup5\n        /* \"--CODEGEN--\":2348:2351   */\n      0xe0\n        /* \"--CODEGEN--\":2418:2427   */\n      dup6\n        /* \"--CODEGEN--\":2414:2436   */\n      add\n        /* \"--CODEGEN--\":2382:2442   */\n      tag_216\n      jump\t// in\n    tag_264:\n        /* \"--CODEGEN--\":2348:2351   */\n      0xe0\n        /* \"--CODEGEN--\":2368:2373   */\n      dup3\n        /* \"--CODEGEN--\":2364:2380   */\n      add\n        /* \"--CODEGEN--\":2357:2443   */\n      mstore\n        /* \"--CODEGEN--\":2522:2525   */\n      0x0100\n        /* \"--CODEGEN--\":2558:2618   */\n      tag_265\n        /* \"--CODEGEN--\":2614:2617   */\n      dup6\n        /* \"--CODEGEN--\":2522:2525   */\n      dup3\n        /* \"--CODEGEN--\":2594:2603   */\n      dup7\n        /* \"--CODEGEN--\":2590:2612   */\n      add\n        /* \"--CODEGEN--\":2558:2618   */\n      tag_216\n      jump\t// in\n    tag_265:\n        /* \"--CODEGEN--\":2538:2556   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":2531:2619   */\n      mstore\n        /* \"--CODEGEN--\":2700:2703   */\n      0x0120\n        /* \"--CODEGEN--\":2736:2796   */\n      tag_266\n        /* \"--CODEGEN--\":2792:2795   */\n      dup6\n        /* \"--CODEGEN--\":2768:2790   */\n      dup6\n      dup4\n      add\n        /* \"--CODEGEN--\":2736:2796   */\n      tag_216\n      jump\t// in\n    tag_266:\n        /* \"--CODEGEN--\":2716:2734   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":2709:2797   */\n      mstore\n        /* \"--CODEGEN--\":2881:2884   */\n      0x0140\n        /* \"--CODEGEN--\":2917:2977   */\n      tag_267\n        /* \"--CODEGEN--\":2973:2976   */\n      dup6\n        /* \"--CODEGEN--\":2949:2971   */\n      dup6\n      dup4\n      add\n        /* \"--CODEGEN--\":2917:2977   */\n      tag_216\n      jump\t// in\n    tag_267:\n        /* \"--CODEGEN--\":2897:2915   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":2890:2978   */\n      mstore\n        /* \"--CODEGEN--\":3037:3040   */\n      0x0160\n        /* \"--CODEGEN--\":3073:3131   */\n      tag_268\n        /* \"--CODEGEN--\":3127:3130   */\n      dup6\n        /* \"--CODEGEN--\":3103:3125   */\n      dup6\n      dup4\n      add\n        /* \"--CODEGEN--\":3073:3131   */\n      tag_234\n      jump\t// in\n    tag_268:\n        /* \"--CODEGEN--\":3053:3071   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":3046:3132   */\n      mstore\n        /* \"--CODEGEN--\":3057:3062   */\n      swap4\n        /* \"--CODEGEN--\":5850:6066   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":6073:6336   */\n    tag_85:\n      0x00\n        /* \"--CODEGEN--\":6188:6190   */\n      0x20\n        /* \"--CODEGEN--\":6176:6185   */\n      dup3\n        /* \"--CODEGEN--\":6167:6174   */\n      dup5\n        /* \"--CODEGEN--\":6163:6186   */\n      sub\n        /* \"--CODEGEN--\":6159:6191   */\n      slt\n        /* \"--CODEGEN--\":6156:6158   */\n      iszero\n      tag_270\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":6194:6206   */\n      revert\n        /* \"--CODEGEN--\":6156:6158   */\n    tag_270:\n      pop\n        /* \"--CODEGEN--\":3651:3664   */\n      mload\n      swap2\n        /* \"--CODEGEN--\":6150:6336   */\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":6343:6709   */\n    tag_28:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":6464:6466   */\n      0x40\n        /* \"--CODEGEN--\":6452:6461   */\n      dup4\n        /* \"--CODEGEN--\":6443:6450   */\n      dup6\n        /* \"--CODEGEN--\":6439:6462   */\n      sub\n        /* \"--CODEGEN--\":6435:6467   */\n      slt\n        /* \"--CODEGEN--\":6432:6434   */\n      iszero\n      tag_272\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":6470:6482   */\n      revert\n        /* \"--CODEGEN--\":6432:6434   */\n    tag_272:\n        /* \"--CODEGEN--\":3516:3522   */\n      dup3\n        /* \"--CODEGEN--\":3503:3523   */\n      calldataload\n        /* \"--CODEGEN--\":6522:6585   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":6622:6624   */\n      0x20\n        /* \"--CODEGEN--\":6665:6674   */\n      dup4\n        /* \"--CODEGEN--\":6661:6683   */\n      add\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_273\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_219\n      jump\t// in\n    tag_273:\n        /* \"--CODEGEN--\":6630:6693   */\n      dup1\n      swap2\n      pop\n      pop\n        /* \"--CODEGEN--\":6426:6709   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":6716:7207   */\n    tag_76:\n      0x00\n      dup1\n      0x00\n        /* \"--CODEGEN--\":6854:6856   */\n      0x60\n        /* \"--CODEGEN--\":6842:6851   */\n      dup5\n        /* \"--CODEGEN--\":6833:6840   */\n      dup7\n        /* \"--CODEGEN--\":6829:6852   */\n      sub\n        /* \"--CODEGEN--\":6825:6857   */\n      slt\n        /* \"--CODEGEN--\":6822:6824   */\n      iszero\n      tag_275\n      jumpi\n      dup3\n      dup4\n        /* \"--CODEGEN--\":6860:6872   */\n      revert\n        /* \"--CODEGEN--\":6822:6824   */\n    tag_275:\n        /* \"--CODEGEN--\":3516:3522   */\n      dup4\n        /* \"--CODEGEN--\":3503:3523   */\n      calldataload\n        /* \"--CODEGEN--\":6912:6975   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":7012:7014   */\n      0x20\n        /* \"--CODEGEN--\":7055:7064   */\n      dup5\n        /* \"--CODEGEN--\":7051:7073   */\n      add\n        /* \"--CODEGEN--\":3503:3523   */\n      calldataload\n        /* \"--CODEGEN--\":7020:7083   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7120:7122   */\n      0x40\n        /* \"--CODEGEN--\":7163:7172   */\n      dup5\n        /* \"--CODEGEN--\":7159:7181   */\n      add\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_276\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_219\n      jump\t// in\n    tag_276:\n        /* \"--CODEGEN--\":7128:7191   */\n      dup1\n      swap2\n      pop\n      pop\n        /* \"--CODEGEN--\":6816:7207   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"--CODEGEN--\":7214:7703   */\n    tag_49:\n      0x00\n      dup1\n      0x00\n        /* \"--CODEGEN--\":7351:7353   */\n      0x60\n        /* \"--CODEGEN--\":7339:7348   */\n      dup5\n        /* \"--CODEGEN--\":7330:7337   */\n      dup7\n        /* \"--CODEGEN--\":7326:7349   */\n      sub\n        /* \"--CODEGEN--\":7322:7354   */\n      slt\n        /* \"--CODEGEN--\":7319:7321   */\n      iszero\n      tag_278\n      jumpi\n      dup3\n      dup4\n        /* \"--CODEGEN--\":7357:7369   */\n      revert\n        /* \"--CODEGEN--\":7319:7321   */\n    tag_278:\n        /* \"--CODEGEN--\":3516:3522   */\n      dup4\n        /* \"--CODEGEN--\":3503:3523   */\n      calldataload\n        /* \"--CODEGEN--\":7409:7472   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":7509:7511   */\n      0x20\n        /* \"--CODEGEN--\":7552:7561   */\n      dup5\n        /* \"--CODEGEN--\":7548:7570   */\n      add\n        /* \"--CODEGEN--\":3503:3523   */\n      calldataload\n        /* \"--CODEGEN--\":7517:7580   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7635:7687   */\n      tag_279\n        /* \"--CODEGEN--\":7679:7686   */\n      dup6\n        /* \"--CODEGEN--\":7617:7619   */\n      0x40\n        /* \"--CODEGEN--\":7659:7668   */\n      dup7\n        /* \"--CODEGEN--\":7655:7677   */\n      add\n        /* \"--CODEGEN--\":7635:7687   */\n      tag_228\n      jump\t// in\n    tag_279:\n        /* \"--CODEGEN--\":7625:7687   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":7313:7703   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"--CODEGEN--\":10674:10945   */\n    tag_196:\n      0x00\n        /* \"--CODEGEN--\":8139:8144   */\n      dup3\n        /* \"--CODEGEN--\":17642:17654   */\n      mload\n      dup2\n        /* \"--CODEGEN--\":19253:19354   */\n    tag_281:\n        /* \"--CODEGEN--\":19267:19273   */\n      dup2\n        /* \"--CODEGEN--\":19264:19265   */\n      dup2\n        /* \"--CODEGEN--\":19261:19274   */\n      lt\n        /* \"--CODEGEN--\":19253:19354   */\n      iszero\n      tag_283\n      jumpi\n        /* \"--CODEGEN--\":8283:8287   */\n      0x20\n        /* \"--CODEGEN--\":19334:19345   */\n      dup2\n      dup7\n      add\n      dup2\n      add\n        /* \"--CODEGEN--\":19328:19346   */\n      mload\n        /* \"--CODEGEN--\":19315:19326   */\n      dup6\n      dup4\n      add\n        /* \"--CODEGEN--\":19308:19347   */\n      mstore\n        /* \"--CODEGEN--\":19282:19292   */\n      add\n        /* \"--CODEGEN--\":19253:19354   */\n      jump(tag_281)\n    tag_283:\n        /* \"--CODEGEN--\":19369:19375   */\n      dup2\n        /* \"--CODEGEN--\":19366:19367   */\n      dup2\n        /* \"--CODEGEN--\":19363:19376   */\n      gt\n        /* \"--CODEGEN--\":19360:19362   */\n      iszero\n      tag_284\n      jumpi\n      dup3\n        /* \"--CODEGEN--\":19425:19431   */\n      dup3\n        /* \"--CODEGEN--\":19420:19423   */\n      dup6\n        /* \"--CODEGEN--\":19416:19432   */\n      add\n        /* \"--CODEGEN--\":19409:19436   */\n      mstore\n        /* \"--CODEGEN--\":19360:19362   */\n    tag_284:\n      pop\n        /* \"--CODEGEN--\":8314:8330   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"--CODEGEN--\":10808:10945   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":10952:11174   */\n    tag_34:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":18471:18525   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"--CODEGEN--\":7930:7967   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":11079:11081   */\n      0x20\n        /* \"--CODEGEN--\":11064:11082   */\n      add\n      swap1\n        /* \"--CODEGEN--\":11050:11174   */\n      jump\t// out\n        /* \"--CODEGEN--\":11426:11902   */\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":18471:18525   */\n      swap4\n      dup5\n      and\n        /* \"--CODEGEN--\":7789:7847   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":18471:18525   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"--CODEGEN--\":11805:11807   */\n      0x20\n        /* \"--CODEGEN--\":11790:11808   */\n      dup3\n      add\n        /* \"--CODEGEN--\":7789:7847   */\n      mstore\n        /* \"--CODEGEN--\":11888:11890   */\n      0x40\n        /* \"--CODEGEN--\":11873:11891   */\n      dup2\n      add\n        /* \"--CODEGEN--\":10625:10662   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"--CODEGEN--\":11625:11627   */\n      0x60\n        /* \"--CODEGEN--\":11610:11628   */\n      add\n      swap1\n        /* \"--CODEGEN--\":11596:11902   */\n      jump\t// out\n        /* \"--CODEGEN--\":11909:12242   */\n    tag_143:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":18471:18525   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"--CODEGEN--\":7930:7967   */\n      dup3\n      mstore\n        /* \"--CODEGEN--\":12228:12230   */\n      0x20\n        /* \"--CODEGEN--\":12213:12231   */\n      dup3\n      add\n        /* \"--CODEGEN--\":10625:10662   */\n      mstore\n        /* \"--CODEGEN--\":12064:12066   */\n      0x40\n        /* \"--CODEGEN--\":12049:12067   */\n      add\n      swap1\n        /* \"--CODEGEN--\":12035:12242   */\n      jump\t// out\n        /* \"--CODEGEN--\":12249:12709   */\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":18471:18525   */\n      swap4\n      dup5\n      and\n        /* \"--CODEGEN--\":7930:7967   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":12604:12606   */\n      0x20\n        /* \"--CODEGEN--\":12589:12607   */\n      dup2\n      add\n        /* \"--CODEGEN--\":10625:10662   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"--CODEGEN--\":18471:18525   */\n      swap1\n      swap2\n      and\n        /* \"--CODEGEN--\":12695:12697   */\n      0x40\n        /* \"--CODEGEN--\":12680:12698   */\n      dup3\n      add\n        /* \"--CODEGEN--\":7789:7847   */\n      mstore\n        /* \"--CODEGEN--\":12440:12442   */\n      0x60\n        /* \"--CODEGEN--\":12425:12443   */\n      add\n      swap1\n        /* \"--CODEGEN--\":12411:12709   */\n      jump\t// out\n        /* \"--CODEGEN--\":12716:13268   */\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":18471:18525   */\n      swap5\n      dup6\n      and\n        /* \"--CODEGEN--\":7930:7967   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":13090:13092   */\n      0x20\n        /* \"--CODEGEN--\":13075:13093   */\n      dup2\n      add\n        /* \"--CODEGEN--\":10625:10662   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"--CODEGEN--\":18471:18525   */\n      swap3\n      and\n        /* \"--CODEGEN--\":13173:13175   */\n      0x40\n        /* \"--CODEGEN--\":13158:13176   */\n      dup3\n      add\n        /* \"--CODEGEN--\":7930:7967   */\n      mstore\n        /* \"--CODEGEN--\":18390:18396   */\n      0xffff\n        /* \"--CODEGEN--\":18379:18397   */\n      swap1\n      swap2\n      and\n        /* \"--CODEGEN--\":13254:13256   */\n      0x60\n        /* \"--CODEGEN--\":13239:13257   */\n      dup3\n      add\n        /* \"--CODEGEN--\":10506:10542   */\n      mstore\n        /* \"--CODEGEN--\":12925:12928   */\n      0x80\n        /* \"--CODEGEN--\":12910:12929   */\n      add\n      swap1\n        /* \"--CODEGEN--\":12896:13268   */\n      jump\t// out\n        /* \"--CODEGEN--\":13275:13831   */\n    tag_185:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":18471:18525   */\n      swap5\n      dup6\n      and\n        /* \"--CODEGEN--\":7930:7967   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":13651:13653   */\n      0x20\n        /* \"--CODEGEN--\":13636:13654   */\n      dup2\n      add\n        /* \"--CODEGEN--\":10625:10662   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"--CODEGEN--\":13734:13736   */\n      0x40\n        /* \"--CODEGEN--\":13719:13737   */\n      dup4\n      add\n        /* \"--CODEGEN--\":10625:10662   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"--CODEGEN--\":18471:18525   */\n      swap1\n      swap2\n      and\n        /* \"--CODEGEN--\":13817:13819   */\n      0x60\n        /* \"--CODEGEN--\":13802:13820   */\n      dup3\n      add\n        /* \"--CODEGEN--\":7930:7967   */\n      mstore\n        /* \"--CODEGEN--\":13486:13489   */\n      0x80\n        /* \"--CODEGEN--\":13471:13490   */\n      add\n      swap1\n        /* \"--CODEGEN--\":13457:13831   */\n      jump\t// out\n        /* \"--CODEGEN--\":13838:14518   */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":18471:18525   */\n      swap6\n      dup7\n      and\n        /* \"--CODEGEN--\":7930:7967   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":14248:14250   */\n      0x20\n        /* \"--CODEGEN--\":14233:14251   */\n      dup2\n      add\n        /* \"--CODEGEN--\":10625:10662   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"--CODEGEN--\":14331:14333   */\n      0x40\n        /* \"--CODEGEN--\":14316:14334   */\n      dup5\n      add\n        /* \"--CODEGEN--\":10625:10662   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"--CODEGEN--\":18390:18396   */\n      0xffff\n        /* \"--CODEGEN--\":18379:18397   */\n      and\n        /* \"--CODEGEN--\":14412:14414   */\n      0x60\n        /* \"--CODEGEN--\":14397:14415   */\n      dup4\n      add\n        /* \"--CODEGEN--\":10506:10542   */\n      mstore\n        /* \"--CODEGEN--\":18471:18525   */\n      swap1\n      swap2\n      and\n        /* \"--CODEGEN--\":14503:14506   */\n      0x80\n        /* \"--CODEGEN--\":14488:14507   */\n      dup3\n      add\n        /* \"--CODEGEN--\":7789:7847   */\n      mstore\n        /* \"--CODEGEN--\":14083:14086   */\n      0xa0\n        /* \"--CODEGEN--\":14068:14087   */\n      add\n      swap1\n        /* \"--CODEGEN--\":14054:14518   */\n      jump\t// out\n        /* \"--CODEGEN--\":14525:14941   */\n    tag_24:\n        /* \"--CODEGEN--\":14725:14727   */\n      0x20\n        /* \"--CODEGEN--\":14739:14786   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":8567:8569   */\n      0x14\n        /* \"--CODEGEN--\":14710:14728   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":17940:17959   */\n      mstore\n      shl(0x62, 0x11985b1b189858dac81b9bdd08185b1b1bddd959)\n        /* \"--CODEGEN--\":17980:17994   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":8583:8626   */\n      mstore\n        /* \"--CODEGEN--\":8645:8657   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":14696:14941   */\n      jump\t// out\n        /* \"--CODEGEN--\":14948:15364   */\n    tag_162:\n        /* \"--CODEGEN--\":15148:15150   */\n      0x20\n        /* \"--CODEGEN--\":15162:15209   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":8896:8898   */\n      0x26\n        /* \"--CODEGEN--\":15133:15151   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":17940:17959   */\n      mstore\n        /* \"--CODEGEN--\":8932:8966   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"--CODEGEN--\":17980:17994   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":8912:8967   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"--CODEGEN--\":8987:8999   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":8980:9010   */\n      mstore\n        /* \"--CODEGEN--\":9029:9041   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":15119:15364   */\n      jump\t// out\n        /* \"--CODEGEN--\":15371:15787   */\n    tag_20:\n        /* \"--CODEGEN--\":15571:15573   */\n      0x20\n        /* \"--CODEGEN--\":15585:15632   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":9280:9282   */\n      0x13\n        /* \"--CODEGEN--\":15556:15574   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":17940:17959   */\n      mstore\n      shl(0x6a, 0x149958d95a5d99481b9bdd08185b1b1bddd959)\n        /* \"--CODEGEN--\":17980:17994   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":9296:9338   */\n      mstore\n        /* \"--CODEGEN--\":9357:9369   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":15542:15787   */\n      jump\t// out\n        /* \"--CODEGEN--\":15794:16210   */\n    tag_123:\n        /* \"--CODEGEN--\":15994:15996   */\n      0x20\n        /* \"--CODEGEN--\":16008:16055   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":15979:15997   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":17940:17959   */\n      mstore\n        /* \"--CODEGEN--\":9644:9678   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"--CODEGEN--\":17980:17994   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":9624:9679   */\n      mstore\n        /* \"--CODEGEN--\":9698:9710   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":15965:16210   */\n      jump\t// out\n        /* \"--CODEGEN--\":16217:16633   */\n    tag_202:\n        /* \"--CODEGEN--\":16417:16419   */\n      0x20\n        /* \"--CODEGEN--\":16431:16478   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":9949:9951   */\n      0x13\n        /* \"--CODEGEN--\":16402:16420   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":17940:17959   */\n      mstore\n      shl(0x6a, 0x11551217d514905394d1915497d19052531151)\n        /* \"--CODEGEN--\":17980:17994   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":9965:10007   */\n      mstore\n        /* \"--CODEGEN--\":10026:10038   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":16388:16633   */\n      jump\t// out\n        /* \"--CODEGEN--\":16640:17056   */\n    tag_180:\n        /* \"--CODEGEN--\":16840:16842   */\n      0x20\n        /* \"--CODEGEN--\":16854:16901   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":10277:10279   */\n      0x27\n        /* \"--CODEGEN--\":16825:16843   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":17940:17959   */\n      mstore\n        /* \"--CODEGEN--\":10313:10347   */\n      0x6d73672e76616c7565206973206c657373207468616e2072657061796d656e74\n        /* \"--CODEGEN--\":17980:17994   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":10293:10348   */\n      mstore\n      shl(0xca, 0x08185b5bdd5b9d)\n        /* \"--CODEGEN--\":10368:10380   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":10361:10392   */\n      mstore\n        /* \"--CODEGEN--\":10411:10423   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":16811:17056   */\n      jump\t// out\n        /* \"--CODEGEN--\":17063:17285   */\n    tag_101:\n        /* \"--CODEGEN--\":10625:10662   */\n      swap1\n      dup2\n      mstore\n        /* \"--CODEGEN--\":17190:17192   */\n      0x20\n        /* \"--CODEGEN--\":17175:17193   */\n      add\n      swap1\n        /* \"--CODEGEN--\":17161:17285   */\n      jump\t// out\n        /* \"--CODEGEN--\":17292:17548   */\n    tag_224:\n        /* \"--CODEGEN--\":17354:17356   */\n      0x40\n        /* \"--CODEGEN--\":17348:17357   */\n      mload\n        /* \"--CODEGEN--\":17380:17397   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":17455:17473   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":17440:17474   */\n      dup2\n      gt\n        /* \"--CODEGEN--\":17476:17498   */\n      dup3\n      dup3\n      lt\n        /* \"--CODEGEN--\":17437:17499   */\n      or\n        /* \"--CODEGEN--\":17434:17436   */\n      iszero\n      tag_301\n      jumpi\n        /* \"--CODEGEN--\":17512:17513   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":17502:17514   */\n      revert\n        /* \"--CODEGEN--\":17434:17436   */\n    tag_301:\n        /* \"--CODEGEN--\":17354:17356   */\n      0x40\n        /* \"--CODEGEN--\":17521:17543   */\n      mstore\n        /* \"--CODEGEN--\":17332:17548   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":19457:19574   */\n    tag_219:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":18471:18525   */\n      dup2\n      and\n        /* \"--CODEGEN--\":19516:19551   */\n      dup2\n      eq\n        /* \"--CODEGEN--\":19506:19508   */\n      tag_303\n      jumpi\n        /* \"--CODEGEN--\":19565:19566   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":19555:19567   */\n      revert\n        /* \"--CODEGEN--\":19506:19508   */\n    tag_303:\n        /* \"--CODEGEN--\":19500:19574   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122017bf405cd33c70e646c2d5c50b78221f73ea1ab0fbab9e20a77acbd659dd9a7b64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60e06040523480156200001157600080fd5b50604051620018f5380380620018f5833981016040819052620000349162000259565b600062000040620001cf565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160601b0319606083811b821660805282901b1660a0526040516335ea6a7560e01b815281906001600160a01b038216906335ea6a7590620000d4908690600401620003d6565b6101806040518083038186803b158015620000ee57600080fd5b505afa15801562000103573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001299190620002c0565b60e0015160601b6001600160601b03191660c05260405163095ea7b360e01b81526001600160a01b0384169063095ea7b3906200016f90859060001990600401620003ea565b602060405180830381600087803b1580156200018a57600080fd5b505af11580156200019f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001c5919062000297565b5050505062000443565b3390565b80516001600160a01b0381168114620001eb57600080fd5b92915050565b60006020828403121562000203578081fd5b6200020f602062000403565b9151825250919050565b80516001600160801b0381168114620001eb57600080fd5b805164ffffffffff81168114620001eb57600080fd5b805160ff81168114620001eb57600080fd5b600080604083850312156200026c578182fd5b825162000279816200042a565b60208401519092506200028c816200042a565b809150509250929050565b600060208284031215620002a9578081fd5b81518015158114620002b9578182fd5b9392505050565b6000610180808385031215620002d4578182fd5b620002df8162000403565b9050620002ed8484620001f1565b8152620002fe846020850162000219565b602082015262000312846040850162000219565b604082015262000326846060850162000219565b60608201526200033a846080850162000219565b60808201526200034e8460a0850162000219565b60a0820152620003628460c0850162000231565b60c0820152620003768460e08501620001d3565b60e08201526101006200038c85828601620001d3565b90820152610120620003a185858301620001d3565b90820152610140620003b685858301620001d3565b90820152610160620003cb8585830162000247565b908201529392505050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6040518181016001600160401b03811182821017156200042257600080fd5b604052919050565b6001600160a01b03811681146200044057600080fd5b50565b60805160601c60a05160601c60c05160601c611428620004cd6000398061027a528061032652806105055250806103c952806105af528061064552806106fd5280610a035280610ba552508060bb52806103f6528061048c528061052952806105df528061072a52806107a152806108df5280610a325280610b1f5280610bd552506114286000f3fe6080604052600436106100ab5760003560e01c80638da5cb5b116100645780638da5cb5b146101c3578063a3d5b255146101d8578063affa8817146101f8578063eed88b8d1461020d578063f2fde38b1461022d578063f538ba511461024d57610103565b806336118b521461011b5780633a21afac1461013b57806358c22be7146101665780635f36a74214610179578063715018a61461018e5780637d5155fd146101a357610103565b3661010357336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101015760405162461bcd60e51b81526004016100f8906112d4565b60405180910390fd5b005b60405162461bcd60e51b81526004016100f890611260565b34801561012757600080fd5b5061010161013636600461108b565b610260565b34801561014757600080fd5b50610150610503565b60405161015d9190611160565b60405180910390f35b610101610174366004610ef8565b610527565b34801561018557600080fd5b50610150610643565b34801561019a57600080fd5b50610101610667565b3480156101af57600080fd5b506101016101be3660046110f2565b6106e6565b3480156101cf57600080fd5b50610150610819565b3480156101e457600080fd5b506101016101f3366004610eb8565b610828565b34801561020457600080fd5b506101506108dd565b34801561021957600080fd5b50610101610228366004610f2d565b610901565b34801561023957600080fd5b50610101610248366004610e95565b610944565b61010161025b3660046110ba565b6109fa565b6040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a08231906102af903390600401611160565b60206040518083038186803b1580156102c757600080fd5b505afa1580156102db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ff9190611073565b90508260001981141561030f5750805b6040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd9061035f90339030908690600401611174565b602060405180830381600087803b15801561037957600080fd5b505af115801561038d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b19190610f58565b50604051631a4ca37b60e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906369328dec90610422907f000000000000000000000000000000000000000000000000000000000000000090859030906004016111b1565b602060405180830381600087803b15801561043c57600080fd5b505af1158015610450573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104749190611073565b50604051632e1a7d4d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632e1a7d4d906104c19084906004016113aa565b600060405180830381600087803b1580156104db57600080fd5b505af11580156104ef573d6000803e3d6000fd5b505050506104fd8382610c66565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561058257600080fd5b505af1158015610596573d6000803e3d6000fd5b505060405163e8eda9df60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016935063e8eda9df925061060d91507f0000000000000000000000000000000000000000000000000000000000000000903490879087906004016111d4565b600060405180830381600087803b15801561062757600080fd5b505af115801561063b573d6000803e3d6000fd5b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b61066f610cf3565b6000546001600160a01b0390811691161461069c5760405162461bcd60e51b81526004016100f890611301565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60405163a415bcad60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a415bcad9061075a907f000000000000000000000000000000000000000000000000000000000000000090879087908790339060040161122c565b600060405180830381600087803b15801561077457600080fd5b505af1158015610788573d6000803e3d6000fd5b5050604051632e1a7d4d60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250632e1a7d4d91506107d89086906004016113aa565b600060405180830381600087803b1580156107f257600080fd5b505af1158015610806573d6000803e3d6000fd5b505050506108143384610c66565b505050565b6000546001600160a01b031690565b610830610cf3565b6000546001600160a01b0390811691161461085d5760405162461bcd60e51b81526004016100f890611301565b60405163a9059cbb60e01b81526001600160a01b0384169063a9059cbb9061088b9085908590600401611198565b602060405180830381600087803b1580156108a557600080fd5b505af11580156108b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fd9190610f58565b7f000000000000000000000000000000000000000000000000000000000000000090565b610909610cf3565b6000546001600160a01b039081169116146109365760405162461bcd60e51b81526004016100f890611301565b6109408282610c66565b5050565b61094c610cf3565b6000546001600160a01b039081169116146109795760405162461bcd60e51b81526004016100f890611301565b6001600160a01b03811661099f5760405162461bcd60e51b81526004016100f89061128e565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600080610ac3837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166335ea6a757f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b8152600401610a6d9190611160565b6101806040518083038186803b158015610a8657600080fd5b505afa158015610a9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abe9190610f78565b610cf7565b909250905060006001856002811115610ad857fe5b6002811115610ae357fe5b14610aee5781610af0565b825b905080861015610afd5750845b80341015610b1d5760405162461bcd60e51b81526004016100f890611363565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015610b7857600080fd5b505af1158015610b8c573d6000803e3d6000fd5b505060405163573ade8160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016935063573ade819250610c0391507f00000000000000000000000000000000000000000000000000000000000000009034908a908a90600401611201565b602060405180830381600087803b158015610c1d57600080fd5b505af1158015610c31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c559190611073565b508034111561063b5761063b338234035b604080516000808252602082019092526001600160a01b038416908390604051610c909190611127565b60006040518083038185875af1925050503d8060008114610ccd576040519150601f19603f3d011682016040523d82523d6000602084013e610cd2565b606091505b50509050806108145760405162461bcd60e51b81526004016100f890611336565b3390565b6000808261010001516001600160a01b03166370a08231856040518263ffffffff1660e01b8152600401610d2b9190611160565b60206040518083038186803b158015610d4357600080fd5b505afa158015610d57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7b9190611073565b8361012001516001600160a01b03166370a08231866040518263ffffffff1660e01b8152600401610dac9190611160565b60206040518083038186803b158015610dc457600080fd5b505afa158015610dd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfc9190611073565b915091509250929050565b8051610e12816113da565b92915050565b600060208284031215610e29578081fd5b610e3360206113b3565b9151825250919050565b80516fffffffffffffffffffffffffffffffff81168114610e1257600080fd5b803561ffff81168114610e1257600080fd5b805164ffffffffff81168114610e1257600080fd5b805160ff81168114610e1257600080fd5b600060208284031215610ea6578081fd5b8135610eb1816113da565b9392505050565b600080600060608486031215610ecc578182fd5b8335610ed7816113da565b92506020840135610ee7816113da565b929592945050506040919091013590565b60008060408385031215610f0a578182fd5b8235610f15816113da565b9150610f248460208501610e5d565b90509250929050565b60008060408385031215610f3f578182fd5b8235610f4a816113da565b946020939093013593505050565b600060208284031215610f69578081fd5b81518015158114610eb1578182fd5b6000610180808385031215610f8b578182fd5b610f94816113b3565b9050610fa08484610e18565b8152610faf8460208501610e3d565b6020820152610fc18460408501610e3d565b6040820152610fd38460608501610e3d565b6060820152610fe58460808501610e3d565b6080820152610ff78460a08501610e3d565b60a08201526110098460c08501610e6f565b60c082015261101b8460e08501610e07565b60e082015261010061102f85828601610e07565b9082015261012061104285858301610e07565b9082015261014061105585858301610e07565b9082015261016061106885858301610e84565b908201529392505050565b600060208284031215611084578081fd5b5051919050565b6000806040838503121561109d578182fd5b8235915060208301356110af816113da565b809150509250929050565b6000806000606084860312156110ce578283fd5b833592506020840135915060408401356110e7816113da565b809150509250925092565b600080600060608486031215611106578283fd5b833592506020840135915061111e8560408601610e5d565b90509250925092565b60008251815b81811015611147576020818601810151858301520161112d565b818111156111555782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0393841681526020810192909252909116604082015260600190565b6001600160a01b03948516815260208101939093529216604082015261ffff909116606082015260800190565b6001600160a01b03948516815260208101939093526040830191909152909116606082015260800190565b6001600160a01b0395861681526020810194909452604084019290925261ffff166060830152909116608082015260a00190565b60208082526014908201527311985b1b189858dac81b9bdd08185b1b1bddd95960621b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b602080825260139082015272149958d95a5d99481b9bdd08185b1b1bddd959606a1b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526013908201527211551217d514905394d1915497d19052531151606a1b604082015260600190565b60208082526027908201527f6d73672e76616c7565206973206c657373207468616e2072657061796d656e7460408201526608185b5bdd5b9d60ca1b606082015260800190565b90815260200190565b60405181810167ffffffffffffffff811182821017156113d257600080fd5b604052919050565b6001600160a01b03811681146113ef57600080fd5b5056fea264697066735822122017bf405cd33c70e646c2d5c50b78221f73ea1ab0fbab9e20a77acbd659dd9a7b64736f6c634300060c0033",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x18F5 CODESIZE SUB DUP1 PUSH3 0x18F5 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x259 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x40 PUSH3 0x1CF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP4 DUP2 SHL DUP3 AND PUSH1 0x80 MSTORE DUP3 SWAP1 SHL AND PUSH1 0xA0 MSTORE PUSH1 0x40 MLOAD PUSH4 0x35EA6A75 PUSH1 0xE0 SHL DUP2 MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x35EA6A75 SWAP1 PUSH3 0xD4 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH3 0x3D6 JUMP JUMPDEST PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x103 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x129 SWAP2 SWAP1 PUSH3 0x2C0 JUMP JUMPDEST PUSH1 0xE0 ADD MLOAD PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0xC0 MSTORE PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH3 0x16F SWAP1 DUP6 SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x4 ADD PUSH3 0x3EA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x19F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1C5 SWAP2 SWAP1 PUSH3 0x297 JUMP JUMPDEST POP POP POP POP PUSH3 0x443 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x203 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH3 0x20F PUSH1 0x20 PUSH3 0x403 JUMP JUMPDEST SWAP2 MLOAD DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH3 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x26C JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x279 DUP2 PUSH3 0x42A JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH3 0x28C DUP2 PUSH3 0x42A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2A9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x2B9 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2D4 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH3 0x2DF DUP2 PUSH3 0x403 JUMP JUMPDEST SWAP1 POP PUSH3 0x2ED DUP5 DUP5 PUSH3 0x1F1 JUMP JUMPDEST DUP2 MSTORE PUSH3 0x2FE DUP5 PUSH1 0x20 DUP6 ADD PUSH3 0x219 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x312 DUP5 PUSH1 0x40 DUP6 ADD PUSH3 0x219 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x326 DUP5 PUSH1 0x60 DUP6 ADD PUSH3 0x219 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH3 0x33A DUP5 PUSH1 0x80 DUP6 ADD PUSH3 0x219 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH3 0x34E DUP5 PUSH1 0xA0 DUP6 ADD PUSH3 0x219 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH3 0x362 DUP5 PUSH1 0xC0 DUP6 ADD PUSH3 0x231 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH3 0x376 DUP5 PUSH1 0xE0 DUP6 ADD PUSH3 0x1D3 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH3 0x38C DUP6 DUP3 DUP7 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x120 PUSH3 0x3A1 DUP6 DUP6 DUP4 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x140 PUSH3 0x3B6 DUP6 DUP6 DUP4 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x160 PUSH3 0x3CB DUP6 DUP6 DUP4 ADD PUSH3 0x247 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH3 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH2 0x1428 PUSH3 0x4CD PUSH1 0x0 CODECOPY DUP1 PUSH2 0x27A MSTORE DUP1 PUSH2 0x326 MSTORE DUP1 PUSH2 0x505 MSTORE POP DUP1 PUSH2 0x3C9 MSTORE DUP1 PUSH2 0x5AF MSTORE DUP1 PUSH2 0x645 MSTORE DUP1 PUSH2 0x6FD MSTORE DUP1 PUSH2 0xA03 MSTORE DUP1 PUSH2 0xBA5 MSTORE POP DUP1 PUSH1 0xBB MSTORE DUP1 PUSH2 0x3F6 MSTORE DUP1 PUSH2 0x48C MSTORE DUP1 PUSH2 0x529 MSTORE DUP1 PUSH2 0x5DF MSTORE DUP1 PUSH2 0x72A MSTORE DUP1 PUSH2 0x7A1 MSTORE DUP1 PUSH2 0x8DF MSTORE DUP1 PUSH2 0xA32 MSTORE DUP1 PUSH2 0xB1F MSTORE DUP1 PUSH2 0xBD5 MSTORE POP PUSH2 0x1428 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0xA3D5B255 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xAFFA8817 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xEED88B8D EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xF538BA51 EQ PUSH2 0x24D JUMPI PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH4 0x36118B52 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x3A21AFAC EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x58C22BE7 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x5F36A742 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x7D5155FD EQ PUSH2 0x1A3 JUMPI PUSH2 0x103 JUMP JUMPDEST CALLDATASIZE PUSH2 0x103 JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x101 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0x12D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0x1260 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 PUSH2 0x136 CALLDATASIZE PUSH1 0x4 PUSH2 0x108B JUMP JUMPDEST PUSH2 0x260 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x503 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1160 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF8 JUMP JUMPDEST PUSH2 0x527 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x643 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 PUSH2 0x667 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 PUSH2 0x1BE CALLDATASIZE PUSH1 0x4 PUSH2 0x10F2 JUMP JUMPDEST PUSH2 0x6E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x819 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0xEB8 JUMP JUMPDEST PUSH2 0x828 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x8DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x901 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0xE95 JUMP JUMPDEST PUSH2 0x944 JUMP JUMPDEST PUSH2 0x101 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x10BA JUMP JUMPDEST PUSH2 0x9FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2AF SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x1160 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x1073 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x0 NOT DUP2 EQ ISZERO PUSH2 0x30F JUMPI POP DUP1 JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x35F SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0xF58 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x1A4CA37B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x69328DEC SWAP1 PUSH2 0x422 SWAP1 PUSH32 0x0 SWAP1 DUP6 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x11B1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x43C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x450 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x474 SWAP2 SWAP1 PUSH2 0x1073 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH2 0x4C1 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x13AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x4FD DUP4 DUP3 PUSH2 0xC66 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x596 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xE8EDA9DF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP4 POP PUSH4 0xE8EDA9DF SWAP3 POP PUSH2 0x60D SWAP2 POP PUSH32 0x0 SWAP1 CALLVALUE SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x11D4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x63B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x66F PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x69C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA415BCAD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xA415BCAD SWAP1 PUSH2 0x75A SWAP1 PUSH32 0x0 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x122C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x788 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP3 POP PUSH4 0x2E1A7D4D SWAP2 POP PUSH2 0x7D8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x13AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x806 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x814 CALLER DUP5 PUSH2 0xC66 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x830 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x85D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x88B SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1198 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4FD SWAP2 SWAP1 PUSH2 0xF58 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x909 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x936 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0x1301 JUMP JUMPDEST PUSH2 0x940 DUP3 DUP3 PUSH2 0xC66 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x94C PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x979 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x99F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAC3 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x35EA6A75 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6D SWAP2 SWAP1 PUSH2 0x1160 JUMP JUMPDEST PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA9A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xABE SWAP2 SWAP1 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0xCF7 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xAD8 JUMPI INVALID JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xAE3 JUMPI INVALID JUMPDEST EQ PUSH2 0xAEE JUMPI DUP2 PUSH2 0xAF0 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP DUP1 DUP7 LT ISZERO PUSH2 0xAFD JUMPI POP DUP5 JUMPDEST DUP1 CALLVALUE LT ISZERO PUSH2 0xB1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0x1363 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x573ADE81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP4 POP PUSH4 0x573ADE81 SWAP3 POP PUSH2 0xC03 SWAP2 POP PUSH32 0x0 SWAP1 CALLVALUE SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x1201 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC31 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC55 SWAP2 SWAP1 PUSH2 0x1073 JUMP JUMPDEST POP DUP1 CALLVALUE GT ISZERO PUSH2 0x63B JUMPI PUSH2 0x63B CALLER DUP3 CALLVALUE SUB JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 SWAP1 PUSH1 0x40 MLOAD PUSH2 0xC90 SWAP2 SWAP1 PUSH2 0x1127 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xCCD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCD2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0x1336 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH2 0x100 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2B SWAP2 SWAP1 PUSH2 0x1160 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD7B SWAP2 SWAP1 PUSH2 0x1073 JUMP JUMPDEST DUP4 PUSH2 0x120 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAC SWAP2 SWAP1 PUSH2 0x1160 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDD8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDFC SWAP2 SWAP1 PUSH2 0x1073 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0xE12 DUP2 PUSH2 0x13DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE29 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xE33 PUSH1 0x20 PUSH2 0x13B3 JUMP JUMPDEST SWAP2 MLOAD DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xE12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0xE12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xE12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xE12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xEB1 DUP2 PUSH2 0x13DA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xECC JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xED7 DUP2 PUSH2 0x13DA JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xEE7 DUP2 PUSH2 0x13DA JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF0A JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xF15 DUP2 PUSH2 0x13DA JUMP JUMPDEST SWAP2 POP PUSH2 0xF24 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0xE5D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF3F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xF4A DUP2 PUSH2 0x13DA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF69 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEB1 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF8B JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xF94 DUP2 PUSH2 0x13B3 JUMP JUMPDEST SWAP1 POP PUSH2 0xFA0 DUP5 DUP5 PUSH2 0xE18 JUMP JUMPDEST DUP2 MSTORE PUSH2 0xFAF DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xFC1 DUP5 PUSH1 0x40 DUP6 ADD PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xFD3 DUP5 PUSH1 0x60 DUP6 ADD PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0xFE5 DUP5 PUSH1 0x80 DUP6 ADD PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0xFF7 DUP5 PUSH1 0xA0 DUP6 ADD PUSH2 0xE3D JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x1009 DUP5 PUSH1 0xC0 DUP6 ADD PUSH2 0xE6F JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x101B DUP5 PUSH1 0xE0 DUP6 ADD PUSH2 0xE07 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH2 0x102F DUP6 DUP3 DUP7 ADD PUSH2 0xE07 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x120 PUSH2 0x1042 DUP6 DUP6 DUP4 ADD PUSH2 0xE07 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x140 PUSH2 0x1055 DUP6 DUP6 DUP4 ADD PUSH2 0xE07 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x160 PUSH2 0x1068 DUP6 DUP6 DUP4 ADD PUSH2 0xE84 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1084 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x109D JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x10AF DUP2 PUSH2 0x13DA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10CE JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x10E7 DUP2 PUSH2 0x13DA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1106 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x111E DUP6 PUSH1 0x40 DUP7 ADD PUSH2 0xE5D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1147 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x112D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1155 JUMPI DUP3 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0xFFFF AND PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x11985B1B189858DAC81B9BDD08185B1B1BDDD959 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x149958D95A5D99481B9BDD08185B1B1BDDD959 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x11551217D514905394D1915497D19052531151 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x6D73672E76616C7565206973206C657373207468616E2072657061796D656E74 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x8185B5BDD5B9D PUSH1 0xCA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x13D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0xBF BLOCKHASH 0x5C 0xD3 EXTCODECOPY PUSH17 0xE646C2D5C50B78221F73EA1AB0FBAB9E20 0xA7 PUSH27 0xCBD659DD9A7B64736F6C634300060C003300000000000000000000 ",
							"sourceMap": "793:5865:8:-:0;;;1315:267;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;844:17:2;864:12;:10;:12::i;:::-;882:6;:18;;-1:-1:-1;;;;;;882:18:2;-1:-1:-1;;;;;882:18:2;;;;;;;911:43;;882:18;;-1:-1:-1;882:18:2;911:43;;882:6;;911:43;-1:-1:-1;;;;;;;1420:18:8;;;;;;;;1444:19;;;;;;1485:33;;-1:-1:-1;;;1485:33:8;;1409:4;;-1:-1:-1;;;;;1444:19:8;;;1485:27;;:33;;1433:4;;1485:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;1469:64;;-1:-1:-1;;;;;;1469:64:8;;;1539:38;;-1:-1:-1;;;1539:38:8;;-1:-1:-1;;;;;1539:19:8;;;;;:38;;1559:4;;-1:-1:-1;;1573:2:8;1539:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1315:267;;;793:5865;;587:98:0;670:10;587:98;:::o;5:134:-1:-;83:13;;-1:-1;;;;;6024:54;;6413:35;;6403:2;;6462:1;;6452:12;6403:2;68:71;;;;:::o;328:361::-;;469:4;457:9;452:3;448:19;444:30;441:2;;;-1:-1;;477:12;441:2;505:20;469:4;505:20;:::i;:::-;3242:13;;582:86;;-1:-1;496:29;435:254;-1:-1;435:254::o;3023:134::-;3101:13;;-1:-1;;;;;5904:46;;6655:35;;6645:2;;6704:1;;6694:12;3305:132;3382:13;;6241:12;6230:24;;6902:34;;6892:2;;6950:1;;6940:12;3444:130;3520:13;;6337:4;6326:16;;7023:33;;7013:2;;7070:1;;7060:12;3581:399;;;3713:2;3701:9;3692:7;3688:23;3684:32;3681:2;;;-1:-1;;3719:12;3681:2;89:6;83:13;101:33;128:5;101:33;:::i;:::-;3882:2;3932:22;;83:13;3771:74;;-1:-1;101:33;83:13;101:33;:::i;:::-;3890:74;;;;3675:305;;;;;:::o;3987:257::-;;4099:2;4087:9;4078:7;4074:23;4070:32;4067:2;;;-1:-1;;4105:12;4067:2;227:6;221:13;6559:5;5816:13;5809:21;6537:5;6534:32;6524:2;;-1:-1;;6570:12;6524:2;4157:71;4061:183;-1:-1;;;4061:183::o;4251:322::-;;4395:3;;4383:9;4374:7;4370:23;4366:33;4363:2;;;-1:-1;;4402:12;4363:2;898:22;4395:3;898:22;:::i;:::-;889:31;;1011:101;1108:3;1084:22;1011:101;:::i;:::-;993:16;986:127;1217:60;1273:3;1184:2;1253:9;1249:22;1217:60;:::i;:::-;1184:2;1203:5;1199:16;1192:86;1387:60;1443:3;1354:2;1423:9;1419:22;1387:60;:::i;:::-;1354:2;1373:5;1369:16;1362:86;1558:60;1614:3;1525:2;1594:9;1590:22;1558:60;:::i;:::-;1525:2;1544:5;1540:16;1533:86;1735:60;1791:3;1701;1771:9;1767:22;1735:60;:::i;:::-;1701:3;1721:5;1717:16;1710:86;1910:60;1966:3;1876;1946:9;1942:22;1910:60;:::i;:::-;1876:3;1896:5;1892:16;1885:86;2081:59;2136:3;2047;2116:9;2112:22;2081:59;:::i;:::-;2047:3;2067:5;2063:16;2056:85;2245:60;2301:3;2211;2281:9;2277:22;2245:60;:::i;:::-;2211:3;2231:5;2227:16;2220:86;2385:3;2421:60;2477:3;2385;2457:9;2453:22;2421:60;:::i;:::-;2401:18;;;2394:88;2563:3;2599:60;2655:3;2631:22;;;2599:60;:::i;:::-;2579:18;;;2572:88;2744:3;2780:60;2836:3;2812:22;;;2780:60;:::i;:::-;2760:18;;;2753:88;2900:3;2936:58;2990:3;2966:22;;;2936:58;:::i;:::-;2916:18;;;2909:86;2920:5;4357:216;-1:-1;;;4357:216::o;4820:222::-;-1:-1;;;;;6024:54;;;;4651:37;;4947:2;4932:18;;4918:124::o;5049:333::-;-1:-1;;;;;6024:54;;;;4651:37;;5368:2;5353:18;;4771:37;5204:2;5189:18;;5175:207::o;5389:256::-;5451:2;5445:9;5477:17;;;-1:-1;;;;;5537:34;;5573:22;;;5534:62;5531:2;;;5609:1;;5599:12;5531:2;5451;5618:22;5429:216;;-1:-1;5429:216::o;6354:117::-;-1:-1;;;;;6024:54;;6413:35;;6403:2;;6462:1;;6452:12;6403:2;6397:74;:::o;:::-;793:5865:8;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {
								"983": [
									{
										"length": 32,
										"start": 187
									},
									{
										"length": 32,
										"start": 1014
									},
									{
										"length": 32,
										"start": 1164
									},
									{
										"length": 32,
										"start": 1321
									},
									{
										"length": 32,
										"start": 1503
									},
									{
										"length": 32,
										"start": 1834
									},
									{
										"length": 32,
										"start": 1953
									},
									{
										"length": 32,
										"start": 2271
									},
									{
										"length": 32,
										"start": 2610
									},
									{
										"length": 32,
										"start": 2847
									},
									{
										"length": 32,
										"start": 3029
									}
								],
								"985": [
									{
										"length": 32,
										"start": 969
									},
									{
										"length": 32,
										"start": 1455
									},
									{
										"length": 32,
										"start": 1605
									},
									{
										"length": 32,
										"start": 1789
									},
									{
										"length": 32,
										"start": 2563
									},
									{
										"length": 32,
										"start": 2981
									}
								],
								"987": [
									{
										"length": 32,
										"start": 634
									},
									{
										"length": 32,
										"start": 806
									},
									{
										"length": 32,
										"start": 1285
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0xA3D5B255 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xAFFA8817 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xEED88B8D EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xF538BA51 EQ PUSH2 0x24D JUMPI PUSH2 0x103 JUMP JUMPDEST DUP1 PUSH4 0x36118B52 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x3A21AFAC EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x58C22BE7 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x5F36A742 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x7D5155FD EQ PUSH2 0x1A3 JUMPI PUSH2 0x103 JUMP JUMPDEST CALLDATASIZE PUSH2 0x103 JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x101 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0x12D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0x1260 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 PUSH2 0x136 CALLDATASIZE PUSH1 0x4 PUSH2 0x108B JUMP JUMPDEST PUSH2 0x260 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x503 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1160 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF8 JUMP JUMPDEST PUSH2 0x527 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x643 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 PUSH2 0x667 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 PUSH2 0x1BE CALLDATASIZE PUSH1 0x4 PUSH2 0x10F2 JUMP JUMPDEST PUSH2 0x6E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x819 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0xEB8 JUMP JUMPDEST PUSH2 0x828 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x8DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x901 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0xE95 JUMP JUMPDEST PUSH2 0x944 JUMP JUMPDEST PUSH2 0x101 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x10BA JUMP JUMPDEST PUSH2 0x9FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2AF SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x1160 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x1073 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x0 NOT DUP2 EQ ISZERO PUSH2 0x30F JUMPI POP DUP1 JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x35F SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0xF58 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x1A4CA37B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x69328DEC SWAP1 PUSH2 0x422 SWAP1 PUSH32 0x0 SWAP1 DUP6 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x11B1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x43C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x450 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x474 SWAP2 SWAP1 PUSH2 0x1073 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH2 0x4C1 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x13AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x4FD DUP4 DUP3 PUSH2 0xC66 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x596 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xE8EDA9DF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP4 POP PUSH4 0xE8EDA9DF SWAP3 POP PUSH2 0x60D SWAP2 POP PUSH32 0x0 SWAP1 CALLVALUE SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x11D4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x63B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x66F PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x69C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA415BCAD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xA415BCAD SWAP1 PUSH2 0x75A SWAP1 PUSH32 0x0 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x122C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x788 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP3 POP PUSH4 0x2E1A7D4D SWAP2 POP PUSH2 0x7D8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x13AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x806 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x814 CALLER DUP5 PUSH2 0xC66 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x830 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x85D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x88B SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1198 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4FD SWAP2 SWAP1 PUSH2 0xF58 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x909 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x936 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0x1301 JUMP JUMPDEST PUSH2 0x940 DUP3 DUP3 PUSH2 0xC66 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x94C PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x979 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x99F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAC3 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x35EA6A75 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6D SWAP2 SWAP1 PUSH2 0x1160 JUMP JUMPDEST PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA9A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xABE SWAP2 SWAP1 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0xCF7 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xAD8 JUMPI INVALID JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xAE3 JUMPI INVALID JUMPDEST EQ PUSH2 0xAEE JUMPI DUP2 PUSH2 0xAF0 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP DUP1 DUP7 LT ISZERO PUSH2 0xAFD JUMPI POP DUP5 JUMPDEST DUP1 CALLVALUE LT ISZERO PUSH2 0xB1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0x1363 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x573ADE81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP4 POP PUSH4 0x573ADE81 SWAP3 POP PUSH2 0xC03 SWAP2 POP PUSH32 0x0 SWAP1 CALLVALUE SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x1201 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC31 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC55 SWAP2 SWAP1 PUSH2 0x1073 JUMP JUMPDEST POP DUP1 CALLVALUE GT ISZERO PUSH2 0x63B JUMPI PUSH2 0x63B CALLER DUP3 CALLVALUE SUB JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 SWAP1 PUSH1 0x40 MLOAD PUSH2 0xC90 SWAP2 SWAP1 PUSH2 0x1127 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xCCD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCD2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0x1336 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH2 0x100 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2B SWAP2 SWAP1 PUSH2 0x1160 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD7B SWAP2 SWAP1 PUSH2 0x1073 JUMP JUMPDEST DUP4 PUSH2 0x120 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAC SWAP2 SWAP1 PUSH2 0x1160 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDD8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDFC SWAP2 SWAP1 PUSH2 0x1073 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0xE12 DUP2 PUSH2 0x13DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE29 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xE33 PUSH1 0x20 PUSH2 0x13B3 JUMP JUMPDEST SWAP2 MLOAD DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xE12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0xE12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xE12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xE12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xEB1 DUP2 PUSH2 0x13DA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xECC JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xED7 DUP2 PUSH2 0x13DA JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xEE7 DUP2 PUSH2 0x13DA JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF0A JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xF15 DUP2 PUSH2 0x13DA JUMP JUMPDEST SWAP2 POP PUSH2 0xF24 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0xE5D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF3F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xF4A DUP2 PUSH2 0x13DA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF69 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEB1 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF8B JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xF94 DUP2 PUSH2 0x13B3 JUMP JUMPDEST SWAP1 POP PUSH2 0xFA0 DUP5 DUP5 PUSH2 0xE18 JUMP JUMPDEST DUP2 MSTORE PUSH2 0xFAF DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xFC1 DUP5 PUSH1 0x40 DUP6 ADD PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xFD3 DUP5 PUSH1 0x60 DUP6 ADD PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0xFE5 DUP5 PUSH1 0x80 DUP6 ADD PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0xFF7 DUP5 PUSH1 0xA0 DUP6 ADD PUSH2 0xE3D JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x1009 DUP5 PUSH1 0xC0 DUP6 ADD PUSH2 0xE6F JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x101B DUP5 PUSH1 0xE0 DUP6 ADD PUSH2 0xE07 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH2 0x102F DUP6 DUP3 DUP7 ADD PUSH2 0xE07 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x120 PUSH2 0x1042 DUP6 DUP6 DUP4 ADD PUSH2 0xE07 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x140 PUSH2 0x1055 DUP6 DUP6 DUP4 ADD PUSH2 0xE07 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x160 PUSH2 0x1068 DUP6 DUP6 DUP4 ADD PUSH2 0xE84 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1084 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x109D JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x10AF DUP2 PUSH2 0x13DA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10CE JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x10E7 DUP2 PUSH2 0x13DA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1106 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x111E DUP6 PUSH1 0x40 DUP7 ADD PUSH2 0xE5D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1147 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x112D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1155 JUMPI DUP3 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0xFFFF AND PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x11985B1B189858DAC81B9BDD08185B1B1BDDD959 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x149958D95A5D99481B9BDD08185B1B1BDDD959 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x11551217D514905394D1915497D19052531151 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x6D73672E76616C7565206973206C657373207468616E2072657061796D656E74 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x8185B5BDD5B9D PUSH1 0xCA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x13D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0xBF BLOCKHASH 0x5C 0xD3 EXTCODECOPY PUSH17 0xE646C2D5C50B78221F73EA1AB0FBAB9E20 0xA7 PUSH27 0xCBD659DD9A7B64736F6C634300060C003300000000000000000000 ",
							"sourceMap": "793:5865:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6483:10;-1:-1:-1;;;;;6505:4:8;6483:27;;6475:59;;;;-1:-1:-1;;;6475:59:8;;;;;;;:::i;:::-;;;;;;;;;793:5865;;6621:30;;-1:-1:-1;;;6621:30:8;;;;;;;:::i;2334:542::-;;;;;;;;;;-1:-1:-1;2334:542:8;;;;;:::i;:::-;;:::i;6051:91::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1931:200;;;;;;:::i;:::-;;:::i;6212:96::-;;;;;;;;;;;;;:::i;1610:135:2:-;;;;;;;;;;;;;:::i;4399:272:8:-;;;;;;;;;;-1:-1:-1;4399:272:8;;;;;:::i;:::-;;:::i;1027:71:2:-;;;;;;;;;;;;;:::i;5268:155:8:-;;;;;;;;;;-1:-1:-1;5268:155:8;;;;;:::i;:::-;;:::i;5898:89::-;;;;;;;;;;;;;:::i;5717:118::-;;;;;;;;;;-1:-1:-1;5717:118:8;;;;;:::i;:::-;;:::i;1884:226:2:-;;;;;;;;;;-1:-1:-1;1884:226:2;;;;;:::i;:::-;;:::i;3225:797:8:-;;;;;;:::i;:::-;;:::i;2334:542::-;2429:27;;-1:-1:-1;;;2429:27:8;;2407:19;;-1:-1:-1;;;;;2429:5:8;:15;;;;:27;;2445:10;;2429:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2407:49;-1:-1:-1;2489:6:8;-1:-1:-1;;2581:27:8;;2577:78;;;-1:-1:-1;2637:11:8;2577:78;2660:63;;-1:-1:-1;;;2660:63:8;;-1:-1:-1;;;;;2660:5:8;:18;;;;:63;;2679:10;;2699:4;;2706:16;;2660:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2729:61:8;;-1:-1:-1;;;2729:61:8;;-1:-1:-1;;;;;2729:4:8;:13;;;;:61;;2751:4;;2758:16;;2784:4;;2729:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2796:31:8;;-1:-1:-1;;;2796:31:8;;-1:-1:-1;;;;;2796:4:8;:13;;;;:31;;2810:16;;2796:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2833:38;2850:2;2854:16;2833;:38::i;:::-;2334:542;;;;:::o;6051:91::-;6131:5;6051:91;:::o;1931:200::-;2024:4;-1:-1:-1;;;;;2024:12:8;;2044:9;2024:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2062:64:8;;-1:-1:-1;;;2062:64:8;;-1:-1:-1;;;;;2062:4:8;:12;;-1:-1:-1;2062:12:8;;-1:-1:-1;2062:64:8;;-1:-1:-1;2083:4:8;;2090:9;;2101:10;;2113:12;;2062:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1931:200;;:::o;6212:96::-;6298:4;6212:96;:::o;1610:135:2:-;1223:12;:10;:12::i;:::-;1213:6;;-1:-1:-1;;;;;1213:6:2;;;:22;;;1205:67;;;;-1:-1:-1;;;1205:67:2;;;;;;;:::i;:::-;1712:1:::1;1696:6:::0;;1675:40:::1;::::0;-1:-1:-1;;;;;1696:6:2;;::::1;::::0;1675:40:::1;::::0;1712:1;;1675:40:::1;1738:1;1721:19:::0;;-1:-1:-1;;;;;;1721:19:2::1;::::0;;1610:135::o;4399:272:8:-;4520:77;;-1:-1:-1;;;4520:77:8;;-1:-1:-1;;;;;4520:4:8;:11;;;;:77;;4540:4;;4547:6;;4555:15;;4572:12;;4586:10;;4520:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4603:21:8;;-1:-1:-1;;;4603:21:8;;-1:-1:-1;;;;;4603:4:8;:13;;-1:-1:-1;4603:13:8;;-1:-1:-1;4603:21:8;;4617:6;;4603:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4630:36;4647:10;4659:6;4630:16;:36::i;:::-;4399:272;;;:::o;1027:71:2:-;1065:7;1087:6;-1:-1:-1;;;;;1087:6:2;1027:71;:::o;5268:155:8:-;1223:12:2;:10;:12::i;:::-;1213:6;;-1:-1:-1;;;;;1213:6:2;;;:22;;;1205:67;;;;-1:-1:-1;;;1205:67:2;;;;;;;:::i;:::-;5384:34:8::1;::::0;-1:-1:-1;;;5384:34:8;;-1:-1:-1;;;;;5384:22:8;::::1;::::0;::::1;::::0;:34:::1;::::0;5407:2;;5411:6;;5384:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5898:89::-:0;5977:4;5898:89;:::o;5717:118::-;1223:12:2;:10;:12::i;:::-;1213:6;;-1:-1:-1;;;;;1213:6:2;;;:22;;;1205:67;;;;-1:-1:-1;;;1205:67:2;;;;;;;:::i;:::-;5802:28:8::1;5819:2;5823:6;5802:16;:28::i;:::-;5717:118:::0;;:::o;1884:226:2:-;1223:12;:10;:12::i;:::-;1213:6;;-1:-1:-1;;;;;1213:6:2;;;:22;;;1205:67;;;;-1:-1:-1;;;1205:67:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;1968:22:2;::::1;1960:73;;;;-1:-1:-1::0;;;1960:73:2::1;;;;;;;:::i;:::-;2065:6;::::0;;2044:38:::1;::::0;-1:-1:-1;;;;;2044:38:2;;::::1;::::0;2065:6;::::1;::::0;2044:38:::1;::::0;::::1;2088:6;:17:::0;;-1:-1:-1;;;;;;2088:17:2::1;-1:-1:-1::0;;;;;2088:17:2;;;::::1;::::0;;;::::1;::::0;;1884:226::o;3225:797:8:-;3346:18;3366:20;3396:80;3429:10;3441:4;-1:-1:-1;;;;;3441:19:8;;3469:4;3441:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3396:32;:80::i;:::-;3345:131;;-1:-1:-1;3345:131:8;-1:-1:-1;3483:21:8;3553:33;3540:8;3513:36;;;;;;;;:73;;;;;;;;;:117;;3618:12;3513:117;;;3597:10;3513:117;3483:147;;3650:13;3641:6;:22;3637:65;;;-1:-1:-1;3689:6:8;3637:65;3728:13;3715:9;:26;;3707:78;;;;-1:-1:-1;;;3707:78:8;;;;;;;:::i;:::-;3791:4;-1:-1:-1;;;;;3791:12:8;;3811:13;3791:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3833:58:8;;-1:-1:-1;;;3833:58:8;;-1:-1:-1;;;;;3833:4:8;:10;;-1:-1:-1;3833:10:8;;-1:-1:-1;3833:58:8;;-1:-1:-1;3852:4:8;;3859:9;;3870:8;;3880:10;;3833:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3947:13;3935:9;:25;3931:86;;;3962:55;3979:10;4003:13;3991:9;:25;4823:172;4932:12;;;4892;4932;;;;;;;;;-1:-1:-1;;;;;4910:7:8;;;4925:5;;4910:35;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4891:54;;;4959:7;4951:39;;;;-1:-1:-1;;;4951:39:8;;;;;;;:::i;587:98:0:-;670:10;587:98;:::o;763:291:14:-;884:7;893;932;:30;;;-1:-1:-1;;;;;925:48:14;;974:4;925:54;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;994:7;:32;;;-1:-1:-1;;;;;987:50:14;;1038:4;987:56;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;910:139;;;;763:291;;;;;:::o;142:134:-1:-;220:13;;238:33;220:13;238:33;:::i;:::-;205:71;;;;:::o;465:361::-;;606:4;594:9;589:3;585:19;581:30;578:2;;;-1:-1;;614:12;578:2;642:20;606:4;642:20;:::i;:::-;3651:13;;719:86;;-1:-1;633:29;572:254;-1:-1;572:254::o;3160:134::-;3238:13;;18271:34;18260:46;;19758:35;;19748:2;;19807:1;;19797:12;3301:128;3367:20;;18390:6;18379:18;;19881:34;;19871:2;;19929:1;;19919:12;3714:132;3791:13;;18688:12;18677:24;;20127:34;;20117:2;;20175:1;;20165:12;3853:130;3929:13;;18784:4;18773:16;;20248:33;;20238:2;;20295:1;;20285:12;3990:241;;4094:2;4082:9;4073:7;4069:23;4065:32;4062:2;;;-1:-1;;4100:12;4062:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;4152:63;4056:175;-1:-1;;;4056:175::o;4238:491::-;;;;4376:2;4364:9;4355:7;4351:23;4347:32;4344:2;;;-1:-1;;4382:12;4344:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;4434:63;-1:-1;4534:2;4573:22;;72:20;97:33;72:20;97:33;:::i;:::-;4338:391;;4542:63;;-1:-1;;;4642:2;4681:22;;;;3503:20;;4338:391::o;4736:364::-;;;4856:2;4844:9;4835:7;4831:23;4827:32;4824:2;;;-1:-1;;4862:12;4824:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;4914:63;-1:-1;5032:52;5076:7;5014:2;5052:22;;5032:52;:::i;:::-;5022:62;;4818:282;;;;;:::o;5107:366::-;;;5228:2;5216:9;5207:7;5203:23;5199:32;5196:2;;;-1:-1;;5234:12;5196:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;5286:63;5386:2;5425:22;;;;3503:20;;-1:-1;;;5190:283::o;5480:257::-;;5592:2;5580:9;5571:7;5567:23;5563:32;5560:2;;;-1:-1;;5598:12;5560:2;364:6;358:13;19662:5;18172:13;18165:21;19640:5;19637:32;19627:2;;-1:-1;;19673:12;5744:322;;5888:3;;5876:9;5867:7;5863:23;5859:33;5856:2;;;-1:-1;;5895:12;5856:2;1035:22;5888:3;1035:22;:::i;:::-;1026:31;;1148:101;1245:3;1221:22;1148:101;:::i;:::-;1130:16;1123:127;1354:60;1410:3;1321:2;1390:9;1386:22;1354:60;:::i;:::-;1321:2;1340:5;1336:16;1329:86;1524:60;1580:3;1491:2;1560:9;1556:22;1524:60;:::i;:::-;1491:2;1510:5;1506:16;1499:86;1695:60;1751:3;1662:2;1731:9;1727:22;1695:60;:::i;:::-;1662:2;1681:5;1677:16;1670:86;1872:60;1928:3;1838;1908:9;1904:22;1872:60;:::i;:::-;1838:3;1858:5;1854:16;1847:86;2047:60;2103:3;2013;2083:9;2079:22;2047:60;:::i;:::-;2013:3;2033:5;2029:16;2022:86;2218:59;2273:3;2184;2253:9;2249:22;2218:59;:::i;:::-;2184:3;2204:5;2200:16;2193:85;2382:60;2438:3;2348;2418:9;2414:22;2382:60;:::i;:::-;2348:3;2368:5;2364:16;2357:86;2522:3;2558:60;2614:3;2522;2594:9;2590:22;2558:60;:::i;:::-;2538:18;;;2531:88;2700:3;2736:60;2792:3;2768:22;;;2736:60;:::i;:::-;2716:18;;;2709:88;2881:3;2917:60;2973:3;2949:22;;;2917:60;:::i;:::-;2897:18;;;2890:88;3037:3;3073:58;3127:3;3103:22;;;3073:58;:::i;:::-;3053:18;;;3046:86;3057:5;5850:216;-1:-1;;;5850:216::o;6073:263::-;;6188:2;6176:9;6167:7;6163:23;6159:32;6156:2;;;-1:-1;;6194:12;6156:2;-1:-1;3651:13;;6150:186;-1:-1;6150:186::o;6343:366::-;;;6464:2;6452:9;6443:7;6439:23;6435:32;6432:2;;;-1:-1;;6470:12;6432:2;3516:6;3503:20;6522:63;;6622:2;6665:9;6661:22;72:20;97:33;124:5;97:33;:::i;:::-;6630:63;;;;6426:283;;;;;:::o;6716:491::-;;;;6854:2;6842:9;6833:7;6829:23;6825:32;6822:2;;;-1:-1;;6860:12;6822:2;3516:6;3503:20;6912:63;;7012:2;7055:9;7051:22;3503:20;7020:63;;7120:2;7163:9;7159:22;72:20;97:33;124:5;97:33;:::i;:::-;7128:63;;;;6816:391;;;;;:::o;7214:489::-;;;;7351:2;7339:9;7330:7;7326:23;7322:32;7319:2;;;-1:-1;;7357:12;7319:2;3516:6;3503:20;7409:63;;7509:2;7552:9;7548:22;3503:20;7517:63;;7635:52;7679:7;7617:2;7659:9;7655:22;7635:52;:::i;:::-;7625:62;;7313:390;;;;;:::o;10674:271::-;;8139:5;17642:12;-1:-1;19253:101;19267:6;19264:1;19261:13;19253:101;;;8283:4;19334:11;;;;;19328:18;19315:11;;;19308:39;19282:10;19253:101;;;19369:6;19366:1;19363:13;19360:2;;;-1:-1;19425:6;19420:3;19416:16;19409:27;19360:2;-1:-1;8314:16;;;;;10808:137;-1:-1;;10808:137::o;10952:222::-;-1:-1;;;;;18471:54;;;;7930:37;;11079:2;11064:18;;11050:124::o;11426:476::-;-1:-1;;;;;18471:54;;;7789:58;;18471:54;;;;11805:2;11790:18;;7789:58;11888:2;11873:18;;10625:37;;;;11625:2;11610:18;;11596:306::o;11909:333::-;-1:-1;;;;;18471:54;;;;7930:37;;12228:2;12213:18;;10625:37;12064:2;12049:18;;12035:207::o;12249:460::-;-1:-1;;;;;18471:54;;;7930:37;;12604:2;12589:18;;10625:37;;;;18471:54;;;12695:2;12680:18;;7789:58;12440:2;12425:18;;12411:298::o;12716:552::-;-1:-1;;;;;18471:54;;;7930:37;;13090:2;13075:18;;10625:37;;;;18471:54;;13173:2;13158:18;;7930:37;18390:6;18379:18;;;13254:2;13239:18;;10506:36;12925:3;12910:19;;12896:372::o;13275:556::-;-1:-1;;;;;18471:54;;;7930:37;;13651:2;13636:18;;10625:37;;;;13734:2;13719:18;;10625:37;;;;18471:54;;;13817:2;13802:18;;7930:37;13486:3;13471:19;;13457:374::o;13838:680::-;-1:-1;;;;;18471:54;;;7930:37;;14248:2;14233:18;;10625:37;;;;14331:2;14316:18;;10625:37;;;;18390:6;18379:18;14412:2;14397:18;;10506:36;18471:54;;;14503:3;14488:19;;7789:58;14083:3;14068:19;;14054:464::o;14525:416::-;14725:2;14739:47;;;8567:2;14710:18;;;17940:19;-1:-1;;;17980:14;;;8583:43;8645:12;;;14696:245::o;14948:416::-;15148:2;15162:47;;;8896:2;15133:18;;;17940:19;8932:34;17980:14;;;8912:55;-1:-1;;;8987:12;;;8980:30;9029:12;;;15119:245::o;15371:416::-;15571:2;15585:47;;;9280:2;15556:18;;;17940:19;-1:-1;;;17980:14;;;9296:42;9357:12;;;15542:245::o;15794:416::-;15994:2;16008:47;;;15979:18;;;17940:19;9644:34;17980:14;;;9624:55;9698:12;;;15965:245::o;16217:416::-;16417:2;16431:47;;;9949:2;16402:18;;;17940:19;-1:-1;;;17980:14;;;9965:42;10026:12;;;16388:245::o;16640:416::-;16840:2;16854:47;;;10277:2;16825:18;;;17940:19;10313:34;17980:14;;;10293:55;-1:-1;;;10368:12;;;10361:31;10411:12;;;16811:245::o;17063:222::-;10625:37;;;17190:2;17175:18;;17161:124::o;17292:256::-;17354:2;17348:9;17380:17;;;17455:18;17440:34;;17476:22;;;17437:62;17434:2;;;17512:1;;17502:12;17434:2;17354;17521:22;17332:216;;-1:-1;17332:216::o;19457:117::-;-1:-1;;;;;18471:54;;19516:35;;19506:2;;19565:1;;19555:12;19506:2;19500:74;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1032000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "362",
								"borrowETH(uint256,uint256,uint16)": "infinite",
								"depositETH(address,uint16)": "infinite",
								"emergencyEtherTransfer(address,uint256)": "infinite",
								"emergencyTokenTransfer(address,address,uint256)": "infinite",
								"getAWETHAddress()": "infinite",
								"getLendingPoolAddress()": "infinite",
								"getWETHAddress()": "infinite",
								"owner()": "1070",
								"renounceOwnership()": "24293",
								"repayETH(uint256,uint256,address)": "infinite",
								"transferOwnership(address)": "24521",
								"withdrawETH(uint256,address)": "infinite"
							},
							"internal": {
								"_safeTransferETH(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 793,
									"end": 6658,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 793,
									"end": 6658,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 793,
									"end": 6658,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 844,
									"end": 861,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 864,
									"end": 876,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 864,
									"end": 874,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 864,
									"end": 876,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 864,
									"end": 876,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 864,
									"end": 876,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 882,
									"end": 888,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 900,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 882,
									"end": 900,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 882,
									"end": 900,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 882,
									"end": 900,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 882,
									"end": 900,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 882,
									"end": 900,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 882,
									"end": 900,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 882,
									"end": 900,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 882,
									"end": 900,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 882,
									"end": 900,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 911,
									"end": 954,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 911,
									"end": 954,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 882,
									"end": 900,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 882,
									"end": 900,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 882,
									"end": 900,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 911,
									"end": 954,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 911,
									"end": 954,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 882,
									"end": 888,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 882,
									"end": 888,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 911,
									"end": 954,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1420,
									"end": 1438,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1420,
									"end": 1438,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 1438,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 1438,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 1438,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 1438,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 1438,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1420,
									"end": 1438,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1444,
									"end": 1463,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1444,
									"end": 1463,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1444,
									"end": 1463,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1444,
									"end": 1463,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1444,
									"end": 1463,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 1444,
									"end": 1463,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "35EA6A75"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1409,
									"end": 1413,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1409,
									"end": 1413,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1444,
									"end": 1463,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1444,
									"end": 1463,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1444,
									"end": 1463,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1512,
									"name": "PUSH",
									"source": 8,
									"value": "35EA6A75"
								},
								{
									"begin": 1485,
									"end": 1512,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1433,
									"end": 1437,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1433,
									"end": 1437,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "PUSH",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "EXTCODESIZE",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "GAS",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "STATICCALL",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "RETURNDATASIZE",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "RETURNDATACOPY",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "RETURNDATASIZE",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "RETURNDATASIZE",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 1485,
									"end": 1518,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1532,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1485,
									"end": 1532,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1532,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1469,
									"end": 1533,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1469,
									"end": 1533,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1469,
									"end": 1533,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1469,
									"end": 1533,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 1469,
									"end": 1533,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "95EA7B3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1539,
									"end": 1558,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1558,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1558,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1558,
									"name": "PUSH",
									"source": 8,
									"value": "95EA7B3"
								},
								{
									"begin": 1539,
									"end": 1558,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1559,
									"end": 1563,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1559,
									"end": 1563,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1573,
									"end": 1575,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "tag",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "EXTCODESIZE",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "GAS",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "CALL",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "RETURNDATASIZE",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "RETURNDATACOPY",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "RETURNDATASIZE",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "RETURNDATASIZE",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1577,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1582,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 793,
									"end": 6658,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 793,
									"end": 6658,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 587,
									"end": 685,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 587,
									"end": 685,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 670,
									"end": 680,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 587,
									"end": 685,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 587,
									"end": 685,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 5,
									"end": 139,
									"name": "tag",
									"source": -1,
									"value": "27"
								},
								{
									"begin": 5,
									"end": 139,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 83,
									"end": 96,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 83,
									"end": 96,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6024,
									"end": 6078,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 6024,
									"end": 6078,
									"name": "AND",
									"source": -1
								},
								{
									"begin": 6413,
									"end": 6448,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 6413,
									"end": 6448,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 6403,
									"end": 6405,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "29"
								},
								{
									"begin": 6403,
									"end": 6405,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 6462,
									"end": 6463,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 6462,
									"end": 6463,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 6452,
									"end": 6464,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 6403,
									"end": 6405,
									"name": "tag",
									"source": -1,
									"value": "29"
								},
								{
									"begin": 6403,
									"end": 6405,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 68,
									"end": 139,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 68,
									"end": 139,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 68,
									"end": 139,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 68,
									"end": 139,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 68,
									"end": 139,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 328,
									"end": 689,
									"name": "tag",
									"source": -1,
									"value": "30"
								},
								{
									"begin": 328,
									"end": 689,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 328,
									"end": 689,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 469,
									"end": 473,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 457,
									"end": 466,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 452,
									"end": 455,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 448,
									"end": 467,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 444,
									"end": 474,
									"name": "SLT",
									"source": -1
								},
								{
									"begin": 441,
									"end": 443,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 441,
									"end": 443,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "32"
								},
								{
									"begin": 441,
									"end": 443,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 477,
									"end": 489,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 441,
									"end": 443,
									"name": "tag",
									"source": -1,
									"value": "32"
								},
								{
									"begin": 441,
									"end": 443,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 505,
									"end": 525,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "33"
								},
								{
									"begin": 469,
									"end": 473,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 505,
									"end": 525,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "34"
								},
								{
									"begin": 505,
									"end": 525,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 505,
									"end": 525,
									"name": "tag",
									"source": -1,
									"value": "33"
								},
								{
									"begin": 505,
									"end": 525,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 3242,
									"end": 3255,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 3242,
									"end": 3255,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 582,
									"end": 668,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 582,
									"end": 668,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 496,
									"end": 525,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 435,
									"end": 689,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 435,
									"end": 689,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 3023,
									"end": 3157,
									"name": "tag",
									"source": -1,
									"value": "35"
								},
								{
									"begin": 3023,
									"end": 3157,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 3101,
									"end": 3114,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 3101,
									"end": 3114,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5904,
									"end": 5950,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 5904,
									"end": 5950,
									"name": "AND",
									"source": -1
								},
								{
									"begin": 6655,
									"end": 6690,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 6655,
									"end": 6690,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 6645,
									"end": 6647,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "29"
								},
								{
									"begin": 6645,
									"end": 6647,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 6704,
									"end": 6705,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 6704,
									"end": 6705,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 6694,
									"end": 6706,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 3305,
									"end": 3437,
									"name": "tag",
									"source": -1,
									"value": "38"
								},
								{
									"begin": 3305,
									"end": 3437,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 3382,
									"end": 3395,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 3382,
									"end": 3395,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 6241,
									"end": 6253,
									"name": "PUSH",
									"source": -1,
									"value": "FFFFFFFFFF"
								},
								{
									"begin": 6230,
									"end": 6254,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 6230,
									"end": 6254,
									"name": "AND",
									"source": -1
								},
								{
									"begin": 6902,
									"end": 6936,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 6902,
									"end": 6936,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 6892,
									"end": 6894,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "29"
								},
								{
									"begin": 6892,
									"end": 6894,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 6950,
									"end": 6951,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 6950,
									"end": 6951,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 6940,
									"end": 6952,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 3444,
									"end": 3574,
									"name": "tag",
									"source": -1,
									"value": "41"
								},
								{
									"begin": 3444,
									"end": 3574,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 3520,
									"end": 3533,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 3520,
									"end": 3533,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 6337,
									"end": 6341,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": 6326,
									"end": 6342,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 6326,
									"end": 6342,
									"name": "AND",
									"source": -1
								},
								{
									"begin": 7023,
									"end": 7056,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 7023,
									"end": 7056,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 7013,
									"end": 7015,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "29"
								},
								{
									"begin": 7013,
									"end": 7015,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 7070,
									"end": 7071,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 7070,
									"end": 7071,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 7060,
									"end": 7072,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 3581,
									"end": 3980,
									"name": "tag",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 3581,
									"end": 3980,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 3581,
									"end": 3980,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3581,
									"end": 3980,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 3713,
									"end": 3715,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 3701,
									"end": 3710,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 3692,
									"end": 3699,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 3688,
									"end": 3711,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3684,
									"end": 3716,
									"name": "SLT",
									"source": -1
								},
								{
									"begin": 3681,
									"end": 3683,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 3681,
									"end": 3683,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "45"
								},
								{
									"begin": 3681,
									"end": 3683,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 3719,
									"end": 3731,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 3681,
									"end": 3683,
									"name": "tag",
									"source": -1,
									"value": "45"
								},
								{
									"begin": 3681,
									"end": 3683,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 89,
									"end": 95,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 83,
									"end": 96,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 101,
									"end": 134,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "46"
								},
								{
									"begin": 128,
									"end": 133,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 101,
									"end": 134,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "47"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "tag",
									"source": -1,
									"value": "46"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 3882,
									"end": 3884,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 3932,
									"end": 3954,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 3932,
									"end": 3954,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 83,
									"end": 96,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 3771,
									"end": 3845,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 3771,
									"end": 3845,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 101,
									"end": 134,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "48"
								},
								{
									"begin": 83,
									"end": 96,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 101,
									"end": 134,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "47"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "tag",
									"source": -1,
									"value": "48"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 3890,
									"end": 3964,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 3890,
									"end": 3964,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 3890,
									"end": 3964,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3890,
									"end": 3964,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3675,
									"end": 3980,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 3675,
									"end": 3980,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3675,
									"end": 3980,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 3675,
									"end": 3980,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 3675,
									"end": 3980,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3675,
									"end": 3980,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 3987,
									"end": 4244,
									"name": "tag",
									"source": -1,
									"value": "23"
								},
								{
									"begin": 3987,
									"end": 4244,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 3987,
									"end": 4244,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 4099,
									"end": 4101,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 4087,
									"end": 4096,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 4078,
									"end": 4085,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 4074,
									"end": 4097,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4070,
									"end": 4102,
									"name": "SLT",
									"source": -1
								},
								{
									"begin": 4067,
									"end": 4069,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 4067,
									"end": 4069,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "50"
								},
								{
									"begin": 4067,
									"end": 4069,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 4105,
									"end": 4117,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 4067,
									"end": 4069,
									"name": "tag",
									"source": -1,
									"value": "50"
								},
								{
									"begin": 4067,
									"end": 4069,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 227,
									"end": 233,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 221,
									"end": 234,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 6559,
									"end": 6564,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 5816,
									"end": 5829,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 5809,
									"end": 5830,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 6537,
									"end": 6542,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 6534,
									"end": 6566,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 6524,
									"end": 6526,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "51"
								},
								{
									"begin": 6524,
									"end": 6526,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 6570,
									"end": 6582,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 6524,
									"end": 6526,
									"name": "tag",
									"source": -1,
									"value": "51"
								},
								{
									"begin": 6524,
									"end": 6526,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 4157,
									"end": 4228,
									"name": "SWAP4",
									"source": -1
								},
								{
									"begin": 4061,
									"end": 4244,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4061,
									"end": 4244,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 4251,
									"end": 4573,
									"name": "tag",
									"source": -1,
									"value": "16"
								},
								{
									"begin": 4251,
									"end": 4573,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 4251,
									"end": 4573,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 4395,
									"end": 4398,
									"name": "PUSH",
									"source": -1,
									"value": "180"
								},
								{
									"begin": 4395,
									"end": 4398,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 4383,
									"end": 4392,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 4374,
									"end": 4381,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 4370,
									"end": 4393,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4366,
									"end": 4399,
									"name": "SLT",
									"source": -1
								},
								{
									"begin": 4363,
									"end": 4365,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 4363,
									"end": 4365,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "53"
								},
								{
									"begin": 4363,
									"end": 4365,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 4402,
									"end": 4414,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 4363,
									"end": 4365,
									"name": "tag",
									"source": -1,
									"value": "53"
								},
								{
									"begin": 4363,
									"end": 4365,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 898,
									"end": 920,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "54"
								},
								{
									"begin": 4395,
									"end": 4398,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 898,
									"end": 920,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "34"
								},
								{
									"begin": 898,
									"end": 920,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 898,
									"end": 920,
									"name": "tag",
									"source": -1,
									"value": "54"
								},
								{
									"begin": 898,
									"end": 920,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 889,
									"end": 920,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 889,
									"end": 920,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1011,
									"end": 1112,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "55"
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 1084,
									"end": 1106,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 1011,
									"end": 1112,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "30"
								},
								{
									"begin": 1011,
									"end": 1112,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 1011,
									"end": 1112,
									"name": "tag",
									"source": -1,
									"value": "55"
								},
								{
									"begin": 1011,
									"end": 1112,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 993,
									"end": 1009,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 986,
									"end": 1113,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1217,
									"end": 1277,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "56"
								},
								{
									"begin": 1273,
									"end": 1276,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 1184,
									"end": 1186,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 1253,
									"end": 1262,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 1249,
									"end": 1271,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 1217,
									"end": 1277,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "35"
								},
								{
									"begin": 1217,
									"end": 1277,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 1217,
									"end": 1277,
									"name": "tag",
									"source": -1,
									"value": "56"
								},
								{
									"begin": 1217,
									"end": 1277,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1184,
									"end": 1186,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 1203,
									"end": 1208,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 1199,
									"end": 1215,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 1192,
									"end": 1278,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1387,
									"end": 1447,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "57"
								},
								{
									"begin": 1443,
									"end": 1446,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 1354,
									"end": 1356,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 1423,
									"end": 1432,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 1419,
									"end": 1441,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 1387,
									"end": 1447,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "35"
								},
								{
									"begin": 1387,
									"end": 1447,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 1387,
									"end": 1447,
									"name": "tag",
									"source": -1,
									"value": "57"
								},
								{
									"begin": 1387,
									"end": 1447,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1354,
									"end": 1356,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 1373,
									"end": 1378,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 1369,
									"end": 1385,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 1362,
									"end": 1448,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1558,
									"end": 1618,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "58"
								},
								{
									"begin": 1614,
									"end": 1617,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 1525,
									"end": 1527,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": 1594,
									"end": 1603,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 1590,
									"end": 1612,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 1558,
									"end": 1618,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "35"
								},
								{
									"begin": 1558,
									"end": 1618,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 1558,
									"end": 1618,
									"name": "tag",
									"source": -1,
									"value": "58"
								},
								{
									"begin": 1558,
									"end": 1618,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1525,
									"end": 1527,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": 1544,
									"end": 1549,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 1540,
									"end": 1556,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 1533,
									"end": 1619,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1735,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "59"
								},
								{
									"begin": 1791,
									"end": 1794,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 1701,
									"end": 1704,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": 1771,
									"end": 1780,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 1767,
									"end": 1789,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 1735,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "35"
								},
								{
									"begin": 1735,
									"end": 1795,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 1735,
									"end": 1795,
									"name": "tag",
									"source": -1,
									"value": "59"
								},
								{
									"begin": 1735,
									"end": 1795,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1701,
									"end": 1704,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": 1721,
									"end": 1726,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 1717,
									"end": 1733,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 1710,
									"end": 1796,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1910,
									"end": 1970,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "60"
								},
								{
									"begin": 1966,
									"end": 1969,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 1876,
									"end": 1879,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": 1946,
									"end": 1955,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 1942,
									"end": 1964,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 1910,
									"end": 1970,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "35"
								},
								{
									"begin": 1910,
									"end": 1970,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 1910,
									"end": 1970,
									"name": "tag",
									"source": -1,
									"value": "60"
								},
								{
									"begin": 1910,
									"end": 1970,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1876,
									"end": 1879,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": 1896,
									"end": 1901,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 1892,
									"end": 1908,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 1885,
									"end": 1971,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 2081,
									"end": 2140,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "61"
								},
								{
									"begin": 2136,
									"end": 2139,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 2047,
									"end": 2050,
									"name": "PUSH",
									"source": -1,
									"value": "C0"
								},
								{
									"begin": 2116,
									"end": 2125,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 2112,
									"end": 2134,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 2081,
									"end": 2140,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "38"
								},
								{
									"begin": 2081,
									"end": 2140,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 2081,
									"end": 2140,
									"name": "tag",
									"source": -1,
									"value": "61"
								},
								{
									"begin": 2081,
									"end": 2140,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 2047,
									"end": 2050,
									"name": "PUSH",
									"source": -1,
									"value": "C0"
								},
								{
									"begin": 2067,
									"end": 2072,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 2063,
									"end": 2079,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 2056,
									"end": 2141,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 2245,
									"end": 2305,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "62"
								},
								{
									"begin": 2301,
									"end": 2304,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 2211,
									"end": 2214,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": 2281,
									"end": 2290,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 2277,
									"end": 2299,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 2245,
									"end": 2305,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "27"
								},
								{
									"begin": 2245,
									"end": 2305,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 2245,
									"end": 2305,
									"name": "tag",
									"source": -1,
									"value": "62"
								},
								{
									"begin": 2245,
									"end": 2305,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 2211,
									"end": 2214,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": 2231,
									"end": 2236,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 2227,
									"end": 2243,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 2220,
									"end": 2306,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 2385,
									"end": 2388,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": 2421,
									"end": 2481,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "63"
								},
								{
									"begin": 2477,
									"end": 2480,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 2385,
									"end": 2388,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 2457,
									"end": 2466,
									"name": "DUP7",
									"source": -1
								},
								{
									"begin": 2453,
									"end": 2475,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 2421,
									"end": 2481,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "27"
								},
								{
									"begin": 2421,
									"end": 2481,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 2421,
									"end": 2481,
									"name": "tag",
									"source": -1,
									"value": "63"
								},
								{
									"begin": 2421,
									"end": 2481,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 2401,
									"end": 2419,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 2401,
									"end": 2419,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 2401,
									"end": 2419,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 2394,
									"end": 2482,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 2563,
									"end": 2566,
									"name": "PUSH",
									"source": -1,
									"value": "120"
								},
								{
									"begin": 2599,
									"end": 2659,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "64"
								},
								{
									"begin": 2655,
									"end": 2658,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 2631,
									"end": 2653,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 2631,
									"end": 2653,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 2631,
									"end": 2653,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 2599,
									"end": 2659,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "27"
								},
								{
									"begin": 2599,
									"end": 2659,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 2599,
									"end": 2659,
									"name": "tag",
									"source": -1,
									"value": "64"
								},
								{
									"begin": 2599,
									"end": 2659,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 2579,
									"end": 2597,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 2579,
									"end": 2597,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 2579,
									"end": 2597,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 2572,
									"end": 2660,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 2744,
									"end": 2747,
									"name": "PUSH",
									"source": -1,
									"value": "140"
								},
								{
									"begin": 2780,
									"end": 2840,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "65"
								},
								{
									"begin": 2836,
									"end": 2839,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 2812,
									"end": 2834,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 2812,
									"end": 2834,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 2812,
									"end": 2834,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 2780,
									"end": 2840,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "27"
								},
								{
									"begin": 2780,
									"end": 2840,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 2780,
									"end": 2840,
									"name": "tag",
									"source": -1,
									"value": "65"
								},
								{
									"begin": 2780,
									"end": 2840,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 2760,
									"end": 2778,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 2760,
									"end": 2778,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 2760,
									"end": 2778,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 2753,
									"end": 2841,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 2900,
									"end": 2903,
									"name": "PUSH",
									"source": -1,
									"value": "160"
								},
								{
									"begin": 2936,
									"end": 2994,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "66"
								},
								{
									"begin": 2990,
									"end": 2993,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 2966,
									"end": 2988,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 2966,
									"end": 2988,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 2966,
									"end": 2988,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 2936,
									"end": 2994,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "41"
								},
								{
									"begin": 2936,
									"end": 2994,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 2936,
									"end": 2994,
									"name": "tag",
									"source": -1,
									"value": "66"
								},
								{
									"begin": 2936,
									"end": 2994,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 2916,
									"end": 2934,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 2916,
									"end": 2934,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 2916,
									"end": 2934,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 2909,
									"end": 2995,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 2920,
									"end": 2925,
									"name": "SWAP4",
									"source": -1
								},
								{
									"begin": 4357,
									"end": 4573,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4357,
									"end": 4573,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 4820,
									"end": 5042,
									"name": "tag",
									"source": -1,
									"value": "11"
								},
								{
									"begin": 4820,
									"end": 5042,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6024,
									"end": 6078,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 6024,
									"end": 6078,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 6024,
									"end": 6078,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 6024,
									"end": 6078,
									"name": "AND",
									"source": -1
								},
								{
									"begin": 4651,
									"end": 4688,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 4651,
									"end": 4688,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 4947,
									"end": 4949,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 4932,
									"end": 4950,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 4932,
									"end": 4950,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 4918,
									"end": 5042,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 5049,
									"end": 5382,
									"name": "tag",
									"source": -1,
									"value": "18"
								},
								{
									"begin": 5049,
									"end": 5382,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6024,
									"end": 6078,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 6024,
									"end": 6078,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 6024,
									"end": 6078,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 6024,
									"end": 6078,
									"name": "AND",
									"source": -1
								},
								{
									"begin": 4651,
									"end": 4688,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 4651,
									"end": 4688,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 5368,
									"end": 5370,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 5353,
									"end": 5371,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 5353,
									"end": 5371,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 4771,
									"end": 4808,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 5204,
									"end": 5206,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 5189,
									"end": 5207,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 5189,
									"end": 5207,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 5175,
									"end": 5382,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 5389,
									"end": 5645,
									"name": "tag",
									"source": -1,
									"value": "34"
								},
								{
									"begin": 5389,
									"end": 5645,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 5451,
									"end": 5453,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 5445,
									"end": 5454,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 5477,
									"end": 5494,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 5477,
									"end": 5494,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 5477,
									"end": 5494,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5537,
									"end": 5571,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 5537,
									"end": 5571,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 5573,
									"end": 5595,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 5573,
									"end": 5595,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 5573,
									"end": 5595,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 5534,
									"end": 5596,
									"name": "OR",
									"source": -1
								},
								{
									"begin": 5531,
									"end": 5533,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 5531,
									"end": 5533,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "70"
								},
								{
									"begin": 5531,
									"end": 5533,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 5609,
									"end": 5610,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 5609,
									"end": 5610,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 5599,
									"end": 5611,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 5531,
									"end": 5533,
									"name": "tag",
									"source": -1,
									"value": "70"
								},
								{
									"begin": 5531,
									"end": 5533,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 5451,
									"end": 5453,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 5618,
									"end": 5640,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 5429,
									"end": 5645,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 5429,
									"end": 5645,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5429,
									"end": 5645,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 6354,
									"end": 6471,
									"name": "tag",
									"source": -1,
									"value": "47"
								},
								{
									"begin": 6354,
									"end": 6471,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6024,
									"end": 6078,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 6024,
									"end": 6078,
									"name": "AND",
									"source": -1
								},
								{
									"begin": 6413,
									"end": 6448,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 6413,
									"end": 6448,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 6403,
									"end": 6405,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "72"
								},
								{
									"begin": 6403,
									"end": 6405,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 6462,
									"end": 6463,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 6462,
									"end": 6463,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 6452,
									"end": 6464,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 6403,
									"end": 6405,
									"name": "tag",
									"source": -1,
									"value": "72"
								},
								{
									"begin": 6403,
									"end": 6405,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 6397,
									"end": 6471,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6397,
									"end": 6471,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 6397,
									"end": 6471,
									"name": "tag",
									"source": -1,
									"value": "26"
								},
								{
									"begin": 6397,
									"end": 6471,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 793,
									"end": 6658,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 793,
									"end": 6658,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 793,
									"end": 6658,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 793,
									"end": 6658,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 793,
									"end": 6658,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 793,
									"end": 6658,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 793,
									"end": 6658,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 793,
									"end": 6658,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 793,
									"end": 6658,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 793,
									"end": 6658,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 793,
									"end": 6658,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 793,
									"end": 6658,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 793,
									"end": 6658,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 793,
									"end": 6658,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 793,
									"end": 6658,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 793,
									"end": 6658,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 793,
									"end": 6658,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "987"
								},
								{
									"begin": 793,
									"end": 6658,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "985"
								},
								{
									"begin": 793,
									"end": 6658,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "983"
								},
								{
									"begin": 793,
									"end": 6658,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 793,
									"end": 6658,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 793,
									"end": 6658,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122017bf405cd33c70e646c2d5c50b78221f73ea1ab0fbab9e20a77acbd659dd9a7b64736f6c634300060c0033",
									".code": [
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH",
											"source": 8,
											"value": "A3D5B255"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH",
											"source": 8,
											"value": "AFFA8817"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH",
											"source": 8,
											"value": "EED88B8D"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH",
											"source": 8,
											"value": "F538BA51"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH",
											"source": 8,
											"value": "36118B52"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH",
											"source": 8,
											"value": "3A21AFAC"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH",
											"source": 8,
											"value": "58C22BE7"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH",
											"source": 8,
											"value": "5F36A742"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH",
											"source": 8,
											"value": "7D5155FD"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6483,
											"end": 6493,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6505,
											"end": 6509,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "983"
										},
										{
											"begin": 6483,
											"end": 6510,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6483,
											"end": 6510,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6475,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 6475,
											"end": 6534,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6475,
											"end": 6534,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6475,
											"end": 6534,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6475,
											"end": 6534,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6475,
											"end": 6534,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6475,
											"end": 6534,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6475,
											"end": 6534,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6475,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 6475,
											"end": 6534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6475,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6534,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6475,
											"end": 6534,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 6475,
											"end": 6534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6475,
											"end": 6534,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6475,
											"end": 6534,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6475,
											"end": 6534,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6475,
											"end": 6534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6475,
											"end": 6534,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6475,
											"end": 6534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6475,
											"end": 6534,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6475,
											"end": 6534,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 6475,
											"end": 6534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 793,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6621,
											"end": 6651,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6621,
											"end": 6651,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6621,
											"end": 6651,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6621,
											"end": 6651,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6621,
											"end": 6651,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6621,
											"end": 6651,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6621,
											"end": 6651,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 6621,
											"end": 6651,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6621,
											"end": 6651,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6621,
											"end": 6651,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2131,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1931,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1931,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1931,
											"end": 2131,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2131,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1931,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1931,
											"end": 2131,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1931,
											"end": 2131,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1931,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 1931,
											"end": 2131,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6212,
											"end": 6308,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 6212,
											"end": 6308,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6212,
											"end": 6308,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6212,
											"end": 6308,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6212,
											"end": 6308,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6212,
											"end": 6308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 6212,
											"end": 6308,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6212,
											"end": 6308,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6212,
											"end": 6308,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6212,
											"end": 6308,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6212,
											"end": 6308,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 6212,
											"end": 6308,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6212,
											"end": 6308,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6212,
											"end": 6308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 6212,
											"end": 6308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 6212,
											"end": 6308,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5268,
											"end": 5423,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 5268,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5268,
											"end": 5423,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 5268,
											"end": 5423,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5268,
											"end": 5423,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5268,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 5268,
											"end": 5423,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5268,
											"end": 5423,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5268,
											"end": 5423,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5268,
											"end": 5423,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5268,
											"end": 5423,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 5268,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5268,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 5268,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 5268,
											"end": 5423,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5268,
											"end": 5423,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5268,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 5268,
											"end": 5423,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5268,
											"end": 5423,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 5268,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5268,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 5268,
											"end": 5423,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5898,
											"end": 5987,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 5898,
											"end": 5987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5898,
											"end": 5987,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 5898,
											"end": 5987,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5898,
											"end": 5987,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5898,
											"end": 5987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5898,
											"end": 5987,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5898,
											"end": 5987,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5898,
											"end": 5987,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5898,
											"end": 5987,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5898,
											"end": 5987,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5898,
											"end": 5987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5898,
											"end": 5987,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5898,
											"end": 5987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 5898,
											"end": 5987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 5898,
											"end": 5987,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5717,
											"end": 5835,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 5717,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5835,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5835,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5717,
											"end": 5835,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5835,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5717,
											"end": 5835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5835,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5835,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5717,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5717,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 5717,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 5717,
											"end": 5835,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5835,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5717,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 5717,
											"end": 5835,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5717,
											"end": 5835,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 5717,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 5717,
											"end": 5835,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3225,
											"end": 4022,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 3225,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 3225,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 3225,
											"end": 4022,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 4022,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3225,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 3225,
											"end": 4022,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3225,
											"end": 4022,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 3225,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 3225,
											"end": 4022,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2429,
											"end": 2434,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "987"
										},
										{
											"begin": 2429,
											"end": 2444,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2444,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2444,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 2429,
											"end": 2444,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2445,
											"end": 2455,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2445,
											"end": 2455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2456,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2489,
											"end": 2495,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2581,
											"end": 2608,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2581,
											"end": 2608,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2655,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 2577,
											"end": 2655,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2637,
											"end": 2648,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2655,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 2577,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2660,
											"end": 2665,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "987"
										},
										{
											"begin": 2660,
											"end": 2678,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2678,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2678,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 2660,
											"end": 2678,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2679,
											"end": 2689,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2679,
											"end": 2689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2703,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2703,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2706,
											"end": 2722,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2706,
											"end": 2722,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A4CA37B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2729,
											"end": 2733,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "985"
										},
										{
											"begin": 2729,
											"end": 2742,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2742,
											"name": "PUSH",
											"source": 8,
											"value": "69328DEC"
										},
										{
											"begin": 2729,
											"end": 2742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2751,
											"end": 2755,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "983"
										},
										{
											"begin": 2751,
											"end": 2755,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2758,
											"end": 2774,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2758,
											"end": 2774,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2784,
											"end": 2788,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2784,
											"end": 2788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 2729,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2E1A7D4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2796,
											"end": 2800,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "983"
										},
										{
											"begin": 2796,
											"end": 2809,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2809,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2809,
											"name": "PUSH",
											"source": 8,
											"value": "2E1A7D4D"
										},
										{
											"begin": 2796,
											"end": 2809,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2826,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2826,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2833,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 2850,
											"end": 2852,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 2870,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2833,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 2833,
											"end": 2871,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2833,
											"end": 2871,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 2833,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2876,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6131,
											"end": 6136,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "987"
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6051,
											"end": 6142,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1931,
											"end": 2131,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 1931,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2028,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "983"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2024,
											"end": 2036,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2036,
											"name": "PUSH",
											"source": 8,
											"value": "D0E30DB0"
										},
										{
											"begin": 2044,
											"end": 2053,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8EDA9DF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2066,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "985"
										},
										{
											"begin": 2062,
											"end": 2074,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2074,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2074,
											"name": "PUSH",
											"source": 8,
											"value": "E8EDA9DF"
										},
										{
											"begin": 2062,
											"end": 2074,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2083,
											"end": 2087,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "983"
										},
										{
											"begin": 2083,
											"end": 2087,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2090,
											"end": 2099,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2090,
											"end": 2099,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2111,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2111,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2113,
											"end": 2125,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2113,
											"end": 2125,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2126,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2131,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6212,
											"end": 6308,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 6212,
											"end": 6308,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "985"
										},
										{
											"begin": 6212,
											"end": 6308,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6212,
											"end": 6308,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1223,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1712,
											"end": 1713,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1715,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1675,
											"end": 1715,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1715,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1675,
											"end": 1715,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1712,
											"end": 1713,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1712,
											"end": 1713,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1715,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 1738,
											"end": 1739,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1721,
											"end": 1740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1721,
											"end": 1740,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1721,
											"end": 1740,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1721,
											"end": 1740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1721,
											"end": 1740,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1745,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A415BCAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4520,
											"end": 4524,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "985"
										},
										{
											"begin": 4520,
											"end": 4531,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4531,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4531,
											"name": "PUSH",
											"source": 8,
											"value": "A415BCAD"
										},
										{
											"begin": 4520,
											"end": 4531,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4540,
											"end": 4544,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "983"
										},
										{
											"begin": 4540,
											"end": 4544,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4547,
											"end": 4553,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4547,
											"end": 4553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4570,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4570,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4584,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4584,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4586,
											"end": 4596,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4586,
											"end": 4596,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 4520,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2E1A7D4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4603,
											"end": 4607,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "983"
										},
										{
											"begin": 4603,
											"end": 4616,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4616,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4603,
											"end": 4616,
											"name": "PUSH",
											"source": 8,
											"value": "2E1A7D4D"
										},
										{
											"begin": 4603,
											"end": 4616,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4617,
											"end": 4623,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4617,
											"end": 4623,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4630,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 4647,
											"end": 4657,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4659,
											"end": 4665,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4630,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 4630,
											"end": 4666,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4630,
											"end": 4666,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 4630,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4671,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1072,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1027,
											"end": 1098,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5268,
											"end": 5423,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 5268,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1223,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5384,
											"end": 5406,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5406,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5406,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5406,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 5384,
											"end": 5406,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5407,
											"end": 5409,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5407,
											"end": 5409,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5411,
											"end": 5417,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5411,
											"end": 5417,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5898,
											"end": 5987,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 5898,
											"end": 5987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5977,
											"end": 5981,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "983"
										},
										{
											"begin": 5898,
											"end": 5987,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5898,
											"end": 5987,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5717,
											"end": 5835,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 5717,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1223,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5802,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 5819,
											"end": 5821,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5823,
											"end": 5829,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5802,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 5802,
											"end": 5830,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5802,
											"end": 5830,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 5802,
											"end": 5830,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5835,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 1223,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 1205,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1968,
											"end": 1990,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1968,
											"end": 1990,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 1960,
											"end": 2033,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2071,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2071,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2071,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2082,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2105,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 2110,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3225,
											"end": 4022,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 3225,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3366,
											"end": 3386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3396,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 3429,
											"end": 3439,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3445,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "985"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3441,
											"end": 3460,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3460,
											"name": "PUSH",
											"source": 8,
											"value": "35EA6A75"
										},
										{
											"begin": 3469,
											"end": 3473,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "983"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "PUSH",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3396,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 3396,
											"end": 3476,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3396,
											"end": 3476,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 3396,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3345,
											"end": 3476,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3345,
											"end": 3476,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3345,
											"end": 3476,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3586,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3540,
											"end": 3548,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3513,
											"end": 3549,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3513,
											"end": 3549,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3513,
											"end": 3549,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3513,
											"end": 3549,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3513,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 3513,
											"end": 3549,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3513,
											"end": 3549,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 3513,
											"end": 3549,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 3513,
											"end": 3549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3513,
											"end": 3586,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3513,
											"end": 3586,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3513,
											"end": 3586,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3513,
											"end": 3586,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3513,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 3513,
											"end": 3586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3513,
											"end": 3586,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 3513,
											"end": 3586,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 3513,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3513,
											"end": 3586,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3513,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 3513,
											"end": 3630,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3618,
											"end": 3630,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3513,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 3513,
											"end": 3630,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3513,
											"end": 3630,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 3513,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3597,
											"end": 3607,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3513,
											"end": 3630,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 3513,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3483,
											"end": 3630,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3483,
											"end": 3630,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3650,
											"end": 3663,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3641,
											"end": 3647,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3641,
											"end": 3663,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3637,
											"end": 3702,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3637,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 3637,
											"end": 3702,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3689,
											"end": 3695,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3637,
											"end": 3702,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 3637,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3728,
											"end": 3741,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3715,
											"end": 3724,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3715,
											"end": 3741,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3715,
											"end": 3741,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3707,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 3707,
											"end": 3785,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3707,
											"end": 3785,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3707,
											"end": 3785,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3707,
											"end": 3785,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3707,
											"end": 3785,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3707,
											"end": 3785,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3707,
											"end": 3785,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3707,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 3707,
											"end": 3785,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3707,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 3707,
											"end": 3785,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3707,
											"end": 3785,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 3707,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3795,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "983"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3791,
											"end": 3803,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3803,
											"name": "PUSH",
											"source": 8,
											"value": "D0E30DB0"
										},
										{
											"begin": 3811,
											"end": 3824,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 3791,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "573ADE81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3833,
											"end": 3837,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "985"
										},
										{
											"begin": 3833,
											"end": 3843,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3843,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3833,
											"end": 3843,
											"name": "PUSH",
											"source": 8,
											"value": "573ADE81"
										},
										{
											"begin": 3833,
											"end": 3843,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3852,
											"end": 3856,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "983"
										},
										{
											"begin": 3852,
											"end": 3856,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3859,
											"end": 3868,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3859,
											"end": 3868,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3870,
											"end": 3878,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 3870,
											"end": 3878,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3880,
											"end": 3890,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 3880,
											"end": 3890,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3891,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 3960,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3935,
											"end": 3944,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3935,
											"end": 3960,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3931,
											"end": 4017,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3931,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 3931,
											"end": 4017,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3962,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 3979,
											"end": 3989,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4003,
											"end": 4016,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3991,
											"end": 4000,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3991,
											"end": 4016,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4823,
											"end": 4995,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 4823,
											"end": 4995,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4932,
											"end": 4944,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4932,
											"end": 4944,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4932,
											"end": 4944,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4892,
											"end": 4904,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4932,
											"end": 4944,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4932,
											"end": 4944,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4932,
											"end": 4944,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4932,
											"end": 4944,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4932,
											"end": 4944,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4932,
											"end": 4944,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4932,
											"end": 4944,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4932,
											"end": 4944,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4932,
											"end": 4944,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4910,
											"end": 4917,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4917,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4917,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4930,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4930,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4891,
											"end": 4945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4891,
											"end": 4945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4891,
											"end": 4945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4959,
											"end": 4966,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4951,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 4951,
											"end": 4990,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4951,
											"end": 4990,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4951,
											"end": 4990,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4951,
											"end": 4990,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4951,
											"end": 4990,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4951,
											"end": 4990,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4951,
											"end": 4990,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4951,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 4951,
											"end": 4990,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4951,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 4951,
											"end": 4990,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 587,
											"end": 685,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 587,
											"end": 685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 670,
											"end": 680,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 587,
											"end": 685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 587,
											"end": 685,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 763,
											"end": 1054,
											"name": "tag",
											"source": 14,
											"value": "171"
										},
										{
											"begin": 763,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 884,
											"end": 891,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 932,
											"end": 939,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 932,
											"end": 962,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 932,
											"end": 962,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 932,
											"end": 962,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 925,
											"end": 973,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 925,
											"end": 973,
											"name": "PUSH",
											"source": 14,
											"value": "70A08231"
										},
										{
											"begin": 974,
											"end": 978,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 925,
											"end": 979,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 925,
											"end": 979,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 925,
											"end": 979,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 925,
											"end": 979,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 925,
											"end": 979,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 925,
											"end": 979,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 925,
											"end": 979,
											"name": "tag",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 925,
											"end": 979,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 925,
											"end": 979,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 925,
											"end": 979,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 925,
											"end": 979,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 979,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "tag",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 925,
											"end": 979,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "208"
										},
										{
											"begin": 925,
											"end": 979,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 979,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 979,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "tag",
											"source": 14,
											"value": "208"
										},
										{
											"begin": 925,
											"end": 979,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 925,
											"end": 979,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 925,
											"end": 979,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 925,
											"end": 979,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 925,
											"end": 979,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "209"
										},
										{
											"begin": 925,
											"end": 979,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 925,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 925,
											"end": 979,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 925,
											"end": 979,
											"name": "tag",
											"source": 14,
											"value": "209"
										},
										{
											"begin": 925,
											"end": 979,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 994,
											"end": 1026,
											"name": "PUSH",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 994,
											"end": 1026,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 994,
											"end": 1026,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 987,
											"end": 1037,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1037,
											"name": "PUSH",
											"source": 14,
											"value": "70A08231"
										},
										{
											"begin": 1038,
											"end": 1042,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "tag",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "211"
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "tag",
											"source": 14,
											"value": "211"
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "tag",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "214"
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "tag",
											"source": 14,
											"value": "214"
										},
										{
											"begin": 987,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 910,
											"end": 1049,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 910,
											"end": 1049,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 910,
											"end": 1049,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 910,
											"end": 1049,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 763,
											"end": 1054,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 763,
											"end": 1054,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 763,
											"end": 1054,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 763,
											"end": 1054,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 763,
											"end": 1054,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 763,
											"end": 1054,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 142,
											"end": 276,
											"name": "tag",
											"source": -1,
											"value": "216"
										},
										{
											"begin": 142,
											"end": 276,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 220,
											"end": 233,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 220,
											"end": 233,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 238,
											"end": 271,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "218"
										},
										{
											"begin": 220,
											"end": 233,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 238,
											"end": 271,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "219"
										},
										{
											"begin": 238,
											"end": 271,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 238,
											"end": 271,
											"name": "tag",
											"source": -1,
											"value": "218"
										},
										{
											"begin": 238,
											"end": 271,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 205,
											"end": 276,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 205,
											"end": 276,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 205,
											"end": 276,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 205,
											"end": 276,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 205,
											"end": 276,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 465,
											"end": 826,
											"name": "tag",
											"source": -1,
											"value": "220"
										},
										{
											"begin": 465,
											"end": 826,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 465,
											"end": 826,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 610,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 594,
											"end": 603,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 589,
											"end": 592,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 585,
											"end": 604,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 581,
											"end": 611,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 578,
											"end": 580,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 578,
											"end": 580,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "222"
										},
										{
											"begin": 578,
											"end": 580,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 614,
											"end": 626,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 578,
											"end": 580,
											"name": "tag",
											"source": -1,
											"value": "222"
										},
										{
											"begin": 578,
											"end": 580,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 642,
											"end": 662,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "223"
										},
										{
											"begin": 606,
											"end": 610,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 662,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "224"
										},
										{
											"begin": 642,
											"end": 662,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 662,
											"name": "tag",
											"source": -1,
											"value": "223"
										},
										{
											"begin": 642,
											"end": 662,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3651,
											"end": 3664,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3651,
											"end": 3664,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 719,
											"end": 805,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 719,
											"end": 805,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 633,
											"end": 662,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 572,
											"end": 826,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 572,
											"end": 826,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 3160,
											"end": 3294,
											"name": "tag",
											"source": -1,
											"value": "225"
										},
										{
											"begin": 3160,
											"end": 3294,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3238,
											"end": 3251,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3238,
											"end": 3251,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 18271,
											"end": 18305,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18260,
											"end": 18306,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 18260,
											"end": 18306,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 19758,
											"end": 19793,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 19758,
											"end": 19793,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 19748,
											"end": 19750,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "218"
										},
										{
											"begin": 19748,
											"end": 19750,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 19807,
											"end": 19808,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 19807,
											"end": 19808,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 19797,
											"end": 19809,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3301,
											"end": 3429,
											"name": "tag",
											"source": -1,
											"value": "228"
										},
										{
											"begin": 3301,
											"end": 3429,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3367,
											"end": 3387,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3367,
											"end": 3387,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 18390,
											"end": 18396,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF"
										},
										{
											"begin": 18379,
											"end": 18397,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 18379,
											"end": 18397,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 19881,
											"end": 19915,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 19881,
											"end": 19915,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 19871,
											"end": 19873,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "218"
										},
										{
											"begin": 19871,
											"end": 19873,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 19929,
											"end": 19930,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 19929,
											"end": 19930,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 19919,
											"end": 19931,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3714,
											"end": 3846,
											"name": "tag",
											"source": -1,
											"value": "231"
										},
										{
											"begin": 3714,
											"end": 3846,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3791,
											"end": 3804,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3791,
											"end": 3804,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 18688,
											"end": 18700,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 18677,
											"end": 18701,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 18677,
											"end": 18701,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 20127,
											"end": 20161,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 20127,
											"end": 20161,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 20117,
											"end": 20119,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "218"
										},
										{
											"begin": 20117,
											"end": 20119,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 20175,
											"end": 20176,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 20175,
											"end": 20176,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 20165,
											"end": 20177,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3853,
											"end": 3983,
											"name": "tag",
											"source": -1,
											"value": "234"
										},
										{
											"begin": 3853,
											"end": 3983,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3929,
											"end": 3942,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3929,
											"end": 3942,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 18784,
											"end": 18788,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": 18773,
											"end": 18789,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 18773,
											"end": 18789,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 20248,
											"end": 20281,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 20248,
											"end": 20281,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 20238,
											"end": 20240,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "218"
										},
										{
											"begin": 20238,
											"end": 20240,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 20295,
											"end": 20296,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 20295,
											"end": 20296,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 20285,
											"end": 20297,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3990,
											"end": 4231,
											"name": "tag",
											"source": -1,
											"value": "72"
										},
										{
											"begin": 3990,
											"end": 4231,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3990,
											"end": 4231,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4094,
											"end": 4096,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 4082,
											"end": 4091,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4073,
											"end": 4080,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 4069,
											"end": 4092,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4065,
											"end": 4097,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 4062,
											"end": 4064,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4062,
											"end": 4064,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "238"
										},
										{
											"begin": 4062,
											"end": 4064,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4100,
											"end": 4112,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4062,
											"end": 4064,
											"name": "tag",
											"source": -1,
											"value": "238"
										},
										{
											"begin": 4062,
											"end": 4064,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "239"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "219"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "239"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4152,
											"end": 4215,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 4056,
											"end": 4231,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4056,
											"end": 4231,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 4238,
											"end": 4729,
											"name": "tag",
											"source": -1,
											"value": "58"
										},
										{
											"begin": 4238,
											"end": 4729,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4238,
											"end": 4729,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4238,
											"end": 4729,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 4238,
											"end": 4729,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4376,
											"end": 4378,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 4364,
											"end": 4373,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 4355,
											"end": 4362,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 4351,
											"end": 4374,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4347,
											"end": 4379,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 4344,
											"end": 4346,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4344,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "241"
										},
										{
											"begin": 4344,
											"end": 4346,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4382,
											"end": 4394,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4344,
											"end": 4346,
											"name": "tag",
											"source": -1,
											"value": "241"
										},
										{
											"begin": 4344,
											"end": 4346,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "242"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "219"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "242"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4434,
											"end": 4497,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4534,
											"end": 4536,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 4573,
											"end": 4595,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 4573,
											"end": 4595,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "243"
										},
										{
											"begin": 72,
											"end": 92,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "219"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "243"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4338,
											"end": 4729,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 4338,
											"end": 4729,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 4542,
											"end": 4605,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 4542,
											"end": 4605,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4642,
											"end": 4644,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 4681,
											"end": 4703,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4681,
											"end": 4703,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4681,
											"end": 4703,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4681,
											"end": 4703,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3503,
											"end": 3523,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 3503,
											"end": 3523,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4338,
											"end": 4729,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 4736,
											"end": 5100,
											"name": "tag",
											"source": -1,
											"value": "37"
										},
										{
											"begin": 4736,
											"end": 5100,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4736,
											"end": 5100,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4736,
											"end": 5100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 4856,
											"end": 4858,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 4844,
											"end": 4853,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 4835,
											"end": 4842,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 4831,
											"end": 4854,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4827,
											"end": 4859,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 4824,
											"end": 4826,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4824,
											"end": 4826,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "245"
										},
										{
											"begin": 4824,
											"end": 4826,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4862,
											"end": 4874,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4824,
											"end": 4826,
											"name": "tag",
											"source": -1,
											"value": "245"
										},
										{
											"begin": 4824,
											"end": 4826,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "246"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "219"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "246"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4914,
											"end": 4977,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5032,
											"end": 5084,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "247"
										},
										{
											"begin": 5076,
											"end": 5083,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 5014,
											"end": 5016,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 5052,
											"end": 5074,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 5052,
											"end": 5074,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5032,
											"end": 5084,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "228"
										},
										{
											"begin": 5032,
											"end": 5084,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 5032,
											"end": 5084,
											"name": "tag",
											"source": -1,
											"value": "247"
										},
										{
											"begin": 5032,
											"end": 5084,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5022,
											"end": 5084,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5022,
											"end": 5084,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 5100,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 5100,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 5100,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 5100,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 5100,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 5100,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 5107,
											"end": 5473,
											"name": "tag",
											"source": -1,
											"value": "67"
										},
										{
											"begin": 5107,
											"end": 5473,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5107,
											"end": 5473,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5107,
											"end": 5473,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5228,
											"end": 5230,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 5216,
											"end": 5225,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 5207,
											"end": 5214,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 5203,
											"end": 5226,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5199,
											"end": 5231,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 5196,
											"end": 5198,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5196,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "249"
										},
										{
											"begin": 5196,
											"end": 5198,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 5234,
											"end": 5246,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5196,
											"end": 5198,
											"name": "tag",
											"source": -1,
											"value": "249"
										},
										{
											"begin": 5196,
											"end": 5198,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "250"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "219"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "250"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5286,
											"end": 5349,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 5386,
											"end": 5388,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 5425,
											"end": 5447,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 5425,
											"end": 5447,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5425,
											"end": 5447,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 5425,
											"end": 5447,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3503,
											"end": 3523,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 3503,
											"end": 3523,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5190,
											"end": 5473,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 5480,
											"end": 5737,
											"name": "tag",
											"source": -1,
											"value": "93"
										},
										{
											"begin": 5480,
											"end": 5737,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5480,
											"end": 5737,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5592,
											"end": 5594,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5589,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 5571,
											"end": 5578,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 5567,
											"end": 5590,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5563,
											"end": 5595,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 5560,
											"end": 5562,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5560,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "252"
										},
										{
											"begin": 5560,
											"end": 5562,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 5598,
											"end": 5610,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5560,
											"end": 5562,
											"name": "tag",
											"source": -1,
											"value": "252"
										},
										{
											"begin": 5560,
											"end": 5562,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 364,
											"end": 370,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 358,
											"end": 371,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 19662,
											"end": 19667,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 18172,
											"end": 18185,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 18165,
											"end": 18186,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 19640,
											"end": 19645,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 19637,
											"end": 19669,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 19627,
											"end": 19629,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "239"
										},
										{
											"begin": 19627,
											"end": 19629,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 19673,
											"end": 19685,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5744,
											"end": 6066,
											"name": "tag",
											"source": -1,
											"value": "170"
										},
										{
											"begin": 5744,
											"end": 6066,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5744,
											"end": 6066,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5888,
											"end": 5891,
											"name": "PUSH",
											"source": -1,
											"value": "180"
										},
										{
											"begin": 5888,
											"end": 5891,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5876,
											"end": 5885,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 5867,
											"end": 5874,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5859,
											"end": 5892,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 5856,
											"end": 5858,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5856,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "255"
										},
										{
											"begin": 5856,
											"end": 5858,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 5895,
											"end": 5907,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5856,
											"end": 5858,
											"name": "tag",
											"source": -1,
											"value": "255"
										},
										{
											"begin": 5856,
											"end": 5858,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1035,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "256"
										},
										{
											"begin": 5888,
											"end": 5891,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1035,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "224"
										},
										{
											"begin": 1035,
											"end": 1057,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 1035,
											"end": 1057,
											"name": "tag",
											"source": -1,
											"value": "256"
										},
										{
											"begin": 1035,
											"end": 1057,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1148,
											"end": 1249,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "257"
										},
										{
											"begin": 1245,
											"end": 1248,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1221,
											"end": 1243,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1148,
											"end": 1249,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "220"
										},
										{
											"begin": 1148,
											"end": 1249,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 1148,
											"end": 1249,
											"name": "tag",
											"source": -1,
											"value": "257"
										},
										{
											"begin": 1148,
											"end": 1249,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1130,
											"end": 1146,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1123,
											"end": 1250,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1354,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "258"
										},
										{
											"begin": 1410,
											"end": 1413,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1321,
											"end": 1323,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1390,
											"end": 1399,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1386,
											"end": 1408,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1354,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "225"
										},
										{
											"begin": 1354,
											"end": 1414,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 1354,
											"end": 1414,
											"name": "tag",
											"source": -1,
											"value": "258"
										},
										{
											"begin": 1354,
											"end": 1414,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1321,
											"end": 1323,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1345,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1336,
											"end": 1352,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1329,
											"end": 1415,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1524,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "259"
										},
										{
											"begin": 1580,
											"end": 1583,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1491,
											"end": 1493,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1524,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "225"
										},
										{
											"begin": 1524,
											"end": 1584,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 1524,
											"end": 1584,
											"name": "tag",
											"source": -1,
											"value": "259"
										},
										{
											"begin": 1524,
											"end": 1584,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1491,
											"end": 1493,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 1510,
											"end": 1515,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1522,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1499,
											"end": 1585,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1695,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "260"
										},
										{
											"begin": 1751,
											"end": 1754,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1662,
											"end": 1664,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 1731,
											"end": 1740,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1727,
											"end": 1749,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1695,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "225"
										},
										{
											"begin": 1695,
											"end": 1755,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 1695,
											"end": 1755,
											"name": "tag",
											"source": -1,
											"value": "260"
										},
										{
											"begin": 1695,
											"end": 1755,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1662,
											"end": 1664,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 1681,
											"end": 1686,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1677,
											"end": 1693,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1670,
											"end": 1756,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "261"
										},
										{
											"begin": 1928,
											"end": 1931,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1838,
											"end": 1841,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 1908,
											"end": 1917,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1904,
											"end": 1926,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "225"
										},
										{
											"begin": 1872,
											"end": 1932,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 1872,
											"end": 1932,
											"name": "tag",
											"source": -1,
											"value": "261"
										},
										{
											"begin": 1872,
											"end": 1932,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1838,
											"end": 1841,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 1858,
											"end": 1863,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1854,
											"end": 1870,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1847,
											"end": 1933,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2047,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "262"
										},
										{
											"begin": 2103,
											"end": 2106,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2013,
											"end": 2016,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 2083,
											"end": 2092,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 2079,
											"end": 2101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2047,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "225"
										},
										{
											"begin": 2047,
											"end": 2107,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 2047,
											"end": 2107,
											"name": "tag",
											"source": -1,
											"value": "262"
										},
										{
											"begin": 2047,
											"end": 2107,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2013,
											"end": 2016,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 2033,
											"end": 2038,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2029,
											"end": 2045,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2022,
											"end": 2108,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2218,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "263"
										},
										{
											"begin": 2273,
											"end": 2276,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2184,
											"end": 2187,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": 2253,
											"end": 2262,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 2249,
											"end": 2271,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2218,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "231"
										},
										{
											"begin": 2218,
											"end": 2277,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 2218,
											"end": 2277,
											"name": "tag",
											"source": -1,
											"value": "263"
										},
										{
											"begin": 2218,
											"end": 2277,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2184,
											"end": 2187,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2200,
											"end": 2216,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2193,
											"end": 2278,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2382,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "264"
										},
										{
											"begin": 2438,
											"end": 2441,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2348,
											"end": 2351,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": 2418,
											"end": 2427,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 2414,
											"end": 2436,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2382,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "216"
										},
										{
											"begin": 2382,
											"end": 2442,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 2382,
											"end": 2442,
											"name": "tag",
											"source": -1,
											"value": "264"
										},
										{
											"begin": 2382,
											"end": 2442,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2348,
											"end": 2351,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": 2368,
											"end": 2373,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2364,
											"end": 2380,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2357,
											"end": 2443,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2522,
											"end": 2525,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 2558,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "265"
										},
										{
											"begin": 2614,
											"end": 2617,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 2522,
											"end": 2525,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2594,
											"end": 2603,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2558,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "216"
										},
										{
											"begin": 2558,
											"end": 2618,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 2558,
											"end": 2618,
											"name": "tag",
											"source": -1,
											"value": "265"
										},
										{
											"begin": 2558,
											"end": 2618,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2538,
											"end": 2556,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2538,
											"end": 2556,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2538,
											"end": 2556,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2531,
											"end": 2619,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2700,
											"end": 2703,
											"name": "PUSH",
											"source": -1,
											"value": "120"
										},
										{
											"begin": 2736,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "266"
										},
										{
											"begin": 2792,
											"end": 2795,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 2768,
											"end": 2790,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 2768,
											"end": 2790,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2768,
											"end": 2790,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2736,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "216"
										},
										{
											"begin": 2736,
											"end": 2796,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 2736,
											"end": 2796,
											"name": "tag",
											"source": -1,
											"value": "266"
										},
										{
											"begin": 2736,
											"end": 2796,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2716,
											"end": 2734,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2716,
											"end": 2734,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2716,
											"end": 2734,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2709,
											"end": 2797,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2881,
											"end": 2884,
											"name": "PUSH",
											"source": -1,
											"value": "140"
										},
										{
											"begin": 2917,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "267"
										},
										{
											"begin": 2973,
											"end": 2976,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 2949,
											"end": 2971,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 2949,
											"end": 2971,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2949,
											"end": 2971,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2917,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "216"
										},
										{
											"begin": 2917,
											"end": 2977,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 2917,
											"end": 2977,
											"name": "tag",
											"source": -1,
											"value": "267"
										},
										{
											"begin": 2917,
											"end": 2977,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2897,
											"end": 2915,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2897,
											"end": 2915,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2897,
											"end": 2915,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2890,
											"end": 2978,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3037,
											"end": 3040,
											"name": "PUSH",
											"source": -1,
											"value": "160"
										},
										{
											"begin": 3073,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "268"
										},
										{
											"begin": 3127,
											"end": 3130,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 3103,
											"end": 3125,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 3103,
											"end": 3125,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3103,
											"end": 3125,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3073,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "234"
										},
										{
											"begin": 3073,
											"end": 3131,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 3073,
											"end": 3131,
											"name": "tag",
											"source": -1,
											"value": "268"
										},
										{
											"begin": 3073,
											"end": 3131,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3046,
											"end": 3132,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3057,
											"end": 3062,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 5850,
											"end": 6066,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5850,
											"end": 6066,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 6073,
											"end": 6336,
											"name": "tag",
											"source": -1,
											"value": "85"
										},
										{
											"begin": 6073,
											"end": 6336,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6073,
											"end": 6336,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6188,
											"end": 6190,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 6176,
											"end": 6185,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 6167,
											"end": 6174,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 6163,
											"end": 6186,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6159,
											"end": 6191,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 6156,
											"end": 6158,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 6156,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "270"
										},
										{
											"begin": 6156,
											"end": 6158,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6194,
											"end": 6206,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 6156,
											"end": 6158,
											"name": "tag",
											"source": -1,
											"value": "270"
										},
										{
											"begin": 6156,
											"end": 6158,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3651,
											"end": 3664,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 3651,
											"end": 3664,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 6150,
											"end": 6336,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6150,
											"end": 6336,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 6343,
											"end": 6709,
											"name": "tag",
											"source": -1,
											"value": "28"
										},
										{
											"begin": 6343,
											"end": 6709,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6343,
											"end": 6709,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6343,
											"end": 6709,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 6464,
											"end": 6466,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 6452,
											"end": 6461,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 6443,
											"end": 6450,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 6439,
											"end": 6462,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6435,
											"end": 6467,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 6432,
											"end": 6434,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 6432,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "272"
										},
										{
											"begin": 6432,
											"end": 6434,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 6470,
											"end": 6482,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 6432,
											"end": 6434,
											"name": "tag",
											"source": -1,
											"value": "272"
										},
										{
											"begin": 6432,
											"end": 6434,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3516,
											"end": 3522,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3503,
											"end": 3523,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 6522,
											"end": 6585,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 6522,
											"end": 6585,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6622,
											"end": 6624,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 6665,
											"end": 6674,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 6661,
											"end": 6683,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "273"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "219"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "273"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6630,
											"end": 6693,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 6630,
											"end": 6693,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 6630,
											"end": 6693,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6630,
											"end": 6693,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6426,
											"end": 6709,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 6426,
											"end": 6709,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6426,
											"end": 6709,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 6426,
											"end": 6709,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6426,
											"end": 6709,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6426,
											"end": 6709,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 6716,
											"end": 7207,
											"name": "tag",
											"source": -1,
											"value": "76"
										},
										{
											"begin": 6716,
											"end": 7207,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6716,
											"end": 7207,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6716,
											"end": 7207,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 6716,
											"end": 7207,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6854,
											"end": 6856,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 6842,
											"end": 6851,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 6833,
											"end": 6840,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 6829,
											"end": 6852,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6825,
											"end": 6857,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 6822,
											"end": 6824,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 6822,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "275"
										},
										{
											"begin": 6822,
											"end": 6824,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 6860,
											"end": 6872,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 6822,
											"end": 6824,
											"name": "tag",
											"source": -1,
											"value": "275"
										},
										{
											"begin": 6822,
											"end": 6824,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3516,
											"end": 3522,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3503,
											"end": 3523,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 6912,
											"end": 6975,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 6912,
											"end": 6975,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 7055,
											"end": 7064,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 7051,
											"end": 7073,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3503,
											"end": 3523,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 7020,
											"end": 7083,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 7020,
											"end": 7083,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7120,
											"end": 7122,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 7163,
											"end": 7172,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 7159,
											"end": 7181,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "276"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "219"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "276"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7128,
											"end": 7191,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 7128,
											"end": 7191,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 7128,
											"end": 7191,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7128,
											"end": 7191,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6816,
											"end": 7207,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 6816,
											"end": 7207,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6816,
											"end": 7207,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 6816,
											"end": 7207,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6816,
											"end": 7207,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 6816,
											"end": 7207,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7214,
											"end": 7703,
											"name": "tag",
											"source": -1,
											"value": "49"
										},
										{
											"begin": 7214,
											"end": 7703,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7214,
											"end": 7703,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7214,
											"end": 7703,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 7214,
											"end": 7703,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7351,
											"end": 7353,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 7339,
											"end": 7348,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 7330,
											"end": 7337,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 7326,
											"end": 7349,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7322,
											"end": 7354,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 7319,
											"end": 7321,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 7319,
											"end": 7321,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "278"
										},
										{
											"begin": 7319,
											"end": 7321,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 7357,
											"end": 7369,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 7319,
											"end": 7321,
											"name": "tag",
											"source": -1,
											"value": "278"
										},
										{
											"begin": 7319,
											"end": 7321,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3516,
											"end": 3522,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3503,
											"end": 3523,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 7409,
											"end": 7472,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 7409,
											"end": 7472,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7509,
											"end": 7511,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 7552,
											"end": 7561,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 7548,
											"end": 7570,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3503,
											"end": 3523,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 7517,
											"end": 7580,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 7517,
											"end": 7580,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7635,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "279"
										},
										{
											"begin": 7679,
											"end": 7686,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 7617,
											"end": 7619,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 7659,
											"end": 7668,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 7655,
											"end": 7677,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7635,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "228"
										},
										{
											"begin": 7635,
											"end": 7687,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 7635,
											"end": 7687,
											"name": "tag",
											"source": -1,
											"value": "279"
										},
										{
											"begin": 7635,
											"end": 7687,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7625,
											"end": 7687,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 7625,
											"end": 7687,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7313,
											"end": 7703,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 7313,
											"end": 7703,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7313,
											"end": 7703,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 7313,
											"end": 7703,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7313,
											"end": 7703,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 7313,
											"end": 7703,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 10674,
											"end": 10945,
											"name": "tag",
											"source": -1,
											"value": "196"
										},
										{
											"begin": 10674,
											"end": 10945,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 10674,
											"end": 10945,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8139,
											"end": 8144,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17642,
											"end": 17654,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 19253,
											"end": 19354,
											"name": "tag",
											"source": -1,
											"value": "281"
										},
										{
											"begin": 19253,
											"end": 19354,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 19267,
											"end": 19273,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 19264,
											"end": 19265,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 19261,
											"end": 19274,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 19253,
											"end": 19354,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 19253,
											"end": 19354,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "283"
										},
										{
											"begin": 19253,
											"end": 19354,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 8283,
											"end": 8287,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 19334,
											"end": 19345,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 19334,
											"end": 19345,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 19334,
											"end": 19345,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 19334,
											"end": 19345,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 19334,
											"end": 19345,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 19328,
											"end": 19346,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 19315,
											"end": 19326,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 19315,
											"end": 19326,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 19315,
											"end": 19326,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 19308,
											"end": 19347,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 19282,
											"end": 19292,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 19253,
											"end": 19354,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "281"
										},
										{
											"begin": 19253,
											"end": 19354,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 19253,
											"end": 19354,
											"name": "tag",
											"source": -1,
											"value": "283"
										},
										{
											"begin": 19253,
											"end": 19354,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 19369,
											"end": 19375,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 19366,
											"end": 19367,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 19363,
											"end": 19376,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 19360,
											"end": 19362,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 19360,
											"end": 19362,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "284"
										},
										{
											"begin": 19360,
											"end": 19362,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 19425,
											"end": 19431,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 19420,
											"end": 19423,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 19416,
											"end": 19432,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 19409,
											"end": 19436,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 19360,
											"end": 19362,
											"name": "tag",
											"source": -1,
											"value": "284"
										},
										{
											"begin": 19360,
											"end": 19362,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8314,
											"end": 8330,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 8314,
											"end": 8330,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 8314,
											"end": 8330,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 8314,
											"end": 8330,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8314,
											"end": 8330,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 10808,
											"end": 10945,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10808,
											"end": 10945,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 10952,
											"end": 11174,
											"name": "tag",
											"source": -1,
											"value": "34"
										},
										{
											"begin": 10952,
											"end": 11174,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 7930,
											"end": 7967,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7930,
											"end": 7967,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11079,
											"end": 11081,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 11064,
											"end": 11082,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11064,
											"end": 11082,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 11050,
											"end": 11174,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 11426,
											"end": 11902,
											"name": "tag",
											"source": -1,
											"value": "88"
										},
										{
											"begin": 11426,
											"end": 11902,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 7789,
											"end": 7847,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7789,
											"end": 7847,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 11805,
											"end": 11807,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 11790,
											"end": 11808,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 11790,
											"end": 11808,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7789,
											"end": 7847,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11888,
											"end": 11890,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 11873,
											"end": 11891,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 11873,
											"end": 11891,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11625,
											"end": 11627,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 11610,
											"end": 11628,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11610,
											"end": 11628,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 11596,
											"end": 11902,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 11909,
											"end": 12242,
											"name": "tag",
											"source": -1,
											"value": "143"
										},
										{
											"begin": 11909,
											"end": 12242,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 7930,
											"end": 7967,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 7930,
											"end": 7967,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12228,
											"end": 12230,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 12213,
											"end": 12231,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 12213,
											"end": 12231,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12064,
											"end": 12066,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 12049,
											"end": 12067,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12049,
											"end": 12067,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 12035,
											"end": 12242,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 12249,
											"end": 12709,
											"name": "tag",
											"source": -1,
											"value": "95"
										},
										{
											"begin": 12249,
											"end": 12709,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 7930,
											"end": 7967,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7930,
											"end": 7967,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12604,
											"end": 12606,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 12589,
											"end": 12607,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 12589,
											"end": 12607,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 12695,
											"end": 12697,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 12680,
											"end": 12698,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 12680,
											"end": 12698,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7789,
											"end": 7847,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12440,
											"end": 12442,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 12425,
											"end": 12443,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12425,
											"end": 12443,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 12411,
											"end": 12709,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 12716,
											"end": 13268,
											"name": "tag",
											"source": -1,
											"value": "113"
										},
										{
											"begin": 12716,
											"end": 13268,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 7930,
											"end": 7967,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7930,
											"end": 7967,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13090,
											"end": 13092,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 13075,
											"end": 13093,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 13075,
											"end": 13093,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 13173,
											"end": 13175,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 13158,
											"end": 13176,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 13158,
											"end": 13176,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7930,
											"end": 7967,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 18390,
											"end": 18396,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF"
										},
										{
											"begin": 18379,
											"end": 18397,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 18379,
											"end": 18397,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 18379,
											"end": 18397,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 13254,
											"end": 13256,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 13239,
											"end": 13257,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 13239,
											"end": 13257,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10506,
											"end": 10542,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12925,
											"end": 12928,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 12910,
											"end": 12929,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12910,
											"end": 12929,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 12896,
											"end": 13268,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 13275,
											"end": 13831,
											"name": "tag",
											"source": -1,
											"value": "185"
										},
										{
											"begin": 13275,
											"end": 13831,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 7930,
											"end": 7967,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7930,
											"end": 7967,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13651,
											"end": 13653,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 13636,
											"end": 13654,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 13636,
											"end": 13654,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13734,
											"end": 13736,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 13719,
											"end": 13737,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 13719,
											"end": 13737,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 13817,
											"end": 13819,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 13802,
											"end": 13820,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 13802,
											"end": 13820,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7930,
											"end": 7967,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13486,
											"end": 13489,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 13471,
											"end": 13490,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13471,
											"end": 13490,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 13457,
											"end": 13831,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 13838,
											"end": 14518,
											"name": "tag",
											"source": -1,
											"value": "127"
										},
										{
											"begin": 13838,
											"end": 14518,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 7930,
											"end": 7967,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7930,
											"end": 7967,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14248,
											"end": 14250,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 14233,
											"end": 14251,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 14233,
											"end": 14251,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14331,
											"end": 14333,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 14316,
											"end": 14334,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 14316,
											"end": 14334,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 18390,
											"end": 18396,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF"
										},
										{
											"begin": 18379,
											"end": 18397,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 14412,
											"end": 14414,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 14397,
											"end": 14415,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 14397,
											"end": 14415,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10506,
											"end": 10542,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 14503,
											"end": 14506,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 14488,
											"end": 14507,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14488,
											"end": 14507,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7789,
											"end": 7847,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14083,
											"end": 14086,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 14068,
											"end": 14087,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14068,
											"end": 14087,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 14054,
											"end": 14518,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 14525,
											"end": 14941,
											"name": "tag",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 14525,
											"end": 14941,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 14725,
											"end": 14727,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 14739,
											"end": 14786,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 14739,
											"end": 14786,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14739,
											"end": 14786,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8567,
											"end": 8569,
											"name": "PUSH",
											"source": -1,
											"value": "14"
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17940,
											"end": 17959,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "11985B1B189858DAC81B9BDD08185B1B1BDDD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17980,
											"end": 17994,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 17980,
											"end": 17994,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17980,
											"end": 17994,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8583,
											"end": 8626,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8645,
											"end": 8657,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 8645,
											"end": 8657,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8645,
											"end": 8657,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 14696,
											"end": 14941,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 14948,
											"end": 15364,
											"name": "tag",
											"source": -1,
											"value": "162"
										},
										{
											"begin": 14948,
											"end": 15364,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 15148,
											"end": 15150,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 15162,
											"end": 15209,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 15162,
											"end": 15209,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 15162,
											"end": 15209,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8896,
											"end": 8898,
											"name": "PUSH",
											"source": -1,
											"value": "26"
										},
										{
											"begin": 15133,
											"end": 15151,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 15133,
											"end": 15151,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 15133,
											"end": 15151,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17940,
											"end": 17959,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8932,
											"end": 8966,
											"name": "PUSH",
											"source": -1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 17980,
											"end": 17994,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 17980,
											"end": 17994,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17980,
											"end": 17994,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8912,
											"end": 8967,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8987,
											"end": 8999,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 8987,
											"end": 8999,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 8987,
											"end": 8999,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8980,
											"end": 9010,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9029,
											"end": 9041,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 9029,
											"end": 9041,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9029,
											"end": 9041,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 15119,
											"end": 15364,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 15371,
											"end": 15787,
											"name": "tag",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 15371,
											"end": 15787,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 15571,
											"end": 15573,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 15585,
											"end": 15632,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 15585,
											"end": 15632,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 15585,
											"end": 15632,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9280,
											"end": 9282,
											"name": "PUSH",
											"source": -1,
											"value": "13"
										},
										{
											"begin": 15556,
											"end": 15574,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 15556,
											"end": 15574,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 15556,
											"end": 15574,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17940,
											"end": 17959,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "149958D95A5D99481B9BDD08185B1B1BDDD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17980,
											"end": 17994,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 17980,
											"end": 17994,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17980,
											"end": 17994,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9296,
											"end": 9338,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9357,
											"end": 9369,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 9357,
											"end": 9369,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9357,
											"end": 9369,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 15542,
											"end": 15787,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 15794,
											"end": 16210,
											"name": "tag",
											"source": -1,
											"value": "123"
										},
										{
											"begin": 15794,
											"end": 16210,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 15994,
											"end": 15996,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 16008,
											"end": 16055,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 16008,
											"end": 16055,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 16008,
											"end": 16055,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15979,
											"end": 15997,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 15979,
											"end": 15997,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 15979,
											"end": 15997,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17940,
											"end": 17959,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9644,
											"end": 9678,
											"name": "PUSH",
											"source": -1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 17980,
											"end": 17994,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 17980,
											"end": 17994,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17980,
											"end": 17994,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9624,
											"end": 9679,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9698,
											"end": 9710,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 9698,
											"end": 9710,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9698,
											"end": 9710,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 15965,
											"end": 16210,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 16217,
											"end": 16633,
											"name": "tag",
											"source": -1,
											"value": "202"
										},
										{
											"begin": 16217,
											"end": 16633,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 16417,
											"end": 16419,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 16431,
											"end": 16478,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 16431,
											"end": 16478,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 16431,
											"end": 16478,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9949,
											"end": 9951,
											"name": "PUSH",
											"source": -1,
											"value": "13"
										},
										{
											"begin": 16402,
											"end": 16420,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 16402,
											"end": 16420,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 16402,
											"end": 16420,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17940,
											"end": 17959,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "11551217D514905394D1915497D19052531151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17980,
											"end": 17994,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 17980,
											"end": 17994,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17980,
											"end": 17994,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9965,
											"end": 10007,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10026,
											"end": 10038,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 10026,
											"end": 10038,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10026,
											"end": 10038,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 16388,
											"end": 16633,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 16640,
											"end": 17056,
											"name": "tag",
											"source": -1,
											"value": "180"
										},
										{
											"begin": 16640,
											"end": 17056,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 16840,
											"end": 16842,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 16854,
											"end": 16901,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 16854,
											"end": 16901,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 16854,
											"end": 16901,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10277,
											"end": 10279,
											"name": "PUSH",
											"source": -1,
											"value": "27"
										},
										{
											"begin": 16825,
											"end": 16843,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 16825,
											"end": 16843,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 16825,
											"end": 16843,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17940,
											"end": 17959,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10313,
											"end": 10347,
											"name": "PUSH",
											"source": -1,
											"value": "6D73672E76616C7565206973206C657373207468616E2072657061796D656E74"
										},
										{
											"begin": 17980,
											"end": 17994,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 17980,
											"end": 17994,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17980,
											"end": 17994,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10293,
											"end": 10348,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10368,
											"end": 10380,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 10368,
											"end": 10380,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 10368,
											"end": 10380,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10361,
											"end": 10392,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10411,
											"end": 10423,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 10411,
											"end": 10423,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10411,
											"end": 10423,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 16811,
											"end": 17056,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 17063,
											"end": 17285,
											"name": "tag",
											"source": -1,
											"value": "101"
										},
										{
											"begin": 17063,
											"end": 17285,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10662,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17190,
											"end": 17192,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 17175,
											"end": 17193,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17175,
											"end": 17193,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 17161,
											"end": 17285,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 17292,
											"end": 17548,
											"name": "tag",
											"source": -1,
											"value": "224"
										},
										{
											"begin": 17292,
											"end": 17548,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 17354,
											"end": 17356,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 17348,
											"end": 17357,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 17380,
											"end": 17397,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 17380,
											"end": 17397,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 17380,
											"end": 17397,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17455,
											"end": 17473,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17440,
											"end": 17474,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 17440,
											"end": 17474,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 17476,
											"end": 17498,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17476,
											"end": 17498,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17476,
											"end": 17498,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 17437,
											"end": 17499,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 17434,
											"end": 17436,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 17434,
											"end": 17436,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "301"
										},
										{
											"begin": 17434,
											"end": 17436,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 17512,
											"end": 17513,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 17512,
											"end": 17513,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17502,
											"end": 17514,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 17434,
											"end": 17436,
											"name": "tag",
											"source": -1,
											"value": "301"
										},
										{
											"begin": 17434,
											"end": 17436,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 17354,
											"end": 17356,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 17521,
											"end": 17543,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17332,
											"end": 17548,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 17332,
											"end": 17548,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17332,
											"end": 17548,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 19457,
											"end": 19574,
											"name": "tag",
											"source": -1,
											"value": "219"
										},
										{
											"begin": 19457,
											"end": 19574,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 18471,
											"end": 18525,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 19516,
											"end": 19551,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 19516,
											"end": 19551,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 19506,
											"end": 19508,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "303"
										},
										{
											"begin": 19506,
											"end": 19508,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 19565,
											"end": 19566,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 19565,
											"end": 19566,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 19555,
											"end": 19567,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 19506,
											"end": 19508,
											"name": "tag",
											"source": -1,
											"value": "303"
										},
										{
											"begin": 19506,
											"end": 19508,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 19500,
											"end": 19574,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19500,
											"end": 19574,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"borrowETH(uint256,uint256,uint16)": "7d5155fd",
							"depositETH(address,uint16)": "58c22be7",
							"emergencyEtherTransfer(address,uint256)": "eed88b8d",
							"emergencyTokenTransfer(address,address,uint256)": "a3d5b255",
							"getAWETHAddress()": "3a21afac",
							"getLendingPoolAddress()": "5f36a742",
							"getWETHAddress()": "affa8817",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"repayETH(uint256,uint256,address)": "f538ba51",
							"transferOwnership(address)": "f2fde38b",
							"withdrawETH(uint256,address)": "36118b52"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"weth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interesRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"borrowETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyEtherTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAWETHAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWETHAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"repayETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"borrowETH(uint256,uint256,uint16)\":{\"details\":\"borrow WETH, unwraps to ETH and send both the ETH and DebtTokens to msg.sender, via `approveDelegation` and onBehalf argument in `LendingPool.borrow`.\",\"params\":{\"amount\":\"the amount of ETH to borrow\",\"interesRateMode\":\"the interest rate mode\",\"referralCode\":\"integrators are assigned a referral code and can potentially receive rewards\"}},\"constructor\":{\"details\":\"Sets the WETH address and the LendingPoolAddressesProvider address. Infinite approves lending pool.\",\"params\":{\"pool\":\"Address of the LendingPool contract*\",\"weth\":\"Address of the Wrapped Ether contract\"}},\"depositETH(address,uint16)\":{\"details\":\"deposits WETH into the reserve, using native ETH. A corresponding amount of the overlying asset (aTokens) is minted.\",\"params\":{\"onBehalfOf\":\"address of the user who will receive the aTokens representing the deposit\",\"referralCode\":\"integrators are assigned a referral code and can potentially receive rewards.*\"}},\"emergencyEtherTransfer(address,uint256)\":{\"details\":\"transfer native Ether from the utility contract, for native Ether recovery in case of stuck Ether due selfdestructs or transfer ether to pre-computated contract address before deployment.\",\"params\":{\"amount\":\"amount to send\",\"to\":\"recipient of the transfer\"}},\"emergencyTokenTransfer(address,address,uint256)\":{\"details\":\"transfer ERC20 from the utility contract, for ERC20 recovery in case of stuck tokens due direct transfers to the contract address.\",\"params\":{\"amount\":\"amount to send\",\"to\":\"recipient of the transfer\",\"token\":\"token to transfer\"}},\"getAWETHAddress()\":{\"details\":\"Get aWETH address used by WETHGateway\"},\"getLendingPoolAddress()\":{\"details\":\"Get LendingPool address used by WETHGateway\"},\"getWETHAddress()\":{\"details\":\"Get WETH address used by WETHGateway\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"repayETH(uint256,uint256,address)\":{\"details\":\"repays a borrow on the WETH reserve, for the specified amount (or for the whole amount, if uint256(-1) is specified).\",\"params\":{\"amount\":\"the amount to repay, or uint256(-1) if the user wants to repay everything\",\"onBehalfOf\":\"the address for which msg.sender is repaying\",\"rateMode\":\"the rate mode to repay\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawETH(uint256,address)\":{\"details\":\"withdraws the WETH _reserves of msg.sender.\",\"params\":{\"amount\":\"amount of aWETH to withdraw and receive native ETH\",\"to\":\"address of the user who will receive native ETH\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/misc/WETHGateway.sol\":\"WETHGateway\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"keccak256\":\"0xe52c598aa6e76d57665914c1c43fc6fa13bbe3b0bd8e816a6cec1c2bca5014e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a665a54b2277889ba2bdb9c3860b3b71ec7b22757297a03b590a093257604e9d\",\"dweb:/ipfs/QmQ4mm9YnrtvjJwetDec3WoiKeJGoJMCs5kbPBhGVRcZ6N\"]},\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0x6406b04abfeda2c8c80ea3faf797ce4501e66db41fb6ff4e299ebe0402879f44\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://33b0db81db37bd6fe20aa0b23581c6b0edef2f3c49d0bd88b4fe46c1164adb00\",\"dweb:/ipfs/QmYn1zYwt3ahpkLYwHh6h5b1UJrzP2xy5G3at9oEVNw2c1\"]},\"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":{\"keccak256\":\"0xe89abab730aac141126c194f910969c76f55a29536f2709c71c1c0c4ffce5508\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5667cdfe050014996ee748d1891155cc9a40ec5de28804d8c5e4b6c3a34e727\",\"dweb:/ipfs/QmWcSNdBecjXbiEau8QHSdBFes2HXw59H9hhJNjCww1Y8i\"]},\"contracts/interfaces/IAToken.sol\":{\"keccak256\":\"0x75298f98d270973cc1a469a0d72a184c0d9bbc0ae279a05ebcfa248138576681\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://2c92a428d2b9ac20aaadffc0300fd1448635d1a8d57a04f38a41ea116a51d162\",\"dweb:/ipfs/QmPd9qvveX85kcqGcyuZQzz39Y6uPvYohyFaBWJhTpUPk1\"]},\"contracts/interfaces/ILendingPool.sol\":{\"keccak256\":\"0x5fa85a3137312e0d37602723af7408ed97636028699bdf7a7c7cc2dc34cdbafc\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://2f084d52067cbb14f10a00813b17c386681e17e295f878d3d8992cef63e67ac1\",\"dweb:/ipfs/QmWGjEYp4ZHmMxW7zkV8ctsmpc5kAYDw3yqaf1LZGsFFuJ\"]},\"contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0xcb0e2c4c19c0bde86907b6ab45b6a1db4932d3642fc51410d56c9411a65b9f1d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://38d01c9e664c64d46a15bbbda2933b5fb877d33f6746d2db32563962beea9119\",\"dweb:/ipfs/QmajEmcQZz3E6GzmLpeGvnEswuwCjVYy8svqdx8bxi4PuG\"]},\"contracts/interfaces/IScaledBalanceToken.sol\":{\"keccak256\":\"0x03f77c8f37be8f08723b82ccc7c000da0152839632a5c3952c292a2ea0b1b491\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://c8cbe31d5cd705ef15b40c0d9a48dace17797a314fa1d8d93edd412537e8ac98\",\"dweb:/ipfs/QmYuKD5D5NVakZ41XRxHvMUXUG4Hn83E9YyxJMrMCjPZxd\"]},\"contracts/misc/WETHGateway.sol\":{\"keccak256\":\"0x85ad705fef8629204284097f54136c8e0ff46f6766bec4c16fe5e3c79046a40f\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://8d8edb383c9e0c3a8f45be5cd972184aedd6079b95fb0a5d4952f02d873cdecd\",\"dweb:/ipfs/Qmf2at9db84219mEtHtzPbQStCpdyxVNwev5ybbhLHi2xC\"]},\"contracts/misc/interfaces/IWETH.sol\":{\"keccak256\":\"0x69bb82fa6993ab94261fba0ddfdfdfe22c44c068af8fa2d8cc8b4627472c4e2a\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://674a88d9b1e460d6cf8df18874a0fed442b5cd7000786de75b45b4814df1d74c\",\"dweb:/ipfs/QmUT3bExyLkRMQLk4eZJPCTC7ABrqi9UUAVW4VnbR5H8Np\"]},\"contracts/misc/interfaces/IWETHGateway.sol\":{\"keccak256\":\"0x469cf8eaec291debfaf2c6b39491ecab67fdbdebf48de2ba39f765d2f3a00b32\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://aaf938658fe0b602047d658483024c5d13764a23e4a5c67adc90c36e97ee179c\",\"dweb:/ipfs/QmPtqzfXAW5dJjHvagfuohvxVtRx39rkN7uhMRgu5MeJMS\"]},\"contracts/protocol/libraries/configuration/ReserveConfiguration.sol\":{\"keccak256\":\"0x7e3691bd4353fea9391f96894241d929c6528fad315d21281725a1fe61600485\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://8b1beb77c3485458045a4079642cddd3bfe2fd27c87ac95fccde67d18ec21597\",\"dweb:/ipfs/QmV8HQGK6Gb9Va32tzGJ9a52jw2h1vbRJ1osx7bLW49LDi\"]},\"contracts/protocol/libraries/configuration/UserConfiguration.sol\":{\"keccak256\":\"0xa17b77c331710ab7373cc905810f3b6861f865c59e06c8c929d9ffbe58d05c6f\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://6e6faf6aa17a2f0590d0acbe833b36dd46d9e29029e9e556dc56e6f415b07fc2\",\"dweb:/ipfs/QmdKrRVC6Lr2rAwRfJB855PqJKjHjPDFFKnqJwCidFtBm5\"]},\"contracts/protocol/libraries/helpers/Errors.sol\":{\"keccak256\":\"0xfb70949637d81dc9a3883601bb15226981f4c4847f65035e64bf5d120994efeb\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://43fb108a5038fbeb33294d3f4a9e7e4e021bef16f0e7a8a2f3ad9142808c7a8f\",\"dweb:/ipfs/QmUvAnwcuwmprQu4g3r1k3gE2EztuVPGRKJBMVX3KRC8W6\"]},\"contracts/protocol/libraries/helpers/Helpers.sol\":{\"keccak256\":\"0xd513d293086becdf6b507d50a334c6ecffdbffcc5a132f498e73357d89f08a93\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://eb8d7a37fdb4a8b585e6fb6a4bf7f1f73dfeb100a42e2afd2d143c898d6f30dd\",\"dweb:/ipfs/Qmc4iuJGKRDLy4Yik3deNyBmCkRnsBAo9t3UBheCXUSDmd\"]},\"contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0xb1d3ae94d3e4b3bf23b3394d820a3a2b5ba56fd5389f561f3fdd73ed1c60c391\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://47c11d578cc1e0df27e4e85cfe5831a48b78d6e939d34e17db4bc65a54c899fe\",\"dweb:/ipfs/QmYdYLkYFJe3psmQUH1S1uNhGE9xyxeDunuEW9gBPg9vDB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 108,
								"contract": "contracts/misc/WETHGateway.sol:WETHGateway",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/misc/interfaces/IWETH.sol": {
				"IWETH": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "guy",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "src",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"deposit()": "d0e30db0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/misc/interfaces/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/misc/interfaces/IWETH.sol\":{\"keccak256\":\"0x69bb82fa6993ab94261fba0ddfdfdfe22c44c068af8fa2d8cc8b4627472c4e2a\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://674a88d9b1e460d6cf8df18874a0fed442b5cd7000786de75b45b4814df1d74c\",\"dweb:/ipfs/QmUT3bExyLkRMQLk4eZJPCTC7ABrqi9UUAVW4VnbR5H8Np\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/misc/interfaces/IWETHGateway.sol": {
				"IWETHGateway": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interesRateMode",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "borrowETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "depositETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rateMode",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								}
							],
							"name": "repayETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								}
							],
							"name": "withdrawETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"borrowETH(uint256,uint256,uint16)": "7d5155fd",
							"depositETH(address,uint16)": "58c22be7",
							"repayETH(uint256,uint256,address)": "f538ba51",
							"withdrawETH(uint256,address)": "36118b52"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interesRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"borrowETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"repayETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/misc/interfaces/IWETHGateway.sol\":\"IWETHGateway\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/misc/interfaces/IWETHGateway.sol\":{\"keccak256\":\"0x469cf8eaec291debfaf2c6b39491ecab67fdbdebf48de2ba39f765d2f3a00b32\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://aaf938658fe0b602047d658483024c5d13764a23e4a5c67adc90c36e97ee179c\",\"dweb:/ipfs/QmPtqzfXAW5dJjHvagfuohvxVtRx39rkN7uhMRgu5MeJMS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/protocol/libraries/configuration/ReserveConfiguration.sol": {
				"ReserveConfiguration": {
					"abi": [],
					"devdoc": {
						"author": "Aave",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"LIQUIDATION_THRESHOLD_START_BIT_POSITION": {
								"details": "For the LTV, the start bit is 0 (up to 15), hence no bitshifting is needed"
							}
						},
						"title": "ReserveConfiguration library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/protocol/libraries/configuration/ReserveConfiguration.sol\":297:12113  library ReserveConfiguration {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/protocol/libraries/configuration/ReserveConfiguration.sol\":297:12113  library ReserveConfiguration {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122002f45f9ffa6871f35159c4aa08c9edd3e2de74ddb04088fcf4cea0d6123823ce64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122002f45f9ffa6871f35159c4aa08c9edd3e2de74ddb04088fcf4cea0d6123823ce64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL DELEGATECALL 0x5F SWAP16 STATICCALL PUSH9 0x71F35159C4AA08C9ED 0xD3 0xE2 0xDE PUSH21 0xDDB04088FCF4CEA0D6123823CE64736F6C63430006 0xC STOP CALLER ",
							"sourceMap": "297:11816:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122002f45f9ffa6871f35159c4aa08c9edd3e2de74ddb04088fcf4cea0d6123823ce64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL DELEGATECALL 0x5F SWAP16 STATICCALL PUSH9 0x71F35159C4AA08C9ED 0xD3 0xE2 0xDE PUSH21 0xDDB04088FCF4CEA0D6123823CE64736F6C63430006 0xC STOP CALLER ",
							"sourceMap": "297:11816:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getActive(struct DataTypes.ReserveConfigurationMap storage pointer)": "infinite",
								"getBorrowingEnabled(struct DataTypes.ReserveConfigurationMap storage pointer)": "infinite",
								"getDecimals(struct DataTypes.ReserveConfigurationMap storage pointer)": "infinite",
								"getFlags(struct DataTypes.ReserveConfigurationMap storage pointer)": "infinite",
								"getFlagsMemory(struct DataTypes.ReserveConfigurationMap memory)": "infinite",
								"getFrozen(struct DataTypes.ReserveConfigurationMap storage pointer)": "infinite",
								"getLiquidationBonus(struct DataTypes.ReserveConfigurationMap storage pointer)": "infinite",
								"getLiquidationThreshold(struct DataTypes.ReserveConfigurationMap storage pointer)": "infinite",
								"getLtv(struct DataTypes.ReserveConfigurationMap storage pointer)": "infinite",
								"getParams(struct DataTypes.ReserveConfigurationMap storage pointer)": "infinite",
								"getParamsMemory(struct DataTypes.ReserveConfigurationMap memory)": "infinite",
								"getReserveFactor(struct DataTypes.ReserveConfigurationMap storage pointer)": "infinite",
								"getStableRateBorrowingEnabled(struct DataTypes.ReserveConfigurationMap storage pointer)": "infinite",
								"setActive(struct DataTypes.ReserveConfigurationMap memory,bool)": "infinite",
								"setBorrowingEnabled(struct DataTypes.ReserveConfigurationMap memory,bool)": "infinite",
								"setDecimals(struct DataTypes.ReserveConfigurationMap memory,uint256)": "infinite",
								"setFrozen(struct DataTypes.ReserveConfigurationMap memory,bool)": "infinite",
								"setLiquidationBonus(struct DataTypes.ReserveConfigurationMap memory,uint256)": "infinite",
								"setLiquidationThreshold(struct DataTypes.ReserveConfigurationMap memory,uint256)": "infinite",
								"setLtv(struct DataTypes.ReserveConfigurationMap memory,uint256)": "infinite",
								"setReserveFactor(struct DataTypes.ReserveConfigurationMap memory,uint256)": "infinite",
								"setStableRateBorrowingEnabled(struct DataTypes.ReserveConfigurationMap memory,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 297,
									"end": 12113,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "INVALID",
									"source": 11
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122002f45f9ffa6871f35159c4aa08c9edd3e2de74ddb04088fcf4cea0d6123823ce64736f6c634300060c0033",
									".code": [
										{
											"begin": 297,
											"end": 12113,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 297,
											"end": 12113,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 297,
											"end": 12113,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 297,
											"end": 12113,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 297,
											"end": 12113,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 12113,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 297,
											"end": 12113,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 12113,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 297,
											"end": 12113,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Aave\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"LIQUIDATION_THRESHOLD_START_BIT_POSITION\":{\"details\":\"For the LTV, the start bit is 0 (up to 15), hence no bitshifting is needed\"}},\"title\":\"ReserveConfiguration library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Implements the bitmap logic to handle the reserve configuration\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/protocol/libraries/configuration/ReserveConfiguration.sol\":\"ReserveConfiguration\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/protocol/libraries/configuration/ReserveConfiguration.sol\":{\"keccak256\":\"0x7e3691bd4353fea9391f96894241d929c6528fad315d21281725a1fe61600485\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://8b1beb77c3485458045a4079642cddd3bfe2fd27c87ac95fccde67d18ec21597\",\"dweb:/ipfs/QmV8HQGK6Gb9Va32tzGJ9a52jw2h1vbRJ1osx7bLW49LDi\"]},\"contracts/protocol/libraries/helpers/Errors.sol\":{\"keccak256\":\"0xfb70949637d81dc9a3883601bb15226981f4c4847f65035e64bf5d120994efeb\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://43fb108a5038fbeb33294d3f4a9e7e4e021bef16f0e7a8a2f3ad9142808c7a8f\",\"dweb:/ipfs/QmUvAnwcuwmprQu4g3r1k3gE2EztuVPGRKJBMVX3KRC8W6\"]},\"contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0xb1d3ae94d3e4b3bf23b3394d820a3a2b5ba56fd5389f561f3fdd73ed1c60c391\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://47c11d578cc1e0df27e4e85cfe5831a48b78d6e939d34e17db4bc65a54c899fe\",\"dweb:/ipfs/QmYdYLkYFJe3psmQUH1S1uNhGE9xyxeDunuEW9gBPg9vDB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Implements the bitmap logic to handle the reserve configuration",
						"version": 1
					}
				}
			},
			"contracts/protocol/libraries/configuration/UserConfiguration.sol": {
				"UserConfiguration": {
					"abi": [],
					"devdoc": {
						"author": "Aave",
						"kind": "dev",
						"methods": {},
						"title": "UserConfiguration library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/protocol/libraries/configuration/UserConfiguration.sol\":291:4045  library UserConfiguration {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/protocol/libraries/configuration/UserConfiguration.sol\":291:4045  library UserConfiguration {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ce80a6184653964529bff62fe0cb15511b1d5d83fd9a41cecb8ff74155bc52ef64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ce80a6184653964529bff62fe0cb15511b1d5d83fd9a41cecb8ff74155bc52ef64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE DUP1 0xA6 XOR CHAINID MSTORE8 SWAP7 GASLIMIT 0x29 0xBF 0xF6 0x2F 0xE0 0xCB ISZERO MLOAD SHL SAR 0x5D DUP4 REVERT SWAP11 COINBASE 0xCE 0xCB DUP16 0xF7 COINBASE SSTORE 0xBC MSTORE 0xEF PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "291:3754:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ce80a6184653964529bff62fe0cb15511b1d5d83fd9a41cecb8ff74155bc52ef64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE DUP1 0xA6 XOR CHAINID MSTORE8 SWAP7 GASLIMIT 0x29 0xBF 0xF6 0x2F 0xE0 0xCB ISZERO MLOAD SHL SAR 0x5D DUP4 REVERT SWAP11 COINBASE 0xCE 0xCB DUP16 0xF7 COINBASE SSTORE 0xBC MSTORE 0xEF PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "291:3754:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"isBorrowing(struct DataTypes.UserConfigurationMap memory,uint256)": "infinite",
								"isBorrowingAny(struct DataTypes.UserConfigurationMap memory)": "infinite",
								"isEmpty(struct DataTypes.UserConfigurationMap memory)": "infinite",
								"isUsingAsCollateral(struct DataTypes.UserConfigurationMap memory,uint256)": "infinite",
								"isUsingAsCollateralOrBorrowing(struct DataTypes.UserConfigurationMap memory,uint256)": "infinite",
								"setBorrowing(struct DataTypes.UserConfigurationMap storage pointer,uint256,bool)": "infinite",
								"setUsingAsCollateral(struct DataTypes.UserConfigurationMap storage pointer,uint256,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 291,
									"end": 4045,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 291,
									"end": 4045,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 291,
									"end": 4045,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 291,
									"end": 4045,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 291,
									"end": 4045,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 291,
									"end": 4045,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 291,
									"end": 4045,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 291,
									"end": 4045,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 291,
									"end": 4045,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 291,
									"end": 4045,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 4045,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 291,
									"end": 4045,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 291,
									"end": 4045,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 291,
									"end": 4045,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 291,
									"end": 4045,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 291,
									"end": 4045,
									"name": "INVALID",
									"source": 12
								},
								{
									"begin": 291,
									"end": 4045,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 291,
									"end": 4045,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 291,
									"end": 4045,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 291,
									"end": 4045,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 4045,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 291,
									"end": 4045,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 291,
									"end": 4045,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 291,
									"end": 4045,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 291,
									"end": 4045,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 291,
									"end": 4045,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 291,
									"end": 4045,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ce80a6184653964529bff62fe0cb15511b1d5d83fd9a41cecb8ff74155bc52ef64736f6c634300060c0033",
									".code": [
										{
											"begin": 291,
											"end": 4045,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 291,
											"end": 4045,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 291,
											"end": 4045,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 291,
											"end": 4045,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 291,
											"end": 4045,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 291,
											"end": 4045,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 291,
											"end": 4045,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 4045,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 291,
											"end": 4045,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Aave\",\"kind\":\"dev\",\"methods\":{},\"title\":\"UserConfiguration library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Implements the bitmap logic to handle the user configuration\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/protocol/libraries/configuration/UserConfiguration.sol\":\"UserConfiguration\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/protocol/libraries/configuration/UserConfiguration.sol\":{\"keccak256\":\"0xa17b77c331710ab7373cc905810f3b6861f865c59e06c8c929d9ffbe58d05c6f\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://6e6faf6aa17a2f0590d0acbe833b36dd46d9e29029e9e556dc56e6f415b07fc2\",\"dweb:/ipfs/QmdKrRVC6Lr2rAwRfJB855PqJKjHjPDFFKnqJwCidFtBm5\"]},\"contracts/protocol/libraries/helpers/Errors.sol\":{\"keccak256\":\"0xfb70949637d81dc9a3883601bb15226981f4c4847f65035e64bf5d120994efeb\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://43fb108a5038fbeb33294d3f4a9e7e4e021bef16f0e7a8a2f3ad9142808c7a8f\",\"dweb:/ipfs/QmUvAnwcuwmprQu4g3r1k3gE2EztuVPGRKJBMVX3KRC8W6\"]},\"contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0xb1d3ae94d3e4b3bf23b3394d820a3a2b5ba56fd5389f561f3fdd73ed1c60c391\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://47c11d578cc1e0df27e4e85cfe5831a48b78d6e939d34e17db4bc65a54c899fe\",\"dweb:/ipfs/QmYdYLkYFJe3psmQUH1S1uNhGE9xyxeDunuEW9gBPg9vDB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Implements the bitmap logic to handle the user configuration",
						"version": 1
					}
				}
			},
			"contracts/protocol/libraries/helpers/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "BORROW_ALLOWANCE_NOT_ENOUGH",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CALLER_NOT_POOL_ADMIN",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CT_CALLER_MUST_BE_LENDING_POOL",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CT_CANNOT_GIVE_ALLOWANCE_TO_HIMSELF",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CT_INVALID_BURN_AMOUNT",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CT_INVALID_MINT_AMOUNT",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CT_TRANSFER_AMOUNT_NOT_GT_0",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPAPR_INVALID_ADDRESSES_PROVIDER_ID",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPAPR_PROVIDER_NOT_REGISTERED",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPCM_COLLATERAL_CANNOT_BE_LIQUIDATED",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPCM_HEALTH_FACTOR_NOT_BELOW_THRESHOLD",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPCM_NOT_ENOUGH_LIQUIDITY_TO_LIQUIDATE",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPCM_NO_ERRORS",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPCM_SPECIFIED_CURRENCY_NOT_BORROWED_BY_USER",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPC_CALLER_NOT_EMERGENCY_ADMIN",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPC_INVALID_ADDRESSES_PROVIDER_ID",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPC_INVALID_ATOKEN_POOL_ADDRESS",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPC_INVALID_CONFIGURATION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPC_INVALID_STABLE_DEBT_TOKEN_POOL_ADDRESS",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPC_INVALID_STABLE_DEBT_TOKEN_UNDERLYING_ADDRESS",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPC_INVALID_VARIABLE_DEBT_TOKEN_POOL_ADDRESS",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPC_INVALID_VARIABLE_DEBT_TOKEN_UNDERLYING_ADDRESS",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPC_RESERVE_LIQUIDITY_NOT_0",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_CALLER_MUST_BE_AN_ATOKEN",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_CALLER_NOT_LENDING_POOL_CONFIGURATOR",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_FAILED_COLLATERAL_SWAP",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_FAILED_REPAY_WITH_COLLATERAL",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_INCONSISTENT_FLASHLOAN_PARAMS",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_INCONSISTENT_PARAMS_LENGTH",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_INCONSISTENT_PROTOCOL_ACTUAL_BALANCE",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_INTEREST_RATE_REBALANCE_CONDITIONS_NOT_MET",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_INVALID_EQUAL_ASSETS_TO_SWAP",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_INVALID_FLASHLOAN_MODE",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_INVALID_FLASH_LOAN_EXECUTOR_RETURN",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_IS_PAUSED",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_LIQUIDATION_CALL_FAILED",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_NOT_CONTRACT",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_NOT_ENOUGH_LIQUIDITY_TO_BORROW",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_NOT_ENOUGH_STABLE_BORROW_BALANCE",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_NO_MORE_RESERVES_ALLOWED",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_REENTRANCY_NOT_ALLOWED",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_REQUESTED_AMOUNT_TOO_SMALL",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MATH_ADDITION_OVERFLOW",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MATH_DIVISION_BY_ZERO",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MATH_MULTIPLICATION_OVERFLOW",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RC_INVALID_DECIMALS",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RC_INVALID_LIQ_BONUS",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RC_INVALID_LIQ_THRESHOLD",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RC_INVALID_LTV",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RC_INVALID_RESERVE_FACTOR",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RL_LIQUIDITY_INDEX_OVERFLOW",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RL_LIQUIDITY_RATE_OVERFLOW",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RL_RESERVE_ALREADY_INITIALIZED",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RL_STABLE_BORROW_RATE_OVERFLOW",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RL_VARIABLE_BORROW_INDEX_OVERFLOW",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RL_VARIABLE_BORROW_RATE_OVERFLOW",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SDT_BURN_EXCEEDS_BALANCE",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SDT_STABLE_DEBT_OVERFLOW",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UL_INVALID_INDEX",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_AMOUNT_BIGGER_THAN_MAX_LOAN_SIZE_STABLE",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_BORROWING_NOT_ENABLED",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_COLLATERAL_BALANCE_IS_0",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_COLLATERAL_CANNOT_COVER_NEW_BORROW",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_COLLATERAL_SAME_AS_BORROWING_CURRENCY",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_CURRENT_AVAILABLE_LIQUIDITY_NOT_ENOUGH",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_DEPOSIT_ALREADY_IN_USE",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_HEALTH_FACTOR_LOWER_THAN_LIQUIDATION_THRESHOLD",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_INCONSISTENT_FLASHLOAN_PARAMS",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_INVALID_AMOUNT",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_INVALID_INTEREST_RATE_MODE_SELECTED",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_NOT_ENOUGH_AVAILABLE_USER_BALANCE",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_NO_ACTIVE_RESERVE",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_NO_DEBT_OF_SELECTED_TYPE",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_NO_EXPLICIT_AMOUNT_TO_REPAY_ON_BEHALF",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_NO_STABLE_RATE_LOAN_IN_RESERVE",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_NO_VARIABLE_RATE_LOAN_IN_RESERVE",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_RESERVE_FROZEN",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_STABLE_BORROWING_NOT_ENABLED",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_TRANSFER_NOT_ALLOWED",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_UNDERLYING_BALANCE_NOT_GREATER_THAN_0",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aave",
						"details": "Error messages prefix glossary:  - VL = ValidationLogic  - MATH = Math libraries  - CT = Common errors between tokens (AToken, VariableDebtToken and StableDebtToken)  - AT = AToken  - SDT = StableDebtToken  - VDT = VariableDebtToken  - LP = LendingPool  - LPAPR = LendingPoolAddressesProviderRegistry  - LPC = LendingPoolConfiguration  - RL = ReserveLogic  - LPCM = LendingPoolCollateralManager  - P = Pausable",
						"kind": "dev",
						"methods": {},
						"title": "Errors library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/protocol/libraries/helpers/Errors.sol\":660:8924  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":660:8924  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6ba4271f\n      gt\n      tag_82\n      jumpi\n      dup1\n      0xcdad445a\n      gt\n      tag_83\n      jumpi\n      dup1\n      0xe2c16d69\n      gt\n      tag_84\n      jumpi\n      dup1\n      0xf11c6720\n      gt\n      tag_85\n      jumpi\n      dup1\n      0xf11c6720\n      eq\n      tag_77\n      jumpi\n      dup1\n      0xf3d9cc11\n      eq\n      tag_78\n      jumpi\n      dup1\n      0xf902735d\n      eq\n      tag_79\n      jumpi\n      dup1\n      0xfb681def\n      eq\n      tag_80\n      jumpi\n      dup1\n      0xfe75fd26\n      eq\n      tag_81\n      jumpi\n      jump(tag_1)\n    tag_85:\n      dup1\n      0xe2c16d69\n      eq\n      tag_72\n      jumpi\n      dup1\n      0xe6632748\n      eq\n      tag_73\n      jumpi\n      dup1\n      0xe7bf91b3\n      eq\n      tag_74\n      jumpi\n      dup1\n      0xeca85d3a\n      eq\n      tag_75\n      jumpi\n      dup1\n      0xf0473259\n      eq\n      tag_76\n      jumpi\n      jump(tag_1)\n    tag_84:\n      dup1\n      0xd7510e0c\n      gt\n      tag_86\n      jumpi\n      dup1\n      0xd7510e0c\n      eq\n      tag_67\n      jumpi\n      dup1\n      0xd7b079aa\n      eq\n      tag_68\n      jumpi\n      dup1\n      0xdaf23547\n      eq\n      tag_69\n      jumpi\n      dup1\n      0xe0d7dfd7\n      eq\n      tag_70\n      jumpi\n      dup1\n      0xe29425dc\n      eq\n      tag_71\n      jumpi\n      jump(tag_1)\n    tag_86:\n      dup1\n      0xcdad445a\n      eq\n      tag_62\n      jumpi\n      dup1\n      0xd3e370ee\n      eq\n      tag_63\n      jumpi\n      dup1\n      0xd44e8e88\n      eq\n      tag_64\n      jumpi\n      dup1\n      0xd57bb964\n      eq\n      tag_65\n      jumpi\n      dup1\n      0xd6f681b6\n      eq\n      tag_66\n      jumpi\n      jump(tag_1)\n    tag_83:\n      dup1\n      0xa39ed4ff\n      gt\n      tag_87\n      jumpi\n      dup1\n      0xb89652cd\n      gt\n      tag_88\n      jumpi\n      dup1\n      0xb89652cd\n      eq\n      tag_57\n      jumpi\n      dup1\n      0xbd013f5b\n      eq\n      tag_58\n      jumpi\n      dup1\n      0xc09e2618\n      eq\n      tag_59\n      jumpi\n      dup1\n      0xc2d628df\n      eq\n      tag_60\n      jumpi\n      dup1\n      0xcc5fc44c\n      eq\n      tag_61\n      jumpi\n      jump(tag_1)\n    tag_88:\n      dup1\n      0xa39ed4ff\n      eq\n      tag_52\n      jumpi\n      dup1\n      0xa8440241\n      eq\n      tag_53\n      jumpi\n      dup1\n      0xac753236\n      eq\n      tag_54\n      jumpi\n      dup1\n      0xb36a2cf3\n      eq\n      tag_55\n      jumpi\n      dup1\n      0xb72e40c7\n      eq\n      tag_56\n      jumpi\n      jump(tag_1)\n    tag_87:\n      dup1\n      0x7865a627\n      gt\n      tag_89\n      jumpi\n      dup1\n      0x7865a627\n      eq\n      tag_47\n      jumpi\n      dup1\n      0x871938a8\n      eq\n      tag_48\n      jumpi\n      dup1\n      0x91a9fb18\n      eq\n      tag_49\n      jumpi\n      dup1\n      0x9be4f03a\n      eq\n      tag_50\n      jumpi\n      dup1\n      0xa2fbc8ad\n      eq\n      tag_51\n      jumpi\n      jump(tag_1)\n    tag_89:\n      dup1\n      0x6ba4271f\n      eq\n      tag_42\n      jumpi\n      dup1\n      0x6d422aa1\n      eq\n      tag_43\n      jumpi\n      dup1\n      0x708b8dd3\n      eq\n      tag_44\n      jumpi\n      dup1\n      0x71a629da\n      eq\n      tag_45\n      jumpi\n      dup1\n      0x76f19030\n      eq\n      tag_46\n      jumpi\n      jump(tag_1)\n    tag_82:\n      dup1\n      0x3aa786a8\n      gt\n      tag_90\n      jumpi\n      dup1\n      0x4a529f91\n      gt\n      tag_91\n      jumpi\n      dup1\n      0x614cf6a1\n      gt\n      tag_92\n      jumpi\n      dup1\n      0x614cf6a1\n      eq\n      tag_37\n      jumpi\n      dup1\n      0x637a5a12\n      eq\n      tag_38\n      jumpi\n      dup1\n      0x6422b257\n      eq\n      tag_39\n      jumpi\n      dup1\n      0x65344799\n      eq\n      tag_40\n      jumpi\n      dup1\n      0x6ab5e615\n      eq\n      tag_41\n      jumpi\n      jump(tag_1)\n    tag_92:\n      dup1\n      0x4a529f91\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x4fe4f1ab\n      eq\n      tag_33\n      jumpi\n      dup1\n      0x55bab12c\n      eq\n      tag_34\n      jumpi\n      dup1\n      0x5a9786d4\n      eq\n      tag_35\n      jumpi\n      dup1\n      0x5e869ff1\n      eq\n      tag_36\n      jumpi\n      jump(tag_1)\n    tag_91:\n      dup1\n      0x4349e3d8\n      gt\n      tag_93\n      jumpi\n      dup1\n      0x4349e3d8\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x44942004\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x44dc4f70\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x47d25300\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x4927c63a\n      eq\n      tag_31\n      jumpi\n      jump(tag_1)\n    tag_93:\n      dup1\n      0x3aa786a8\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x3b5d25aa\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x3f5d6ec8\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x407374a4\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x41b40ba5\n      eq\n      tag_26\n      jumpi\n      jump(tag_1)\n    tag_90:\n      dup1\n      0x22a6f08e\n      gt\n      tag_94\n      jumpi\n      dup1\n      0x333e8ea8\n      gt\n      tag_95\n      jumpi\n      dup1\n      0x333e8ea8\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x35a9d21d\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x36565ab1\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x3872b0ad\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x390f34ba\n      eq\n      tag_21\n      jumpi\n      jump(tag_1)\n    tag_95:\n      dup1\n      0x22a6f08e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x2ace698a\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x2b34c349\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x2b9c57f6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x2ea347b0\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_94:\n      dup1\n      0x1291a38b\n      gt\n      tag_96\n      jumpi\n      dup1\n      0x1291a38b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x179476c5\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x1befa78d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x1ea7c604\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x1ec68b1d\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_96:\n      dup1\n      0x02454ad3\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x029d2344\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06f355ad\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0b8fd588\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0f5ee482\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8375:8421  string public constant UL_INVALID_INDEX = '77' */\n    tag_2:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_99:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_101\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_99)\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_102\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_102:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6542:6600  string public constant MATH_MULTIPLICATION_OVERFLOW = '48' */\n    tag_3:\n      tag_97\n      tag_104\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4406:4471  string public constant CT_CANNOT_GIVE_ALLOWANCE_TO_HIMSELF = '30' */\n    tag_4:\n      tag_97\n      tag_110\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3949:4018  string public constant LP_INCONSISTENT_PROTOCOL_ACTUAL_BALANCE = '26' */\n    tag_5:\n      tag_97\n      tag_116\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6604:6656  string public constant MATH_ADDITION_OVERFLOW = '49' */\n    tag_6:\n      tag_97\n      tag_122\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7236:7288  string public constant CT_INVALID_MINT_AMOUNT = '56' */\n    tag_7:\n      tag_97\n      tag_128\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1226:1296  string public constant VL_CURRENT_AVAILABLE_LIQUIDITY_NOT_ENOUGH = '4' */\n    tag_8:\n      tag_97\n      tag_134\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8532:8586  string public constant SDT_BURN_EXCEEDS_BALANCE = '80' */\n    tag_9:\n      tag_97\n      tag_140\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6386:6430  string public constant LPCM_NO_ERRORS = '46' */\n    tag_10:\n      tag_97\n      tag_146\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1848:1927  string public constant VL_HEALTH_FACTOR_LOWER_THAN_LIQUIDATION_THRESHOLD = '10' */\n    tag_11:\n      tag_97\n      tag_152\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3708:3771  string public constant LP_NOT_ENOUGH_LIQUIDITY_TO_BORROW = '24' */\n    tag_12:\n      tag_97\n      tag_158\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1991:2058  string public constant VL_COLLATERAL_CANNOT_COVER_NEW_BORROW = '11' */\n    tag_13:\n      tag_97\n      tag_164\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4220:4282  string public constant LP_INCONSISTENT_FLASHLOAN_PARAMS = '28' */\n    tag_14:\n      tag_97\n      tag_170\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7382:7434  string public constant CT_INVALID_BURN_AMOUNT = '58' */\n    tag_15:\n      tag_97\n      tag_176\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7022:7084  string public constant RL_VARIABLE_BORROW_RATE_OVERFLOW = '54' */\n    tag_16:\n      tag_97\n      tag_182\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8177:8242  string public constant LPAPR_INVALID_ADDRESSES_PROVIDER_ID = '72' */\n    tag_17:\n      tag_97\n      tag_188\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3114:3184  string public constant VL_UNDERLYING_BALANCE_NOT_GREATER_THAN_0 = '19' */\n    tag_18:\n      tag_97\n      tag_194\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1557:1610  string public constant VL_BORROWING_NOT_ENABLED = '7' */\n    tag_19:\n      tag_97\n      tag_200\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5341:5421  string public constant LPC_INVALID_VARIABLE_DEBT_TOKEN_UNDERLYING_ADDRESS = '39' */\n    tag_20:\n      tag_97\n      tag_206\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3830:3889  string public constant LP_REQUESTED_AMOUNT_TOO_SMALL = '25' */\n    tag_21:\n      tag_97\n      tag_212\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2358:2430  string public constant VL_AMOUNT_BIGGER_THAN_MAX_LOAN_SIZE_STABLE = '14' */\n    tag_22:\n      tag_97\n      tag_218\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1644:1711  string public constant VL_INVALID_INTEREST_RATE_MODE_SELECTED = '8' */\n    tag_23:\n      tag_97\n      tag_224\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8065:8114  string public constant RC_INVALID_DECIMALS = '70' */\n    tag_24:\n      tag_97\n      tag_230\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6013:6079  string public constant LPCM_COLLATERAL_CANNOT_BE_LIQUIDATED = '43' */\n    tag_25:\n      tag_97\n      tag_236\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5211:5289  string public constant LPC_INVALID_STABLE_DEBT_TOKEN_UNDERLYING_ADDRESS = '38' */\n    tag_26:\n      tag_97\n      tag_242\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6660:6711  string public constant MATH_DIVISION_BY_ZERO = '50' */\n    tag_27:\n      tag_97\n      tag_248\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6814:6877  string public constant RL_VARIABLE_BORROW_INDEX_OVERFLOW = '52' */\n    tag_28:\n      tag_97\n      tag_254\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3356:3421  string public constant LP_NOT_ENOUGH_STABLE_BORROW_BALANCE = '21' */\n    tag_29:\n      tag_97\n      tag_260\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5588:5643  string public constant LPC_INVALID_CONFIGURATION = '75' */\n    tag_30:\n      tag_97\n      tag_266\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2120:2181  string public constant VL_STABLE_BORROWING_NOT_ENABLED = '12' */\n    tag_31:\n      tag_97\n      tag_272\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3619:3675  string public constant LP_LIQUIDATION_CALL_FAILED = '23' */\n    tag_32:\n      tag_97\n      tag_278\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6715:6772  string public constant RL_LIQUIDITY_INDEX_OVERFLOW = '51' */\n    tag_33:\n      tag_97\n      tag_284\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7463:7518  string public constant LP_FAILED_COLLATERAL_SWAP = '60' */\n    tag_34:\n      tag_97\n      tag_290\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5473:5536  string public constant LPC_INVALID_ADDRESSES_PROVIDER_ID = '40' */\n    tag_35:\n      tag_97\n      tag_296\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8011:8061  string public constant RC_INVALID_LIQ_BONUS = '69' */\n    tag_36:\n      tag_97\n      tag_302\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7905:7949  string public constant RC_INVALID_LTV = '67' */\n    tag_37:\n      tag_97\n      tag_308\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8425:8470  string public constant LP_NOT_CONTRACT = '78' */\n    tag_38:\n      tag_97\n      tag_314\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2834:2897  string public constant VL_NO_STABLE_RATE_LOAN_IN_RESERVE = '17' */\n    tag_39:\n      tag_97\n      tag_320\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4739:4796  string public constant LPC_RESERVE_LIQUIDITY_NOT_0 = '34' */\n    tag_40:\n      tag_97\n      tag_326\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2972:3037  string public constant VL_NO_VARIABLE_RATE_LOAN_IN_RESERVE = '18' */\n    tag_41:\n      tag_97\n      tag_332\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4286:4346  string public constant CT_CALLER_MUST_BE_LENDING_POOL = '29' */\n    tag_42:\n      tag_97\n      tag_338\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7131:7191  string public constant RL_STABLE_BORROW_RATE_OVERFLOW = '55' */\n    tag_43:\n      tag_97\n      tag_344\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1756:1811  string public constant VL_COLLATERAL_BALANCE_IS_0 = '9' */\n    tag_44:\n      tag_97\n      tag_350\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6131:6205  string public constant LPCM_SPECIFIED_CURRENCY_NOT_BORROWED_BY_USER = '44' */\n    tag_45:\n      tag_97\n      tag_356\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7773:7830  string public constant LP_NO_MORE_RESERVES_ALLOWED = '65' */\n    tag_46:\n      tag_97\n      tag_362\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1022:1071  string public constant VL_NO_ACTIVE_RESERVE = '2' */\n    tag_47:\n      tag_97\n      tag_368\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":937:983  string public constant VL_INVALID_AMOUNT = '1' */\n    tag_48:\n      tag_97\n      tag_374\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2513:2570  string public constant VL_NO_DEBT_OF_SELECTED_TYPE = '15' */\n    tag_49:\n      tag_97\n      tag_380\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8118:8173  string public constant RC_INVALID_RESERVE_FACTOR = '71' */\n    tag_50:\n      tag_97\n      tag_386\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4518:4575  string public constant CT_TRANSFER_AMOUNT_NOT_GT_0 = '31' */\n    tag_51:\n      tag_97\n      tag_392\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2217:2287  string public constant VL_COLLATERAL_SAME_AS_BORROWING_CURRENCY = '13' */\n    tag_52:\n      tag_97\n      tag_398\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1341:1406  string public constant VL_NOT_ENOUGH_AVAILABLE_USER_BALANCE = '5' */\n    tag_53:\n      tag_97\n      tag_404\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":697:748  string public constant CALLER_NOT_POOL_ADMIN = '33' */\n    tag_54:\n      tag_97\n      tag_410\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4078:4147  string public constant LP_CALLER_NOT_LENDING_POOL_CONFIGURATOR = '27' */\n    tag_55:\n      tag_97\n      tag_416\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8312:8371  string public constant LP_INCONSISTENT_PARAMS_LENGTH = '74' */\n    tag_56:\n      tag_97\n      tag_422\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3487:3562  string public constant LP_INTEREST_RATE_REBALANCE_CONDITIONS_NOT_MET = '22' */\n    tag_57:\n      tag_97\n      tag_428\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7953:8007  string public constant RC_INVALID_LIQ_THRESHOLD = '68' */\n    tag_58:\n      tag_97\n      tag_434\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5085:5159  string public constant LPC_INVALID_VARIABLE_DEBT_TOKEN_POOL_ADDRESS = '37' */\n    tag_59:\n      tag_97\n      tag_440\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7522:7583  string public constant LP_INVALID_EQUAL_ASSETS_TO_SWAP = '61' */\n    tag_60:\n      tag_97\n      tag_446\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6257:6325  string public constant LPCM_NOT_ENOUGH_LIQUIDITY_TO_LIQUIDATE = '45' */\n    tag_61:\n      tag_97\n      tag_452\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8474:8528  string public constant SDT_STABLE_DEBT_OVERFLOW = '79' */\n    tag_62:\n      tag_97\n      tag_458\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5692:5752  string public constant LPC_CALLER_NOT_EMERGENCY_ADMIN = '76' */\n    tag_63:\n      tag_97\n      tag_464\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7834:7901  string public constant LP_INVALID_FLASH_LOAN_EXECUTOR_RETURN = '66' */\n    tag_64:\n      tag_97\n      tag_470\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7707:7749  string public constant LP_IS_PAUSED = '64' */\n    tag_65:\n      tag_97\n      tag_476\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5800:5859  string public constant LPAPR_PROVIDER_NOT_REGISTERED = '41' */\n    tag_66:\n      tag_97\n      tag_482\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1114:1160  string public constant VL_RESERVE_FROZEN = '3' */\n    tag_67:\n      tag_97\n      tag_488\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8246:8308  string public constant VL_INCONSISTENT_FLASHLOAN_PARAMS = '73' */\n    tag_68:\n      tag_97\n      tag_494\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2687:2757  string public constant VL_NO_EXPLICIT_AMOUNT_TO_REPAY_ON_BEHALF = '16' */\n    tag_69:\n      tag_97\n      tag_500\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4961:5033  string public constant LPC_INVALID_STABLE_DEBT_TOKEN_POOL_ADDRESS = '36' */\n    tag_70:\n      tag_97\n      tag_506\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3243:3298  string public constant VL_DEPOSIT_ALREADY_IN_USE = '20' */\n    tag_71:\n      tag_97\n      tag_512\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":791:848  string public constant BORROW_ALLOWANCE_NOT_ENOUGH = '59' */\n    tag_72:\n      tag_97\n      tag_518\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7317:7378  string public constant LP_FAILED_REPAY_WITH_COLLATERAL = '57' */\n    tag_73:\n      tag_97\n      tag_524\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6449:6504  string public constant LP_INVALID_FLASHLOAN_MODE = '47' */\n    tag_74:\n      tag_97\n      tag_530\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7646:7703  string public constant LP_CALLER_MUST_BE_AN_ATOKEN = '63' */\n    tag_75:\n      tag_97\n      tag_536\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4848:4909  string public constant LPC_INVALID_ATOKEN_POOL_ADDRESS = '35' */\n    tag_76:\n      tag_97\n      tag_542\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6925:6981  string public constant RL_LIQUIDITY_RATE_OVERFLOW = '53' */\n    tag_77:\n      tag_97\n      tag_548\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1468:1520  string public constant VL_TRANSFER_NOT_ALLOWED = '6' */\n    tag_78:\n      tag_97\n      tag_554\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7587:7642  string public constant LP_REENTRANCY_NOT_ALLOWED = '62' */\n    tag_79:\n      tag_97\n      tag_560\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5895:5963  string public constant LPCM_HEALTH_FACTOR_NOT_BELOW_THRESHOLD = '42' */\n    tag_80:\n      tag_97\n      tag_566\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4633:4693  string public constant RL_RESERVE_ALREADY_INITIALIZED = '32' */\n    tag_81:\n      tag_97\n      tag_572\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8375:8421  string public constant UL_INVALID_INDEX = '77' */\n    tag_98:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3737)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6542:6600  string public constant MATH_MULTIPLICATION_OVERFLOW = '48' */\n    tag_104:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf3, 0x0687)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4406:4471  string public constant CT_CANNOT_GIVE_ALLOWANCE_TO_HIMSELF = '30' */\n    tag_110:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf4, 0x0333)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3949:4018  string public constant LP_INCONSISTENT_PROTOCOL_ACTUAL_BALANCE = '26' */\n    tag_116:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x191b)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6604:6656  string public constant MATH_ADDITION_OVERFLOW = '49' */\n    tag_122:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3439)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7236:7288  string public constant CT_INVALID_MINT_AMOUNT = '56' */\n    tag_128:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x1a9b)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1226:1296  string public constant VL_CURRENT_AVAILABLE_LIQUIDITY_NOT_ENOUGH = '4' */\n    tag_134:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xfa, 0x0d)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8532:8586  string public constant SDT_BURN_EXCEEDS_BALANCE = '80' */\n    tag_140:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf4, 0x0383)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6386:6430  string public constant LPCM_NO_ERRORS = '46' */\n    tag_146:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x1a1b)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1848:1927  string public constant VL_HEALTH_FACTOR_LOWER_THAN_LIQUIDATION_THRESHOLD = '10' */\n    tag_152:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf4, 0x0313)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3708:3771  string public constant LP_NOT_ENOUGH_LIQUIDITY_TO_BORROW = '24' */\n    tag_158:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf2, 0x0c8d)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1991:2058  string public constant VL_COLLATERAL_CANNOT_COVER_NEW_BORROW = '11' */\n    tag_164:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3131)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4220:4282  string public constant LP_INCONSISTENT_FLASHLOAN_PARAMS = '28' */\n    tag_170:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf3, 0x0647)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7382:7434  string public constant CT_INVALID_BURN_AMOUNT = '58' */\n    tag_176:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf3, 0x06a7)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7022:7084  string public constant RL_VARIABLE_BORROW_RATE_OVERFLOW = '54' */\n    tag_182:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf2, 0x0d4d)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8177:8242  string public constant LPAPR_INVALID_ADDRESSES_PROVIDER_ID = '72' */\n    tag_188:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x1b99)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3114:3184  string public constant VL_UNDERLYING_BALANCE_NOT_GREATER_THAN_0 = '19' */\n    tag_194:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3139)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1557:1610  string public constant VL_BORROWING_NOT_ENABLED = '7' */\n    tag_200:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf8, 0x37)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5341:5421  string public constant LPC_INVALID_VARIABLE_DEBT_TOKEN_UNDERLYING_ADDRESS = '39' */\n    tag_206:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3339)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3830:3889  string public constant LP_REQUESTED_AMOUNT_TOO_SMALL = '25' */\n    tag_212:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3235)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2358:2430  string public constant VL_AMOUNT_BIGGER_THAN_MAX_LOAN_SIZE_STABLE = '14' */\n    tag_218:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf2, 0x0c4d)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1644:1711  string public constant VL_INVALID_INTEREST_RATE_MODE_SELECTED = '8' */\n    tag_224:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xfb, 0x07)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8065:8114  string public constant RC_INVALID_DECIMALS = '70' */\n    tag_230:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf4, 0x0373)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6013:6079  string public constant LPCM_COLLATERAL_CANNOT_BE_LIQUIDATED = '43' */\n    tag_236:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3433)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5211:5289  string public constant LPC_INVALID_STABLE_DEBT_TOKEN_UNDERLYING_ADDRESS = '38' */\n    tag_242:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf3, 0x0667)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6660:6711  string public constant MATH_DIVISION_BY_ZERO = '50' */\n    tag_248:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf4, 0x0353)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6814:6877  string public constant RL_VARIABLE_BORROW_INDEX_OVERFLOW = '52' */\n    tag_254:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x1a99)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3356:3421  string public constant LP_NOT_ENOUGH_STABLE_BORROW_BALANCE = '21' */\n    tag_260:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3231)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5588:5643  string public constant LPC_INVALID_CONFIGURATION = '75' */\n    tag_266:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3735)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2120:2181  string public constant VL_STABLE_BORROWING_NOT_ENABLED = '12' */\n    tag_272:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x1899)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3619:3675  string public constant LP_LIQUIDATION_CALL_FAILED = '23' */\n    tag_278:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3233)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6715:6772  string public constant RL_LIQUIDITY_INDEX_OVERFLOW = '51' */\n    tag_284:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3531)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7463:7518  string public constant LP_FAILED_COLLATERAL_SWAP = '60' */\n    tag_290:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf4, 0x0363)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5473:5536  string public constant LPC_INVALID_ADDRESSES_PROVIDER_ID = '40' */\n    tag_296:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf4, 0x0343)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8011:8061  string public constant RC_INVALID_LIQ_BONUS = '69' */\n    tag_302:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3639)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7905:7949  string public constant RC_INVALID_LTV = '67' */\n    tag_308:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3637)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8425:8470  string public constant LP_NOT_CONTRACT = '78' */\n    tag_314:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf3, 0x06e7)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2834:2897  string public constant VL_NO_STABLE_RATE_LOAN_IN_RESERVE = '17' */\n    tag_320:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3137)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4739:4796  string public constant LPC_RESERVE_LIQUIDITY_NOT_0 = '34' */\n    tag_326:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf2, 0x0ccd)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2972:3037  string public constant VL_NO_VARIABLE_RATE_LOAN_IN_RESERVE = '18' */\n    tag_332:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf3, 0x0627)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4286:4346  string public constant CT_CALLER_MUST_BE_LENDING_POOL = '29' */\n    tag_338:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3239)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7131:7191  string public constant RL_STABLE_BORROW_RATE_OVERFLOW = '55' */\n    tag_344:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3535)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1756:1811  string public constant VL_COLLATERAL_BALANCE_IS_0 = '9' */\n    tag_350:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf8, 0x39)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6131:6205  string public constant LPCM_SPECIFIED_CURRENCY_NOT_BORROWED_BY_USER = '44' */\n    tag_356:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf2, 0x0d0d)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7773:7830  string public constant LP_NO_MORE_RESERVES_ALLOWED = '65' */\n    tag_362:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3635)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1022:1071  string public constant VL_NO_ACTIVE_RESERVE = '2' */\n    tag_368:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf9, 0x19)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":937:983  string public constant VL_INVALID_AMOUNT = '1' */\n    tag_374:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf8, 0x31)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2513:2570  string public constant VL_NO_DEBT_OF_SELECTED_TYPE = '15' */\n    tag_380:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3135)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8118:8173  string public constant RC_INVALID_RESERVE_FACTOR = '71' */\n    tag_386:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3731)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4518:4575  string public constant CT_TRANSFER_AMOUNT_NOT_GT_0 = '31' */\n    tag_392:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3331)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2217:2287  string public constant VL_COLLATERAL_SAME_AS_BORROWING_CURRENCY = '13' */\n    tag_398:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3133)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1341:1406  string public constant VL_NOT_ENOUGH_AVAILABLE_USER_BALANCE = '5' */\n    tag_404:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf8, 0x35)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":697:748  string public constant CALLER_NOT_POOL_ADMIN = '33' */\n    tag_410:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3333)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4078:4147  string public constant LP_CALLER_NOT_LENDING_POOL_CONFIGURATOR = '27' */\n    tag_416:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3237)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8312:8371  string public constant LP_INCONSISTENT_PARAMS_LENGTH = '74' */\n    tag_422:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf2, 0x0dcd)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3487:3562  string public constant LP_INTEREST_RATE_REBALANCE_CONDITIONS_NOT_MET = '22' */\n    tag_428:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x1919)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7953:8007  string public constant RC_INVALID_LIQ_THRESHOLD = '68' */\n    tag_434:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf3, 0x06c7)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5085:5159  string public constant LPC_INVALID_VARIABLE_DEBT_TOKEN_POOL_ADDRESS = '37' */\n    tag_440:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3337)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7522:7583  string public constant LP_INVALID_EQUAL_ASSETS_TO_SWAP = '61' */\n    tag_446:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3631)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6257:6325  string public constant LPCM_NOT_ENOUGH_LIQUIDITY_TO_LIQUIDATE = '45' */\n    tag_452:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3435)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8474:8528  string public constant SDT_STABLE_DEBT_OVERFLOW = '79' */\n    tag_458:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3739)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5692:5752  string public constant LPC_CALLER_NOT_EMERGENCY_ADMIN = '76' */\n    tag_464:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x1b9b)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7834:7901  string public constant LP_INVALID_FLASH_LOAN_EXECUTOR_RETURN = '66' */\n    tag_470:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x1b1b)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7707:7749  string public constant LP_IS_PAUSED = '64' */\n    tag_476:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf2, 0x0d8d)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5800:5859  string public constant LPAPR_PROVIDER_NOT_REGISTERED = '41' */\n    tag_482:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3431)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1114:1160  string public constant VL_RESERVE_FROZEN = '3' */\n    tag_488:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf8, 0x33)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8246:8308  string public constant VL_INCONSISTENT_FLASHLOAN_PARAMS = '73' */\n    tag_494:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3733)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2687:2757  string public constant VL_NO_EXPLICIT_AMOUNT_TO_REPAY_ON_BEHALF = '16' */\n    tag_500:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x189b)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4961:5033  string public constant LPC_INVALID_STABLE_DEBT_TOKEN_POOL_ADDRESS = '36' */\n    tag_506:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x199b)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3243:3298  string public constant VL_DEPOSIT_ALREADY_IN_USE = '20' */\n    tag_512:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf4, 0x0323)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":791:848  string public constant BORROW_ALLOWANCE_NOT_ENOUGH = '59' */\n    tag_518:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3539)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7317:7378  string public constant LP_FAILED_REPAY_WITH_COLLATERAL = '57' */\n    tag_524:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3537)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6449:6504  string public constant LP_INVALID_FLASHLOAN_MODE = '47' */\n    tag_530:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3437)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7646:7703  string public constant LP_CALLER_MUST_BE_AN_ATOKEN = '63' */\n    tag_536:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3633)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4848:4909  string public constant LPC_INVALID_ATOKEN_POOL_ADDRESS = '35' */\n    tag_542:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3335)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6925:6981  string public constant RL_LIQUIDITY_RATE_OVERFLOW = '53' */\n    tag_548:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3533)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1468:1520  string public constant VL_TRANSFER_NOT_ALLOWED = '6' */\n    tag_554:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf9, 0x1b)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7587:7642  string public constant LP_REENTRANCY_NOT_ALLOWED = '62' */\n    tag_560:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x1b19)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5895:5963  string public constant LPCM_HEALTH_FACTOR_NOT_BELOW_THRESHOLD = '42' */\n    tag_566:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x1a19)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4633:4693  string public constant RL_RESERVE_ALREADY_INITIALIZED = '32' */\n    tag_572:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x1999)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n\n    auxdata: 0xa264697066735822122031dc367ad4466b8be1fcde1dc598e31bd7cee9829694af2139923ac0db7f5faa64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH2 0x1111 PUSH2 0x26 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x19 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x48A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6BA4271F GT PUSH2 0x261 JUMPI DUP1 PUSH4 0xCDAD445A GT PUSH2 0x150 JUMPI DUP1 PUSH4 0xE2C16D69 GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xF11C6720 GT PUSH2 0x91 JUMPI DUP1 PUSH4 0xF11C6720 EQ PUSH2 0x75C JUMPI DUP1 PUSH4 0xF3D9CC11 EQ PUSH2 0x764 JUMPI DUP1 PUSH4 0xF902735D EQ PUSH2 0x76C JUMPI DUP1 PUSH4 0xFB681DEF EQ PUSH2 0x774 JUMPI DUP1 PUSH4 0xFE75FD26 EQ PUSH2 0x77C JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0xE2C16D69 EQ PUSH2 0x734 JUMPI DUP1 PUSH4 0xE6632748 EQ PUSH2 0x73C JUMPI DUP1 PUSH4 0xE7BF91B3 EQ PUSH2 0x744 JUMPI DUP1 PUSH4 0xECA85D3A EQ PUSH2 0x74C JUMPI DUP1 PUSH4 0xF0473259 EQ PUSH2 0x754 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0xD7510E0C GT PUSH2 0x114 JUMPI DUP1 PUSH4 0xD7510E0C EQ PUSH2 0x70C JUMPI DUP1 PUSH4 0xD7B079AA EQ PUSH2 0x714 JUMPI DUP1 PUSH4 0xDAF23547 EQ PUSH2 0x71C JUMPI DUP1 PUSH4 0xE0D7DFD7 EQ PUSH2 0x724 JUMPI DUP1 PUSH4 0xE29425DC EQ PUSH2 0x72C JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0xCDAD445A EQ PUSH2 0x6E4 JUMPI DUP1 PUSH4 0xD3E370EE EQ PUSH2 0x6EC JUMPI DUP1 PUSH4 0xD44E8E88 EQ PUSH2 0x6F4 JUMPI DUP1 PUSH4 0xD57BB964 EQ PUSH2 0x6FC JUMPI DUP1 PUSH4 0xD6F681B6 EQ PUSH2 0x704 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0xA39ED4FF GT PUSH2 0x1DE JUMPI DUP1 PUSH4 0xB89652CD GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0xB89652CD EQ PUSH2 0x6BC JUMPI DUP1 PUSH4 0xBD013F5B EQ PUSH2 0x6C4 JUMPI DUP1 PUSH4 0xC09E2618 EQ PUSH2 0x6CC JUMPI DUP1 PUSH4 0xC2D628DF EQ PUSH2 0x6D4 JUMPI DUP1 PUSH4 0xCC5FC44C EQ PUSH2 0x6DC JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0xA39ED4FF EQ PUSH2 0x694 JUMPI DUP1 PUSH4 0xA8440241 EQ PUSH2 0x69C JUMPI DUP1 PUSH4 0xAC753236 EQ PUSH2 0x6A4 JUMPI DUP1 PUSH4 0xB36A2CF3 EQ PUSH2 0x6AC JUMPI DUP1 PUSH4 0xB72E40C7 EQ PUSH2 0x6B4 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x7865A627 GT PUSH2 0x225 JUMPI DUP1 PUSH4 0x7865A627 EQ PUSH2 0x66C JUMPI DUP1 PUSH4 0x871938A8 EQ PUSH2 0x674 JUMPI DUP1 PUSH4 0x91A9FB18 EQ PUSH2 0x67C JUMPI DUP1 PUSH4 0x9BE4F03A EQ PUSH2 0x684 JUMPI DUP1 PUSH4 0xA2FBC8AD EQ PUSH2 0x68C JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x6BA4271F EQ PUSH2 0x644 JUMPI DUP1 PUSH4 0x6D422AA1 EQ PUSH2 0x64C JUMPI DUP1 PUSH4 0x708B8DD3 EQ PUSH2 0x654 JUMPI DUP1 PUSH4 0x71A629DA EQ PUSH2 0x65C JUMPI DUP1 PUSH4 0x76F19030 EQ PUSH2 0x664 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x3AA786A8 GT PUSH2 0x37D JUMPI DUP1 PUSH4 0x4A529F91 GT PUSH2 0x2FA JUMPI DUP1 PUSH4 0x614CF6A1 GT PUSH2 0x2BE JUMPI DUP1 PUSH4 0x614CF6A1 EQ PUSH2 0x61C JUMPI DUP1 PUSH4 0x637A5A12 EQ PUSH2 0x624 JUMPI DUP1 PUSH4 0x6422B257 EQ PUSH2 0x62C JUMPI DUP1 PUSH4 0x65344799 EQ PUSH2 0x634 JUMPI DUP1 PUSH4 0x6AB5E615 EQ PUSH2 0x63C JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x4A529F91 EQ PUSH2 0x5F4 JUMPI DUP1 PUSH4 0x4FE4F1AB EQ PUSH2 0x5FC JUMPI DUP1 PUSH4 0x55BAB12C EQ PUSH2 0x604 JUMPI DUP1 PUSH4 0x5A9786D4 EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0x5E869FF1 EQ PUSH2 0x614 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x4349E3D8 GT PUSH2 0x341 JUMPI DUP1 PUSH4 0x4349E3D8 EQ PUSH2 0x5CC JUMPI DUP1 PUSH4 0x44942004 EQ PUSH2 0x5D4 JUMPI DUP1 PUSH4 0x44DC4F70 EQ PUSH2 0x5DC JUMPI DUP1 PUSH4 0x47D25300 EQ PUSH2 0x5E4 JUMPI DUP1 PUSH4 0x4927C63A EQ PUSH2 0x5EC JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x3AA786A8 EQ PUSH2 0x5A4 JUMPI DUP1 PUSH4 0x3B5D25AA EQ PUSH2 0x5AC JUMPI DUP1 PUSH4 0x3F5D6EC8 EQ PUSH2 0x5B4 JUMPI DUP1 PUSH4 0x407374A4 EQ PUSH2 0x5BC JUMPI DUP1 PUSH4 0x41B40BA5 EQ PUSH2 0x5C4 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x22A6F08E GT PUSH2 0x40B JUMPI DUP1 PUSH4 0x333E8EA8 GT PUSH2 0x3CF JUMPI DUP1 PUSH4 0x333E8EA8 EQ PUSH2 0x57C JUMPI DUP1 PUSH4 0x35A9D21D EQ PUSH2 0x584 JUMPI DUP1 PUSH4 0x36565AB1 EQ PUSH2 0x58C JUMPI DUP1 PUSH4 0x3872B0AD EQ PUSH2 0x594 JUMPI DUP1 PUSH4 0x390F34BA EQ PUSH2 0x59C JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x22A6F08E EQ PUSH2 0x554 JUMPI DUP1 PUSH4 0x2ACE698A EQ PUSH2 0x55C JUMPI DUP1 PUSH4 0x2B34C349 EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0x2B9C57F6 EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0x2EA347B0 EQ PUSH2 0x574 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x1291A38B GT PUSH2 0x452 JUMPI DUP1 PUSH4 0x1291A38B EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0x179476C5 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0x1BEFA78D EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0x1EA7C604 EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0x1EC68B1D EQ PUSH2 0x54C JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x2454AD3 EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0x29D2344 EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0x6F355AD EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0xB8FD588 EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0xF5EE482 EQ PUSH2 0x524 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x497 PUSH2 0x784 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4D1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4B9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4FE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x497 PUSH2 0x7A2 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x7C0 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x7DE JUMP JUMPDEST PUSH2 0x497 PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x497 PUSH2 0x81A JUMP JUMPDEST PUSH2 0x497 PUSH2 0x838 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x873 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x891 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x8AF JUMP JUMPDEST PUSH2 0x497 PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x497 PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x497 PUSH2 0x909 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x927 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x945 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x963 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x981 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x497 PUSH2 0x9BC JUMP JUMPDEST PUSH2 0x497 PUSH2 0x9DA JUMP JUMPDEST PUSH2 0x497 PUSH2 0x9F8 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xA15 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xA51 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xA6F JUMP JUMPDEST PUSH2 0x497 PUSH2 0xA8D JUMP JUMPDEST PUSH2 0x497 PUSH2 0xAAB JUMP JUMPDEST PUSH2 0x497 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xB05 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xB23 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xB41 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xB5F JUMP JUMPDEST PUSH2 0x497 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x497 PUSH2 0xB9B JUMP JUMPDEST PUSH2 0x497 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xBF5 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xC13 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xC31 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0x497 PUSH2 0xC6D JUMP JUMPDEST PUSH2 0x497 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x497 PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xCC6 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xCE3 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xD00 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x497 PUSH2 0xD3C JUMP JUMPDEST PUSH2 0x497 PUSH2 0xD5A JUMP JUMPDEST PUSH2 0x497 PUSH2 0xD78 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xD95 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xDEF JUMP JUMPDEST PUSH2 0x497 PUSH2 0xE0D JUMP JUMPDEST PUSH2 0x497 PUSH2 0xE2B JUMP JUMPDEST PUSH2 0x497 PUSH2 0xE49 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xE85 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xEC1 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xEDF JUMP JUMPDEST PUSH2 0x497 PUSH2 0xEFD JUMP JUMPDEST PUSH2 0x497 PUSH2 0xF1B JUMP JUMPDEST PUSH2 0x497 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xF56 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xF74 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xF92 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xFB0 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xFCE JUMP JUMPDEST PUSH2 0x497 PUSH2 0xFEC JUMP JUMPDEST PUSH2 0x497 PUSH2 0x100A JUMP JUMPDEST PUSH2 0x497 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x1046 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x1064 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x1081 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x497 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3737 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x687 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x333 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x191B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3439 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A9B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD PUSH1 0xFA SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x383 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A1B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x313 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC8D PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3131 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x647 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6A7 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4D PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B99 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3139 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x37 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3339 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3235 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC4D PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 PUSH1 0xFB SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x373 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3433 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x667 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x353 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A99 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3231 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3735 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1899 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3233 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3531 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x363 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x343 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3639 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3637 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6E7 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3137 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCCD PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x627 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3239 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3535 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x39 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD0D PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3635 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x19 PUSH1 0xF9 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3135 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3731 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3331 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3133 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x35 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3333 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3237 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDCD PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1919 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6C7 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3337 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3631 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3435 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3739 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B9B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B1B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD8D PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3431 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x33 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3733 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x189B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x199B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x323 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3539 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3537 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3437 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3633 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3335 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3533 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1B PUSH1 0xF9 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B19 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A19 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1999 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0xDC CALLDATASIZE PUSH27 0xD4466B8BE1FCDE1DC598E31BD7CEE9829694AF2139923AC0DB7F5F 0xAA PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "660:8264:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x48A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6BA4271F GT PUSH2 0x261 JUMPI DUP1 PUSH4 0xCDAD445A GT PUSH2 0x150 JUMPI DUP1 PUSH4 0xE2C16D69 GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xF11C6720 GT PUSH2 0x91 JUMPI DUP1 PUSH4 0xF11C6720 EQ PUSH2 0x75C JUMPI DUP1 PUSH4 0xF3D9CC11 EQ PUSH2 0x764 JUMPI DUP1 PUSH4 0xF902735D EQ PUSH2 0x76C JUMPI DUP1 PUSH4 0xFB681DEF EQ PUSH2 0x774 JUMPI DUP1 PUSH4 0xFE75FD26 EQ PUSH2 0x77C JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0xE2C16D69 EQ PUSH2 0x734 JUMPI DUP1 PUSH4 0xE6632748 EQ PUSH2 0x73C JUMPI DUP1 PUSH4 0xE7BF91B3 EQ PUSH2 0x744 JUMPI DUP1 PUSH4 0xECA85D3A EQ PUSH2 0x74C JUMPI DUP1 PUSH4 0xF0473259 EQ PUSH2 0x754 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0xD7510E0C GT PUSH2 0x114 JUMPI DUP1 PUSH4 0xD7510E0C EQ PUSH2 0x70C JUMPI DUP1 PUSH4 0xD7B079AA EQ PUSH2 0x714 JUMPI DUP1 PUSH4 0xDAF23547 EQ PUSH2 0x71C JUMPI DUP1 PUSH4 0xE0D7DFD7 EQ PUSH2 0x724 JUMPI DUP1 PUSH4 0xE29425DC EQ PUSH2 0x72C JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0xCDAD445A EQ PUSH2 0x6E4 JUMPI DUP1 PUSH4 0xD3E370EE EQ PUSH2 0x6EC JUMPI DUP1 PUSH4 0xD44E8E88 EQ PUSH2 0x6F4 JUMPI DUP1 PUSH4 0xD57BB964 EQ PUSH2 0x6FC JUMPI DUP1 PUSH4 0xD6F681B6 EQ PUSH2 0x704 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0xA39ED4FF GT PUSH2 0x1DE JUMPI DUP1 PUSH4 0xB89652CD GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0xB89652CD EQ PUSH2 0x6BC JUMPI DUP1 PUSH4 0xBD013F5B EQ PUSH2 0x6C4 JUMPI DUP1 PUSH4 0xC09E2618 EQ PUSH2 0x6CC JUMPI DUP1 PUSH4 0xC2D628DF EQ PUSH2 0x6D4 JUMPI DUP1 PUSH4 0xCC5FC44C EQ PUSH2 0x6DC JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0xA39ED4FF EQ PUSH2 0x694 JUMPI DUP1 PUSH4 0xA8440241 EQ PUSH2 0x69C JUMPI DUP1 PUSH4 0xAC753236 EQ PUSH2 0x6A4 JUMPI DUP1 PUSH4 0xB36A2CF3 EQ PUSH2 0x6AC JUMPI DUP1 PUSH4 0xB72E40C7 EQ PUSH2 0x6B4 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x7865A627 GT PUSH2 0x225 JUMPI DUP1 PUSH4 0x7865A627 EQ PUSH2 0x66C JUMPI DUP1 PUSH4 0x871938A8 EQ PUSH2 0x674 JUMPI DUP1 PUSH4 0x91A9FB18 EQ PUSH2 0x67C JUMPI DUP1 PUSH4 0x9BE4F03A EQ PUSH2 0x684 JUMPI DUP1 PUSH4 0xA2FBC8AD EQ PUSH2 0x68C JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x6BA4271F EQ PUSH2 0x644 JUMPI DUP1 PUSH4 0x6D422AA1 EQ PUSH2 0x64C JUMPI DUP1 PUSH4 0x708B8DD3 EQ PUSH2 0x654 JUMPI DUP1 PUSH4 0x71A629DA EQ PUSH2 0x65C JUMPI DUP1 PUSH4 0x76F19030 EQ PUSH2 0x664 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x3AA786A8 GT PUSH2 0x37D JUMPI DUP1 PUSH4 0x4A529F91 GT PUSH2 0x2FA JUMPI DUP1 PUSH4 0x614CF6A1 GT PUSH2 0x2BE JUMPI DUP1 PUSH4 0x614CF6A1 EQ PUSH2 0x61C JUMPI DUP1 PUSH4 0x637A5A12 EQ PUSH2 0x624 JUMPI DUP1 PUSH4 0x6422B257 EQ PUSH2 0x62C JUMPI DUP1 PUSH4 0x65344799 EQ PUSH2 0x634 JUMPI DUP1 PUSH4 0x6AB5E615 EQ PUSH2 0x63C JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x4A529F91 EQ PUSH2 0x5F4 JUMPI DUP1 PUSH4 0x4FE4F1AB EQ PUSH2 0x5FC JUMPI DUP1 PUSH4 0x55BAB12C EQ PUSH2 0x604 JUMPI DUP1 PUSH4 0x5A9786D4 EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0x5E869FF1 EQ PUSH2 0x614 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x4349E3D8 GT PUSH2 0x341 JUMPI DUP1 PUSH4 0x4349E3D8 EQ PUSH2 0x5CC JUMPI DUP1 PUSH4 0x44942004 EQ PUSH2 0x5D4 JUMPI DUP1 PUSH4 0x44DC4F70 EQ PUSH2 0x5DC JUMPI DUP1 PUSH4 0x47D25300 EQ PUSH2 0x5E4 JUMPI DUP1 PUSH4 0x4927C63A EQ PUSH2 0x5EC JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x3AA786A8 EQ PUSH2 0x5A4 JUMPI DUP1 PUSH4 0x3B5D25AA EQ PUSH2 0x5AC JUMPI DUP1 PUSH4 0x3F5D6EC8 EQ PUSH2 0x5B4 JUMPI DUP1 PUSH4 0x407374A4 EQ PUSH2 0x5BC JUMPI DUP1 PUSH4 0x41B40BA5 EQ PUSH2 0x5C4 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x22A6F08E GT PUSH2 0x40B JUMPI DUP1 PUSH4 0x333E8EA8 GT PUSH2 0x3CF JUMPI DUP1 PUSH4 0x333E8EA8 EQ PUSH2 0x57C JUMPI DUP1 PUSH4 0x35A9D21D EQ PUSH2 0x584 JUMPI DUP1 PUSH4 0x36565AB1 EQ PUSH2 0x58C JUMPI DUP1 PUSH4 0x3872B0AD EQ PUSH2 0x594 JUMPI DUP1 PUSH4 0x390F34BA EQ PUSH2 0x59C JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x22A6F08E EQ PUSH2 0x554 JUMPI DUP1 PUSH4 0x2ACE698A EQ PUSH2 0x55C JUMPI DUP1 PUSH4 0x2B34C349 EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0x2B9C57F6 EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0x2EA347B0 EQ PUSH2 0x574 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x1291A38B GT PUSH2 0x452 JUMPI DUP1 PUSH4 0x1291A38B EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0x179476C5 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0x1BEFA78D EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0x1EA7C604 EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0x1EC68B1D EQ PUSH2 0x54C JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x2454AD3 EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0x29D2344 EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0x6F355AD EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0xB8FD588 EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0xF5EE482 EQ PUSH2 0x524 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x497 PUSH2 0x784 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4D1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4B9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4FE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x497 PUSH2 0x7A2 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x7C0 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x7DE JUMP JUMPDEST PUSH2 0x497 PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x497 PUSH2 0x81A JUMP JUMPDEST PUSH2 0x497 PUSH2 0x838 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x873 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x891 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x8AF JUMP JUMPDEST PUSH2 0x497 PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x497 PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x497 PUSH2 0x909 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x927 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x945 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x963 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x981 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x497 PUSH2 0x9BC JUMP JUMPDEST PUSH2 0x497 PUSH2 0x9DA JUMP JUMPDEST PUSH2 0x497 PUSH2 0x9F8 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xA15 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xA51 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xA6F JUMP JUMPDEST PUSH2 0x497 PUSH2 0xA8D JUMP JUMPDEST PUSH2 0x497 PUSH2 0xAAB JUMP JUMPDEST PUSH2 0x497 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xB05 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xB23 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xB41 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xB5F JUMP JUMPDEST PUSH2 0x497 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x497 PUSH2 0xB9B JUMP JUMPDEST PUSH2 0x497 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xBF5 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xC13 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xC31 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0x497 PUSH2 0xC6D JUMP JUMPDEST PUSH2 0x497 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x497 PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xCC6 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xCE3 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xD00 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x497 PUSH2 0xD3C JUMP JUMPDEST PUSH2 0x497 PUSH2 0xD5A JUMP JUMPDEST PUSH2 0x497 PUSH2 0xD78 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xD95 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xDEF JUMP JUMPDEST PUSH2 0x497 PUSH2 0xE0D JUMP JUMPDEST PUSH2 0x497 PUSH2 0xE2B JUMP JUMPDEST PUSH2 0x497 PUSH2 0xE49 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xE85 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xEC1 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xEDF JUMP JUMPDEST PUSH2 0x497 PUSH2 0xEFD JUMP JUMPDEST PUSH2 0x497 PUSH2 0xF1B JUMP JUMPDEST PUSH2 0x497 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xF56 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xF74 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xF92 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xFB0 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xFCE JUMP JUMPDEST PUSH2 0x497 PUSH2 0xFEC JUMP JUMPDEST PUSH2 0x497 PUSH2 0x100A JUMP JUMPDEST PUSH2 0x497 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x1046 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x1064 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x1081 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x497 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3737 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x687 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x333 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x191B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3439 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A9B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD PUSH1 0xFA SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x383 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A1B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x313 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC8D PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3131 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x647 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6A7 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4D PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B99 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3139 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x37 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3339 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3235 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC4D PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 PUSH1 0xFB SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x373 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3433 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x667 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x353 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A99 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3231 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3735 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1899 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3233 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3531 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x363 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x343 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3639 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3637 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6E7 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3137 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCCD PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x627 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3239 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3535 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x39 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD0D PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3635 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x19 PUSH1 0xF9 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3135 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3731 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3331 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3133 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x35 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3333 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3237 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDCD PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1919 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6C7 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3337 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3631 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3435 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3739 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B9B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B1B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD8D PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3431 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x33 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3733 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x189B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x199B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x323 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3539 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3537 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3437 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3633 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3335 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3533 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1B PUSH1 0xF9 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B19 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A19 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1999 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0xDC CALLDATASIZE PUSH27 0xD4466B8BE1FCDE1DC598E31BD7CEE9829694AF2139923AC0DB7F5F 0xAA PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMapi;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6542:58;;;:::i;4406:65::-;;;:::i;3949:69::-;;;:::i;6604:52::-;;;:::i;7236:::-;;;:::i;1226:70::-;;;:::i;8532:54::-;;;:::i;6386:44::-;;;:::i;1848:79::-;;;:::i;3708:63::-;;;:::i;1991:67::-;;;:::i;4220:62::-;;;:::i;7382:52::-;;;:::i;7022:62::-;;;:::i;8177:65::-;;;:::i;3114:70::-;;;:::i;1557:53::-;;;:::i;5341:80::-;;;:::i;3830:59::-;;;:::i;2358:72::-;;;:::i;1644:67::-;;;:::i;8065:49::-;;;:::i;6013:66::-;;;:::i;5211:78::-;;;:::i;6660:51::-;;;:::i;6814:63::-;;;:::i;3356:65::-;;;:::i;5588:55::-;;;:::i;2120:61::-;;;:::i;3619:56::-;;;:::i;6715:57::-;;;:::i;7463:55::-;;;:::i;5473:63::-;;;:::i;8011:50::-;;;:::i;7905:44::-;;;:::i;8425:45::-;;;:::i;2834:63::-;;;:::i;4739:57::-;;;:::i;2972:65::-;;;:::i;4286:60::-;;;:::i;7131:::-;;;:::i;1756:55::-;;;:::i;6131:74::-;;;:::i;7773:57::-;;;:::i;1022:49::-;;;:::i;937:46::-;;;:::i;2513:57::-;;;:::i;8118:55::-;;;:::i;4518:57::-;;;:::i;2217:70::-;;;:::i;1341:65::-;;;:::i;697:51::-;;;:::i;4078:69::-;;;:::i;8312:59::-;;;:::i;3487:75::-;;;:::i;7953:54::-;;;:::i;5085:74::-;;;:::i;7522:61::-;;;:::i;6257:68::-;;;:::i;8474:54::-;;;:::i;5692:60::-;;;:::i;7834:67::-;;;:::i;7707:42::-;;;:::i;5800:59::-;;;:::i;1114:46::-;;;:::i;8246:62::-;;;:::i;2687:70::-;;;:::i;4961:72::-;;;:::i;3243:55::-;;;:::i;791:57::-;;;:::i;7317:61::-;;;:::i;6449:55::-;;;:::i;7646:57::-;;;:::i;4848:61::-;;;:::i;6925:56::-;;;:::i;1468:52::-;;;:::i;7587:55::-;;;:::i;5895:68::-;;;:::i;4633:60::-;;;:::i;8375:46::-;;;;;;;;;;;;;;-1:-1:-1;;;8375:46:13;;;;:::o;6542:58::-;;;;;;;;;;;;;;-1:-1:-1;;;6542:58:13;;;;:::o;4406:65::-;;;;;;;;;;;;;;-1:-1:-1;;;4406:65:13;;;;:::o;3949:69::-;;;;;;;;;;;;;;-1:-1:-1;;;3949:69:13;;;;:::o;6604:52::-;;;;;;;;;;;;;;-1:-1:-1;;;6604:52:13;;;;:::o;7236:::-;;;;;;;;;;;;;;-1:-1:-1;;;7236:52:13;;;;:::o;1226:70::-;;;;;;;;;;;;;;-1:-1:-1;;;1226:70:13;;;;:::o;8532:54::-;;;;;;;;;;;;;;-1:-1:-1;;;8532:54:13;;;;:::o;6386:44::-;;;;;;;;;;;;;;-1:-1:-1;;;6386:44:13;;;;:::o;1848:79::-;;;;;;;;;;;;;;-1:-1:-1;;;1848:79:13;;;;:::o;3708:63::-;;;;;;;;;;;;;;-1:-1:-1;;;3708:63:13;;;;:::o;1991:67::-;;;;;;;;;;;;;;-1:-1:-1;;;1991:67:13;;;;:::o;4220:62::-;;;;;;;;;;;;;;-1:-1:-1;;;4220:62:13;;;;:::o;7382:52::-;;;;;;;;;;;;;;-1:-1:-1;;;7382:52:13;;;;:::o;7022:62::-;;;;;;;;;;;;;;-1:-1:-1;;;7022:62:13;;;;:::o;8177:65::-;;;;;;;;;;;;;;-1:-1:-1;;;8177:65:13;;;;:::o;3114:70::-;;;;;;;;;;;;;;-1:-1:-1;;;3114:70:13;;;;:::o;1557:53::-;;;;;;;;;;;;;;-1:-1:-1;;;1557:53:13;;;;:::o;5341:80::-;;;;;;;;;;;;;;-1:-1:-1;;;5341:80:13;;;;:::o;3830:59::-;;;;;;;;;;;;;;-1:-1:-1;;;3830:59:13;;;;:::o;2358:72::-;;;;;;;;;;;;;;-1:-1:-1;;;2358:72:13;;;;:::o;1644:67::-;;;;;;;;;;;;;;-1:-1:-1;;;1644:67:13;;;;:::o;8065:49::-;;;;;;;;;;;;;;-1:-1:-1;;;8065:49:13;;;;:::o;6013:66::-;;;;;;;;;;;;;;-1:-1:-1;;;6013:66:13;;;;:::o;5211:78::-;;;;;;;;;;;;;;-1:-1:-1;;;5211:78:13;;;;:::o;6660:51::-;;;;;;;;;;;;;;-1:-1:-1;;;6660:51:13;;;;:::o;6814:63::-;;;;;;;;;;;;;;-1:-1:-1;;;6814:63:13;;;;:::o;3356:65::-;;;;;;;;;;;;;;-1:-1:-1;;;3356:65:13;;;;:::o;5588:55::-;;;;;;;;;;;;;;-1:-1:-1;;;5588:55:13;;;;:::o;2120:61::-;;;;;;;;;;;;;;-1:-1:-1;;;2120:61:13;;;;:::o;3619:56::-;;;;;;;;;;;;;;-1:-1:-1;;;3619:56:13;;;;:::o;6715:57::-;;;;;;;;;;;;;;-1:-1:-1;;;6715:57:13;;;;:::o;7463:55::-;;;;;;;;;;;;;;-1:-1:-1;;;7463:55:13;;;;:::o;5473:63::-;;;;;;;;;;;;;;-1:-1:-1;;;5473:63:13;;;;:::o;8011:50::-;;;;;;;;;;;;;;-1:-1:-1;;;8011:50:13;;;;:::o;7905:44::-;;;;;;;;;;;;;;-1:-1:-1;;;7905:44:13;;;;:::o;8425:45::-;;;;;;;;;;;;;;-1:-1:-1;;;8425:45:13;;;;:::o;2834:63::-;;;;;;;;;;;;;;-1:-1:-1;;;2834:63:13;;;;:::o;4739:57::-;;;;;;;;;;;;;;-1:-1:-1;;;4739:57:13;;;;:::o;2972:65::-;;;;;;;;;;;;;;-1:-1:-1;;;2972:65:13;;;;:::o;4286:60::-;;;;;;;;;;;;;;-1:-1:-1;;;4286:60:13;;;;:::o;7131:::-;;;;;;;;;;;;;;-1:-1:-1;;;7131:60:13;;;;:::o;1756:55::-;;;;;;;;;;;;;;-1:-1:-1;;;1756:55:13;;;;:::o;6131:74::-;;;;;;;;;;;;;;-1:-1:-1;;;6131:74:13;;;;:::o;7773:57::-;;;;;;;;;;;;;;-1:-1:-1;;;7773:57:13;;;;:::o;1022:49::-;;;;;;;;;;;;;;-1:-1:-1;;;1022:49:13;;;;:::o;937:46::-;;;;;;;;;;;;;;-1:-1:-1;;;937:46:13;;;;:::o;2513:57::-;;;;;;;;;;;;;;-1:-1:-1;;;2513:57:13;;;;:::o;8118:55::-;;;;;;;;;;;;;;-1:-1:-1;;;8118:55:13;;;;:::o;4518:57::-;;;;;;;;;;;;;;-1:-1:-1;;;4518:57:13;;;;:::o;2217:70::-;;;;;;;;;;;;;;-1:-1:-1;;;2217:70:13;;;;:::o;1341:65::-;;;;;;;;;;;;;;-1:-1:-1;;;1341:65:13;;;;:::o;697:51::-;;;;;;;;;;;;;;-1:-1:-1;;;697:51:13;;;;:::o;4078:69::-;;;;;;;;;;;;;;-1:-1:-1;;;4078:69:13;;;;:::o;8312:59::-;;;;;;;;;;;;;;-1:-1:-1;;;8312:59:13;;;;:::o;3487:75::-;;;;;;;;;;;;;;-1:-1:-1;;;3487:75:13;;;;:::o;7953:54::-;;;;;;;;;;;;;;-1:-1:-1;;;7953:54:13;;;;:::o;5085:74::-;;;;;;;;;;;;;;-1:-1:-1;;;5085:74:13;;;;:::o;7522:61::-;;;;;;;;;;;;;;-1:-1:-1;;;7522:61:13;;;;:::o;6257:68::-;;;;;;;;;;;;;;-1:-1:-1;;;6257:68:13;;;;:::o;8474:54::-;;;;;;;;;;;;;;-1:-1:-1;;;8474:54:13;;;;:::o;5692:60::-;;;;;;;;;;;;;;-1:-1:-1;;;5692:60:13;;;;:::o;7834:67::-;;;;;;;;;;;;;;-1:-1:-1;;;7834:67:13;;;;:::o;7707:42::-;;;;;;;;;;;;;;-1:-1:-1;;;7707:42:13;;;;:::o;5800:59::-;;;;;;;;;;;;;;-1:-1:-1;;;5800:59:13;;;;:::o;1114:46::-;;;;;;;;;;;;;;-1:-1:-1;;;1114:46:13;;;;:::o;8246:62::-;;;;;;;;;;;;;;-1:-1:-1;;;8246:62:13;;;;:::o;2687:70::-;;;;;;;;;;;;;;-1:-1:-1;;;2687:70:13;;;;:::o;4961:72::-;;;;;;;;;;;;;;-1:-1:-1;;;4961:72:13;;;;:::o;3243:55::-;;;;;;;;;;;;;;-1:-1:-1;;;3243:55:13;;;;:::o;791:57::-;;;;;;;;;;;;;;-1:-1:-1;;;791:57:13;;;;:::o;7317:61::-;;;;;;;;;;;;;;-1:-1:-1;;;7317:61:13;;;;:::o;6449:55::-;;;;;;;;;;;;;;-1:-1:-1;;;6449:55:13;;;;:::o;7646:57::-;;;;;;;;;;;;;;-1:-1:-1;;;7646:57:13;;;;:::o;4848:61::-;;;;;;;;;;;;;;-1:-1:-1;;;4848:61:13;;;;:::o;6925:56::-;;;;;;;;;;;;;;-1:-1:-1;;;6925:56:13;;;;:::o;1468:52::-;;;;;;;;;;;;;;-1:-1:-1;;;1468:52:13;;;;:::o;7587:55::-;;;;;;;;;;;;;;-1:-1:-1;;;7587:55:13;;;;:::o;5895:68::-;;;;;;;;;;;;;;-1:-1:-1;;;5895:68:13;;;;:::o;4633:60::-;;;;;;;;;;;;;;-1:-1:-1;;;4633:60:13;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "873800",
								"executionCost": "934",
								"totalCost": "874734"
							},
							"external": {
								"BORROW_ALLOWANCE_NOT_ENOUGH()": "infinite",
								"CALLER_NOT_POOL_ADMIN()": "infinite",
								"CT_CALLER_MUST_BE_LENDING_POOL()": "infinite",
								"CT_CANNOT_GIVE_ALLOWANCE_TO_HIMSELF()": "infinite",
								"CT_INVALID_BURN_AMOUNT()": "infinite",
								"CT_INVALID_MINT_AMOUNT()": "infinite",
								"CT_TRANSFER_AMOUNT_NOT_GT_0()": "infinite",
								"LPAPR_INVALID_ADDRESSES_PROVIDER_ID()": "infinite",
								"LPAPR_PROVIDER_NOT_REGISTERED()": "infinite",
								"LPCM_COLLATERAL_CANNOT_BE_LIQUIDATED()": "infinite",
								"LPCM_HEALTH_FACTOR_NOT_BELOW_THRESHOLD()": "infinite",
								"LPCM_NOT_ENOUGH_LIQUIDITY_TO_LIQUIDATE()": "infinite",
								"LPCM_NO_ERRORS()": "infinite",
								"LPCM_SPECIFIED_CURRENCY_NOT_BORROWED_BY_USER()": "infinite",
								"LPC_CALLER_NOT_EMERGENCY_ADMIN()": "infinite",
								"LPC_INVALID_ADDRESSES_PROVIDER_ID()": "infinite",
								"LPC_INVALID_ATOKEN_POOL_ADDRESS()": "infinite",
								"LPC_INVALID_CONFIGURATION()": "infinite",
								"LPC_INVALID_STABLE_DEBT_TOKEN_POOL_ADDRESS()": "infinite",
								"LPC_INVALID_STABLE_DEBT_TOKEN_UNDERLYING_ADDRESS()": "infinite",
								"LPC_INVALID_VARIABLE_DEBT_TOKEN_POOL_ADDRESS()": "infinite",
								"LPC_INVALID_VARIABLE_DEBT_TOKEN_UNDERLYING_ADDRESS()": "infinite",
								"LPC_RESERVE_LIQUIDITY_NOT_0()": "infinite",
								"LP_CALLER_MUST_BE_AN_ATOKEN()": "infinite",
								"LP_CALLER_NOT_LENDING_POOL_CONFIGURATOR()": "infinite",
								"LP_FAILED_COLLATERAL_SWAP()": "infinite",
								"LP_FAILED_REPAY_WITH_COLLATERAL()": "infinite",
								"LP_INCONSISTENT_FLASHLOAN_PARAMS()": "infinite",
								"LP_INCONSISTENT_PARAMS_LENGTH()": "infinite",
								"LP_INCONSISTENT_PROTOCOL_ACTUAL_BALANCE()": "infinite",
								"LP_INTEREST_RATE_REBALANCE_CONDITIONS_NOT_MET()": "infinite",
								"LP_INVALID_EQUAL_ASSETS_TO_SWAP()": "infinite",
								"LP_INVALID_FLASHLOAN_MODE()": "infinite",
								"LP_INVALID_FLASH_LOAN_EXECUTOR_RETURN()": "infinite",
								"LP_IS_PAUSED()": "infinite",
								"LP_LIQUIDATION_CALL_FAILED()": "infinite",
								"LP_NOT_CONTRACT()": "infinite",
								"LP_NOT_ENOUGH_LIQUIDITY_TO_BORROW()": "infinite",
								"LP_NOT_ENOUGH_STABLE_BORROW_BALANCE()": "infinite",
								"LP_NO_MORE_RESERVES_ALLOWED()": "infinite",
								"LP_REENTRANCY_NOT_ALLOWED()": "infinite",
								"LP_REQUESTED_AMOUNT_TOO_SMALL()": "infinite",
								"MATH_ADDITION_OVERFLOW()": "infinite",
								"MATH_DIVISION_BY_ZERO()": "infinite",
								"MATH_MULTIPLICATION_OVERFLOW()": "infinite",
								"RC_INVALID_DECIMALS()": "infinite",
								"RC_INVALID_LIQ_BONUS()": "infinite",
								"RC_INVALID_LIQ_THRESHOLD()": "infinite",
								"RC_INVALID_LTV()": "infinite",
								"RC_INVALID_RESERVE_FACTOR()": "infinite",
								"RL_LIQUIDITY_INDEX_OVERFLOW()": "infinite",
								"RL_LIQUIDITY_RATE_OVERFLOW()": "infinite",
								"RL_RESERVE_ALREADY_INITIALIZED()": "infinite",
								"RL_STABLE_BORROW_RATE_OVERFLOW()": "infinite",
								"RL_VARIABLE_BORROW_INDEX_OVERFLOW()": "infinite",
								"RL_VARIABLE_BORROW_RATE_OVERFLOW()": "infinite",
								"SDT_BURN_EXCEEDS_BALANCE()": "infinite",
								"SDT_STABLE_DEBT_OVERFLOW()": "infinite",
								"UL_INVALID_INDEX()": "infinite",
								"VL_AMOUNT_BIGGER_THAN_MAX_LOAN_SIZE_STABLE()": "infinite",
								"VL_BORROWING_NOT_ENABLED()": "infinite",
								"VL_COLLATERAL_BALANCE_IS_0()": "infinite",
								"VL_COLLATERAL_CANNOT_COVER_NEW_BORROW()": "infinite",
								"VL_COLLATERAL_SAME_AS_BORROWING_CURRENCY()": "infinite",
								"VL_CURRENT_AVAILABLE_LIQUIDITY_NOT_ENOUGH()": "infinite",
								"VL_DEPOSIT_ALREADY_IN_USE()": "infinite",
								"VL_HEALTH_FACTOR_LOWER_THAN_LIQUIDATION_THRESHOLD()": "infinite",
								"VL_INCONSISTENT_FLASHLOAN_PARAMS()": "infinite",
								"VL_INVALID_AMOUNT()": "infinite",
								"VL_INVALID_INTEREST_RATE_MODE_SELECTED()": "infinite",
								"VL_NOT_ENOUGH_AVAILABLE_USER_BALANCE()": "infinite",
								"VL_NO_ACTIVE_RESERVE()": "infinite",
								"VL_NO_DEBT_OF_SELECTED_TYPE()": "infinite",
								"VL_NO_EXPLICIT_AMOUNT_TO_REPAY_ON_BEHALF()": "infinite",
								"VL_NO_STABLE_RATE_LOAN_IN_RESERVE()": "infinite",
								"VL_NO_VARIABLE_RATE_LOAN_IN_RESERVE()": "infinite",
								"VL_RESERVE_FROZEN()": "infinite",
								"VL_STABLE_BORROWING_NOT_ENABLED()": "infinite",
								"VL_TRANSFER_NOT_ALLOWED()": "infinite",
								"VL_UNDERLYING_BALANCE_NOT_GREATER_THAN_0()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 660,
									"end": 8924,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "INVALID",
									"source": 13
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122031dc367ad4466b8be1fcde1dc598e31bd7cee9829694af2139923ac0db7f5faa64736f6c634300060c0033",
									".code": [
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "6BA4271F"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "CDAD445A"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "E2C16D69"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "F11C6720"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "F11C6720"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "F3D9CC11"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "F902735D"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "FB681DEF"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "FE75FD26"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "E2C16D69"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "E6632748"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "E7BF91B3"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "ECA85D3A"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "F0473259"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "D7510E0C"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "D7510E0C"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "D7B079AA"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "DAF23547"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "E0D7DFD7"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "E29425DC"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "CDAD445A"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "D3E370EE"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "D44E8E88"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "D57BB964"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "D6F681B6"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "A39ED4FF"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "B89652CD"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "B89652CD"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "BD013F5B"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "C09E2618"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "C2D628DF"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "CC5FC44C"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "A39ED4FF"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "A8440241"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "AC753236"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "B36A2CF3"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "B72E40C7"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "7865A627"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "7865A627"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "871938A8"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "91A9FB18"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "9BE4F03A"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "A2FBC8AD"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "6BA4271F"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "6D422AA1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "708B8DD3"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "71A629DA"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "76F19030"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "3AA786A8"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "4A529F91"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "614CF6A1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "614CF6A1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "637A5A12"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "6422B257"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "65344799"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "6AB5E615"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "4A529F91"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "4FE4F1AB"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "55BAB12C"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "5A9786D4"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "5E869FF1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "4349E3D8"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "4349E3D8"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "44942004"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "44DC4F70"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "47D25300"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "4927C63A"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "3AA786A8"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "3B5D25AA"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "3F5D6EC8"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "407374A4"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "41B40BA5"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "22A6F08E"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "333E8EA8"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "333E8EA8"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "35A9D21D"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "36565AB1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "3872B0AD"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "390F34BA"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "22A6F08E"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "2ACE698A"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "2B34C349"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "2B9C57F6"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "2EA347B0"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "1291A38B"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "1291A38B"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "179476C5"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "1BEFA78D"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "1EA7C604"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "1EC68B1D"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "2454AD3"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "29D2344"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "6F355AD"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "B8FD588"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "F5EE482"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "tag",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "tag",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "tag",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "tag",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "tag",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 937,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 697,
											"end": 748,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 697,
											"end": 748,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 697,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 697,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 697,
											"end": 748,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "tag",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 791,
											"end": 848,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 791,
											"end": 848,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 791,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 791,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 791,
											"end": 848,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3737"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "687"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "tag",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "333"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "tag",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3439"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "tag",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A9B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "383"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "tag",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "tag",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3131"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "tag",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "647"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3139"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3339"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3235"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3433"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "tag",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "667"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "tag",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "353"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3735"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1899"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "tag",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3233"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "tag",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3531"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "tag",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "363"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "tag",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "343"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3639"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "tag",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3637"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "tag",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3137"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "tag",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "627"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3239"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "tag",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3535"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "tag",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3635"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 937,
											"end": 983,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 937,
											"end": 983,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 937,
											"end": 983,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 937,
											"end": 983,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 937,
											"end": 983,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 937,
											"end": 983,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 937,
											"end": 983,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 937,
											"end": 983,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 937,
											"end": 983,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 937,
											"end": 983,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 937,
											"end": 983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 937,
											"end": 983,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 937,
											"end": 983,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3135"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3731"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3331"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3133"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "35"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 697,
											"end": 748,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 697,
											"end": 748,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 697,
											"end": 748,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 748,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 697,
											"end": 748,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 697,
											"end": 748,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 748,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 697,
											"end": 748,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 697,
											"end": 748,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 697,
											"end": 748,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 697,
											"end": 748,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 697,
											"end": 748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 697,
											"end": 748,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 697,
											"end": 748,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3333"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 697,
											"end": 748,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 697,
											"end": 748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 697,
											"end": 748,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 697,
											"end": 748,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 697,
											"end": 748,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "tag",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3237"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "tag",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3337"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3631"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3435"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3739"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "tag",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3431"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "33"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3733"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "189B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "199B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "tag",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "323"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 791,
											"end": 848,
											"name": "tag",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 791,
											"end": 848,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 791,
											"end": 848,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 848,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 791,
											"end": 848,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 791,
											"end": 848,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 848,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 791,
											"end": 848,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 848,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 791,
											"end": 848,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 791,
											"end": 848,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 791,
											"end": 848,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 791,
											"end": 848,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 791,
											"end": 848,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 791,
											"end": 848,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3539"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 791,
											"end": 848,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 791,
											"end": 848,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 791,
											"end": 848,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 791,
											"end": 848,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 791,
											"end": 848,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "tag",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3537"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "tag",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3437"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "tag",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "tag",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3335"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "tag",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3533"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "tag",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "tag",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "tag",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "tag",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1999"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BORROW_ALLOWANCE_NOT_ENOUGH()": "e2c16d69",
							"CALLER_NOT_POOL_ADMIN()": "ac753236",
							"CT_CALLER_MUST_BE_LENDING_POOL()": "6ba4271f",
							"CT_CANNOT_GIVE_ALLOWANCE_TO_HIMSELF()": "06f355ad",
							"CT_INVALID_BURN_AMOUNT()": "2b9c57f6",
							"CT_INVALID_MINT_AMOUNT()": "1291a38b",
							"CT_TRANSFER_AMOUNT_NOT_GT_0()": "a2fbc8ad",
							"LPAPR_INVALID_ADDRESSES_PROVIDER_ID()": "333e8ea8",
							"LPAPR_PROVIDER_NOT_REGISTERED()": "d6f681b6",
							"LPCM_COLLATERAL_CANNOT_BE_LIQUIDATED()": "407374a4",
							"LPCM_HEALTH_FACTOR_NOT_BELOW_THRESHOLD()": "fb681def",
							"LPCM_NOT_ENOUGH_LIQUIDITY_TO_LIQUIDATE()": "cc5fc44c",
							"LPCM_NO_ERRORS()": "1ea7c604",
							"LPCM_SPECIFIED_CURRENCY_NOT_BORROWED_BY_USER()": "71a629da",
							"LPC_CALLER_NOT_EMERGENCY_ADMIN()": "d3e370ee",
							"LPC_INVALID_ADDRESSES_PROVIDER_ID()": "5a9786d4",
							"LPC_INVALID_ATOKEN_POOL_ADDRESS()": "f0473259",
							"LPC_INVALID_CONFIGURATION()": "47d25300",
							"LPC_INVALID_STABLE_DEBT_TOKEN_POOL_ADDRESS()": "e0d7dfd7",
							"LPC_INVALID_STABLE_DEBT_TOKEN_UNDERLYING_ADDRESS()": "41b40ba5",
							"LPC_INVALID_VARIABLE_DEBT_TOKEN_POOL_ADDRESS()": "c09e2618",
							"LPC_INVALID_VARIABLE_DEBT_TOKEN_UNDERLYING_ADDRESS()": "3872b0ad",
							"LPC_RESERVE_LIQUIDITY_NOT_0()": "65344799",
							"LP_CALLER_MUST_BE_AN_ATOKEN()": "eca85d3a",
							"LP_CALLER_NOT_LENDING_POOL_CONFIGURATOR()": "b36a2cf3",
							"LP_FAILED_COLLATERAL_SWAP()": "55bab12c",
							"LP_FAILED_REPAY_WITH_COLLATERAL()": "e6632748",
							"LP_INCONSISTENT_FLASHLOAN_PARAMS()": "2b34c349",
							"LP_INCONSISTENT_PARAMS_LENGTH()": "b72e40c7",
							"LP_INCONSISTENT_PROTOCOL_ACTUAL_BALANCE()": "0b8fd588",
							"LP_INTEREST_RATE_REBALANCE_CONDITIONS_NOT_MET()": "b89652cd",
							"LP_INVALID_EQUAL_ASSETS_TO_SWAP()": "c2d628df",
							"LP_INVALID_FLASHLOAN_MODE()": "e7bf91b3",
							"LP_INVALID_FLASH_LOAN_EXECUTOR_RETURN()": "d44e8e88",
							"LP_IS_PAUSED()": "d57bb964",
							"LP_LIQUIDATION_CALL_FAILED()": "4a529f91",
							"LP_NOT_CONTRACT()": "637a5a12",
							"LP_NOT_ENOUGH_LIQUIDITY_TO_BORROW()": "22a6f08e",
							"LP_NOT_ENOUGH_STABLE_BORROW_BALANCE()": "44dc4f70",
							"LP_NO_MORE_RESERVES_ALLOWED()": "76f19030",
							"LP_REENTRANCY_NOT_ALLOWED()": "f902735d",
							"LP_REQUESTED_AMOUNT_TOO_SMALL()": "390f34ba",
							"MATH_ADDITION_OVERFLOW()": "0f5ee482",
							"MATH_DIVISION_BY_ZERO()": "4349e3d8",
							"MATH_MULTIPLICATION_OVERFLOW()": "029d2344",
							"RC_INVALID_DECIMALS()": "3f5d6ec8",
							"RC_INVALID_LIQ_BONUS()": "5e869ff1",
							"RC_INVALID_LIQ_THRESHOLD()": "bd013f5b",
							"RC_INVALID_LTV()": "614cf6a1",
							"RC_INVALID_RESERVE_FACTOR()": "9be4f03a",
							"RL_LIQUIDITY_INDEX_OVERFLOW()": "4fe4f1ab",
							"RL_LIQUIDITY_RATE_OVERFLOW()": "f11c6720",
							"RL_RESERVE_ALREADY_INITIALIZED()": "fe75fd26",
							"RL_STABLE_BORROW_RATE_OVERFLOW()": "6d422aa1",
							"RL_VARIABLE_BORROW_INDEX_OVERFLOW()": "44942004",
							"RL_VARIABLE_BORROW_RATE_OVERFLOW()": "2ea347b0",
							"SDT_BURN_EXCEEDS_BALANCE()": "1befa78d",
							"SDT_STABLE_DEBT_OVERFLOW()": "cdad445a",
							"UL_INVALID_INDEX()": "02454ad3",
							"VL_AMOUNT_BIGGER_THAN_MAX_LOAN_SIZE_STABLE()": "3aa786a8",
							"VL_BORROWING_NOT_ENABLED()": "36565ab1",
							"VL_COLLATERAL_BALANCE_IS_0()": "708b8dd3",
							"VL_COLLATERAL_CANNOT_COVER_NEW_BORROW()": "2ace698a",
							"VL_COLLATERAL_SAME_AS_BORROWING_CURRENCY()": "a39ed4ff",
							"VL_CURRENT_AVAILABLE_LIQUIDITY_NOT_ENOUGH()": "179476c5",
							"VL_DEPOSIT_ALREADY_IN_USE()": "e29425dc",
							"VL_HEALTH_FACTOR_LOWER_THAN_LIQUIDATION_THRESHOLD()": "1ec68b1d",
							"VL_INCONSISTENT_FLASHLOAN_PARAMS()": "d7b079aa",
							"VL_INVALID_AMOUNT()": "871938a8",
							"VL_INVALID_INTEREST_RATE_MODE_SELECTED()": "3b5d25aa",
							"VL_NOT_ENOUGH_AVAILABLE_USER_BALANCE()": "a8440241",
							"VL_NO_ACTIVE_RESERVE()": "7865a627",
							"VL_NO_DEBT_OF_SELECTED_TYPE()": "91a9fb18",
							"VL_NO_EXPLICIT_AMOUNT_TO_REPAY_ON_BEHALF()": "daf23547",
							"VL_NO_STABLE_RATE_LOAN_IN_RESERVE()": "6422b257",
							"VL_NO_VARIABLE_RATE_LOAN_IN_RESERVE()": "6ab5e615",
							"VL_RESERVE_FROZEN()": "d7510e0c",
							"VL_STABLE_BORROWING_NOT_ENABLED()": "4927c63a",
							"VL_TRANSFER_NOT_ALLOWED()": "f3d9cc11",
							"VL_UNDERLYING_BALANCE_NOT_GREATER_THAN_0()": "35a9d21d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BORROW_ALLOWANCE_NOT_ENOUGH\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CALLER_NOT_POOL_ADMIN\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CT_CALLER_MUST_BE_LENDING_POOL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CT_CANNOT_GIVE_ALLOWANCE_TO_HIMSELF\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CT_INVALID_BURN_AMOUNT\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CT_INVALID_MINT_AMOUNT\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CT_TRANSFER_AMOUNT_NOT_GT_0\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPAPR_INVALID_ADDRESSES_PROVIDER_ID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPAPR_PROVIDER_NOT_REGISTERED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPCM_COLLATERAL_CANNOT_BE_LIQUIDATED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPCM_HEALTH_FACTOR_NOT_BELOW_THRESHOLD\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPCM_NOT_ENOUGH_LIQUIDITY_TO_LIQUIDATE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPCM_NO_ERRORS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPCM_SPECIFIED_CURRENCY_NOT_BORROWED_BY_USER\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPC_CALLER_NOT_EMERGENCY_ADMIN\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPC_INVALID_ADDRESSES_PROVIDER_ID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPC_INVALID_ATOKEN_POOL_ADDRESS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPC_INVALID_CONFIGURATION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPC_INVALID_STABLE_DEBT_TOKEN_POOL_ADDRESS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPC_INVALID_STABLE_DEBT_TOKEN_UNDERLYING_ADDRESS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPC_INVALID_VARIABLE_DEBT_TOKEN_POOL_ADDRESS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPC_INVALID_VARIABLE_DEBT_TOKEN_UNDERLYING_ADDRESS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPC_RESERVE_LIQUIDITY_NOT_0\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_CALLER_MUST_BE_AN_ATOKEN\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_CALLER_NOT_LENDING_POOL_CONFIGURATOR\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_FAILED_COLLATERAL_SWAP\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_FAILED_REPAY_WITH_COLLATERAL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_INCONSISTENT_FLASHLOAN_PARAMS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_INCONSISTENT_PARAMS_LENGTH\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_INCONSISTENT_PROTOCOL_ACTUAL_BALANCE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_INTEREST_RATE_REBALANCE_CONDITIONS_NOT_MET\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_INVALID_EQUAL_ASSETS_TO_SWAP\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_INVALID_FLASHLOAN_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_INVALID_FLASH_LOAN_EXECUTOR_RETURN\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_IS_PAUSED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_LIQUIDATION_CALL_FAILED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_NOT_CONTRACT\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_NOT_ENOUGH_LIQUIDITY_TO_BORROW\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_NOT_ENOUGH_STABLE_BORROW_BALANCE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_NO_MORE_RESERVES_ALLOWED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_REENTRANCY_NOT_ALLOWED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_REQUESTED_AMOUNT_TOO_SMALL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MATH_ADDITION_OVERFLOW\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MATH_DIVISION_BY_ZERO\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MATH_MULTIPLICATION_OVERFLOW\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RC_INVALID_DECIMALS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RC_INVALID_LIQ_BONUS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RC_INVALID_LIQ_THRESHOLD\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RC_INVALID_LTV\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RC_INVALID_RESERVE_FACTOR\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RL_LIQUIDITY_INDEX_OVERFLOW\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RL_LIQUIDITY_RATE_OVERFLOW\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RL_RESERVE_ALREADY_INITIALIZED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RL_STABLE_BORROW_RATE_OVERFLOW\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RL_VARIABLE_BORROW_INDEX_OVERFLOW\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RL_VARIABLE_BORROW_RATE_OVERFLOW\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SDT_BURN_EXCEEDS_BALANCE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SDT_STABLE_DEBT_OVERFLOW\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UL_INVALID_INDEX\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_AMOUNT_BIGGER_THAN_MAX_LOAN_SIZE_STABLE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_BORROWING_NOT_ENABLED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_COLLATERAL_BALANCE_IS_0\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_COLLATERAL_CANNOT_COVER_NEW_BORROW\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_COLLATERAL_SAME_AS_BORROWING_CURRENCY\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_CURRENT_AVAILABLE_LIQUIDITY_NOT_ENOUGH\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_DEPOSIT_ALREADY_IN_USE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_HEALTH_FACTOR_LOWER_THAN_LIQUIDATION_THRESHOLD\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_INCONSISTENT_FLASHLOAN_PARAMS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_INVALID_AMOUNT\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_INVALID_INTEREST_RATE_MODE_SELECTED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_NOT_ENOUGH_AVAILABLE_USER_BALANCE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_NO_ACTIVE_RESERVE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_NO_DEBT_OF_SELECTED_TYPE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_NO_EXPLICIT_AMOUNT_TO_REPAY_ON_BEHALF\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_NO_STABLE_RATE_LOAN_IN_RESERVE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_NO_VARIABLE_RATE_LOAN_IN_RESERVE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_RESERVE_FROZEN\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_STABLE_BORROWING_NOT_ENABLED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_TRANSFER_NOT_ALLOWED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_UNDERLYING_BALANCE_NOT_GREATER_THAN_0\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"details\":\"Error messages prefix glossary:  - VL = ValidationLogic  - MATH = Math libraries  - CT = Common errors between tokens (AToken, VariableDebtToken and StableDebtToken)  - AT = AToken  - SDT = StableDebtToken  - VDT = VariableDebtToken  - LP = LendingPool  - LPAPR = LendingPoolAddressesProviderRegistry  - LPC = LendingPoolConfiguration  - RL = ReserveLogic  - LPCM = LendingPoolCollateralManager  - P = Pausable\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Errors library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Defines the error messages emitted by the different contracts of the Aave protocol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/protocol/libraries/helpers/Errors.sol\":\"Errors\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/protocol/libraries/helpers/Errors.sol\":{\"keccak256\":\"0xfb70949637d81dc9a3883601bb15226981f4c4847f65035e64bf5d120994efeb\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://43fb108a5038fbeb33294d3f4a9e7e4e021bef16f0e7a8a2f3ad9142808c7a8f\",\"dweb:/ipfs/QmUvAnwcuwmprQu4g3r1k3gE2EztuVPGRKJBMVX3KRC8W6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Defines the error messages emitted by the different contracts of the Aave protocol",
						"version": 1
					}
				}
			},
			"contracts/protocol/libraries/helpers/Helpers.sol": {
				"Helpers": {
					"abi": [],
					"devdoc": {
						"author": "Aave",
						"kind": "dev",
						"methods": {},
						"title": "Helpers library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/protocol/libraries/helpers/Helpers.sol\":243:1056  library Helpers {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/protocol/libraries/helpers/Helpers.sol\":243:1056  library Helpers {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220381605c4ccf19c827bf1d07283f4ce15e8050272c1bb1b7dd9340fb83357728664736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220381605c4ccf19c827bf1d07283f4ce15e8050272c1bb1b7dd9340fb83357728664736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE AND SDIV 0xC4 0xCC CALL SWAP13 DUP3 PUSH28 0xF1D07283F4CE15E8050272C1BB1B7DD9340FB83357728664736F6C63 NUMBER STOP MOD 0xC STOP CALLER ",
							"sourceMap": "243:813:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220381605c4ccf19c827bf1d07283f4ce15e8050272c1bb1b7dd9340fb83357728664736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE AND SDIV 0xC4 0xCC CALL SWAP13 DUP3 PUSH28 0xF1D07283F4CE15E8050272C1BB1B7DD9340FB83357728664736F6C63 NUMBER STOP MOD 0xC STOP CALLER ",
							"sourceMap": "243:813:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getUserCurrentDebt(address,struct DataTypes.ReserveData storage pointer)": "infinite",
								"getUserCurrentDebtMemory(address,struct DataTypes.ReserveData memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 243,
									"end": 1056,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 1056,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 1056,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 243,
									"end": 1056,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 243,
									"end": 1056,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 243,
									"end": 1056,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 243,
									"end": 1056,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 243,
									"end": 1056,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 243,
									"end": 1056,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 243,
									"end": 1056,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 1056,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 243,
									"end": 1056,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 243,
									"end": 1056,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 243,
									"end": 1056,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 243,
									"end": 1056,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 243,
									"end": 1056,
									"name": "INVALID",
									"source": 14
								},
								{
									"begin": 243,
									"end": 1056,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 243,
									"end": 1056,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 243,
									"end": 1056,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 243,
									"end": 1056,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 1056,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 243,
									"end": 1056,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 243,
									"end": 1056,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 243,
									"end": 1056,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 243,
									"end": 1056,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 243,
									"end": 1056,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 243,
									"end": 1056,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220381605c4ccf19c827bf1d07283f4ce15e8050272c1bb1b7dd9340fb83357728664736f6c634300060c0033",
									".code": [
										{
											"begin": 243,
											"end": 1056,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 243,
											"end": 1056,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 243,
											"end": 1056,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 243,
											"end": 1056,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 243,
											"end": 1056,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 243,
											"end": 1056,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 243,
											"end": 1056,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 1056,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 243,
											"end": 1056,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Aave\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Helpers library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/protocol/libraries/helpers/Helpers.sol\":\"Helpers\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0x6406b04abfeda2c8c80ea3faf797ce4501e66db41fb6ff4e299ebe0402879f44\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://33b0db81db37bd6fe20aa0b23581c6b0edef2f3c49d0bd88b4fe46c1164adb00\",\"dweb:/ipfs/QmYn1zYwt3ahpkLYwHh6h5b1UJrzP2xy5G3at9oEVNw2c1\"]},\"contracts/protocol/libraries/helpers/Helpers.sol\":{\"keccak256\":\"0xd513d293086becdf6b507d50a334c6ecffdbffcc5a132f498e73357d89f08a93\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://eb8d7a37fdb4a8b585e6fb6a4bf7f1f73dfeb100a42e2afd2d143c898d6f30dd\",\"dweb:/ipfs/Qmc4iuJGKRDLy4Yik3deNyBmCkRnsBAo9t3UBheCXUSDmd\"]},\"contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0xb1d3ae94d3e4b3bf23b3394d820a3a2b5ba56fd5389f561f3fdd73ed1c60c391\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://47c11d578cc1e0df27e4e85cfe5831a48b78d6e939d34e17db4bc65a54c899fe\",\"dweb:/ipfs/QmYdYLkYFJe3psmQUH1S1uNhGE9xyxeDunuEW9gBPg9vDB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/protocol/libraries/types/DataTypes.sol": {
				"DataTypes": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/protocol/libraries/types/DataTypes.sol\":62:1529  library DataTypes {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/protocol/libraries/types/DataTypes.sol\":62:1529  library DataTypes {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220994213952bddcef31a0dfc76b05ac29d3fd5b752f96fa2278343c51a37de9e1164736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220994213952bddcef31a0dfc76b05ac29d3fd5b752f96fa2278343c51a37de9e1164736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 TIMESTAMP SGT SWAP6 0x2B 0xDD 0xCE RETURN BYTE 0xD 0xFC PUSH23 0xB05AC29D3FD5B752F96FA2278343C51A37DE9E1164736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "62:1467:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220994213952bddcef31a0dfc76b05ac29d3fd5b752f96fa2278343c51a37de9e1164736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 TIMESTAMP SGT SWAP6 0x2B 0xDD 0xCE RETURN BYTE 0xD 0xFC PUSH23 0xB05AC29D3FD5B752F96FA2278343C51A37DE9E1164736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "62:1467:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 1529,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "INVALID",
									"source": 15
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220994213952bddcef31a0dfc76b05ac29d3fd5b752f96fa2278343c51a37de9e1164736f6c634300060c0033",
									".code": [
										{
											"begin": 62,
											"end": 1529,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 62,
											"end": 1529,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 62,
											"end": 1529,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 62,
											"end": 1529,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 62,
											"end": 1529,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 62,
											"end": 1529,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 62,
											"end": 1529,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 1529,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 62,
											"end": 1529,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/protocol/libraries/types/DataTypes.sol\":\"DataTypes\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0xb1d3ae94d3e4b3bf23b3394d820a3a2b5ba56fd5389f561f3fdd73ed1c60c391\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://47c11d578cc1e0df27e4e85cfe5831a48b78d6e939d34e17db4bc65a54c899fe\",\"dweb:/ipfs/QmYdYLkYFJe3psmQUH1S1uNhGE9xyxeDunuEW9gBPg9vDB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "contracts/misc/Reenter.sol:8:1: Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\ncontract Test {\n^ (Relevant source part starts here and spans across multiple lines).\ncontracts/misc/Reenter.sol:21:5: The payable fallback function is defined here.\n    fallback() external payable {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 749,
						"file": "contracts/misc/Reenter.sol",
						"message": "The payable fallback function is defined here.",
						"start": 539
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 1032,
					"file": "contracts/misc/Reenter.sol",
					"start": 173
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/dependencies/openzeppelin/contracts/Context.sol": {
				"ast": {
					"absolutePath": "contracts/dependencies/openzeppelin/contracts/Context.sol",
					"exportedSymbols": {
						"Context": [
							22
						]
					},
					"id": 23,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "657:28:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "670:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "670:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "663:17:0"
											}
										]
									},
									"documentation": null,
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "606:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "640:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "639:17:0"
									},
									"scope": 22,
									"src": "587:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "754:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 15,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "760:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$22",
														"typeString": "contract Context"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "760:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 17,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "896:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "896:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 19,
												"nodeType": "Return",
												"src": "889:15:0"
											}
										]
									},
									"documentation": null,
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 21,
												"src": "740:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "740:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "739:14:0"
									},
									"scope": 22,
									"src": "689:220:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 23,
							"src": "557:354:0"
						}
					],
					"src": "32:880:0"
				},
				"id": 0
			},
			"contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/dependencies/openzeppelin/contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							100
						]
					},
					"id": 101,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 24,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 25,
								"nodeType": "StructuredDocumentation",
								"src": "62:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "154:62:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "239:2:1"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "265:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "264:9:1"
									},
									"scope": 100,
									"src": "219:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "278:68:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 39,
												"src": "368:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "367:17:1"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 39,
												"src": "408:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "408:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "407:9:1"
									},
									"scope": 100,
									"src": "349:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "421:197:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 49,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 49,
												"src": "639:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 49,
												"src": "658:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "638:35:1"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 49,
												"src": "692:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "692:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "691:6:1"
									},
									"scope": 100,
									"src": "621:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "702:252:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 59,
												"src": "976:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 59,
												"src": "991:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "975:32:1"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 59,
												"src": "1031:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1030:9:1"
									},
									"scope": 100,
									"src": "957:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "1044:616:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 69,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 69,
												"src": "1680:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 69,
												"src": "1697:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1697:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1679:33:1"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 69,
												"src": "1731:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 66,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1731:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1730:6:1"
									},
									"scope": 100,
									"src": "1663:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "1741:280:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "2051:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2051:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "2071:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2071:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "2094:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2045:67:1"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "2131:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 78,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2131:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2130:6:1"
									},
									"scope": 100,
									"src": "2024:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2141:148:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 90,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "2307:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2307:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "2329:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2329:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "2349:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2349:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2306:57:1"
									},
									"src": "2292:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2368:142:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 99,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 99,
												"src": "2528:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2528:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 99,
												"src": "2551:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2551:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 99,
												"src": "2576:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2527:63:1"
									},
									"src": "2513:78:1"
								}
							],
							"scope": 101,
							"src": "133:2460:1"
						}
					],
					"src": "37:2557:1"
				},
				"id": 1
			},
			"contracts/dependencies/openzeppelin/contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/dependencies/openzeppelin/contracts/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							209
						]
					},
					"id": 210,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 102,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/Context.sol",
							"file": "./Context.sol",
							"id": 103,
							"nodeType": "ImportDirective",
							"scope": 210,
							"sourceUnit": 23,
							"src": "58:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 105,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "598:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 106,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:2"
								}
							],
							"contractDependencies": [
								22
							],
							"contractKind": "contract",
							"documentation": {
								"id": 104,
								"nodeType": "StructuredDocumentation",
								"src": "83:494:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 209,
							"linearizedBaseContracts": [
								209,
								22
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 108,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 209,
									"src": "610:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 107,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "610:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 114,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 114,
												"src": "664:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 114,
												"src": "695:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "663:57:2"
									},
									"src": "637:84:2"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "838:121:2",
										"statements": [
											{
												"assignments": [
													119
												],
												"declarations": [
													{
														"constant": false,
														"id": 119,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 135,
														"src": "844:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 118,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "844:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 122,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 120,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "864:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "864:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "844:32:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 123,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "882:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 124,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "891:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "882:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "882:18:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "940:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "932:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 128,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "932:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "932:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 132,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "944:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 127,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "911:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "911:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "EmitStatement",
												"src": "906:48:2"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "725:87:2",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 136,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "826:2:2"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:2"
									},
									"scope": 209,
									"src": "815:144:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "1074:24:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 142,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 108,
													"src": "1087:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 141,
												"id": 143,
												"nodeType": "Return",
												"src": "1080:13:2"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "963:61:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1041:2:2"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 145,
												"src": "1065:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1065:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1064:9:2"
									},
									"scope": 209,
									"src": "1027:71:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "1199:85:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 149,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 108,
																"src": "1213:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 150,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "1223:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1223:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1213:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1237:34:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1205:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1205:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "1205:67:2"
											},
											{
												"id": 156,
												"nodeType": "PlaceholderStatement",
												"src": "1278:1:2"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "1102:73:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 158,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1196:2:2"
									},
									"src": "1178:106:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "1664:81:2",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 165,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "1696:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1712:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1704:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 166,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1704:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1704:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 164,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "1675:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1675:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "EmitStatement",
												"src": "1670:45:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 172,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "1721:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1730:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 173,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1730:7:2",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1730:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1721:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 178,
												"nodeType": "ExpressionStatement",
												"src": "1721:19:2"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1288:319:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 180,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 162,
											"modifierName": {
												"argumentTypes": null,
												"id": 161,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 158,
												"src": "1654:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1654:9:2"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1636:2:2"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1664:0:2"
									},
									"scope": 209,
									"src": "1610:135:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "1954:156:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 189,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "1968:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1988:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1980:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 190,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1980:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1980:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1968:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1992:40:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1960:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1960:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "1960:73:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 199,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "2065:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 200,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "2073:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 198,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "2044:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2044:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 202,
												"nodeType": "EmitStatement",
												"src": "2039:43:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 203,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "2088:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 204,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "2097:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2088:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "2088:17:2"
											}
										]
									},
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "1749:132:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 186,
											"modifierName": {
												"argumentTypes": null,
												"id": 185,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 158,
												"src": "1944:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1944:9:2"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 208,
												"src": "1911:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1911:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1910:18:2"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1954:0:2"
									},
									"scope": 209,
									"src": "1884:226:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 210,
							"src": "578:1534:2"
						}
					],
					"src": "33:2080:2"
				},
				"id": 2
			},
			"contracts/interfaces/IAToken.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IAToken.sol",
					"exportedSymbols": {
						"IAToken": [
							303
						]
					},
					"id": 304,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 211,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:3"
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/IERC20.sol",
							"file": "../dependencies/openzeppelin/contracts/IERC20.sol",
							"id": 213,
							"nodeType": "ImportDirective",
							"scope": 304,
							"sourceUnit": 101,
							"src": "62:73:3",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 212,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "70:6:3",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IScaledBalanceToken.sol",
							"file": "./IScaledBalanceToken.sol",
							"id": 215,
							"nodeType": "ImportDirective",
							"scope": 304,
							"sourceUnit": 857,
							"src": "136:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 214,
										"name": "IScaledBalanceToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "144:19:3",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 216,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 100,
										"src": "221:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$100",
											"typeString": "contract IERC20"
										}
									},
									"id": 217,
									"nodeType": "InheritanceSpecifier",
									"src": "221:6:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 218,
										"name": "IScaledBalanceToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 856,
										"src": "229:19:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IScaledBalanceToken_$856",
											"typeString": "contract IScaledBalanceToken"
										}
									},
									"id": 219,
									"nodeType": "InheritanceSpecifier",
									"src": "229:19:3"
								}
							],
							"contractDependencies": [
								100,
								856
							],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 303,
							"linearizedBaseContracts": [
								303,
								856,
								100
							],
							"name": "IAToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "253:191:3",
										"text": " @dev Emitted after the mint action\n @param from The address performing the mint\n @param value The amount being\n @param index The new liquidity index of the reserve*"
									},
									"id": 228,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 228,
												"src": "458:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "458:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 228,
												"src": "480:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "480:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 228,
												"src": "495:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "457:52:3"
									},
									"src": "447:63:3"
								},
								{
									"body": null,
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "514:287:3",
										"text": " @dev Mints `amount` aTokens to `user`\n @param user The address receiving the minted tokens\n @param amount The amount of tokens getting minted\n @param index The new liquidity index of the reserve\n @return `true` if the the previous balance of the user was 0"
									},
									"functionSelector": "156e29f6",
									"id": 240,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 240,
												"src": "823:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 240,
												"src": "841:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "841:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 240,
												"src": "861:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "817:61:3"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 240,
												"src": "897:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 237,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "897:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "896:6:3"
									},
									"scope": 303,
									"src": "804:99:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "907:279:3",
										"text": " @dev Emitted after aTokens are burned\n @param from The owner of the aTokens, getting them burned\n @param target The address that will receive the underlying\n @param value The amount being burned\n @param index The new liquidity index of the reserve*"
									},
									"id": 251,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 251,
												"src": "1200:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1200:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": true,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 251,
												"src": "1222:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 251,
												"src": "1246:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1246:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 251,
												"src": "1261:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1199:76:3"
									},
									"src": "1189:87:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "1280:249:3",
										"text": " @dev Emitted during the transfer action\n @param from The user whose tokens are being transferred\n @param to The recipient\n @param value The amount being transferred\n @param index The new liquidity index of the reserve*"
									},
									"id": 262,
									"name": "BalanceTransfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 262,
												"src": "1554:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1554:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 262,
												"src": "1576:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 262,
												"src": "1596:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1596:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 262,
												"src": "1611:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1611:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1553:72:3"
									},
									"src": "1532:94:3"
								},
								{
									"body": null,
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "1630:359:3",
										"text": " @dev Burns aTokens from `user` and sends the equivalent amount of underlying to `receiverOfUnderlying`\n @param user The owner of the aTokens, getting them burned\n @param receiverOfUnderlying The address that will receive the underlying\n @param amount The amount being burned\n @param index The new liquidity index of the reserve*"
									},
									"functionSelector": "d7020d0a",
									"id": 274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 274,
												"src": "2011:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2011:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "receiverOfUnderlying",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 274,
												"src": "2029:28:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2029:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 274,
												"src": "2063:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2063:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 274,
												"src": "2083:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2083:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2005:95:3"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2109:0:3"
									},
									"scope": 303,
									"src": "1992:118:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "2114:169:3",
										"text": " @dev Mints aTokens to the reserve treasury\n @param amount The amount of tokens getting minted\n @param index The new liquidity index of the reserve"
									},
									"functionSelector": "7df5bd3b",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintToTreasury",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 282,
												"src": "2310:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 282,
												"src": "2326:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2309:31:3"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2349:0:3"
									},
									"scope": 303,
									"src": "2286:64:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "2354:291:3",
										"text": " @dev Transfers aTokens in the event of a borrow being liquidated, in case the liquidators reclaims the aToken\n @param from The address getting liquidated, current owner of the aTokens\n @param to The recipient\n @param value The amount of tokens getting transferred*"
									},
									"functionSelector": "f866c319",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferOnLiquidation",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 292,
												"src": "2684:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2684:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 292,
												"src": "2702:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 292,
												"src": "2718:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2678:57:3"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2744:0:3"
									},
									"scope": 303,
									"src": "2648:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "2749:284:3",
										"text": " @dev Transfers the underlying asset to `target`. Used by the LendingPool to transfer\n assets in borrow(), withdraw() and flashLoan()\n @param user The recipient of the aTokens\n @param amount The amount getting transferred\n @return The amount transferred*"
									},
									"functionSelector": "4efecaa5",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferUnderlyingTo",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 302,
												"src": "3066:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3066:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 302,
												"src": "3080:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3080:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3065:30:3"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 302,
												"src": "3114:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3114:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3113:9:3"
									},
									"scope": 303,
									"src": "3036:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 304,
							"src": "200:2925:3"
						}
					],
					"src": "37:3089:3"
				},
				"id": 3
			},
			"contracts/interfaces/ILendingPool.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ILendingPool.sol",
					"exportedSymbols": {
						"ILendingPool": [
							678
						]
					},
					"id": 679,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 305,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:4"
						},
						{
							"id": 306,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "61:33:4"
						},
						{
							"absolutePath": "contracts/interfaces/ILendingPoolAddressesProvider.sol",
							"file": "./ILendingPoolAddressesProvider.sol",
							"id": 308,
							"nodeType": "ImportDirective",
							"scope": 679,
							"sourceUnit": 830,
							"src": "96:82:4",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 307,
										"name": "ILendingPoolAddressesProvider",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "104:29:4",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/protocol/libraries/types/DataTypes.sol",
							"file": "../protocol/libraries/types/DataTypes.sol",
							"id": 310,
							"nodeType": "ImportDirective",
							"scope": 679,
							"sourceUnit": 2783,
							"src": "179:68:4",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 309,
										"name": "DataTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "187:9:4",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 678,
							"linearizedBaseContracts": [
								678
							],
							"name": "ILendingPool",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "276:325:4",
										"text": " @dev Emitted on deposit()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the deposit\n @param onBehalfOf The beneficiary of the deposit, receiving the aTokens\n @param amount The amount deposited\n @param referral The referral code used*"
									},
									"id": 323,
									"name": "Deposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 323,
												"src": "623:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 323,
												"src": "652:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 323,
												"src": "670:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 323,
												"src": "702:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "702:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "referral",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 323,
												"src": "722:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 320,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "722:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "617:132:4"
									},
									"src": "604:146:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "754:288:4",
										"text": " @dev Emitted on withdraw()\n @param reserve The address of the underlyng asset being withdrawn\n @param user The address initiating the withdrawal, owner of aTokens\n @param to Address that will receive the underlying\n @param amount The amount to be withdrawn*"
									},
									"id": 334,
									"name": "Withdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 334,
												"src": "1060:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 334,
												"src": "1085:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 334,
												"src": "1107:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1107:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 334,
												"src": "1127:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1127:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1059:83:4"
									},
									"src": "1045:98:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "1147:605:4",
										"text": " @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n @param reserve The address of the underlying asset being borrowed\n @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n initiator of the transaction on flashLoan()\n @param onBehalfOf The address that will be getting the debt\n @param amount The amount borrowed out\n @param borrowRateMode The rate mode: 1 for Stable, 2 for Variable\n @param borrowRate The numeric rate at which the user has borrowed\n @param referral The referral code used*"
									},
									"id": 351,
									"name": "Borrow",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 351,
												"src": "1773:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 351,
												"src": "1802:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1802:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"indexed": true,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 351,
												"src": "1820:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1820:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 351,
												"src": "1852:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"indexed": false,
												"mutability": "mutable",
												"name": "borrowRateMode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 351,
												"src": "1872:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1872:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"indexed": false,
												"mutability": "mutable",
												"name": "borrowRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 351,
												"src": "1900:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1900:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"indexed": true,
												"mutability": "mutable",
												"name": "referral",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 351,
												"src": "1924:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 348,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1924:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1767:184:4"
									},
									"src": "1755:197:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "1956:311:4",
										"text": " @dev Emitted on repay()\n @param reserve The address of the underlying asset of the reserve\n @param user The beneficiary of the repayment, getting his debt reduced\n @param repayer The address of the user initiating the repay(), providing the funds\n @param amount The amount repaid*"
									},
									"id": 362,
									"name": "Repay",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 362,
												"src": "2287:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2287:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 362,
												"src": "2316:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"indexed": true,
												"mutability": "mutable",
												"name": "repayer",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 362,
												"src": "2342:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 362,
												"src": "2371:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2371:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2281:108:4"
									},
									"src": "2270:120:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "2394:253:4",
										"text": " @dev Emitted on swapBorrowRateMode()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user swapping his rate mode\n @param rateMode The rate mode that the user wants to swap to*"
									},
									"id": 371,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 371,
												"src": "2661:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 371,
												"src": "2686:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"indexed": false,
												"mutability": "mutable",
												"name": "rateMode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 371,
												"src": "2708:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2660:65:4"
									},
									"src": "2650:76:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "2730:208:4",
										"text": " @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral*"
									},
									"id": 378,
									"name": "ReserveUsedAsCollateralEnabled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 378,
												"src": "2978:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2978:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 378,
												"src": "3003:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3003:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2977:47:4"
									},
									"src": "2941:84:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "3029:208:4",
										"text": " @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral*"
									},
									"id": 385,
									"name": "ReserveUsedAsCollateralDisabled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 385,
												"src": "3278:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3278:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 385,
												"src": "3303:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3277:47:4"
									},
									"src": "3240:85:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3329:213:4",
										"text": " @dev Emitted on rebalanceStableBorrowRate()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user for which the rebalance has been executed*"
									},
									"id": 392,
									"name": "RebalanceStableBorrowRate",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 392,
												"src": "3577:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3577:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 392,
												"src": "3602:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3602:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3576:47:4"
									},
									"src": "3545:79:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "3628:370:4",
										"text": " @dev Emitted on flashLoan()\n @param target The address of the flash loan receiver contract\n @param initiator The address initiating the flash loan\n @param asset The address of the asset being flash borrowed\n @param amount The amount flash borrowed\n @param premium The fee flash borrowed\n @param referralCode The referral code used*"
									},
									"id": 407,
									"name": "FlashLoan",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"indexed": true,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 407,
												"src": "4022:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"indexed": true,
												"mutability": "mutable",
												"name": "initiator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 407,
												"src": "4050:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4050:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 407,
												"src": "4081:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4081:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 407,
												"src": "4108:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4108:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"indexed": false,
												"mutability": "mutable",
												"name": "premium",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 407,
												"src": "4128:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4128:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"indexed": false,
												"mutability": "mutable",
												"name": "referralCode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 407,
												"src": "4149:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 404,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4149:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4016:156:4"
									},
									"src": "4001:172:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "4177:56:4",
										"text": " @dev Emitted when the pause is triggered."
									},
									"id": 410,
									"name": "Paused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4248:2:4"
									},
									"src": "4236:15:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "4255:53:4",
										"text": " @dev Emitted when the pause is lifted."
									},
									"id": 413,
									"name": "Unpaused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4325:2:4"
									},
									"src": "4311:17:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "4332:928:4",
										"text": " @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\n LendingPoolCollateral manager using a DELEGATECALL\n This allows to have the events in the generated ABI for LendingPool.\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param liquidatedCollateralAmount The amount of collateral received by the liiquidator\n @param liquidator The address of the liquidator\n @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly*"
									},
									"id": 430,
									"name": "LiquidationCall",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"indexed": true,
												"mutability": "mutable",
												"name": "collateralAsset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 430,
												"src": "5290:31:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5290:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"indexed": true,
												"mutability": "mutable",
												"name": "debtAsset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 430,
												"src": "5327:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5327:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 430,
												"src": "5358:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5358:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"indexed": false,
												"mutability": "mutable",
												"name": "debtToCover",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 430,
												"src": "5384:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5384:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidatedCollateralAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 430,
												"src": "5409:34:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5409:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 430,
												"src": "5449:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5449:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"indexed": false,
												"mutability": "mutable",
												"name": "receiveAToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 430,
												"src": "5473:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 427,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5473:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5284:211:4"
									},
									"src": "5263:233:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "5500:722:4",
										"text": " @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared\n in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\n the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\n gets added to the LendingPool ABI\n @param reserve The address of the underlying asset of the reserve\n @param liquidityRate The new liquidity rate\n @param stableBorrowRate The new stable borrow rate\n @param variableBorrowRate The new variable borrow rate\n @param liquidityIndex The new liquidity index\n @param variableBorrowIndex The new variable borrow index*"
									},
									"id": 445,
									"name": "ReserveDataUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 445,
												"src": "6255:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6255:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 445,
												"src": "6284:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6284:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"indexed": false,
												"mutability": "mutable",
												"name": "stableBorrowRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 445,
												"src": "6311:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6311:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"indexed": false,
												"mutability": "mutable",
												"name": "variableBorrowRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 445,
												"src": "6341:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6341:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityIndex",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 445,
												"src": "6373:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6373:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"indexed": false,
												"mutability": "mutable",
												"name": "variableBorrowIndex",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 445,
												"src": "6401:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6401:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6249:183:4"
									},
									"src": "6225:208:4"
								},
								{
									"body": null,
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "6437:712:4",
										"text": " @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User deposits 100 USDC and gets in return 100 aUSDC\n @param asset The address of the underlying asset to deposit\n @param amount The amount to be deposited\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man*"
									},
									"functionSelector": "e8eda9df",
									"id": 457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 457,
												"src": "7174:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7174:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 457,
												"src": "7193:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7193:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 457,
												"src": "7213:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7213:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "referralCode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 457,
												"src": "7237:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 453,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "7237:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7168:92:4"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7269:0:4"
									},
									"scope": 678,
									"src": "7152:118:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "7274:665:4",
										"text": " @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n @param asset The address of the underlying asset to withdraw\n @param amount The underlying amount to be withdrawn\n   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n @param to Address that will receive the underlying, same as msg.sender if the user\n   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   different wallet\n @return The final amount withdrawn*"
									},
									"functionSelector": "69328dec",
									"id": 469,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 469,
												"src": "7965:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7965:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 469,
												"src": "7984:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7984:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 469,
												"src": "8004:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8004:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7959:59:4"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 469,
												"src": "8037:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8037:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8036:9:4"
									},
									"scope": 678,
									"src": "7942:104:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "8050:1189:4",
										"text": " @dev Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n already deposited enough collateral, or he was given enough allowance by a credit delegator on the\n corresponding debt token (StableDebtToken or VariableDebtToken)\n - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n @param asset The address of the underlying asset to borrow\n @param amount The amount to be borrowed\n @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself\n calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n if he has been given credit delegation allowance*"
									},
									"functionSelector": "a415bcad",
									"id": 483,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "borrow",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 483,
												"src": "9263:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9263:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 483,
												"src": "9282:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9282:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 483,
												"src": "9302:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9302:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "referralCode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 483,
												"src": "9332:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 477,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9332:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 483,
												"src": "9357:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9357:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9257:122:4"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9388:0:4"
									},
									"scope": 678,
									"src": "9242:147:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "9393:862:4",
										"text": " @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @return The final amount repaid*"
									},
									"functionSelector": "573ade81",
									"id": 497,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "repay",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 497,
												"src": "10278:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10278:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 497,
												"src": "10297:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10297:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "rateMode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 497,
												"src": "10317:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10317:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 497,
												"src": "10339:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10339:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10272:89:4"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 497,
												"src": "10380:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10380:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10379:9:4"
									},
									"scope": 678,
									"src": "10258:131:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "10393:231:4",
										"text": " @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa\n @param asset The address of the underlying asset borrowed\n @param rateMode The rate mode that the user wants to swap to*"
									},
									"functionSelector": "94ba89a2",
									"id": 505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapBorrowRateMode",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "10655:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10655:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "rateMode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "10670:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10670:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10654:33:4"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10696:0:4"
									},
									"scope": 678,
									"src": "10627:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "10701:553:4",
										"text": " @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n - Users can be rebalanced if the following conditions are satisfied:\n     1. Usage ratio is above 95%\n     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\n        borrowed at a stable rate and depositors are not earning enough\n @param asset The address of the underlying asset borrowed\n @param user The address of the user to be rebalanced*"
									},
									"functionSelector": "cd112382",
									"id": 513,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rebalanceStableBorrowRate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 513,
												"src": "11292:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11292:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 513,
												"src": "11307:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11307:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11291:29:4"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11329:0:4"
									},
									"scope": 678,
									"src": "11257:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "11334:266:4",
										"text": " @dev Allows depositors to enable/disable a specific deposited asset as collateral\n @param asset The address of the underlying asset deposited\n @param useAsCollateral `true` if the user wants to use the deposit as collateral, `false` otherwise*"
									},
									"functionSelector": "5a3b74b9",
									"id": 521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setUserUseReserveAsCollateral",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 521,
												"src": "11642:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11642:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "useAsCollateral",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 521,
												"src": "11657:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 517,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11657:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11641:37:4"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11687:0:4"
									},
									"scope": 678,
									"src": "11603:85:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "11692:860:4",
										"text": " @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly*"
									},
									"functionSelector": "00a718a9",
									"id": 535,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidationCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "collateralAsset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 535,
												"src": "12585:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12585:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "debtAsset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 535,
												"src": "12614:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12614:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 535,
												"src": "12637:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12637:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "debtToCover",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 535,
												"src": "12655:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12655:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "receiveAToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 535,
												"src": "12680:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 531,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12680:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12579:123:4"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12711:0:4"
									},
									"scope": 678,
									"src": "12555:157:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "12716:1376:4",
										"text": " @dev Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\n For further details please visit https://developers.aave.com\n @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\n @param assets The addresses of the assets being flash-borrowed\n @param amounts The amounts amounts being flash-borrowed\n @param modes Types of the debt to open if the flash loan is not returned:\n   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man*"
									},
									"functionSelector": "ab9c4b5d",
									"id": 556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flashLoan",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "receiverAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 556,
												"src": "14119:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14119:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 556,
												"src": "14148:25:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 539,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "14148:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 540,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "14148:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 556,
												"src": "14179:26:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 542,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14179:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 543,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "14179:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "modes",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 556,
												"src": "14211:24:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 545,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14211:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 546,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "14211:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 556,
												"src": "14241:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14241:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 556,
												"src": "14265:21:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 550,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14265:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "referralCode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 556,
												"src": "14292:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 552,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "14292:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14113:202:4"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14324:0:4"
									},
									"scope": 678,
									"src": "14095:230:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "14329:507:4",
										"text": " @dev Returns the user account data across all the reserves\n @param user The address of the user\n @return totalCollateralETH the total collateral in ETH of the user\n @return totalDebtETH the total debt in ETH of the user\n @return availableBorrowsETH the borrowing power left of the user\n @return currentLiquidationThreshold the liquidation threshold of the user\n @return ltv the loan to value of the user\n @return healthFactor the current health factor of the user*"
									},
									"functionSelector": "bf92857c",
									"id": 574,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserAccountData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 574,
												"src": "14867:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14867:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14866:14:4"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "totalCollateralETH",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 574,
												"src": "14923:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14923:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "totalDebtETH",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 574,
												"src": "14957:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14957:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "availableBorrowsETH",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 574,
												"src": "14985:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14985:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "currentLiquidationThreshold",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 574,
												"src": "15020:35:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15020:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "ltv",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 574,
												"src": "15063:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15063:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "healthFactor",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 574,
												"src": "15082:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15082:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14915:193:4"
									},
									"scope": 678,
									"src": "14839:270:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "7a708e92",
									"id": 587,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initReserve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 587,
												"src": "15139:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15139:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "aTokenAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 587,
												"src": "15160:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15160:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "stableDebtAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 587,
												"src": "15187:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15187:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "variableDebtAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 587,
												"src": "15218:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15218:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "interestRateStrategyAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 587,
												"src": "15251:35:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15251:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15133:157:4"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15299:0:4"
									},
									"scope": 678,
									"src": "15113:187:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "1d2118f9",
									"id": 594,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setReserveInterestRateStrategyAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 594,
												"src": "15351:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15351:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "rateStrategyAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 594,
												"src": "15368:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15368:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15350:46:4"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15409:0:4"
									},
									"scope": 678,
									"src": "15304:106:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "b8d29276",
									"id": 601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setConfiguration",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 601,
												"src": "15440:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15440:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "configuration",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 601,
												"src": "15457:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15439:40:4"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15488:0:4"
									},
									"scope": 678,
									"src": "15414:75:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "15493:176:4",
										"text": " @dev Returns the configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The configuration of the reserve*"
									},
									"functionSelector": "c44b11f7",
									"id": 609,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getConfiguration",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 609,
												"src": "15698:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15698:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15697:15:4"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 609,
												"src": "15748:40:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 606,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2774,
													"src": "15748:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15747:42:4"
									},
									"scope": 678,
									"src": "15672:118:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "15794:159:4",
										"text": " @dev Returns the configuration of the user across all the reserves\n @param user The user address\n @return The configuration of the user*"
									},
									"functionSelector": "4417a583",
									"id": 617,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserConfiguration",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 617,
												"src": "15986:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15986:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15985:14:4"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 617,
												"src": "16035:37:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserConfigurationMap_$2777_memory_ptr",
													"typeString": "struct DataTypes.UserConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 614,
													"name": "DataTypes.UserConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2777,
													"src": "16035:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserConfigurationMap_$2777_storage_ptr",
														"typeString": "struct DataTypes.UserConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16034:39:4"
									},
									"scope": 678,
									"src": "15956:118:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "16078:196:4",
										"text": " @dev Returns the normalized income normalized income of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The reserve's normalized income"
									},
									"functionSelector": "d15e0053",
									"id": 625,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveNormalizedIncome",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 625,
												"src": "16313:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16313:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16312:15:4"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 625,
												"src": "16351:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16351:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16350:9:4"
									},
									"scope": 678,
									"src": "16277:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "16364:193:4",
										"text": " @dev Returns the normalized variable debt per unit of asset\n @param asset The address of the underlying asset of the reserve\n @return The reserve normalized variable debt"
									},
									"functionSelector": "386497fd",
									"id": 633,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveNormalizedVariableDebt",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 633,
												"src": "16602:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16602:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16601:15:4"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 633,
												"src": "16640:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16640:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16639:9:4"
									},
									"scope": 678,
									"src": "16560:89:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "16653:178:4",
										"text": " @dev Returns the state and configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The state of the reserve*"
									},
									"functionSelector": "35ea6a75",
									"id": 641,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 641,
												"src": "16858:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16858:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16857:15:4"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 641,
												"src": "16896:28:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveData_$2771_memory_ptr",
													"typeString": "struct DataTypes.ReserveData"
												},
												"typeName": {
													"contractScope": null,
													"id": 638,
													"name": "DataTypes.ReserveData",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2771,
													"src": "16896:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveData_$2771_storage_ptr",
														"typeString": "struct DataTypes.ReserveData"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16895:30:4"
									},
									"scope": 678,
									"src": "16834:92:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "d5ed3933",
									"id": 656,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "finalizeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 656,
												"src": "16961:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16961:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 656,
												"src": "16980:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16980:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 656,
												"src": "16998:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16998:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 656,
												"src": "17014:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17014:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "balanceFromAfter",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 656,
												"src": "17034:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17034:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "balanceToBefore",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 656,
												"src": "17064:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17064:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16955:136:4"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17100:0:4"
									},
									"scope": 678,
									"src": "16930:171:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "d1946dbc",
									"id": 662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReservesList",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17129:2:4"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 662,
												"src": "17155:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 658,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "17155:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 659,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "17155:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17154:18:4"
									},
									"scope": 678,
									"src": "17105:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "fe65acfe",
									"id": 667,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressesProvider",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17206:2:4"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 667,
												"src": "17232:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$829",
													"typeString": "contract ILendingPoolAddressesProvider"
												},
												"typeName": {
													"contractScope": null,
													"id": 664,
													"name": "ILendingPoolAddressesProvider",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 829,
													"src": "17232:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$829",
														"typeString": "contract ILendingPoolAddressesProvider"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17231:31:4"
									},
									"scope": 678,
									"src": "17177:86:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "bedb86fb",
									"id": 672,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "val",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 672,
												"src": "17285:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 668,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17285:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17284:10:4"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17303:0:4"
									},
									"scope": 678,
									"src": "17267:37:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "5c975abb",
									"id": 677,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17323:2:4"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 677,
												"src": "17349:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 674,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17349:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17348:6:4"
									},
									"scope": 678,
									"src": "17308:47:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 679,
							"src": "249:17108:4"
						}
					],
					"src": "37:17321:4"
				},
				"id": 4
			},
			"contracts/interfaces/ILendingPoolAddressesProvider.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ILendingPoolAddressesProvider.sol",
					"exportedSymbols": {
						"ILendingPoolAddressesProvider": [
							829
						]
					},
					"id": 830,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 680,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 681,
								"nodeType": "StructuredDocumentation",
								"src": "62:311:5",
								"text": " @title LendingPoolAddressesProvider contract\n @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\n - Acting also as factory of proxies and admin of those, so with right to change its implementations\n - Owned by the Aave Governance\n @author Aave*"
							},
							"fullyImplemented": false,
							"id": 829,
							"linearizedBaseContracts": [
								829
							],
							"name": "ILendingPoolAddressesProvider",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 685,
									"name": "MarketIdSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMarketId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 685,
												"src": "436:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 682,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "436:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "435:20:5"
									},
									"src": "418:38:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 689,
									"name": "LendingPoolUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 689,
												"src": "484:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "483:28:5"
									},
									"src": "459:53:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 693,
									"name": "ConfigurationAdminUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 693,
												"src": "547:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "546:28:5"
									},
									"src": "515:60:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 697,
									"name": "EmergencyAdminUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 697,
												"src": "606:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "605:28:5"
									},
									"src": "578:56:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 701,
									"name": "LendingPoolConfiguratorUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 701,
												"src": "674:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "673:28:5"
									},
									"src": "637:65:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 705,
									"name": "LendingPoolCollateralManagerUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 705,
												"src": "747:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "746:28:5"
									},
									"src": "705:70:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 709,
									"name": "PriceOracleUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 709,
												"src": "803:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "802:28:5"
									},
									"src": "778:53:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 713,
									"name": "LendingRateOracleUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 713,
												"src": "865:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "864:28:5"
									},
									"src": "834:59:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 719,
									"name": "ProxyCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 719,
												"src": "915:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 714,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 719,
												"src": "927:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "927:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "914:40:5"
									},
									"src": "896:59:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 727,
									"name": "AddressSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 727,
												"src": "975:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 720,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 727,
												"src": "987:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"indexed": false,
												"mutability": "mutable",
												"name": "hasProxy",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 727,
												"src": "1015:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 724,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1015:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "974:55:5"
									},
									"src": "958:72:5"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "568ef470",
									"id": 732,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMarketId",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1054:2:5"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 732,
												"src": "1080:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 729,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1080:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1079:15:5"
									},
									"scope": 829,
									"src": "1034:61:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "f67b1847",
									"id": 737,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMarketId",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "marketId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 737,
												"src": "1120:24:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 733,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1120:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1119:26:5"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1154:0:5"
									},
									"scope": 829,
									"src": "1099:56:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "ca446dd9",
									"id": 744,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 744,
												"src": "1179:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 738,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1179:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 744,
												"src": "1191:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1178:32:5"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:0:5"
									},
									"scope": 829,
									"src": "1159:61:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "5dcc528c",
									"id": 751,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddressAsProxy",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 751,
												"src": "1251:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 745,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "impl",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 751,
												"src": "1263:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1250:26:5"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1285:0:5"
									},
									"scope": 829,
									"src": "1224:62:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "21f8a721",
									"id": 758,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 758,
												"src": "1310:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 752,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1309:12:5"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 758,
												"src": "1345:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1344:9:5"
									},
									"scope": 829,
									"src": "1290:64:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "0261bf8b",
									"id": 763,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1381:2:5"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 763,
												"src": "1407:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1407:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1406:9:5"
									},
									"scope": 829,
									"src": "1358:58:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "5aef021f",
									"id": 768,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolImpl",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 768,
												"src": "1448:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1448:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1447:14:5"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1470:0:5"
									},
									"scope": 829,
									"src": "1420:51:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "85c858b1",
									"id": 773,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPoolConfigurator",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1510:2:5"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 773,
												"src": "1536:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1535:9:5"
									},
									"scope": 829,
									"src": "1475:70:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "c12542df",
									"id": 778,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolConfiguratorImpl",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "configurator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 778,
												"src": "1589:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1589:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1588:22:5"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:0:5"
									},
									"scope": 829,
									"src": "1549:71:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "712d9171",
									"id": 783,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPoolCollateralManager",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1664:2:5"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 783,
												"src": "1690:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1690:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1689:9:5"
									},
									"scope": 829,
									"src": "1624:75:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "398e5553",
									"id": 788,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolCollateralManager",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "manager",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 788,
												"src": "1744:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1743:17:5"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1769:0:5"
									},
									"scope": 829,
									"src": "1703:67:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "aecda378",
									"id": 793,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1795:2:5"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 793,
												"src": "1821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1821:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1820:9:5"
									},
									"scope": 829,
									"src": "1774:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "283d62ad",
									"id": 798,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPoolAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "admin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 798,
												"src": "1856:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1856:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1855:15:5"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1879:0:5"
									},
									"scope": 829,
									"src": "1834:46:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "ddcaa9ea",
									"id": 803,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEmergencyAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1910:2:5"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 803,
												"src": "1936:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1936:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1935:9:5"
									},
									"scope": 829,
									"src": "1884:61:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "35da3394",
									"id": 808,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setEmergencyAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "admin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 808,
												"src": "1976:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1975:15:5"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1999:0:5"
									},
									"scope": 829,
									"src": "1949:51:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "fca513a8",
									"id": 813,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceOracle",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2027:2:5"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 813,
												"src": "2053:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2053:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:9:5"
									},
									"scope": 829,
									"src": "2004:58:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "530e784f",
									"id": 818,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPriceOracle",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "priceOracle",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 818,
												"src": "2090:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2089:21:5"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2119:0:5"
									},
									"scope": 829,
									"src": "2066:54:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "3618abba",
									"id": 823,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingRateOracle",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2153:2:5"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 823,
												"src": "2179:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2179:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2178:9:5"
									},
									"scope": 829,
									"src": "2124:64:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "820d1274",
									"id": 828,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingRateOracle",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "lendingRateOracle",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 828,
												"src": "2222:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2221:27:5"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2257:0:5"
									},
									"scope": 829,
									"src": "2192:66:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 830,
							"src": "374:1886:5"
						}
					],
					"src": "37:2224:5"
				},
				"id": 5
			},
			"contracts/interfaces/IScaledBalanceToken.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IScaledBalanceToken.sol",
					"exportedSymbols": {
						"IScaledBalanceToken": [
							856
						]
					},
					"id": 857,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 831,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 856,
							"linearizedBaseContracts": [
								856
							],
							"name": "IScaledBalanceToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "96:296:6",
										"text": " @dev Returns the scaled balance of the user. The scaled balance is the sum of all the\n updated stored balance divided by the reserve's liquidity index at the moment of the update\n @param user The user whose balance is calculated\n @return The scaled balance of the user*"
									},
									"functionSelector": "1da24f3e",
									"id": 839,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "scaledBalanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 839,
												"src": "420:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "419:14:6"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 839,
												"src": "457:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "457:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "456:9:6"
									},
									"scope": 856,
									"src": "395:71:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 840,
										"nodeType": "StructuredDocumentation",
										"src": "470:233:6",
										"text": " @dev Returns the scaled balance of the user and the scaled total supply.\n @param user The address of the user\n @return The scaled balance of the user\n @return The scaled balance and the scaled total supply*"
									},
									"functionSelector": "0afbcdc9",
									"id": 849,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getScaledUserBalanceAndSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 849,
												"src": "745:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "744:14:6"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 849,
												"src": "782:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 849,
												"src": "791:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "781:18:6"
									},
									"scope": 856,
									"src": "706:94:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 850,
										"nodeType": "StructuredDocumentation",
										"src": "804:144:6",
										"text": " @dev Returns the scaled total supply of the variable debt token. Represents sum(debt/index)\n @return The scaled total supply*"
									},
									"functionSelector": "b1bf962d",
									"id": 855,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "scaledTotalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "977:2:6"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 855,
												"src": "1003:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1003:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1002:9:6"
									},
									"scope": 856,
									"src": "951:61:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 857,
							"src": "62:952:6"
						}
					],
					"src": "37:978:6"
				},
				"id": 6
			},
			"contracts/misc/Reenter.sol": {
				"ast": {
					"absolutePath": "contracts/misc/Reenter.sol",
					"exportedSymbols": {
						"Test": [
							948
						]
					},
					"id": 949,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 858,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:7"
						},
						{
							"absolutePath": "contracts/misc/WETHGateway.sol",
							"file": "./WETHGateway.sol",
							"id": 859,
							"nodeType": "ImportDirective",
							"scope": 949,
							"sourceUnit": 1394,
							"src": "65:27:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/IERC20.sol",
							"file": "../dependencies/openzeppelin/contracts/IERC20.sol",
							"id": 861,
							"nodeType": "ImportDirective",
							"scope": 949,
							"sourceUnit": 101,
							"src": "94:73:7",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 860,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "102:6:7",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 948,
							"linearizedBaseContracts": [
								948
							],
							"name": "Test",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "116191b6",
									"id": 863,
									"mutability": "mutable",
									"name": "gateway",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 948,
									"src": "194:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_WETHGateway_$1393",
										"typeString": "contract WETHGateway"
									},
									"typeName": {
										"contractScope": null,
										"id": 862,
										"name": "WETHGateway",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1393,
										"src": "194:11:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_WETHGateway_$1393",
											"typeString": "contract WETHGateway"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 865,
									"mutability": "mutable",
									"name": "token",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 948,
									"src": "227:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$100",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"contractScope": null,
										"id": 864,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 100,
										"src": "227:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$100",
											"typeString": "contract IERC20"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 871,
									"name": "Received",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 871,
												"src": "271:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "271:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 871,
												"src": "287:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "287:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "270:32:7"
									},
									"src": "256:47:7"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "363:162:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 876,
														"name": "gateway",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "374:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_WETHGateway_$1393",
															"typeString": "contract WETHGateway"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 878,
																"name": "_gatewayAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "396:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"id": 877,
															"name": "WETHGateway",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "384:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_WETHGateway_$1393_$",
																"typeString": "type(contract WETHGateway)"
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "384:28:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_WETHGateway_$1393",
															"typeString": "contract WETHGateway"
														}
													},
													"src": "374:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_WETHGateway_$1393",
														"typeString": "contract WETHGateway"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "374:38:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 882,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "423:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$100",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"id": 884,
																		"name": "gateway",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "438:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_WETHGateway_$1393",
																			"typeString": "contract WETHGateway"
																		}
																	},
																	"id": 885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "getAWETHAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1355,
																	"src": "438:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "438:25:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 883,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "431:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$100_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "431:33:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$100",
															"typeString": "contract IERC20"
														}
													},
													"src": "423:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$100",
														"typeString": "contract IERC20"
													}
												},
												"id": 889,
												"nodeType": "ExpressionStatement",
												"src": "423:41:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 893,
															"name": "_gatewayAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "489:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31653138",
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "506:4:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 890,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "475:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$100",
																"typeString": "contract IERC20"
															}
														},
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 69,
														"src": "475:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "475:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "475:37:7"
											}
										]
									},
									"documentation": null,
									"id": 898,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "_gatewayAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 898,
												"src": "323:31:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "323:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "322:33:7"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "363:0:7"
									},
									"scope": 948,
									"src": "311:214:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "567:182:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 908,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "645:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Test_$948",
																		"typeString": "contract Test"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Test_$948",
																		"typeString": "contract Test"
																	}
																],
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "637:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 906,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "637:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "637:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "307830",
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "679:3:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0x0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 901,
																"name": "gateway",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "578:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_WETHGateway_$1393",
																	"typeString": "contract WETHGateway"
																}
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "depositETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1065,
															"src": "578:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint16_$returns$__$",
																"typeString": "function (address,uint16) payable external"
															}
														},
														"id": 905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"hexValue": "37",
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "604:5:7",
																"subdenomination": "wei",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_7_by_1",
																	"typeString": "int_const 7"
																},
																"value": "7"
															}
														],
														"src": "578:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint16_$returns$__$value",
															"typeString": "function (address,uint16) payable external"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [
														"onBehalfOf",
														"referralCode"
													],
													"nodeType": "FunctionCall",
													"src": "578:116:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "578:116:7"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 914,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "719:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "719:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 916,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "731:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "731:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 913,
														"name": "Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "710:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "710:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "EmitStatement",
												"src": "705:36:7"
											}
										]
									},
									"documentation": null,
									"id": 921,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "547:2:7"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "567:0:7"
									},
									"scope": 948,
									"src": "539:210:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "791:238:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 931,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "869:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Test_$948",
																		"typeString": "contract Test"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Test_$948",
																		"typeString": "contract Test"
																	}
																],
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "861:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 929,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "861:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "861:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "307830",
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "903:3:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0x0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 924,
																"name": "gateway",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "802:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_WETHGateway_$1393",
																	"typeString": "contract WETHGateway"
																}
															},
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "depositETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1065,
															"src": "802:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint16_$returns$__$",
																"typeString": "function (address,uint16) payable external"
															}
														},
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"hexValue": "35",
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "828:5:7",
																"subdenomination": "wei",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																"value": "5"
															}
														],
														"src": "802:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint16_$returns$__$value",
															"typeString": "function (address,uint16) payable external"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [
														"onBehalfOf",
														"referralCode"
													],
													"nodeType": "FunctionCall",
													"src": "802:116:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 935,
												"nodeType": "ExpressionStatement",
												"src": "802:116:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "33",
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "972:5:7",
															"subdenomination": "wei",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 942,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "1004:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Test_$948",
																		"typeString": "contract Test"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Test_$948",
																		"typeString": "contract Test"
																	}
																],
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "996:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 940,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "996:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "996:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 936,
															"name": "gateway",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "929:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_WETHGateway_$1393",
																"typeString": "contract WETHGateway"
															}
														},
														"id": 938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "withdrawETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1137,
														"src": "929:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address) external"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [
														"amount",
														"to"
													],
													"nodeType": "FunctionCall",
													"src": "929:92:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "929:92:7"
											}
										]
									},
									"documentation": null,
									"functionSelector": "b90c4034",
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "test123",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:7"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "791:0:7"
									},
									"scope": 948,
									"src": "757:272:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 949,
							"src": "173:859:7"
						}
					],
					"src": "38:994:7"
				},
				"id": 7
			},
			"contracts/misc/WETHGateway.sol": {
				"ast": {
					"absolutePath": "contracts/misc/WETHGateway.sol",
					"exportedSymbols": {
						"WETHGateway": [
							1393
						]
					},
					"id": 1394,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 950,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:8"
						},
						{
							"id": 951,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "61:33:8"
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/Ownable.sol",
							"file": "../dependencies/openzeppelin/contracts/Ownable.sol",
							"id": 953,
							"nodeType": "ImportDirective",
							"scope": 1394,
							"sourceUnit": 210,
							"src": "96:75:8",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 952,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "104:7:8",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/IERC20.sol",
							"file": "../dependencies/openzeppelin/contracts/IERC20.sol",
							"id": 955,
							"nodeType": "ImportDirective",
							"scope": 1394,
							"sourceUnit": 101,
							"src": "172:73:8",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 954,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "180:6:8",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/misc/interfaces/IWETH.sol",
							"file": "./interfaces/IWETH.sol",
							"id": 957,
							"nodeType": "ImportDirective",
							"scope": 1394,
							"sourceUnit": 1425,
							"src": "246:45:8",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 956,
										"name": "IWETH",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "254:5:8",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/misc/interfaces/IWETHGateway.sol",
							"file": "./interfaces/IWETHGateway.sol",
							"id": 959,
							"nodeType": "ImportDirective",
							"scope": 1394,
							"sourceUnit": 1460,
							"src": "292:59:8",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 958,
										"name": "IWETHGateway",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "300:12:8",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/ILendingPool.sol",
							"file": "../interfaces/ILendingPool.sol",
							"id": 961,
							"nodeType": "ImportDirective",
							"scope": 1394,
							"sourceUnit": 679,
							"src": "352:60:8",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 960,
										"name": "ILendingPool",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "360:12:8",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IAToken.sol",
							"file": "../interfaces/IAToken.sol",
							"id": 963,
							"nodeType": "ImportDirective",
							"scope": 1394,
							"sourceUnit": 304,
							"src": "413:50:8",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 962,
										"name": "IAToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "421:7:8",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/protocol/libraries/configuration/ReserveConfiguration.sol",
							"file": "../protocol/libraries/configuration/ReserveConfiguration.sol",
							"id": 965,
							"nodeType": "ImportDirective",
							"scope": 1394,
							"sourceUnit": 2182,
							"src": "464:98:8",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 964,
										"name": "ReserveConfiguration",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "472:20:8",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/protocol/libraries/configuration/UserConfiguration.sol",
							"file": "../protocol/libraries/configuration/UserConfiguration.sol",
							"id": 967,
							"nodeType": "ImportDirective",
							"scope": 1394,
							"sourceUnit": 2425,
							"src": "563:92:8",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 966,
										"name": "UserConfiguration",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "571:17:8",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/protocol/libraries/helpers/Helpers.sol",
							"file": "../protocol/libraries/helpers/Helpers.sol",
							"id": 969,
							"nodeType": "ImportDirective",
							"scope": 1394,
							"sourceUnit": 2745,
							"src": "656:66:8",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 968,
										"name": "Helpers",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "664:7:8",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/protocol/libraries/types/DataTypes.sol",
							"file": "../protocol/libraries/types/DataTypes.sol",
							"id": 971,
							"nodeType": "ImportDirective",
							"scope": 1394,
							"sourceUnit": 2783,
							"src": "723:68:8",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 970,
										"name": "DataTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "731:9:8",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 972,
										"name": "IWETHGateway",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1459,
										"src": "817:12:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWETHGateway_$1459",
											"typeString": "contract IWETHGateway"
										}
									},
									"id": 973,
									"nodeType": "InheritanceSpecifier",
									"src": "817:12:8"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 974,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 209,
										"src": "831:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$209",
											"typeString": "contract Ownable"
										}
									},
									"id": 975,
									"nodeType": "InheritanceSpecifier",
									"src": "831:7:8"
								}
							],
							"contractDependencies": [
								22,
								209,
								1459
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1393,
							"linearizedBaseContracts": [
								1393,
								209,
								22,
								1459
							],
							"name": "WETHGateway",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 978,
									"libraryName": {
										"contractScope": null,
										"id": 976,
										"name": "ReserveConfiguration",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2181,
										"src": "849:20:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ReserveConfiguration_$2181",
											"typeString": "library ReserveConfiguration"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "843:65:8",
									"typeName": {
										"contractScope": null,
										"id": 977,
										"name": "DataTypes.ReserveConfigurationMap",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2774,
										"src": "874:33:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
											"typeString": "struct DataTypes.ReserveConfigurationMap"
										}
									}
								},
								{
									"id": 981,
									"libraryName": {
										"contractScope": null,
										"id": 979,
										"name": "UserConfiguration",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2424,
										"src": "917:17:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_UserConfiguration_$2424",
											"typeString": "library UserConfiguration"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "911:59:8",
									"typeName": {
										"contractScope": null,
										"id": 980,
										"name": "DataTypes.UserConfigurationMap",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2777,
										"src": "939:30:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UserConfigurationMap_$2777_storage_ptr",
											"typeString": "struct DataTypes.UserConfigurationMap"
										}
									}
								},
								{
									"constant": false,
									"id": 983,
									"mutability": "immutable",
									"name": "WETH",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1393,
									"src": "974:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWETH_$1424",
										"typeString": "contract IWETH"
									},
									"typeName": {
										"contractScope": null,
										"id": 982,
										"name": "IWETH",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1424,
										"src": "974:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWETH_$1424",
											"typeString": "contract IWETH"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 985,
									"mutability": "immutable",
									"name": "POOL",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1393,
									"src": "1007:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ILendingPool_$678",
										"typeString": "contract ILendingPool"
									},
									"typeName": {
										"contractScope": null,
										"id": 984,
										"name": "ILendingPool",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 678,
										"src": "1007:12:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ILendingPool_$678",
											"typeString": "contract ILendingPool"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 987,
									"mutability": "immutable",
									"name": "aWETH",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1393,
									"src": "1047:32:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IAToken_$303",
										"typeString": "contract IAToken"
									},
									"typeName": {
										"contractScope": null,
										"id": 986,
										"name": "IAToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 303,
										"src": "1047:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IAToken_$303",
											"typeString": "contract IAToken"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "1362:220:8",
										"statements": [
											{
												"assignments": [
													996
												],
												"declarations": [
													{
														"constant": false,
														"id": 996,
														"mutability": "mutable",
														"name": "poolInstance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1033,
														"src": "1368:25:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILendingPool_$678",
															"typeString": "contract ILendingPool"
														},
														"typeName": {
															"contractScope": null,
															"id": 995,
															"name": "ILendingPool",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 678,
															"src": "1368:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILendingPool_$678",
																"typeString": "contract ILendingPool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1000,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 998,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "1409:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 997,
														"name": "ILendingPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "1396:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ILendingPool_$678_$",
															"typeString": "type(contract ILendingPool)"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1396:18:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILendingPool_$678",
														"typeString": "contract ILendingPool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1368:46:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1001,
														"name": "WETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "1420:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWETH_$1424",
															"typeString": "contract IWETH"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1003,
																"name": "weth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "1433:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1002,
															"name": "IWETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "1427:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IWETH_$1424_$",
																"typeString": "type(contract IWETH)"
															}
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1427:11:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWETH_$1424",
															"typeString": "contract IWETH"
														}
													},
													"src": "1420:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWETH_$1424",
														"typeString": "contract IWETH"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "1420:18:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1007,
														"name": "POOL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "1444:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILendingPool_$678",
															"typeString": "contract ILendingPool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1008,
														"name": "poolInstance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "1451:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILendingPool_$678",
															"typeString": "contract ILendingPool"
														}
													},
													"src": "1444:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILendingPool_$678",
														"typeString": "contract ILendingPool"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "1444:19:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1011,
														"name": "aWETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "1469:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAToken_$303",
															"typeString": "contract IAToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1015,
																			"name": "weth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 990,
																			"src": "1513:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1013,
																			"name": "poolInstance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 996,
																			"src": "1485:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ILendingPool_$678",
																				"typeString": "contract ILendingPool"
																			}
																		},
																		"id": 1014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "getReserveData",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 641,
																		"src": "1485:27:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_ReserveData_$2771_memory_ptr_$",
																			"typeString": "function (address) view external returns (struct DataTypes.ReserveData memory)"
																		}
																	},
																	"id": 1016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1485:33:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ReserveData_$2771_memory_ptr",
																		"typeString": "struct DataTypes.ReserveData memory"
																	}
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "aTokenAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2762,
																"src": "1485:47:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1012,
															"name": "IAToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "1477:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IAToken_$303_$",
																"typeString": "type(contract IAToken)"
															}
														},
														"id": 1018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1477:56:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAToken_$303",
															"typeString": "contract IAToken"
														}
													},
													"src": "1469:64:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAToken_$303",
														"typeString": "contract IAToken"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "1469:64:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1025,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "1559:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "1573:2:8",
																	"subExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1574:1:8",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																],
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1565:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1026,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1565:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1565:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1022,
																	"name": "weth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 990,
																	"src": "1545:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1021,
																"name": "IWETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "1539:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IWETH_$1424_$",
																	"typeString": "type(contract IWETH)"
																}
															},
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1539:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWETH_$1424",
																"typeString": "contract IWETH"
															}
														},
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1412,
														"src": "1539:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1539:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "1539:38:8"
											}
										]
									},
									"documentation": {
										"id": 988,
										"nodeType": "StructuredDocumentation",
										"src": "1084:228:8",
										"text": " @dev Sets the WETH address and the LendingPoolAddressesProvider address. Infinite approves lending pool.\n @param weth Address of the Wrapped Ether contract\n @param pool Address of the LendingPool contract*"
									},
									"id": 1034,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "weth",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1034,
												"src": "1327:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1327:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1034,
												"src": "1341:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1326:28:8"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1362:0:8"
									},
									"scope": 1393,
									"src": "1315:267:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1433
									],
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "2018:113:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"id": 1043,
																"name": "WETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "2024:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWETH_$1424",
																	"typeString": "contract IWETH"
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1398,
															"src": "2024:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$__$returns$__$",
																"typeString": "function () payable external"
															}
														},
														"id": 1048,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1046,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "2044:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2044:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2024:30:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$__$value",
															"typeString": "function () payable external"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2024:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "2024:32:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1056,
																	"name": "WETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "2083:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWETH_$1424",
																		"typeString": "contract IWETH"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IWETH_$1424",
																		"typeString": "contract IWETH"
																	}
																],
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2075:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1054,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2075:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2075:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1058,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2090:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2090:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1060,
															"name": "onBehalfOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "2101:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1061,
															"name": "referralCode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "2113:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1051,
															"name": "POOL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "2062:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILendingPool_$678",
																"typeString": "contract ILendingPool"
															}
														},
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "deposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 457,
														"src": "2062:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
															"typeString": "function (address,uint256,address,uint16) external"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2062:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "2062:64:8"
											}
										]
									},
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "1586:342:8",
										"text": " @dev deposits WETH into the reserve, using native ETH. A corresponding amount of the overlying asset (aTokens)\n is minted.\n @param onBehalfOf address of the user who will receive the aTokens representing the deposit\n @param referralCode integrators are assigned a referral code and can potentially receive rewards.*"
									},
									"functionSelector": "58c22be7",
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositETH",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1041,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2009:8:8"
									},
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1065,
												"src": "1951:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1951:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "referralCode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1065,
												"src": "1971:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1038,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1971:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1950:41:8"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2018:0:8"
									},
									"scope": 1393,
									"src": "1931:200:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1440
									],
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "2401:475:8",
										"statements": [
											{
												"assignments": [
													1075
												],
												"declarations": [
													{
														"constant": false,
														"id": 1075,
														"mutability": "mutable",
														"name": "userBalance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1136,
														"src": "2407:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1074,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2407:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1081,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1078,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2445:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2445:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1076,
															"name": "aWETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "2429:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAToken_$303",
																"typeString": "contract IAToken"
															}
														},
														"id": 1077,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 39,
														"src": "2429:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2429:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2407:49:8"
											},
											{
												"assignments": [
													1083
												],
												"declarations": [
													{
														"constant": false,
														"id": 1083,
														"mutability": "mutable",
														"name": "amountToWithdraw",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1136,
														"src": "2462:24:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1082,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2462:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1085,
												"initialValue": {
													"argumentTypes": null,
													"id": 1084,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1068,
													"src": "2489:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2462:33:8"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1086,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "2581:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2596:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1088,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2596:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1087,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -27,
																"src": "2591:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2591:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1091,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2591:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2581:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1098,
												"nodeType": "IfStatement",
												"src": "2577:78:8",
												"trueBody": {
													"id": 1097,
													"nodeType": "Block",
													"src": "2610:45:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1093,
																	"name": "amountToWithdraw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "2618:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1094,
																	"name": "userBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "2637:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2618:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1096,
															"nodeType": "ExpressionStatement",
															"src": "2618:30:8"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1102,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2679:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2679:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1106,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "2699:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_WETHGateway_$1393",
																		"typeString": "contract WETHGateway"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_WETHGateway_$1393",
																		"typeString": "contract WETHGateway"
																	}
																],
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2691:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1104,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2691:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2691:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1108,
															"name": "amountToWithdraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "2706:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1099,
															"name": "aWETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "2660:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAToken_$303",
																"typeString": "contract IAToken"
															}
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 81,
														"src": "2660:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2660:63:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1110,
												"nodeType": "ExpressionStatement",
												"src": "2660:63:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1116,
																	"name": "WETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "2751:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWETH_$1424",
																		"typeString": "contract IWETH"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IWETH_$1424",
																		"typeString": "contract IWETH"
																	}
																],
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2743:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1114,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2743:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2743:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1118,
															"name": "amountToWithdraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "2758:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1121,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "2784:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_WETHGateway_$1393",
																		"typeString": "contract WETHGateway"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_WETHGateway_$1393",
																		"typeString": "contract WETHGateway"
																	}
																],
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2776:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1119,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2776:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2776:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1111,
															"name": "POOL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "2729:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILendingPool_$678",
																"typeString": "contract ILendingPool"
															}
														},
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 469,
														"src": "2729:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,uint256,address) external returns (uint256)"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2729:61:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "2729:61:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1128,
															"name": "amountToWithdraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "2810:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1125,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "2796:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWETH_$1424",
																"typeString": "contract IWETH"
															}
														},
														"id": 1127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1403,
														"src": "2796:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2796:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1130,
												"nodeType": "ExpressionStatement",
												"src": "2796:31:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1132,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "2850:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1133,
															"name": "amountToWithdraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "2854:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1131,
														"name": "_safeTransferETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "2833:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2833:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "2833:38:8"
											}
										]
									},
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "2135:196:8",
										"text": " @dev withdraws the WETH _reserves of msg.sender.\n @param amount amount of aWETH to withdraw and receive native ETH\n @param to address of the user who will receive native ETH"
									},
									"functionSelector": "36118b52",
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawETH",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1072,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2392:8:8"
									},
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1137,
												"src": "2355:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2355:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1137,
												"src": "2371:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2371:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2354:28:8"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2401:0:8"
									},
									"scope": 1393,
									"src": "2334:542:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1449
									],
									"body": {
										"id": 1229,
										"nodeType": "Block",
										"src": "3339:683:8",
										"statements": [
											{
												"assignments": [
													1149,
													1151
												],
												"declarations": [
													{
														"constant": false,
														"id": 1149,
														"mutability": "mutable",
														"name": "stableDebt",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1229,
														"src": "3346:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1148,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3346:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1151,
														"mutability": "mutable",
														"name": "variableDebt",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1229,
														"src": "3366:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1150,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3366:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1163,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1154,
															"name": "onBehalfOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "3429:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1159,
																			"name": "WETH",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 983,
																			"src": "3469:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IWETH_$1424",
																				"typeString": "contract IWETH"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IWETH_$1424",
																				"typeString": "contract IWETH"
																			}
																		],
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3461:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1157,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3461:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3461:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1155,
																	"name": "POOL",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 985,
																	"src": "3441:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ILendingPool_$678",
																		"typeString": "contract ILendingPool"
																	}
																},
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "getReserveData",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 641,
																"src": "3441:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_ReserveData_$2771_memory_ptr_$",
																	"typeString": "function (address) view external returns (struct DataTypes.ReserveData memory)"
																}
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3441:34:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReserveData_$2771_memory_ptr",
																"typeString": "struct DataTypes.ReserveData memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_ReserveData_$2771_memory_ptr",
																"typeString": "struct DataTypes.ReserveData memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1152,
															"name": "Helpers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2744,
															"src": "3396:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Helpers_$2744_$",
																"typeString": "type(library Helpers)"
															}
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getUserCurrentDebtMemory",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2743,
														"src": "3396:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_ReserveData_$2771_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,struct DataTypes.ReserveData memory) view returns (uint256,uint256)"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3396:80:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3345:131:8"
											},
											{
												"assignments": [
													1165
												],
												"declarations": [
													{
														"constant": false,
														"id": 1165,
														"mutability": "mutable",
														"name": "paybackAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1229,
														"src": "3483:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1164,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3483:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1177,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_enum$_InterestRateMode_$2781",
															"typeString": "enum DataTypes.InterestRateMode"
														},
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1168,
																	"name": "rateMode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1142,
																	"src": "3540:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1166,
																	"name": "DataTypes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2782,
																	"src": "3513:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_DataTypes_$2782_$",
																		"typeString": "type(library DataTypes)"
																	}
																},
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "InterestRateMode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2781,
																"src": "3513:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_InterestRateMode_$2781_$",
																	"typeString": "type(enum DataTypes.InterestRateMode)"
																}
															},
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3513:36:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_InterestRateMode_$2781",
																"typeString": "enum DataTypes.InterestRateMode"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1170,
																	"name": "DataTypes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2782,
																	"src": "3553:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_DataTypes_$2782_$",
																		"typeString": "type(library DataTypes)"
																	}
																},
																"id": 1171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "InterestRateMode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2781,
																"src": "3553:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_InterestRateMode_$2781_$",
																	"typeString": "type(enum DataTypes.InterestRateMode)"
																}
															},
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "STABLE",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3553:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_InterestRateMode_$2781",
																"typeString": "enum DataTypes.InterestRateMode"
															}
														},
														"src": "3513:73:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 1175,
														"name": "variableDebt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "3618:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3513:117:8",
													"trueExpression": {
														"argumentTypes": null,
														"id": 1174,
														"name": "stableDebt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "3597:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3483:147:8"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1178,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "3641:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1179,
														"name": "paybackAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "3650:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3641:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1186,
												"nodeType": "IfStatement",
												"src": "3637:65:8",
												"trueBody": {
													"id": 1185,
													"nodeType": "Block",
													"src": "3665:37:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1181,
																	"name": "paybackAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "3673:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1182,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "3689:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3673:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1184,
															"nodeType": "ExpressionStatement",
															"src": "3673:22:8"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1188,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "3715:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3715:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1190,
																"name": "paybackAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "3728:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3715:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6d73672e76616c7565206973206c657373207468616e2072657061796d656e7420616d6f756e74",
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3743:41:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f3cb6abf841e7654d9fcd9bcef0bf0797905f8c05be5c0ec9482725dfffa0909",
																"typeString": "literal_string \"msg.value is less than repayment amount\""
															},
															"value": "msg.value is less than repayment amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f3cb6abf841e7654d9fcd9bcef0bf0797905f8c05be5c0ec9482725dfffa0909",
																"typeString": "literal_string \"msg.value is less than repayment amount\""
															}
														],
														"id": 1187,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3707:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3707:78:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "3707:78:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"id": 1195,
																"name": "WETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "3791:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWETH_$1424",
																	"typeString": "contract IWETH"
																}
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1398,
															"src": "3791:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$__$returns$__$",
																"typeString": "function () payable external"
															}
														},
														"id": 1199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 1198,
																"name": "paybackAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "3811:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3791:34:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$__$value",
															"typeString": "function () payable external"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3791:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1201,
												"nodeType": "ExpressionStatement",
												"src": "3791:36:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1207,
																	"name": "WETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "3852:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWETH_$1424",
																		"typeString": "contract IWETH"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IWETH_$1424",
																		"typeString": "contract IWETH"
																	}
																],
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3844:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1205,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3844:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3844:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1209,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "3859:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3859:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1211,
															"name": "rateMode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "3870:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1212,
															"name": "onBehalfOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "3880:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1202,
															"name": "POOL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "3833:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILendingPool_$678",
																"typeString": "contract ILendingPool"
															}
														},
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "repay",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 497,
														"src": "3833:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,uint256,uint256,address) external returns (uint256)"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3833:58:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "3833:58:8"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1215,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "3935:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3935:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1217,
														"name": "paybackAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "3947:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3935:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1228,
												"nodeType": "IfStatement",
												"src": "3931:86:8",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1220,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "3979:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3979:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1222,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "3991:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3991:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1224,
																	"name": "paybackAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "4003:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3991:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1219,
															"name": "_safeTransferETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "3962:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																"typeString": "function (address,uint256)"
															}
														},
														"id": 1226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3962:55:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1227,
													"nodeType": "ExpressionStatement",
													"src": "3962:55:8"
												}
											}
										]
									},
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "2880:342:8",
										"text": " @dev repays a borrow on the WETH reserve, for the specified amount (or for the whole amount, if uint256(-1) is specified).\n @param amount the amount to repay, or uint256(-1) if the user wants to repay everything\n @param rateMode the rate mode to repay\n @param onBehalfOf the address for which msg.sender is repaying"
									},
									"functionSelector": "f538ba51",
									"id": 1230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "repayETH",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1146,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3330:8:8"
									},
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1230,
												"src": "3248:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3248:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "rateMode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1230,
												"src": "3268:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3268:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1230,
												"src": "3290:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3290:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3242:70:8"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:8"
									},
									"scope": 1393,
									"src": "3225:797:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1458
									],
									"body": {
										"id": 1267,
										"nodeType": "Block",
										"src": "4514:157:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1246,
																	"name": "WETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "4540:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWETH_$1424",
																		"typeString": "contract IWETH"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IWETH_$1424",
																		"typeString": "contract IWETH"
																	}
																],
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4532:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1244,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4532:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4532:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1248,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "4547:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1249,
															"name": "interesRateMode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "4555:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1250,
															"name": "referralCode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "4572:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1251,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "4586:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4586:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1241,
															"name": "POOL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "4520:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILendingPool_$678",
																"typeString": "contract ILendingPool"
															}
														},
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "borrow",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 483,
														"src": "4520:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint16_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint16,address) external"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4520:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1254,
												"nodeType": "ExpressionStatement",
												"src": "4520:77:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1258,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "4617:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1255,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "4603:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWETH_$1424",
																"typeString": "contract IWETH"
															}
														},
														"id": 1257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1403,
														"src": "4603:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4603:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1260,
												"nodeType": "ExpressionStatement",
												"src": "4603:21:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1262,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "4647:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4647:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1264,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "4659:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1261,
														"name": "_safeTransferETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "4630:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4630:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1266,
												"nodeType": "ExpressionStatement",
												"src": "4630:36:8"
											}
										]
									},
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "4026:370:8",
										"text": " @dev borrow WETH, unwraps to ETH and send both the ETH and DebtTokens to msg.sender, via `approveDelegation` and onBehalf argument in `LendingPool.borrow`.\n @param amount the amount of ETH to borrow\n @param interesRateMode the interest rate mode\n @param referralCode integrators are assigned a referral code and can potentially receive rewards"
									},
									"functionSelector": "7d5155fd",
									"id": 1268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "borrowETH",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1239,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4505:8:8"
									},
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1268,
												"src": "4423:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "interesRateMode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1268,
												"src": "4443:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "referralCode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1268,
												"src": "4472:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1236,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4472:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4417:78:8"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4514:0:8"
									},
									"scope": 1393,
									"src": "4399:272:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1293,
										"nodeType": "Block",
										"src": "4885:110:8",
										"statements": [
											{
												"assignments": [
													1277,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1277,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1293,
														"src": "4892:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1276,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4892:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1287,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4942:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "4932:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 1282,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "4936:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4932:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1278,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1271,
																"src": "4910:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4910:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 1280,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1273,
																"src": "4925:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4910:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4910:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4891:54:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1289,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "4959:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4554485f5452414e534645525f4641494c4544",
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4968:21:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d383913ea1996930a2623a0d739b8fc033c734c1d71d4759d3ccba1d3a719c29",
																"typeString": "literal_string \"ETH_TRANSFER_FAILED\""
															},
															"value": "ETH_TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d383913ea1996930a2623a0d739b8fc033c734c1d71d4759d3ccba1d3a719c29",
																"typeString": "literal_string \"ETH_TRANSFER_FAILED\""
															}
														],
														"id": 1288,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4951:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4951:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "4951:39:8"
											}
										]
									},
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "4675:145:8",
										"text": " @dev transfer ETH to an address, revert if it fails.\n @param to recipient of the transfer\n @param value the amount to send"
									},
									"id": 1294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferETH",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1294,
												"src": "4849:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4849:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1294,
												"src": "4861:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4848:27:8"
									},
									"returnParameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4885:0:8"
									},
									"scope": 1393,
									"src": "4823:172:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "5378:45:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1310,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "5407:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1311,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "5411:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1307,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1297,
																	"src": "5391:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1306,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "5384:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$100_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5384:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$100",
																"typeString": "contract IERC20"
															}
														},
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 49,
														"src": "5384:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5384:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1313,
												"nodeType": "ExpressionStatement",
												"src": "5384:34:8"
											}
										]
									},
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "4999:266:8",
										"text": " @dev transfer ERC20 from the utility contract, for ERC20 recovery in case of stuck tokens due\n direct transfers to the contract address.\n @param token token to transfer\n @param to recipient of the transfer\n @param amount amount to send"
									},
									"functionSelector": "a3d5b255",
									"id": 1315,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1304,
											"modifierName": {
												"argumentTypes": null,
												"id": 1303,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 158,
												"src": "5368:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5368:9:8"
										}
									],
									"name": "emergencyTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1315,
												"src": "5305:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5305:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1315,
												"src": "5324:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5324:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1315,
												"src": "5340:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5299:59:8"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5378:0:8"
									},
									"scope": 1393,
									"src": "5268:155:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "5796:39:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1326,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "5819:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1327,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "5823:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1325,
														"name": "_safeTransferETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "5802:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5802:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1329,
												"nodeType": "ExpressionStatement",
												"src": "5802:28:8"
											}
										]
									},
									"documentation": {
										"id": 1316,
										"nodeType": "StructuredDocumentation",
										"src": "5427:287:8",
										"text": " @dev transfer native Ether from the utility contract, for native Ether recovery in case of stuck Ether\n due selfdestructs or transfer ether to pre-computated contract address before deployment.\n @param to recipient of the transfer\n @param amount amount to send"
									},
									"functionSelector": "eed88b8d",
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1323,
											"modifierName": {
												"argumentTypes": null,
												"id": 1322,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 158,
												"src": "5786:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5786:9:8"
										}
									],
									"name": "emergencyEtherTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1331,
												"src": "5749:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1331,
												"src": "5761:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5761:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5748:28:8"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5796:0:8"
									},
									"scope": 1393,
									"src": "5717:118:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1342,
										"nodeType": "Block",
										"src": "5956:31:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1339,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "5977:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWETH_$1424",
																"typeString": "contract IWETH"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IWETH_$1424",
																"typeString": "contract IWETH"
															}
														],
														"id": 1338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5969:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1337,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5969:7:8",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5969:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1336,
												"id": 1341,
												"nodeType": "Return",
												"src": "5962:20:8"
											}
										]
									},
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "5839:56:8",
										"text": " @dev Get WETH address used by WETHGateway"
									},
									"functionSelector": "affa8817",
									"id": 1343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getWETHAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5921:2:8"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1343,
												"src": "5947:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5947:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5946:9:8"
									},
									"scope": 1393,
									"src": "5898:89:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1354,
										"nodeType": "Block",
										"src": "6110:32:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1351,
															"name": "aWETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "6131:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAToken_$303",
																"typeString": "contract IAToken"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IAToken_$303",
																"typeString": "contract IAToken"
															}
														],
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6123:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1349,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6123:7:8",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6123:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1348,
												"id": 1353,
												"nodeType": "Return",
												"src": "6116:21:8"
											}
										]
									},
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "5991:57:8",
										"text": " @dev Get aWETH address used by WETHGateway"
									},
									"functionSelector": "3a21afac",
									"id": 1355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAWETHAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6075:2:8"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1355,
												"src": "6101:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6101:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6100:9:8"
									},
									"scope": 1393,
									"src": "6051:91:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1366,
										"nodeType": "Block",
										"src": "6277:31:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1363,
															"name": "POOL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "6298:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILendingPool_$678",
																"typeString": "contract ILendingPool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ILendingPool_$678",
																"typeString": "contract ILendingPool"
															}
														],
														"id": 1362,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6290:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1361,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6290:7:8",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6290:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1360,
												"id": 1365,
												"nodeType": "Return",
												"src": "6283:20:8"
											}
										]
									},
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "6146:63:8",
										"text": " @dev Get LendingPool address used by WETHGateway"
									},
									"functionSelector": "5f36a742",
									"id": 1367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPoolAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6242:2:8"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1367,
												"src": "6268:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6268:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6267:9:8"
									},
									"scope": 1393,
									"src": "6212:96:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1382,
										"nodeType": "Block",
										"src": "6469:70:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1372,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "6483:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6483:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1376,
																		"name": "WETH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 983,
																		"src": "6505:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWETH_$1424",
																			"typeString": "contract IWETH"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IWETH_$1424",
																			"typeString": "contract IWETH"
																		}
																	],
																	"id": 1375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6497:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1374,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6497:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6497:13:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6483:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "52656365697665206e6f7420616c6c6f776564",
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6512:21:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_27ee2b783d4c8df49ab77e716dbb31d00957b706569e1f6344f0cb575662d45e",
																"typeString": "literal_string \"Receive not allowed\""
															},
															"value": "Receive not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_27ee2b783d4c8df49ab77e716dbb31d00957b706569e1f6344f0cb575662d45e",
																"typeString": "literal_string \"Receive not allowed\""
															}
														],
														"id": 1371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6475:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6475:59:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1381,
												"nodeType": "ExpressionStatement",
												"src": "6475:59:8"
											}
										]
									},
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "6312:127:8",
										"text": " @dev Only WETH contract is allowed to transfer ETH here. Prevent other addresses to send Ether to this contract."
									},
									"id": 1383,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6449:2:8"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6469:0:8"
									},
									"scope": 1393,
									"src": "6442:97:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1391,
										"nodeType": "Block",
										"src": "6615:41:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "46616c6c6261636b206e6f7420616c6c6f776564",
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6628:22:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0fbc9324f34b5b3dd5cc07188bb4ac8875999da3789a00b0de2cd5733ed30268",
																"typeString": "literal_string \"Fallback not allowed\""
															},
															"value": "Fallback not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_0fbc9324f34b5b3dd5cc07188bb4ac8875999da3789a00b0de2cd5733ed30268",
																"typeString": "literal_string \"Fallback not allowed\""
															}
														],
														"id": 1387,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-19,
															-19
														],
														"referencedDeclaration": -19,
														"src": "6621:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6621:30:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1390,
												"nodeType": "ExpressionStatement",
												"src": "6621:30:8"
											}
										]
									},
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "6543:41:8",
										"text": " @dev Revert fallback calls"
									},
									"id": 1392,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6595:2:8"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6615:0:8"
									},
									"scope": 1393,
									"src": "6587:69:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1394,
							"src": "793:5865:8"
						}
					],
					"src": "37:6622:8"
				},
				"id": 8
			},
			"contracts/misc/interfaces/IWETH.sol": {
				"ast": {
					"absolutePath": "contracts/misc/interfaces/IWETH.sol",
					"exportedSymbols": {
						"IWETH": [
							1424
						]
					},
					"id": 1425,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1395,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1424,
							"linearizedBaseContracts": [
								1424
							],
							"name": "IWETH",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "d0e30db0",
									"id": 1398,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "98:2:9"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "117:0:9"
									},
									"scope": 1424,
									"src": "82:36:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "2e1a7d4d",
									"id": 1403,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1403,
												"src": "140:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "140:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "139:9:9"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "157:0:9"
									},
									"scope": 1424,
									"src": "122:36:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "095ea7b3",
									"id": 1412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "guy",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1412,
												"src": "179:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1412,
												"src": "192:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "192:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "178:26:9"
									},
									"returnParameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1412,
												"src": "223:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "223:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "222:6:9"
									},
									"scope": 1424,
									"src": "162:67:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "23b872dd",
									"id": 1423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "src",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1423,
												"src": "260:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1423,
												"src": "277:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "wad",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1423,
												"src": "294:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "294:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "254:55:9"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1423,
												"src": "328:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "328:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "327:6:9"
									},
									"scope": 1424,
									"src": "233:101:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1425,
							"src": "62:274:9"
						}
					],
					"src": "37:300:9"
				},
				"id": 9
			},
			"contracts/misc/interfaces/IWETHGateway.sol": {
				"ast": {
					"absolutePath": "contracts/misc/interfaces/IWETHGateway.sol",
					"exportedSymbols": {
						"IWETHGateway": [
							1459
						]
					},
					"id": 1460,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1426,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1459,
							"linearizedBaseContracts": [
								1459
							],
							"name": "IWETHGateway",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "58c22be7",
									"id": 1433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositETH",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1433,
												"src": "109:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "109:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "referralCode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1433,
												"src": "129:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1429,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "129:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "108:41:10"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "166:0:10"
									},
									"scope": 1459,
									"src": "89:78:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "36118b52",
									"id": 1440,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawETH",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1440,
												"src": "192:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "192:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1440,
												"src": "208:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "208:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "191:36:10"
									},
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "236:0:10"
									},
									"scope": 1459,
									"src": "171:66:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "f538ba51",
									"id": 1449,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "repayETH",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1449,
												"src": "264:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "rateMode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1449,
												"src": "284:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "284:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1449,
												"src": "306:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "306:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "258:70:10"
									},
									"returnParameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "345:0:10"
									},
									"scope": 1459,
									"src": "241:105:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "7d5155fd",
									"id": 1458,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "borrowETH",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1458,
												"src": "374:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "interesRateMode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1458,
												"src": "394:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "referralCode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1458,
												"src": "423:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1454,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "423:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "368:78:10"
									},
									"returnParameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "455:0:10"
									},
									"scope": 1459,
									"src": "350:106:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1460,
							"src": "62:396:10"
						}
					],
					"src": "37:422:10"
				},
				"id": 10
			},
			"contracts/protocol/libraries/configuration/ReserveConfiguration.sol": {
				"ast": {
					"absolutePath": "contracts/protocol/libraries/configuration/ReserveConfiguration.sol",
					"exportedSymbols": {
						"ReserveConfiguration": [
							2181
						]
					},
					"id": 2182,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1461,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:11"
						},
						{
							"absolutePath": "contracts/protocol/libraries/helpers/Errors.sol",
							"file": "../helpers/Errors.sol",
							"id": 1463,
							"nodeType": "ImportDirective",
							"scope": 2182,
							"sourceUnit": 2680,
							"src": "62:45:11",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 1462,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "70:6:11",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/protocol/libraries/types/DataTypes.sol",
							"file": "../types/DataTypes.sol",
							"id": 1465,
							"nodeType": "ImportDirective",
							"scope": 2182,
							"sourceUnit": 2783,
							"src": "108:49:11",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 1464,
										"name": "DataTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "116:9:11",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1466,
								"nodeType": "StructuredDocumentation",
								"src": "159:137:11",
								"text": " @title ReserveConfiguration library\n @author Aave\n @notice Implements the bitmap logic to handle the reserve configuration"
							},
							"fullyImplemented": true,
							"id": 2181,
							"linearizedBaseContracts": [
								2181
							],
							"name": "ReserveConfiguration",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1469,
									"mutability": "constant",
									"name": "LTV_MASK",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2181,
									"src": "330:112:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1467,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "330:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464630303030",
										"id": 1468,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "376:66:11",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129574400_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...4400"
										},
										"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1472,
									"mutability": "constant",
									"name": "LIQUIDATION_THRESHOLD_MASK",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2181,
									"src": "465:112:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1470,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "465:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646463030303046464646",
										"id": 1471,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "511:66:11",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007908834738175_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...8175"
										},
										"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFF"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1475,
									"mutability": "constant",
									"name": "LIQUIDATION_BONUS_MASK",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2181,
									"src": "600:112:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1473,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "600:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646303030304646464646464646",
										"id": 1474,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "646:66:11",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457583726442447896575_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...6575"
										},
										"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFF"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1478,
									"mutability": "constant",
									"name": "DECIMALS_MASK",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2181,
									"src": "735:112:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1476,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "735:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646463030464646464646464646464646",
										"id": 1477,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "781:66:11",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457512231794068422655_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...2655"
										},
										"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFF"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1481,
									"mutability": "constant",
									"name": "ACTIVE_MASK",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2181,
									"src": "870:112:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1479,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "870:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646454646464646464646464646464646",
										"id": 1480,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "916:66:11",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457511950319091711999_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...1999"
										},
										"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFF"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1484,
									"mutability": "constant",
									"name": "FROZEN_MASK",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2181,
									"src": "1005:112:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1482,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1005:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646444646464646464646464646464646",
										"id": 1483,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1051:66:11",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457439892725053784063_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...4063"
										},
										"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFF"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1487,
									"mutability": "constant",
									"name": "BORROWING_MASK",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2181,
									"src": "1140:112:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1485,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1140:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646424646464646464646464646464646",
										"id": 1486,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1186:66:11",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457295777536977928191_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...8191"
										},
										"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFFFFFF"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1490,
									"mutability": "constant",
									"name": "STABLE_BORROWING_MASK",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2181,
									"src": "1275:112:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1488,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1275:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646374646464646464646464646464646",
										"id": 1489,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1321:66:11",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457007547160826216447_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...6447"
										},
										"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFF"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1493,
									"mutability": "constant",
									"name": "RESERVE_FACTOR_MASK",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2181,
									"src": "1410:112:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1491,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1410:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646464646463030303046464646464646464646464646464646",
										"id": 1492,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1456:66:11",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640562830550211137357664485375_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...5375"
										},
										"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFF"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1494,
										"nodeType": "StructuredDocumentation",
										"src": "1546:83:11",
										"text": "@dev For the LTV, the start bit is 0 (up to 15), hence no bitshifting is needed"
									},
									"id": 1497,
									"mutability": "constant",
									"name": "LIQUIDATION_THRESHOLD_START_BIT_POSITION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2181,
									"src": "1632:62:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1495,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1632:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3136",
										"id": 1496,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1692:2:11",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_16_by_1",
											"typeString": "int_const 16"
										},
										"value": "16"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1500,
									"mutability": "constant",
									"name": "LIQUIDATION_BONUS_START_BIT_POSITION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2181,
									"src": "1698:58:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1498,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1698:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3332",
										"id": 1499,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1754:2:11",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1503,
									"mutability": "constant",
									"name": "RESERVE_DECIMALS_START_BIT_POSITION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2181,
									"src": "1760:57:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1501,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1760:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3438",
										"id": 1502,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1815:2:11",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_48_by_1",
											"typeString": "int_const 48"
										},
										"value": "48"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1506,
									"mutability": "constant",
									"name": "IS_ACTIVE_START_BIT_POSITION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2181,
									"src": "1821:50:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1504,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1821:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3536",
										"id": 1505,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1869:2:11",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_56_by_1",
											"typeString": "int_const 56"
										},
										"value": "56"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1509,
									"mutability": "constant",
									"name": "IS_FROZEN_START_BIT_POSITION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2181,
									"src": "1875:50:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1507,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1875:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3537",
										"id": 1508,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1923:2:11",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57_by_1",
											"typeString": "int_const 57"
										},
										"value": "57"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1512,
									"mutability": "constant",
									"name": "BORROWING_ENABLED_START_BIT_POSITION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2181,
									"src": "1929:58:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1510,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1929:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3538",
										"id": 1511,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1985:2:11",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_58_by_1",
											"typeString": "int_const 58"
										},
										"value": "58"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1515,
									"mutability": "constant",
									"name": "STABLE_BORROWING_ENABLED_START_BIT_POSITION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2181,
									"src": "1991:65:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1513,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1991:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3539",
										"id": 1514,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2054:2:11",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_59_by_1",
											"typeString": "int_const 59"
										},
										"value": "59"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1518,
									"mutability": "constant",
									"name": "RESERVE_FACTOR_START_BIT_POSITION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2181,
									"src": "2060:55:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1516,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2060:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3634",
										"id": 1517,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2113:2:11",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1521,
									"mutability": "constant",
									"name": "MAX_VALID_LTV",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2181,
									"src": "2120:38:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1519,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2120:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3635353335",
										"id": 1520,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2153:5:11",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65535_by_1",
											"typeString": "int_const 65535"
										},
										"value": "65535"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1524,
									"mutability": "constant",
									"name": "MAX_VALID_LIQUIDATION_THRESHOLD",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2181,
									"src": "2162:56:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1522,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2162:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3635353335",
										"id": 1523,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2213:5:11",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65535_by_1",
											"typeString": "int_const 65535"
										},
										"value": "65535"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1527,
									"mutability": "constant",
									"name": "MAX_VALID_LIQUIDATION_BONUS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2181,
									"src": "2222:52:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1525,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2222:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3635353335",
										"id": 1526,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2269:5:11",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65535_by_1",
											"typeString": "int_const 65535"
										},
										"value": "65535"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1530,
									"mutability": "constant",
									"name": "MAX_VALID_DECIMALS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2181,
									"src": "2278:41:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1528,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2278:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "323535",
										"id": 1529,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2316:3:11",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "255"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1533,
									"mutability": "constant",
									"name": "MAX_VALID_RESERVE_FACTOR",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2181,
									"src": "2323:49:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1531,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2323:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3635353335",
										"id": 1532,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2367:5:11",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65535_by_1",
											"typeString": "int_const 65535"
										},
										"value": "65535"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1561,
										"nodeType": "Block",
										"src": "2599:110:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1542,
																"name": "ltv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "2613:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1543,
																"name": "MAX_VALID_LTV",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1521,
																"src": "2620:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2613:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1545,
																"name": "Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2679,
																"src": "2635:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Errors_$2679_$",
																	"typeString": "type(library Errors)"
																}
															},
															"id": 1546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "RC_INVALID_LTV",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2634,
															"src": "2635:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2605:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2605:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1548,
												"nodeType": "ExpressionStatement",
												"src": "2605:52:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1549,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "2664:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
																"typeString": "struct DataTypes.ReserveConfigurationMap memory"
															}
														},
														"id": 1551,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2773,
														"src": "2664:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1552,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1536,
																			"src": "2677:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
																				"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																			}
																		},
																		"id": 1553,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2773,
																		"src": "2677:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1554,
																		"name": "LTV_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1469,
																		"src": "2689:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2677:20:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1556,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2676:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1557,
															"name": "ltv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "2701:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2676:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2664:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1560,
												"nodeType": "ExpressionStatement",
												"src": "2664:40:11"
											}
										]
									},
									"documentation": {
										"id": 1534,
										"nodeType": "StructuredDocumentation",
										"src": "2377:129:11",
										"text": " @dev Sets the Loan to Value of the reserve\n @param self The reserve configuration\n @param ltv the new ltv*"
									},
									"id": 1562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setLtv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1562,
												"src": "2525:45:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1535,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2774,
													"src": "2525:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "ltv",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1562,
												"src": "2572:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2524:60:11"
									},
									"returnParameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2599:0:11"
									},
									"scope": 2181,
									"src": "2509:200:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1576,
										"nodeType": "Block",
										"src": "2944:39:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1570,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "2957:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
																"typeString": "struct DataTypes.ReserveConfigurationMap storage pointer"
															}
														},
														"id": 1571,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2773,
														"src": "2957:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "~",
														"prefix": true,
														"src": "2969:9:11",
														"subExpression": {
															"argumentTypes": null,
															"id": 1572,
															"name": "LTV_MASK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "2970:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2957:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1569,
												"id": 1575,
												"nodeType": "Return",
												"src": "2950:28:11"
											}
										]
									},
									"documentation": {
										"id": 1563,
										"nodeType": "StructuredDocumentation",
										"src": "2713:132:11",
										"text": " @dev Gets the Loan to Value of the reserve\n @param self The reserve configuration\n @return The loan to value*"
									},
									"id": 1577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLtv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1577,
												"src": "2864:46:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1564,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2774,
													"src": "2864:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2863:48:11"
									},
									"returnParameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1577,
												"src": "2935:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2935:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2934:9:11"
									},
									"scope": 2181,
									"src": "2848:135:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "3274:226:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1586,
																"name": "threshold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1582,
																"src": "3288:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1587,
																"name": "MAX_VALID_LIQUIDATION_THRESHOLD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1524,
																"src": "3301:31:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3288:44:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1589,
																"name": "Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2679,
																"src": "3334:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Errors_$2679_$",
																	"typeString": "type(library Errors)"
																}
															},
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "RC_INVALID_LIQ_THRESHOLD",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2637,
															"src": "3334:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1585,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3280:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3280:86:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1592,
												"nodeType": "ExpressionStatement",
												"src": "3280:86:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1593,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "3373:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
																"typeString": "struct DataTypes.ReserveConfigurationMap memory"
															}
														},
														"id": 1595,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2773,
														"src": "3373:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1596,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1580,
																			"src": "3392:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
																				"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																			}
																		},
																		"id": 1597,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2773,
																		"src": "3392:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1598,
																		"name": "LIQUIDATION_THRESHOLD_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1472,
																		"src": "3404:26:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3392:38:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1600,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3391:40:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1601,
																		"name": "threshold",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1582,
																		"src": "3441:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1602,
																		"name": "LIQUIDATION_THRESHOLD_START_BIT_POSITION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1497,
																		"src": "3454:40:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3441:53:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1604,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3440:55:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3391:104:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3373:122:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1607,
												"nodeType": "ExpressionStatement",
												"src": "3373:122:11"
											}
										]
									},
									"documentation": {
										"id": 1578,
										"nodeType": "StructuredDocumentation",
										"src": "2987:161:11",
										"text": " @dev Sets the liquidation threshold of the reserve\n @param self The reserve configuration\n @param threshold The new liquidation threshold*"
									},
									"id": 1609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setLiquidationThreshold",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1609,
												"src": "3184:45:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1579,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2774,
													"src": "3184:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "threshold",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1609,
												"src": "3231:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3231:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3183:66:11"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3274:0:11"
									},
									"scope": 2181,
									"src": "3151:349:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1626,
										"nodeType": "Block",
										"src": "3782:103:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1617,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1612,
																		"src": "3796:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
																			"typeString": "struct DataTypes.ReserveConfigurationMap storage pointer"
																		}
																	},
																	"id": 1618,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "data",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2773,
																	"src": "3796:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "~",
																	"prefix": true,
																	"src": "3808:27:11",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 1619,
																		"name": "LIQUIDATION_THRESHOLD_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1472,
																		"src": "3809:26:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3796:39:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1622,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3795:41:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">>",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1623,
														"name": "LIQUIDATION_THRESHOLD_START_BIT_POSITION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "3840:40:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3795:85:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1616,
												"id": 1625,
												"nodeType": "Return",
												"src": "3788:92:11"
											}
										]
									},
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "3504:148:11",
										"text": " @dev Gets the liquidation threshold of the reserve\n @param self The reserve configuration\n @return The liquidation threshold*"
									},
									"id": 1627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLiquidationThreshold",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1627,
												"src": "3688:46:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1611,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2774,
													"src": "3688:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3687:48:11"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1627,
												"src": "3771:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3771:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3770:9:11"
									},
									"scope": 2181,
									"src": "3655:230:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1658,
										"nodeType": "Block",
										"src": "4156:202:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1636,
																"name": "bonus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1632,
																"src": "4170:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1637,
																"name": "MAX_VALID_LIQUIDATION_BONUS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1527,
																"src": "4179:27:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4170:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1639,
																"name": "Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2679,
																"src": "4208:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Errors_$2679_$",
																	"typeString": "type(library Errors)"
																}
															},
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "RC_INVALID_LIQ_BONUS",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2640,
															"src": "4208:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1635,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4162:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4162:74:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1642,
												"nodeType": "ExpressionStatement",
												"src": "4162:74:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1643,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "4243:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
																"typeString": "struct DataTypes.ReserveConfigurationMap memory"
															}
														},
														"id": 1645,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2773,
														"src": "4243:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1646,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1630,
																			"src": "4262:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
																				"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																			}
																		},
																		"id": 1647,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2773,
																		"src": "4262:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1648,
																		"name": "LIQUIDATION_BONUS_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1475,
																		"src": "4274:22:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4262:34:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1650,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4261:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1651,
																		"name": "bonus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1632,
																		"src": "4307:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1652,
																		"name": "LIQUIDATION_BONUS_START_BIT_POSITION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1500,
																		"src": "4316:36:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4307:45:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1654,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4306:47:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4261:92:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4243:110:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1657,
												"nodeType": "ExpressionStatement",
												"src": "4243:110:11"
											}
										]
									},
									"documentation": {
										"id": 1628,
										"nodeType": "StructuredDocumentation",
										"src": "3889:149:11",
										"text": " @dev Sets the liquidation bonus of the reserve\n @param self The reserve configuration\n @param bonus The new liquidation bonus*"
									},
									"id": 1659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setLiquidationBonus",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1659,
												"src": "4070:45:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1629,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2774,
													"src": "4070:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "bonus",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1659,
												"src": "4117:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4117:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4069:62:11"
									},
									"returnParameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4156:0:11"
									},
									"scope": 2181,
									"src": "4041:317:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1676,
										"nodeType": "Block",
										"src": "4628:95:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1667,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1662,
																		"src": "4642:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
																			"typeString": "struct DataTypes.ReserveConfigurationMap storage pointer"
																		}
																	},
																	"id": 1668,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "data",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2773,
																	"src": "4642:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "~",
																	"prefix": true,
																	"src": "4654:23:11",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 1669,
																		"name": "LIQUIDATION_BONUS_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1475,
																		"src": "4655:22:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4642:35:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1672,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4641:37:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">>",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1673,
														"name": "LIQUIDATION_BONUS_START_BIT_POSITION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1500,
														"src": "4682:36:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4641:77:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1666,
												"id": 1675,
												"nodeType": "Return",
												"src": "4634:84:11"
											}
										]
									},
									"documentation": {
										"id": 1660,
										"nodeType": "StructuredDocumentation",
										"src": "4362:140:11",
										"text": " @dev Gets the liquidation bonus of the reserve\n @param self The reserve configuration\n @return The liquidation bonus*"
									},
									"id": 1677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLiquidationBonus",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1677,
												"src": "4534:46:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1661,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2774,
													"src": "4534:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4533:48:11"
									},
									"returnParameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1677,
												"src": "4617:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4617:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4616:9:11"
									},
									"scope": 2181,
									"src": "4505:218:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1708,
										"nodeType": "Block",
										"src": "4994:176:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1686,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1682,
																"src": "5008:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1687,
																"name": "MAX_VALID_DECIMALS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1530,
																"src": "5020:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5008:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1689,
																"name": "Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2679,
																"src": "5040:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Errors_$2679_$",
																	"typeString": "type(library Errors)"
																}
															},
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "RC_INVALID_DECIMALS",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2643,
															"src": "5040:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1685,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5000:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5000:67:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1692,
												"nodeType": "ExpressionStatement",
												"src": "5000:67:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1693,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1680,
															"src": "5074:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
																"typeString": "struct DataTypes.ReserveConfigurationMap memory"
															}
														},
														"id": 1695,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2773,
														"src": "5074:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1696,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1680,
																			"src": "5087:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
																				"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																			}
																		},
																		"id": 1697,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2773,
																		"src": "5087:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1698,
																		"name": "DECIMALS_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1478,
																		"src": "5099:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5087:25:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1700,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5086:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1701,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1682,
																		"src": "5117:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1702,
																		"name": "RESERVE_DECIMALS_START_BIT_POSITION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1503,
																		"src": "5129:35:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5117:47:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1704,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5116:49:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5086:79:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5074:91:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1707,
												"nodeType": "ExpressionStatement",
												"src": "5074:91:11"
											}
										]
									},
									"documentation": {
										"id": 1678,
										"nodeType": "StructuredDocumentation",
										"src": "4727:154:11",
										"text": " @dev Sets the decimals of the underlying asset of the reserve\n @param self The reserve configuration\n @param decimals The decimals*"
									},
									"id": 1709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setDecimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1709,
												"src": "4905:45:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1679,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2774,
													"src": "4905:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "decimals",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1709,
												"src": "4952:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4952:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4904:65:11"
									},
									"returnParameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4994:0:11"
									},
									"scope": 2181,
									"src": "4884:286:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1726,
										"nodeType": "Block",
										"src": "5451:85:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1717,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1712,
																		"src": "5465:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
																			"typeString": "struct DataTypes.ReserveConfigurationMap storage pointer"
																		}
																	},
																	"id": 1718,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "data",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2773,
																	"src": "5465:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "~",
																	"prefix": true,
																	"src": "5477:14:11",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 1719,
																		"name": "DECIMALS_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1478,
																		"src": "5478:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5465:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1722,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5464:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">>",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1723,
														"name": "RESERVE_DECIMALS_START_BIT_POSITION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1503,
														"src": "5496:35:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5464:67:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1716,
												"id": 1725,
												"nodeType": "Return",
												"src": "5457:74:11"
											}
										]
									},
									"documentation": {
										"id": 1710,
										"nodeType": "StructuredDocumentation",
										"src": "5174:159:11",
										"text": " @dev Gets the decimals of the underlying asset of the reserve\n @param self The reserve configuration\n @return The decimals of the asset*"
									},
									"id": 1727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDecimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1727,
												"src": "5357:46:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1711,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2774,
													"src": "5357:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5356:48:11"
									},
									"returnParameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1727,
												"src": "5440:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5440:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5439:9:11"
									},
									"scope": 2181,
									"src": "5336:200:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1756,
										"nodeType": "Block",
										"src": "5772:120:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1735,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "5778:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
																"typeString": "struct DataTypes.ReserveConfigurationMap memory"
															}
														},
														"id": 1737,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2773,
														"src": "5778:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1738,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1730,
																			"src": "5797:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
																				"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																			}
																		},
																		"id": 1739,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2773,
																		"src": "5797:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1740,
																		"name": "ACTIVE_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1481,
																		"src": "5809:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5797:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1742,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5796:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"condition": {
																					"argumentTypes": null,
																					"id": 1745,
																					"name": "active",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1732,
																					"src": "5839:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1747,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5852:1:11",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"id": 1748,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "Conditional",
																				"src": "5839:14:11",
																				"trueExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 1746,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5848:1:11",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"id": 1744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5831:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1743,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "5831:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5831:23:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1750,
																		"name": "IS_ACTIVE_START_BIT_POSITION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1506,
																		"src": "5858:28:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5831:55:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1752,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5830:57:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5796:91:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5778:109:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1755,
												"nodeType": "ExpressionStatement",
												"src": "5778:109:11"
											}
										]
									},
									"documentation": {
										"id": 1728,
										"nodeType": "StructuredDocumentation",
										"src": "5540:136:11",
										"text": " @dev Sets the active state of the reserve\n @param self The reserve configuration\n @param active The active state*"
									},
									"id": 1757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setActive",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1757,
												"src": "5698:45:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1729,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2774,
													"src": "5698:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "active",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1757,
												"src": "5745:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1731,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5745:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5697:60:11"
									},
									"returnParameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5772:0:11"
									},
									"scope": 2181,
									"src": "5679:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1774,
										"nodeType": "Block",
										"src": "6125:49:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1765,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1760,
																		"src": "6139:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
																			"typeString": "struct DataTypes.ReserveConfigurationMap storage pointer"
																		}
																	},
																	"id": 1766,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "data",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2773,
																	"src": "6139:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "~",
																	"prefix": true,
																	"src": "6151:12:11",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 1767,
																		"name": "ACTIVE_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1481,
																		"src": "6152:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6139:24:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1770,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6138:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6168:1:11",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6138:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1764,
												"id": 1773,
												"nodeType": "Return",
												"src": "6131:38:11"
											}
										]
									},
									"documentation": {
										"id": 1758,
										"nodeType": "StructuredDocumentation",
										"src": "5896:130:11",
										"text": " @dev Gets the active state of the reserve\n @param self The reserve configuration\n @return The active state*"
									},
									"id": 1775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getActive",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1775,
												"src": "6048:46:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1759,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2774,
													"src": "6048:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6047:48:11"
									},
									"returnParameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1775,
												"src": "6119:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1762,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6119:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6118:6:11"
									},
									"scope": 2181,
									"src": "6029:145:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1804,
										"nodeType": "Block",
										"src": "6410:120:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1783,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1778,
															"src": "6416:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
																"typeString": "struct DataTypes.ReserveConfigurationMap memory"
															}
														},
														"id": 1785,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2773,
														"src": "6416:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1786,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1778,
																			"src": "6435:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
																				"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																			}
																		},
																		"id": 1787,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2773,
																		"src": "6435:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1788,
																		"name": "FROZEN_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1484,
																		"src": "6447:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6435:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1790,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6434:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"condition": {
																					"argumentTypes": null,
																					"id": 1793,
																					"name": "frozen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1780,
																					"src": "6477:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1795,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6490:1:11",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"id": 1796,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "Conditional",
																				"src": "6477:14:11",
																				"trueExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 1794,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6486:1:11",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"id": 1792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6469:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1791,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "6469:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6469:23:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1798,
																		"name": "IS_FROZEN_START_BIT_POSITION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1509,
																		"src": "6496:28:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6469:55:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1800,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6468:57:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6434:91:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6416:109:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1803,
												"nodeType": "ExpressionStatement",
												"src": "6416:109:11"
											}
										]
									},
									"documentation": {
										"id": 1776,
										"nodeType": "StructuredDocumentation",
										"src": "6178:136:11",
										"text": " @dev Sets the frozen state of the reserve\n @param self The reserve configuration\n @param frozen The frozen state*"
									},
									"id": 1805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setFrozen",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1805,
												"src": "6336:45:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1777,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2774,
													"src": "6336:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "frozen",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1805,
												"src": "6383:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1779,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6383:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6335:60:11"
									},
									"returnParameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6410:0:11"
									},
									"scope": 2181,
									"src": "6317:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1822,
										"nodeType": "Block",
										"src": "6763:49:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1813,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1808,
																		"src": "6777:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
																			"typeString": "struct DataTypes.ReserveConfigurationMap storage pointer"
																		}
																	},
																	"id": 1814,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "data",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2773,
																	"src": "6777:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "~",
																	"prefix": true,
																	"src": "6789:12:11",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 1815,
																		"name": "FROZEN_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1484,
																		"src": "6790:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6777:24:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1818,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6776:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1819,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6806:1:11",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6776:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1812,
												"id": 1821,
												"nodeType": "Return",
												"src": "6769:38:11"
											}
										]
									},
									"documentation": {
										"id": 1806,
										"nodeType": "StructuredDocumentation",
										"src": "6534:130:11",
										"text": " @dev Gets the frozen state of the reserve\n @param self The reserve configuration\n @return The frozen state*"
									},
									"id": 1823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFrozen",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1823,
												"src": "6686:46:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1807,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2774,
													"src": "6686:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6685:48:11"
									},
									"returnParameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1823,
												"src": "6757:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1810,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6757:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6756:6:11"
									},
									"scope": 2181,
									"src": "6667:145:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1852,
										"nodeType": "Block",
										"src": "7120:132:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1831,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1826,
															"src": "7126:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
																"typeString": "struct DataTypes.ReserveConfigurationMap memory"
															}
														},
														"id": 1833,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2773,
														"src": "7126:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1849,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1834,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1826,
																			"src": "7145:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
																				"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																			}
																		},
																		"id": 1835,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2773,
																		"src": "7145:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1836,
																		"name": "BORROWING_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1487,
																		"src": "7157:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7145:26:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1838,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7144:28:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"condition": {
																					"argumentTypes": null,
																					"id": 1841,
																					"name": "enabled",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1828,
																					"src": "7190:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1843,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7204:1:11",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"id": 1844,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "Conditional",
																				"src": "7190:15:11",
																				"trueExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 1842,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7200:1:11",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"id": 1840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7182:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1839,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "7182:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7182:24:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1846,
																		"name": "BORROWING_ENABLED_START_BIT_POSITION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1512,
																		"src": "7210:36:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7182:64:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1848,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7181:66:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7144:103:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7126:121:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1851,
												"nodeType": "ExpressionStatement",
												"src": "7126:121:11"
											}
										]
									},
									"documentation": {
										"id": 1824,
										"nodeType": "StructuredDocumentation",
										"src": "6816:187:11",
										"text": " @dev Enables or disables borrowing on the reserve\n @param self The reserve configuration\n @param enabled True if the borrowing needs to be enabled, false otherwise*"
									},
									"id": 1853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setBorrowingEnabled",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1853,
												"src": "7035:45:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1825,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2774,
													"src": "7035:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "enabled",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1853,
												"src": "7082:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7082:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7034:61:11"
									},
									"returnParameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7120:0:11"
									},
									"scope": 2181,
									"src": "7006:246:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1870,
										"nodeType": "Block",
										"src": "7515:52:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1861,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1856,
																		"src": "7529:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
																			"typeString": "struct DataTypes.ReserveConfigurationMap storage pointer"
																		}
																	},
																	"id": 1862,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "data",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2773,
																	"src": "7529:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "~",
																	"prefix": true,
																	"src": "7541:15:11",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 1863,
																		"name": "BORROWING_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1487,
																		"src": "7542:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7529:27:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1866,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7528:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1867,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7561:1:11",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7528:34:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1860,
												"id": 1869,
												"nodeType": "Return",
												"src": "7521:41:11"
											}
										]
									},
									"documentation": {
										"id": 1854,
										"nodeType": "StructuredDocumentation",
										"src": "7256:136:11",
										"text": " @dev Gets the borrowing state of the reserve\n @param self The reserve configuration\n @return The borrowing state*"
									},
									"id": 1871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBorrowingEnabled",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1871,
												"src": "7424:46:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1855,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2774,
													"src": "7424:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7423:48:11"
									},
									"returnParameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1871,
												"src": "7507:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7507:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7506:6:11"
									},
									"scope": 2181,
									"src": "7395:172:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1900,
										"nodeType": "Block",
										"src": "7911:146:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1879,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "7917:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
																"typeString": "struct DataTypes.ReserveConfigurationMap memory"
															}
														},
														"id": 1881,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2773,
														"src": "7917:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1897,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1882,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1874,
																			"src": "7936:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
																				"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																			}
																		},
																		"id": 1883,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2773,
																		"src": "7936:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1884,
																		"name": "STABLE_BORROWING_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1490,
																		"src": "7948:21:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7936:33:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1886,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7935:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"condition": {
																					"argumentTypes": null,
																					"id": 1889,
																					"name": "enabled",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1876,
																					"src": "7988:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1891,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8002:1:11",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"id": 1892,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "Conditional",
																				"src": "7988:15:11",
																				"trueExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 1890,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7998:1:11",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"id": 1888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7980:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1887,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "7980:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7980:24:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1894,
																		"name": "STABLE_BORROWING_ENABLED_START_BIT_POSITION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1515,
																		"src": "8008:43:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7980:71:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1896,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7979:73:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7935:117:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7917:135:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1899,
												"nodeType": "ExpressionStatement",
												"src": "7917:135:11"
											}
										]
									},
									"documentation": {
										"id": 1872,
										"nodeType": "StructuredDocumentation",
										"src": "7571:211:11",
										"text": " @dev Enables or disables stable rate borrowing on the reserve\n @param self The reserve configuration\n @param enabled True if the stable rate borrowing needs to be enabled, false otherwise*"
									},
									"id": 1901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setStableRateBorrowingEnabled",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1901,
												"src": "7829:45:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1873,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2774,
													"src": "7829:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "enabled",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1901,
												"src": "7880:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1875,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7880:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7823:73:11"
									},
									"returnParameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7911:0:11"
									},
									"scope": 2181,
									"src": "7785:272:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1918,
										"nodeType": "Block",
										"src": "8354:59:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1909,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1904,
																		"src": "8368:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
																			"typeString": "struct DataTypes.ReserveConfigurationMap storage pointer"
																		}
																	},
																	"id": 1910,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "data",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2773,
																	"src": "8368:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "~",
																	"prefix": true,
																	"src": "8380:22:11",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 1911,
																		"name": "STABLE_BORROWING_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1490,
																		"src": "8381:21:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8368:34:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1914,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8367:36:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1915,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8407:1:11",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8367:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1908,
												"id": 1917,
												"nodeType": "Return",
												"src": "8360:48:11"
											}
										]
									},
									"documentation": {
										"id": 1902,
										"nodeType": "StructuredDocumentation",
										"src": "8061:160:11",
										"text": " @dev Gets the stable rate borrowing state of the reserve\n @param self The reserve configuration\n @return The stable rate borrowing state*"
									},
									"id": 1919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStableRateBorrowingEnabled",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1919,
												"src": "8263:46:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1903,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2774,
													"src": "8263:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8262:48:11"
									},
									"returnParameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1919,
												"src": "8346:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8346:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8345:6:11"
									},
									"scope": 2181,
									"src": "8224:189:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1950,
										"nodeType": "Block",
										"src": "8687:214:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1928,
																"name": "reserveFactor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1924,
																"src": "8701:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1929,
																"name": "MAX_VALID_RESERVE_FACTOR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1533,
																"src": "8718:24:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8701:41:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1931,
																"name": "Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2679,
																"src": "8744:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Errors_$2679_$",
																	"typeString": "type(library Errors)"
																}
															},
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "RC_INVALID_RESERVE_FACTOR",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2646,
															"src": "8744:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1927,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8693:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8693:84:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1934,
												"nodeType": "ExpressionStatement",
												"src": "8693:84:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1935,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1922,
															"src": "8784:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
																"typeString": "struct DataTypes.ReserveConfigurationMap memory"
															}
														},
														"id": 1937,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2773,
														"src": "8784:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1947,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1938,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1922,
																			"src": "8803:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
																				"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																			}
																		},
																		"id": 1939,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2773,
																		"src": "8803:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1940,
																		"name": "RESERVE_FACTOR_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1493,
																		"src": "8815:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8803:31:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1942,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8802:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1943,
																		"name": "reserveFactor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1924,
																		"src": "8845:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1944,
																		"name": "RESERVE_FACTOR_START_BIT_POSITION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1518,
																		"src": "8862:33:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8845:50:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1946,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8844:52:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8802:94:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8784:112:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1949,
												"nodeType": "ExpressionStatement",
												"src": "8784:112:11"
											}
										]
									},
									"documentation": {
										"id": 1920,
										"nodeType": "StructuredDocumentation",
										"src": "8417:147:11",
										"text": " @dev Sets the reserve factor of the reserve\n @param self The reserve configuration\n @param reserveFactor The reserve factor*"
									},
									"id": 1951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setReserveFactor",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1951,
												"src": "8593:45:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1921,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2774,
													"src": "8593:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "reserveFactor",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1951,
												"src": "8640:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8640:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8592:70:11"
									},
									"returnParameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8687:0:11"
									},
									"scope": 2181,
									"src": "8567:334:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1968,
										"nodeType": "Block",
										"src": "9162:89:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1959,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1954,
																		"src": "9176:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
																			"typeString": "struct DataTypes.ReserveConfigurationMap storage pointer"
																		}
																	},
																	"id": 1960,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "data",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2773,
																	"src": "9176:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "~",
																	"prefix": true,
																	"src": "9188:20:11",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 1961,
																		"name": "RESERVE_FACTOR_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1493,
																		"src": "9189:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9176:32:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1964,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9175:34:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">>",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1965,
														"name": "RESERVE_FACTOR_START_BIT_POSITION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1518,
														"src": "9213:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9175:71:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1958,
												"id": 1967,
												"nodeType": "Return",
												"src": "9168:78:11"
											}
										]
									},
									"documentation": {
										"id": 1952,
										"nodeType": "StructuredDocumentation",
										"src": "8905:134:11",
										"text": " @dev Gets the reserve factor of the reserve\n @param self The reserve configuration\n @return The reserve factor*"
									},
									"id": 1969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveFactor",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1969,
												"src": "9068:46:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1953,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2774,
													"src": "9068:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9067:48:11"
									},
									"returnParameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1969,
												"src": "9151:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9151:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9150:9:11"
									},
									"scope": 2181,
									"src": "9042:209:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2018,
										"nodeType": "Block",
										"src": "9627:229:11",
										"statements": [
											{
												"assignments": [
													1984
												],
												"declarations": [
													{
														"constant": false,
														"id": 1984,
														"mutability": "mutable",
														"name": "dataLocal",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2018,
														"src": "9633:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1983,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9633:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1987,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1985,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1972,
														"src": "9653:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
															"typeString": "struct DataTypes.ReserveConfigurationMap storage pointer"
														}
													},
													"id": 1986,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2773,
													"src": "9653:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9633:29:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1988,
																			"name": "dataLocal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1984,
																			"src": "9685:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "9697:12:11",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 1989,
																				"name": "ACTIVE_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1481,
																				"src": "9698:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9685:24:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1992,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9684:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9714:1:11",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9684:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1995,
																			"name": "dataLocal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1984,
																			"src": "9724:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "9736:12:11",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 1996,
																				"name": "FROZEN_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1484,
																				"src": "9737:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9724:24:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1999,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9723:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9753:1:11",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9723:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 2002,
																			"name": "dataLocal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1984,
																			"src": "9763:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "9775:15:11",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 2003,
																				"name": "BORROWING_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1487,
																				"src": "9776:14:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9763:27:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2006,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9762:29:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9795:1:11",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9762:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 2009,
																			"name": "dataLocal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1984,
																			"src": "9805:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "9817:22:11",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 2010,
																				"name": "STABLE_BORROWING_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1490,
																				"src": "9818:21:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9805:34:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2013,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9804:36:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9844:1:11",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9804:41:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2016,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9676:175:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_bool_$_t_bool_$",
														"typeString": "tuple(bool,bool,bool,bool)"
													}
												},
												"functionReturnParameters": 1982,
												"id": 2017,
												"nodeType": "Return",
												"src": "9669:182:11"
											}
										]
									},
									"documentation": {
										"id": 1970,
										"nodeType": "StructuredDocumentation",
										"src": "9255:212:11",
										"text": " @dev Gets the configuration flags of the reserve\n @param self The reserve configuration\n @return The state flags representing active, frozen, borrowing enabled, stableRateBorrowing enabled*"
									},
									"id": 2019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFlags",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2019,
												"src": "9488:46:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1971,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2774,
													"src": "9488:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9487:48:11"
									},
									"returnParameters": {
										"id": 1982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2019,
												"src": "9578:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1974,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9578:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2019,
												"src": "9590:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1976,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9590:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2019,
												"src": "9602:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1978,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9602:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1981,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2019,
												"src": "9614:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1980,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9614:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9570:54:11"
									},
									"scope": 2181,
									"src": "9470:386:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2074,
										"nodeType": "Block",
										"src": "10270:421:11",
										"statements": [
											{
												"assignments": [
													2036
												],
												"declarations": [
													{
														"constant": false,
														"id": 2036,
														"mutability": "mutable",
														"name": "dataLocal",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2074,
														"src": "10276:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2035,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10276:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2039,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 2037,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2022,
														"src": "10296:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
															"typeString": "struct DataTypes.ReserveConfigurationMap storage pointer"
														}
													},
													"id": 2038,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2773,
													"src": "10296:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10276:29:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2040,
																"name": "dataLocal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2036,
																"src": "10327:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "~",
																"prefix": true,
																"src": "10339:9:11",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 2041,
																	"name": "LTV_MASK",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1469,
																	"src": "10340:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10327:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 2044,
																			"name": "dataLocal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2036,
																			"src": "10357:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2046,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "10369:27:11",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 2045,
																				"name": "LIQUIDATION_THRESHOLD_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1472,
																				"src": "10370:26:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10357:39:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2048,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10356:41:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2049,
																"name": "LIQUIDATION_THRESHOLD_START_BIT_POSITION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1497,
																"src": "10401:40:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10356:85:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 2051,
																			"name": "dataLocal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2036,
																			"src": "10450:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "10462:23:11",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 2052,
																				"name": "LIQUIDATION_BONUS_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1475,
																				"src": "10463:22:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10450:35:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2055,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10449:37:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2056,
																"name": "LIQUIDATION_BONUS_START_BIT_POSITION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1500,
																"src": "10490:36:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10449:77:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 2058,
																			"name": "dataLocal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2036,
																			"src": "10535:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "10547:14:11",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 2059,
																				"name": "DECIMALS_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1478,
																				"src": "10548:13:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10535:26:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2062,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10534:28:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2063,
																"name": "RESERVE_DECIMALS_START_BIT_POSITION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1503,
																"src": "10566:35:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10534:67:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 2065,
																			"name": "dataLocal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2036,
																			"src": "10610:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2067,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "10622:20:11",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 2066,
																				"name": "RESERVE_FACTOR_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1493,
																				"src": "10623:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10610:32:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2069,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10609:34:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2070,
																"name": "RESERVE_FACTOR_START_BIT_POSITION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1518,
																"src": "10647:33:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10609:71:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2072,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10319:367:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 2034,
												"id": 2073,
												"nodeType": "Return",
												"src": "10312:374:11"
											}
										]
									},
									"documentation": {
										"id": 2020,
										"nodeType": "StructuredDocumentation",
										"src": "9860:222:11",
										"text": " @dev Gets the configuration paramters of the reserve\n @param self The reserve configuration\n @return The state params representing ltv, liquidation threshold, liquidation bonus, the reserve decimals*"
									},
									"id": 2075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getParams",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2075,
												"src": "10104:46:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 2021,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2774,
													"src": "10104:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10103:48:11"
									},
									"returnParameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2075,
												"src": "10194:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10194:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2075,
												"src": "10209:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10209:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2029,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2075,
												"src": "10224:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10224:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2075,
												"src": "10239:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10239:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2075,
												"src": "10254:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10254:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10186:81:11"
									},
									"scope": 2181,
									"src": "10085:606:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2130,
										"nodeType": "Block",
										"src": "11131:385:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2091,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2078,
																	"src": "11152:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
																		"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																	}
																},
																"id": 2092,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "data",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2773,
																"src": "11152:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2094,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "~",
																"prefix": true,
																"src": "11164:9:11",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 2093,
																	"name": "LTV_MASK",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1469,
																	"src": "11165:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11152:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2096,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2078,
																				"src": "11182:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
																					"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																				}
																			},
																			"id": 2097,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "data",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2773,
																			"src": "11182:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2099,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "11194:27:11",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 2098,
																				"name": "LIQUIDATION_THRESHOLD_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1472,
																				"src": "11195:26:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11182:39:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2101,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11181:41:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2102,
																"name": "LIQUIDATION_THRESHOLD_START_BIT_POSITION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1497,
																"src": "11226:40:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11181:85:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2104,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2078,
																				"src": "11275:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
																					"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																				}
																			},
																			"id": 2105,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "data",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2773,
																			"src": "11275:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "11287:23:11",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 2106,
																				"name": "LIQUIDATION_BONUS_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1475,
																				"src": "11288:22:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11275:35:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2109,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11274:37:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2110,
																"name": "LIQUIDATION_BONUS_START_BIT_POSITION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1500,
																"src": "11315:36:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11274:77:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2112,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2078,
																				"src": "11360:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
																					"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																				}
																			},
																			"id": 2113,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "data",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2773,
																			"src": "11360:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "11372:14:11",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 2114,
																				"name": "DECIMALS_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1478,
																				"src": "11373:13:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11360:26:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2117,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11359:28:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2118,
																"name": "RESERVE_DECIMALS_START_BIT_POSITION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1503,
																"src": "11391:35:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11359:67:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2120,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2078,
																				"src": "11435:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
																					"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																				}
																			},
																			"id": 2121,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "data",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2773,
																			"src": "11435:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "11447:20:11",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 2122,
																				"name": "RESERVE_FACTOR_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1493,
																				"src": "11448:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11435:32:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2125,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11434:34:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2126,
																"name": "RESERVE_FACTOR_START_BIT_POSITION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1518,
																"src": "11472:33:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11434:71:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2128,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "11144:367:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 2090,
												"id": 2129,
												"nodeType": "Return",
												"src": "11137:374:11"
											}
										]
									},
									"documentation": {
										"id": 2076,
										"nodeType": "StructuredDocumentation",
										"src": "10695:243:11",
										"text": " @dev Gets the configuration paramters of the reserve from a memory object\n @param self The reserve configuration\n @return The state params representing ltv, liquidation threshold, liquidation bonus, the reserve decimals*"
									},
									"id": 2131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getParamsMemory",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2131,
												"src": "10966:45:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 2077,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2774,
													"src": "10966:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10965:47:11"
									},
									"returnParameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2131,
												"src": "11055:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11055:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2131,
												"src": "11070:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11070:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2131,
												"src": "11085:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11085:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2131,
												"src": "11100:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11100:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2131,
												"src": "11115:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11115:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11047:81:11"
									},
									"scope": 2181,
									"src": "10941:575:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2179,
										"nodeType": "Block",
										"src": "11918:193:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2145,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2134,
																				"src": "11940:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
																					"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																				}
																			},
																			"id": 2146,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "data",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2773,
																			"src": "11940:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "11952:12:11",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 2147,
																				"name": "ACTIVE_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1481,
																				"src": "11953:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11940:24:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2150,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11939:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11969:1:11",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11939:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2153,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2134,
																				"src": "11979:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
																					"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																				}
																			},
																			"id": 2154,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "data",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2773,
																			"src": "11979:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "11991:12:11",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 2155,
																				"name": "FROZEN_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1484,
																				"src": "11992:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11979:24:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2158,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11978:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12008:1:11",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11978:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2161,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2134,
																				"src": "12018:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
																					"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																				}
																			},
																			"id": 2162,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "data",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2773,
																			"src": "12018:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "12030:15:11",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 2163,
																				"name": "BORROWING_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1487,
																				"src": "12031:14:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12018:27:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2166,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12017:29:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12050:1:11",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12017:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2169,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2134,
																				"src": "12060:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
																					"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																				}
																			},
																			"id": 2170,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "data",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2773,
																			"src": "12060:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "12072:22:11",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 2171,
																				"name": "STABLE_BORROWING_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1490,
																				"src": "12073:21:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12060:34:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2174,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12059:36:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12099:1:11",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12059:41:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2177,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "11931:175:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_bool_$_t_bool_$",
														"typeString": "tuple(bool,bool,bool,bool)"
													}
												},
												"functionReturnParameters": 2144,
												"id": 2178,
												"nodeType": "Return",
												"src": "11924:182:11"
											}
										]
									},
									"documentation": {
										"id": 2132,
										"nodeType": "StructuredDocumentation",
										"src": "11520:233:11",
										"text": " @dev Gets the configuration flags of the reserve from a memory object\n @param self The reserve configuration\n @return The state flags representing active, frozen, borrowing enabled, stableRateBorrowing enabled*"
									},
									"id": 2180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFlagsMemory",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2180,
												"src": "11780:45:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 2133,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2774,
													"src": "11780:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11779:47:11"
									},
									"returnParameters": {
										"id": 2144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2180,
												"src": "11869:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11869:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2180,
												"src": "11881:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11881:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2180,
												"src": "11893:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2140,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11893:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2180,
												"src": "11905:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11905:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11861:54:11"
									},
									"scope": 2181,
									"src": "11756:355:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2182,
							"src": "297:11816:11"
						}
					],
					"src": "37:12077:11"
				},
				"id": 11
			},
			"contracts/protocol/libraries/configuration/UserConfiguration.sol": {
				"ast": {
					"absolutePath": "contracts/protocol/libraries/configuration/UserConfiguration.sol",
					"exportedSymbols": {
						"UserConfiguration": [
							2424
						]
					},
					"id": 2425,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2183,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:12"
						},
						{
							"absolutePath": "contracts/protocol/libraries/helpers/Errors.sol",
							"file": "../helpers/Errors.sol",
							"id": 2185,
							"nodeType": "ImportDirective",
							"scope": 2425,
							"sourceUnit": 2680,
							"src": "62:45:12",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 2184,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "70:6:12",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/protocol/libraries/types/DataTypes.sol",
							"file": "../types/DataTypes.sol",
							"id": 2187,
							"nodeType": "ImportDirective",
							"scope": 2425,
							"sourceUnit": 2783,
							"src": "108:49:12",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 2186,
										"name": "DataTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "116:9:12",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2188,
								"nodeType": "StructuredDocumentation",
								"src": "159:131:12",
								"text": " @title UserConfiguration library\n @author Aave\n @notice Implements the bitmap logic to handle the user configuration"
							},
							"fullyImplemented": true,
							"id": 2424,
							"linearizedBaseContracts": [
								2424
							],
							"name": "UserConfiguration",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2191,
									"mutability": "constant",
									"name": "BORROWING_MASK",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2424,
									"src": "321:113:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2189,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "321:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307835353535353535353535353535353535353535353535353535353535353535353535353535353535353535353535353535353535353535353535353535353535",
										"id": 2190,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "368:66:12",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_38597363079105398474523661669562635951089994888546854679819194669304376546645_by_1",
											"typeString": "int_const 3859...(69 digits omitted)...6645"
										},
										"value": "0x5555555555555555555555555555555555555555555555555555555555555555"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2240,
										"nodeType": "Block",
										"src": "848:186:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2202,
																"name": "reserveIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2196,
																"src": "862:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "313238",
																"id": 2203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "877:3:12",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "862:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2205,
																"name": "Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2679,
																"src": "882:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Errors_$2679_$",
																	"typeString": "type(library Errors)"
																}
															},
															"id": 2206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "UL_INVALID_INDEX",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2658,
															"src": "882:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2201,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "854:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "854:52:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2208,
												"nodeType": "ExpressionStatement",
												"src": "854:52:12"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2209,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2194,
															"src": "912:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserConfigurationMap_$2777_storage_ptr",
																"typeString": "struct DataTypes.UserConfigurationMap storage pointer"
															}
														},
														"id": 2211,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2776,
														"src": "912:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2212,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2194,
																			"src": "931:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserConfigurationMap_$2777_storage_ptr",
																				"typeString": "struct DataTypes.UserConfigurationMap storage pointer"
																			}
																		},
																		"id": 2213,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2776,
																		"src": "931:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 2221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "~",
																		"prefix": true,
																		"src": "943:26:12",
																		"subExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2219,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 2214,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "945:1:12",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"argumentTypes": null,
																						"components": [
																							{
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2217,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"id": 2215,
																									"name": "reserveIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2196,
																									"src": "951:12:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"argumentTypes": null,
																									"hexValue": "32",
																									"id": 2216,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "966:1:12",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_2_by_1",
																										"typeString": "int_const 2"
																									},
																									"value": "2"
																								},
																								"src": "951:16:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2218,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "950:18:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "945:23:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2220,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "944:25:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "931:38:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2223,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "930:40:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"condition": {
																					"argumentTypes": null,
																					"id": 2226,
																					"name": "borrowing",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2198,
																					"src": "988:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 2228,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1004:1:12",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"id": 2229,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "Conditional",
																				"src": "988:17:12",
																				"trueExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 2227,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1000:1:12",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"id": 2225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "980:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2224,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "980:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 2230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "980:26:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2233,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 2231,
																					"name": "reserveIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2196,
																					"src": "1011:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 2232,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1026:1:12",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "1011:16:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2234,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1010:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "980:48:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2236,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "979:50:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "930:99:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "912:117:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2239,
												"nodeType": "ExpressionStatement",
												"src": "912:117:12"
											}
										]
									},
									"documentation": {
										"id": 2192,
										"nodeType": "StructuredDocumentation",
										"src": "439:276:12",
										"text": " @dev Sets if the user is borrowing the reserve identified by reserveIndex\n @param self The configuration object\n @param reserveIndex The index of the reserve in the bitmap\n @param borrowing True if the user is borrowing the reserve, false otherwise*"
									},
									"id": 2241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setBorrowing",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2194,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2241,
												"src": "745:43:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserConfigurationMap_$2777_storage_ptr",
													"typeString": "struct DataTypes.UserConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 2193,
													"name": "DataTypes.UserConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2777,
													"src": "745:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserConfigurationMap_$2777_storage_ptr",
														"typeString": "struct DataTypes.UserConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "reserveIndex",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2241,
												"src": "794:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "borrowing",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2241,
												"src": "820:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2197,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "820:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "739:99:12"
									},
									"returnParameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "848:0:12"
									},
									"scope": 2424,
									"src": "718:316:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2294,
										"nodeType": "Block",
										"src": "1490:202:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2252,
																"name": "reserveIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2246,
																"src": "1504:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "313238",
																"id": 2253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1519:3:12",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1504:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2255,
																"name": "Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2679,
																"src": "1524:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Errors_$2679_$",
																	"typeString": "type(library Errors)"
																}
															},
															"id": 2256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "UL_INVALID_INDEX",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2658,
															"src": "1524:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1496:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1496:52:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2258,
												"nodeType": "ExpressionStatement",
												"src": "1496:52:12"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2259,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2244,
															"src": "1554:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserConfigurationMap_$2777_storage_ptr",
																"typeString": "struct DataTypes.UserConfigurationMap storage pointer"
															}
														},
														"id": 2261,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2776,
														"src": "1554:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2262,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2244,
																			"src": "1573:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserConfigurationMap_$2777_storage_ptr",
																				"typeString": "struct DataTypes.UserConfigurationMap storage pointer"
																			}
																		},
																		"id": 2263,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2776,
																		"src": "1573:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 2273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "~",
																		"prefix": true,
																		"src": "1585:30:12",
																		"subExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2271,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 2264,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1587:1:12",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"argumentTypes": null,
																						"components": [
																							{
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2269,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 2267,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"argumentTypes": null,
																										"id": 2265,
																										"name": "reserveIndex",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2246,
																										"src": "1593:12:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "*",
																									"rightExpression": {
																										"argumentTypes": null,
																										"hexValue": "32",
																										"id": 2266,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "1608:1:12",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_2_by_1",
																											"typeString": "int_const 2"
																										},
																										"value": "2"
																									},
																									"src": "1593:16:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"argumentTypes": null,
																									"hexValue": "31",
																									"id": 2268,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1612:1:12",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "1593:20:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2270,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "1592:22:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1587:27:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2272,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "1586:29:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1573:42:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2275,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1572:44:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"condition": {
																					"argumentTypes": null,
																					"id": 2278,
																					"name": "usingAsCollateral",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2248,
																					"src": "1634:17:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 2280,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1658:1:12",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"id": 2281,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "Conditional",
																				"src": "1634:25:12",
																				"trueExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 2279,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1654:1:12",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"id": 2277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1626:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2276,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1626:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 2282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1626:34:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2287,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2285,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 2283,
																						"name": "reserveIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2246,
																						"src": "1665:12:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "32",
																						"id": 2284,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1680:1:12",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					},
																					"src": "1665:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 2286,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1684:1:12",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "1665:20:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2288,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1664:22:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1626:60:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2290,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1625:62:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1572:115:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1554:133:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2293,
												"nodeType": "ExpressionStatement",
												"src": "1554:133:12"
											}
										]
									},
									"documentation": {
										"id": 2242,
										"nodeType": "StructuredDocumentation",
										"src": "1038:303:12",
										"text": " @dev Sets if the user is using as collateral the reserve identified by reserveIndex\n @param self The configuration object\n @param reserveIndex The index of the reserve in the bitmap\n @param usingAsCollateral True if the user is usin the reserve as collateral, false otherwise*"
									},
									"id": 2295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setUsingAsCollateral",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2295,
												"src": "1379:43:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserConfigurationMap_$2777_storage_ptr",
													"typeString": "struct DataTypes.UserConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 2243,
													"name": "DataTypes.UserConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2777,
													"src": "1379:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserConfigurationMap_$2777_storage_ptr",
														"typeString": "struct DataTypes.UserConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "reserveIndex",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2295,
												"src": "1428:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1428:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "usingAsCollateral",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2295,
												"src": "1454:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2247,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1454:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1373:107:12"
									},
									"returnParameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1490:0:12"
									},
									"scope": 2424,
									"src": "1344:348:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2326,
										"nodeType": "Block",
										"src": "2160:118:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2306,
																"name": "reserveIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2300,
																"src": "2174:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "313238",
																"id": 2307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2189:3:12",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2174:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2309,
																"name": "Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2679,
																"src": "2194:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Errors_$2679_$",
																	"typeString": "type(library Errors)"
																}
															},
															"id": 2310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "UL_INVALID_INDEX",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2658,
															"src": "2194:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2166:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2166:52:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2312,
												"nodeType": "ExpressionStatement",
												"src": "2166:52:12"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2313,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2298,
																			"src": "2232:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserConfigurationMap_$2777_memory_ptr",
																				"typeString": "struct DataTypes.UserConfigurationMap memory"
																			}
																		},
																		"id": 2314,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2776,
																		"src": "2232:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2317,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 2315,
																					"name": "reserveIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2300,
																					"src": "2246:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 2316,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2261:1:12",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "2246:16:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2318,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2245:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2232:31:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2320,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2231:33:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "33",
															"id": 2321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2267:1:12",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"src": "2231:37:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2323,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2272:1:12",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2231:42:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2304,
												"id": 2325,
												"nodeType": "Return",
												"src": "2224:49:12"
											}
										]
									},
									"documentation": {
										"id": 2296,
										"nodeType": "StructuredDocumentation",
										"src": "1696:314:12",
										"text": " @dev Used to validate if a user has been using the reserve for borrowing or as collateral\n @param self The configuration object\n @param reserveIndex The index of the reserve in the bitmap\n @return True if the user has been using a reserve for borrowing or as collateral, false otherwise*"
									},
									"id": 2327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isUsingAsCollateralOrBorrowing",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2327,
												"src": "2058:42:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserConfigurationMap_$2777_memory_ptr",
													"typeString": "struct DataTypes.UserConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 2297,
													"name": "DataTypes.UserConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2777,
													"src": "2058:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserConfigurationMap_$2777_storage_ptr",
														"typeString": "struct DataTypes.UserConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "reserveIndex",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2327,
												"src": "2106:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2106:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:78:12"
									},
									"returnParameters": {
										"id": 2304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2327,
												"src": "2154:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2302,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2153:6:12"
									},
									"scope": 2424,
									"src": "2013:265:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2358,
										"nodeType": "Block",
										"src": "2695:118:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2338,
																"name": "reserveIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2332,
																"src": "2709:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "313238",
																"id": 2339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2724:3:12",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2709:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2341,
																"name": "Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2679,
																"src": "2729:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Errors_$2679_$",
																	"typeString": "type(library Errors)"
																}
															},
															"id": 2342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "UL_INVALID_INDEX",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2658,
															"src": "2729:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2337,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2701:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2701:52:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2344,
												"nodeType": "ExpressionStatement",
												"src": "2701:52:12"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2345,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2330,
																			"src": "2767:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserConfigurationMap_$2777_memory_ptr",
																				"typeString": "struct DataTypes.UserConfigurationMap memory"
																			}
																		},
																		"id": 2346,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2776,
																		"src": "2767:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2349,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 2347,
																					"name": "reserveIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2332,
																					"src": "2781:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 2348,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2796:1:12",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "2781:16:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2350,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2780:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2767:31:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2352,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2766:33:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 2353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2802:1:12",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2766:37:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2807:1:12",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2766:42:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2336,
												"id": 2357,
												"nodeType": "Return",
												"src": "2759:49:12"
											}
										]
									},
									"documentation": {
										"id": 2328,
										"nodeType": "StructuredDocumentation",
										"src": "2282:280:12",
										"text": " @dev Used to validate if a user has been using the reserve for borrowing\n @param self The configuration object\n @param reserveIndex The index of the reserve in the bitmap\n @return True if the user has been using a reserve for borrowing, false otherwise*"
									},
									"id": 2359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBorrowing",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2359,
												"src": "2586:42:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserConfigurationMap_$2777_memory_ptr",
													"typeString": "struct DataTypes.UserConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 2329,
													"name": "DataTypes.UserConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2777,
													"src": "2586:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserConfigurationMap_$2777_storage_ptr",
														"typeString": "struct DataTypes.UserConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "reserveIndex",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2359,
												"src": "2630:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2630:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2585:66:12"
									},
									"returnParameters": {
										"id": 2336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2359,
												"src": "2687:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2334,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2687:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2686:6:12"
									},
									"scope": 2424,
									"src": "2565:248:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2392,
										"nodeType": "Block",
										"src": "3238:122:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2370,
																"name": "reserveIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2364,
																"src": "3252:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "313238",
																"id": 2371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3267:3:12",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3252:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2373,
																"name": "Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2679,
																"src": "3272:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Errors_$2679_$",
																	"typeString": "type(library Errors)"
																}
															},
															"id": 2374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "UL_INVALID_INDEX",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2658,
															"src": "3272:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2369,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3244:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3244:52:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2376,
												"nodeType": "ExpressionStatement",
												"src": "3244:52:12"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2377,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2362,
																			"src": "3310:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserConfigurationMap_$2777_memory_ptr",
																				"typeString": "struct DataTypes.UserConfigurationMap memory"
																			}
																		},
																		"id": 2378,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2776,
																		"src": "3310:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2383,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2381,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 2379,
																						"name": "reserveIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2364,
																						"src": "3324:12:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "32",
																						"id": 2380,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3339:1:12",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					},
																					"src": "3324:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 2382,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3343:1:12",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "3324:20:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2384,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3323:22:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3310:35:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2386,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3309:37:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 2387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3349:1:12",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3309:41:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2389,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3354:1:12",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3309:46:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2368,
												"id": 2391,
												"nodeType": "Return",
												"src": "3302:53:12"
											}
										]
									},
									"documentation": {
										"id": 2360,
										"nodeType": "StructuredDocumentation",
										"src": "2817:280:12",
										"text": " @dev Used to validate if a user has been using the reserve as collateral\n @param self The configuration object\n @param reserveIndex The index of the reserve in the bitmap\n @return True if the user has been using a reserve as collateral, false otherwise*"
									},
									"id": 2393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isUsingAsCollateral",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2393,
												"src": "3129:42:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserConfigurationMap_$2777_memory_ptr",
													"typeString": "struct DataTypes.UserConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 2361,
													"name": "DataTypes.UserConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2777,
													"src": "3129:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserConfigurationMap_$2777_storage_ptr",
														"typeString": "struct DataTypes.UserConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "reserveIndex",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2393,
												"src": "3173:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3173:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3128:66:12"
									},
									"returnParameters": {
										"id": 2368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2393,
												"src": "3230:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2366,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3230:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3229:6:12"
									},
									"scope": 2424,
									"src": "3100:260:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2408,
										"nodeType": "Block",
										"src": "3667:49:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2401,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2396,
																"src": "3680:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserConfigurationMap_$2777_memory_ptr",
																	"typeString": "struct DataTypes.UserConfigurationMap memory"
																}
															},
															"id": 2402,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "data",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2776,
															"src": "3680:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"argumentTypes": null,
															"id": 2403,
															"name": "BORROWING_MASK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2191,
															"src": "3692:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3680:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2405,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3710:1:12",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3680:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2400,
												"id": 2407,
												"nodeType": "Return",
												"src": "3673:38:12"
											}
										]
									},
									"documentation": {
										"id": 2394,
										"nodeType": "StructuredDocumentation",
										"src": "3364:203:12",
										"text": " @dev Used to validate if a user has been borrowing from any reserve\n @param self The configuration object\n @return True if the user has been borrowing any reserve, false otherwise*"
									},
									"id": 2409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBorrowingAny",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2409,
												"src": "3594:42:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserConfigurationMap_$2777_memory_ptr",
													"typeString": "struct DataTypes.UserConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 2395,
													"name": "DataTypes.UserConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2777,
													"src": "3594:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserConfigurationMap_$2777_storage_ptr",
														"typeString": "struct DataTypes.UserConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3593:44:12"
									},
									"returnParameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2409,
												"src": "3661:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2398,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3661:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3660:6:12"
									},
									"scope": 2424,
									"src": "3570:146:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2422,
										"nodeType": "Block",
										"src": "4011:32:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2417,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2412,
															"src": "4024:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserConfigurationMap_$2777_memory_ptr",
																"typeString": "struct DataTypes.UserConfigurationMap memory"
															}
														},
														"id": 2418,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2776,
														"src": "4024:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4037:1:12",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4024:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2416,
												"id": 2421,
												"nodeType": "Return",
												"src": "4017:21:12"
											}
										]
									},
									"documentation": {
										"id": 2410,
										"nodeType": "StructuredDocumentation",
										"src": "3720:198:12",
										"text": " @dev Used to validate if a user has not been using any reserve\n @param self The configuration object\n @return True if the user has been borrowing any reserve, false otherwise*"
									},
									"id": 2423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isEmpty",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2423,
												"src": "3938:42:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserConfigurationMap_$2777_memory_ptr",
													"typeString": "struct DataTypes.UserConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 2411,
													"name": "DataTypes.UserConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2777,
													"src": "3938:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserConfigurationMap_$2777_storage_ptr",
														"typeString": "struct DataTypes.UserConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3937:44:12"
									},
									"returnParameters": {
										"id": 2416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2415,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2423,
												"src": "4005:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2414,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4005:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4004:6:12"
									},
									"scope": 2424,
									"src": "3921:122:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2425,
							"src": "291:3754:12"
						}
					],
					"src": "37:4009:12"
				},
				"id": 12
			},
			"contracts/protocol/libraries/helpers/Errors.sol": {
				"ast": {
					"absolutePath": "contracts/protocol/libraries/helpers/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							2679
						]
					},
					"id": 2680,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2426,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2427,
								"nodeType": "StructuredDocumentation",
								"src": "62:597:13",
								"text": " @title Errors library\n @author Aave\n @notice Defines the error messages emitted by the different contracts of the Aave protocol\n @dev Error messages prefix glossary:\n  - VL = ValidationLogic\n  - MATH = Math libraries\n  - CT = Common errors between tokens (AToken, VariableDebtToken and StableDebtToken)\n  - AT = AToken\n  - SDT = StableDebtToken\n  - VDT = VariableDebtToken\n  - LP = LendingPool\n  - LPAPR = LendingPoolAddressesProviderRegistry\n  - LPC = LendingPoolConfiguration\n  - RL = ReserveLogic\n  - LPCM = LendingPoolCollateralManager\n  - P = Pausable"
							},
							"fullyImplemented": true,
							"id": 2679,
							"linearizedBaseContracts": [
								2679
							],
							"name": "Errors",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "ac753236",
									"id": 2430,
									"mutability": "constant",
									"name": "CALLER_NOT_POOL_ADMIN",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "697:51:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2428,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "697:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3333",
										"id": 2429,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "744:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_ed93c67e1a9b7f09d3b44ee593360f0073603a8e45415e2c3c69afc994a1103d",
											"typeString": "literal_string \"33\""
										},
										"value": "33"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e2c16d69",
									"id": 2433,
									"mutability": "constant",
									"name": "BORROW_ALLOWANCE_NOT_ENOUGH",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "791:57:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2431,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "791:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3539",
										"id": 2432,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "844:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_dec29173c70f4e70086d64e09cb72b415f3d6a1843817cff62483903f0e12f62",
											"typeString": "literal_string \"59\""
										},
										"value": "59"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "871938a8",
									"id": 2436,
									"mutability": "constant",
									"name": "VL_INVALID_AMOUNT",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "937:46:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2434,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "937:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 2435,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "980:3:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
											"typeString": "literal_string \"1\""
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "7865a627",
									"id": 2439,
									"mutability": "constant",
									"name": "VL_NO_ACTIVE_RESERVE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "1022:49:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2437,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1022:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "32",
										"id": 2438,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1068:3:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_ad7c5bef027816a800da1736444fb58a807ef4c9603b7848673f7e3a68eb14a5",
											"typeString": "literal_string \"2\""
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d7510e0c",
									"id": 2442,
									"mutability": "constant",
									"name": "VL_RESERVE_FROZEN",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "1114:46:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2440,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1114:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "33",
										"id": 2441,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1157:3:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2a80e1ef1d7842f27f2e6be0972bb708b9a135c38860dbe73c27c3486c34f4de",
											"typeString": "literal_string \"3\""
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "179476c5",
									"id": 2445,
									"mutability": "constant",
									"name": "VL_CURRENT_AVAILABLE_LIQUIDITY_NOT_ENOUGH",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "1226:70:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2443,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1226:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "34",
										"id": 2444,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1293:3:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_13600b294191fc92924bb3ce4b969c1e7e2bab8f4c93c3fc6d0a51733df3c060",
											"typeString": "literal_string \"4\""
										},
										"value": "4"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a8440241",
									"id": 2448,
									"mutability": "constant",
									"name": "VL_NOT_ENOUGH_AVAILABLE_USER_BALANCE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "1341:65:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2446,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1341:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "35",
										"id": 2447,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1403:3:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_ceebf77a833b30520287ddd9478ff51abbdffa30aa90a8d655dba0e8a79ce0c1",
											"typeString": "literal_string \"5\""
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f3d9cc11",
									"id": 2451,
									"mutability": "constant",
									"name": "VL_TRANSFER_NOT_ALLOWED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "1468:52:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2449,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1468:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "36",
										"id": 2450,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1517:3:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_e455bf8ea6e7463a1046a0b52804526e119b4bf5136279614e0b1e8e296a4e2d",
											"typeString": "literal_string \"6\""
										},
										"value": "6"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "36565ab1",
									"id": 2454,
									"mutability": "constant",
									"name": "VL_BORROWING_NOT_ENABLED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "1557:53:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2452,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1557:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "37",
										"id": 2453,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1607:3:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_52f1a9b320cab38e5da8a8f97989383aab0a49165fc91c737310e4f7e9821021",
											"typeString": "literal_string \"7\""
										},
										"value": "7"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "3b5d25aa",
									"id": 2457,
									"mutability": "constant",
									"name": "VL_INVALID_INTEREST_RATE_MODE_SELECTED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "1644:67:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2455,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1644:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "38",
										"id": 2456,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1708:3:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_e4b1702d9298fee62dfeccc57d322a463ad55ca201256d01f62b45b2e1c21c10",
											"typeString": "literal_string \"8\""
										},
										"value": "8"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "708b8dd3",
									"id": 2460,
									"mutability": "constant",
									"name": "VL_COLLATERAL_BALANCE_IS_0",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "1756:55:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2458,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1756:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "39",
										"id": 2459,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1808:3:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_d2f8f61201b2b11a78d6e866abc9c3db2ae8631fa656bfe5cb53668255367afb",
											"typeString": "literal_string \"9\""
										},
										"value": "9"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1ec68b1d",
									"id": 2463,
									"mutability": "constant",
									"name": "VL_HEALTH_FACTOR_LOWER_THAN_LIQUIDATION_THRESHOLD",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "1848:79:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2461,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1848:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3130",
										"id": 2462,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1923:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_1a192fabce13988b84994d4296e6cdc418d55e2f1d7f942188d4040b94fc57ac",
											"typeString": "literal_string \"10\""
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2ace698a",
									"id": 2466,
									"mutability": "constant",
									"name": "VL_COLLATERAL_CANNOT_COVER_NEW_BORROW",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "1991:67:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2464,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1991:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3131",
										"id": 2465,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2054:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_7880aec93413f117ef14bd4e6d130875ab2c7d7d55a064fac3c2f7bd51516380",
											"typeString": "literal_string \"11\""
										},
										"value": "11"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4927c63a",
									"id": 2469,
									"mutability": "constant",
									"name": "VL_STABLE_BORROWING_NOT_ENABLED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "2120:61:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2467,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2120:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3132",
										"id": 2468,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2177:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_7f8b6b088b6d74c2852fc86c796dca07b44eed6fb3daf5e6b59f7c364db14528",
											"typeString": "literal_string \"12\""
										},
										"value": "12"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a39ed4ff",
									"id": 2472,
									"mutability": "constant",
									"name": "VL_COLLATERAL_SAME_AS_BORROWING_CURRENCY",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "2217:70:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2470,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2217:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3133",
										"id": 2471,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2283:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_789bcdf275fa270780a52ae3b79bb1ce0fda7e0aaad87b57b74bb99ac290714a",
											"typeString": "literal_string \"13\""
										},
										"value": "13"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "3aa786a8",
									"id": 2475,
									"mutability": "constant",
									"name": "VL_AMOUNT_BIGGER_THAN_MAX_LOAN_SIZE_STABLE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "2358:72:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2473,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2358:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3134",
										"id": 2474,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2426:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_5c4c6aa067b6f8e6cb38e6ab843832a94d1712d661a04d73c517d6a1931a9e5d",
											"typeString": "literal_string \"14\""
										},
										"value": "14"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "91a9fb18",
									"id": 2478,
									"mutability": "constant",
									"name": "VL_NO_DEBT_OF_SELECTED_TYPE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "2513:57:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2476,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2513:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3135",
										"id": 2477,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2566:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_1d3be50b2bb17407dd170f1d5da128d1def30c6b1598d6a629e79b4775265526",
											"typeString": "literal_string \"15\""
										},
										"value": "15"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "daf23547",
									"id": 2481,
									"mutability": "constant",
									"name": "VL_NO_EXPLICIT_AMOUNT_TO_REPAY_ON_BEHALF",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "2687:70:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2479,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2687:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3136",
										"id": 2480,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2753:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_277ab82e5a4641341820a4a2933a62c1de997e42e92548657ae21b3728d580fe",
											"typeString": "literal_string \"16\""
										},
										"value": "16"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6422b257",
									"id": 2484,
									"mutability": "constant",
									"name": "VL_NO_STABLE_RATE_LOAN_IN_RESERVE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "2834:63:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2482,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2834:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3137",
										"id": 2483,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2893:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_8e8fab5f003314da8d1873ea7720e8d9f47650136d916064d1edb8a11d682624",
											"typeString": "literal_string \"17\""
										},
										"value": "17"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6ab5e615",
									"id": 2487,
									"mutability": "constant",
									"name": "VL_NO_VARIABLE_RATE_LOAN_IN_RESERVE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "2972:65:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2485,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2972:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 2486,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3033:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_8fef2229291b68be841adf029e58b87f39ba144b2d3b0af1760243d0a9bc6a1c",
											"typeString": "literal_string \"18\""
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "35a9d21d",
									"id": 2490,
									"mutability": "constant",
									"name": "VL_UNDERLYING_BALANCE_NOT_GREATER_THAN_0",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "3114:70:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2488,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3114:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3139",
										"id": 2489,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3180:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_939eb54753ed0cc7e2272bfb34cbe098308c93936ed54d79078f76ade0b2e789",
											"typeString": "literal_string \"19\""
										},
										"value": "19"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e29425dc",
									"id": 2493,
									"mutability": "constant",
									"name": "VL_DEPOSIT_ALREADY_IN_USE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "3243:55:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2491,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3243:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3230",
										"id": 2492,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3294:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_731dc163f73d31d8c68f9917ce4ff967753939f70432973c04fd2c2a48148607",
											"typeString": "literal_string \"20\""
										},
										"value": "20"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "44dc4f70",
									"id": 2496,
									"mutability": "constant",
									"name": "LP_NOT_ENOUGH_STABLE_BORROW_BALANCE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "3356:65:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2494,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3356:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3231",
										"id": 2495,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3417:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_f4c2b5de886427473655d4c904c743576dc2d53249b7535d96c06cc97ae7216b",
											"typeString": "literal_string \"21\""
										},
										"value": "21"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b89652cd",
									"id": 2499,
									"mutability": "constant",
									"name": "LP_INTEREST_RATE_REBALANCE_CONDITIONS_NOT_MET",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "3487:75:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2497,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3487:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3232",
										"id": 2498,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3558:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_d4d1a59767271eefdc7830a772b9732a11d503531d972ab8c981a6b1c0e666e5",
											"typeString": "literal_string \"22\""
										},
										"value": "22"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4a529f91",
									"id": 2502,
									"mutability": "constant",
									"name": "LP_LIQUIDATION_CALL_FAILED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "3619:56:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2500,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3619:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3233",
										"id": 2501,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3671:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_1572b593c53d839d80004aa4b8c51211864104f06ace9e22be9c4365b50655ea",
											"typeString": "literal_string \"23\""
										},
										"value": "23"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "22a6f08e",
									"id": 2505,
									"mutability": "constant",
									"name": "LP_NOT_ENOUGH_LIQUIDITY_TO_BORROW",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "3708:63:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2503,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3708:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3234",
										"id": 2504,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3767:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_6585423cb6456b1d4957f6454d2f004f0c4f58d53a00082412d5c2ef4b1b31fd",
											"typeString": "literal_string \"24\""
										},
										"value": "24"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "390f34ba",
									"id": 2508,
									"mutability": "constant",
									"name": "LP_REQUESTED_AMOUNT_TOO_SMALL",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "3830:59:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2506,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3830:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3235",
										"id": 2507,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3885:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_81e080ffc23e8b8d44dd829bc823229e92b893eb1d8f624419d3f5682eb97fc3",
											"typeString": "literal_string \"25\""
										},
										"value": "25"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "0b8fd588",
									"id": 2511,
									"mutability": "constant",
									"name": "LP_INCONSISTENT_PROTOCOL_ACTUAL_BALANCE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "3949:69:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2509,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3949:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3236",
										"id": 2510,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4014:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_9cce9eb03c9f29c6481fca9f0f942b15bef0bbbc47fda0ddb44df157019835d9",
											"typeString": "literal_string \"26\""
										},
										"value": "26"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b36a2cf3",
									"id": 2514,
									"mutability": "constant",
									"name": "LP_CALLER_NOT_LENDING_POOL_CONFIGURATOR",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "4078:69:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2512,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4078:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3237",
										"id": 2513,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4143:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_58a280f74f57bf051c40f060139dc747e015be52f68c57e2c4ab2e4bd4146f43",
											"typeString": "literal_string \"27\""
										},
										"value": "27"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2b34c349",
									"id": 2517,
									"mutability": "constant",
									"name": "LP_INCONSISTENT_FLASHLOAN_PARAMS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "4220:62:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2515,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4220:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3238",
										"id": 2516,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4278:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_9560168699514dcd528543d614e81b4f36adf182dc624d2f1eb91df8addd987e",
											"typeString": "literal_string \"28\""
										},
										"value": "28"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6ba4271f",
									"id": 2520,
									"mutability": "constant",
									"name": "CT_CALLER_MUST_BE_LENDING_POOL",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "4286:60:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2518,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4286:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3239",
										"id": 2519,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4342:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_7749cc8014201da2069c21d93ba99c584b6f62d393fde534ed47eac227e31561",
											"typeString": "literal_string \"29\""
										},
										"value": "29"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "06f355ad",
									"id": 2523,
									"mutability": "constant",
									"name": "CT_CANNOT_GIVE_ALLOWANCE_TO_HIMSELF",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "4406:65:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2521,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4406:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3330",
										"id": 2522,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4467:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_bbf5a24880b10a5f9f601c4058e4771ddea17e7d765ceb3c903814e1c0d621e0",
											"typeString": "literal_string \"30\""
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a2fbc8ad",
									"id": 2526,
									"mutability": "constant",
									"name": "CT_TRANSFER_AMOUNT_NOT_GT_0",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "4518:57:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2524,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4518:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3331",
										"id": 2525,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4571:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_933c48a61c3bad621ebc5d57117f9e773fefae4468bceaf9d3198a3bf7c1d678",
											"typeString": "literal_string \"31\""
										},
										"value": "31"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "fe75fd26",
									"id": 2529,
									"mutability": "constant",
									"name": "RL_RESERVE_ALREADY_INITIALIZED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "4633:60:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2527,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4633:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3332",
										"id": 2528,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4689:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_8b953cbb84328003779eb1ef176ef07f7dd0ae3d4a8e408de53d15a36466c86e",
											"typeString": "literal_string \"32\""
										},
										"value": "32"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "65344799",
									"id": 2532,
									"mutability": "constant",
									"name": "LPC_RESERVE_LIQUIDITY_NOT_0",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "4739:57:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2530,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4739:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3334",
										"id": 2531,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4792:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_77c32b454bb61eb9df9e3848d0ded3e59753acda90ae58befe564733aec82e4c",
											"typeString": "literal_string \"34\""
										},
										"value": "34"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f0473259",
									"id": 2535,
									"mutability": "constant",
									"name": "LPC_INVALID_ATOKEN_POOL_ADDRESS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "4848:61:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2533,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4848:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3335",
										"id": 2534,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4905:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_5ca7b081b8c6c57b0469c340dba43ec8d33c0b898c69e55c4f74ff7ed9ac71ea",
											"typeString": "literal_string \"35\""
										},
										"value": "35"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e0d7dfd7",
									"id": 2538,
									"mutability": "constant",
									"name": "LPC_INVALID_STABLE_DEBT_TOKEN_POOL_ADDRESS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "4961:72:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2536,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4961:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3336",
										"id": 2537,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5029:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_3b4066bd7b7960752225af105d3beafb5c47a26c5aae7e6798a437b7c0bb33e6",
											"typeString": "literal_string \"36\""
										},
										"value": "36"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c09e2618",
									"id": 2541,
									"mutability": "constant",
									"name": "LPC_INVALID_VARIABLE_DEBT_TOKEN_POOL_ADDRESS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "5085:74:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2539,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5085:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3337",
										"id": 2540,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5155:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_5bc0457d8881b800fd1bc0d6df907345b3bf287e43a5790ded3d08dbacf9c03a",
											"typeString": "literal_string \"37\""
										},
										"value": "37"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "41b40ba5",
									"id": 2544,
									"mutability": "constant",
									"name": "LPC_INVALID_STABLE_DEBT_TOKEN_UNDERLYING_ADDRESS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "5211:78:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2542,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5211:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3338",
										"id": 2543,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5285:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_d67d834462ca31eaef1f30157e31659f60355143b7441e6fc7d9eae1fa79f3f8",
											"typeString": "literal_string \"38\""
										},
										"value": "38"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "3872b0ad",
									"id": 2547,
									"mutability": "constant",
									"name": "LPC_INVALID_VARIABLE_DEBT_TOKEN_UNDERLYING_ADDRESS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "5341:80:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2545,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5341:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3339",
										"id": 2546,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5417:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_318a541463286d7584b45438601196fbc1a55628e303a0613eb6d46e60640c95",
											"typeString": "literal_string \"39\""
										},
										"value": "39"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5a9786d4",
									"id": 2550,
									"mutability": "constant",
									"name": "LPC_INVALID_ADDRESSES_PROVIDER_ID",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "5473:63:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2548,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5473:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3430",
										"id": 2549,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5532:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_880de8116b3dfac28e9ff528a9fef1d1e0a51449c1addce011ffec1f302992b6",
											"typeString": "literal_string \"40\""
										},
										"value": "40"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "47d25300",
									"id": 2553,
									"mutability": "constant",
									"name": "LPC_INVALID_CONFIGURATION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "5588:55:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2551,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5588:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3735",
										"id": 2552,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5639:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_6dbb33232cde86c8a04f90a8bed9fc1c5ef520188a14538d96eb100d69bc2a94",
											"typeString": "literal_string \"75\""
										},
										"value": "75"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d3e370ee",
									"id": 2556,
									"mutability": "constant",
									"name": "LPC_CALLER_NOT_EMERGENCY_ADMIN",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "5692:60:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2554,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5692:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3736",
										"id": 2555,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5748:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_f1ae7da53f98170be52cc9330214a82f7ba06ee306297b4e1fb86fb21c611aa6",
											"typeString": "literal_string \"76\""
										},
										"value": "76"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d6f681b6",
									"id": 2559,
									"mutability": "constant",
									"name": "LPAPR_PROVIDER_NOT_REGISTERED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "5800:59:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2557,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5800:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3431",
										"id": 2558,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5855:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_6bcaf047ba4c8ac400fca43393035242dd1aabda2d6068a0c51242b97224de8d",
											"typeString": "literal_string \"41\""
										},
										"value": "41"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "fb681def",
									"id": 2562,
									"mutability": "constant",
									"name": "LPCM_HEALTH_FACTOR_NOT_BELOW_THRESHOLD",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "5895:68:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2560,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5895:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3432",
										"id": 2561,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5959:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_ccb1f717aa77602faf03a594761a36956b1c4cf44c6b336d1db57da799b331b8",
											"typeString": "literal_string \"42\""
										},
										"value": "42"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "407374a4",
									"id": 2565,
									"mutability": "constant",
									"name": "LPCM_COLLATERAL_CANNOT_BE_LIQUIDATED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "6013:66:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2563,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6013:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3433",
										"id": 2564,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6075:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_4dfb3440902001bce9b7ebf7be7d95fe9e2056bd5ce309ceb83b32f4e00e21ed",
											"typeString": "literal_string \"43\""
										},
										"value": "43"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "71a629da",
									"id": 2568,
									"mutability": "constant",
									"name": "LPCM_SPECIFIED_CURRENCY_NOT_BORROWED_BY_USER",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "6131:74:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2566,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6131:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3434",
										"id": 2567,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6201:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2e9b7c94e032d8b3b8b30bd825717a5ac74958b53e7c37a892a4fd7dc56e4975",
											"typeString": "literal_string \"44\""
										},
										"value": "44"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "cc5fc44c",
									"id": 2571,
									"mutability": "constant",
									"name": "LPCM_NOT_ENOUGH_LIQUIDITY_TO_LIQUIDATE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "6257:68:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2569,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6257:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3435",
										"id": 2570,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6321:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cc1431a2586c1e11fb75c87e5ee58e4204126a9fdde07075c91770f50276cbb0",
											"typeString": "literal_string \"45\""
										},
										"value": "45"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1ea7c604",
									"id": 2574,
									"mutability": "constant",
									"name": "LPCM_NO_ERRORS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "6386:44:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2572,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6386:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3436",
										"id": 2573,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6426:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c47ece0ffae697632ce145a7086cbcf260f7fa60876ff2606761ea2b7581ee76",
											"typeString": "literal_string \"46\""
										},
										"value": "46"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e7bf91b3",
									"id": 2577,
									"mutability": "constant",
									"name": "LP_INVALID_FLASHLOAN_MODE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "6449:55:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2575,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6449:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3437",
										"id": 2576,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6500:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_eb09910a03c892999c305d4a86a46fa82693119d981eef22c8d043b31f9e8a31",
											"typeString": "literal_string \"47\""
										},
										"value": "47"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "029d2344",
									"id": 2580,
									"mutability": "constant",
									"name": "MATH_MULTIPLICATION_OVERFLOW",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "6542:58:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2578,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6542:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3438",
										"id": 2579,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6596:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_6304e47846f882085b0f4b1a184252ae95ffe5e2a02daf39c014f492dcb1441c",
											"typeString": "literal_string \"48\""
										},
										"value": "48"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "0f5ee482",
									"id": 2583,
									"mutability": "constant",
									"name": "MATH_ADDITION_OVERFLOW",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "6604:52:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2581,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6604:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3439",
										"id": 2582,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6652:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_59c0d2b7af0a8e6d3d8e710a078764bd67b7223777026c424cdb4f599824bb79",
											"typeString": "literal_string \"49\""
										},
										"value": "49"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4349e3d8",
									"id": 2586,
									"mutability": "constant",
									"name": "MATH_DIVISION_BY_ZERO",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "6660:51:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2584,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6660:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3530",
										"id": 2585,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6707:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_215d56ac8bbcf4ec574772ebea743ba30ac9d1c5e1b1ff899e5de1045f5df803",
											"typeString": "literal_string \"50\""
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4fe4f1ab",
									"id": 2589,
									"mutability": "constant",
									"name": "RL_LIQUIDITY_INDEX_OVERFLOW",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "6715:57:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2587,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6715:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3531",
										"id": 2588,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6768:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_f928ede1c39c5595ff22fe845412ee05a93eeaa584f8ef0c46b5eeb14cb99ec8",
											"typeString": "literal_string \"51\""
										},
										"value": "51"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "44942004",
									"id": 2592,
									"mutability": "constant",
									"name": "RL_VARIABLE_BORROW_INDEX_OVERFLOW",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "6814:63:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2590,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6814:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3532",
										"id": 2591,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6873:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cd41b8bf8f20f7ad95d96d948a315af225b219053fc98a80aee13063b692b681",
											"typeString": "literal_string \"52\""
										},
										"value": "52"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f11c6720",
									"id": 2595,
									"mutability": "constant",
									"name": "RL_LIQUIDITY_RATE_OVERFLOW",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "6925:56:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2593,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6925:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3533",
										"id": 2594,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6977:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_bbd48b257be1b8216d144ef9be5734f8d11697959c9e0f7768bec89db74a63a3",
											"typeString": "literal_string \"53\""
										},
										"value": "53"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2ea347b0",
									"id": 2598,
									"mutability": "constant",
									"name": "RL_VARIABLE_BORROW_RATE_OVERFLOW",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "7022:62:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2596,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7022:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3534",
										"id": 2597,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7080:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_006b3e710f3089a74ecb6b0f5948e5ff07a3db6ba4da475d2be17624ba96b95b",
											"typeString": "literal_string \"54\""
										},
										"value": "54"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6d422aa1",
									"id": 2601,
									"mutability": "constant",
									"name": "RL_STABLE_BORROW_RATE_OVERFLOW",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "7131:60:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2599,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7131:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3535",
										"id": 2600,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7187:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_6590fa52fa76f967656340b874bc9ca09733c2fddea9886210ebcbbceee04b35",
											"typeString": "literal_string \"55\""
										},
										"value": "55"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1291a38b",
									"id": 2604,
									"mutability": "constant",
									"name": "CT_INVALID_MINT_AMOUNT",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "7236:52:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2602,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7236:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3536",
										"id": 2603,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7284:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_32da71dbd53bc029835bc5ecdd3e688035cc92bb61b1811d1685e67ba974e19f",
											"typeString": "literal_string \"56\""
										},
										"value": "56"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e6632748",
									"id": 2607,
									"mutability": "constant",
									"name": "LP_FAILED_REPAY_WITH_COLLATERAL",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "7317:61:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2605,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7317:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3537",
										"id": 2606,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7374:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_e921da22f871c25c63f06c1365385cbb26397f64f79055cdbab32187a9377d16",
											"typeString": "literal_string \"57\""
										},
										"value": "57"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2b9c57f6",
									"id": 2610,
									"mutability": "constant",
									"name": "CT_INVALID_BURN_AMOUNT",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "7382:52:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2608,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7382:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3538",
										"id": 2609,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7430:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_59d26ca75eb04b47ab1bca5d789d02e4d0cf9ff8cb49c9041caeeeab4eccafbf",
											"typeString": "literal_string \"58\""
										},
										"value": "58"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "55bab12c",
									"id": 2613,
									"mutability": "constant",
									"name": "LP_FAILED_COLLATERAL_SWAP",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "7463:55:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2611,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7463:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3630",
										"id": 2612,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7514:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_7446b42d7fe1689ec32fc1ca65129d9f21f1979742315d34500a6886f6986bea",
											"typeString": "literal_string \"60\""
										},
										"value": "60"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c2d628df",
									"id": 2616,
									"mutability": "constant",
									"name": "LP_INVALID_EQUAL_ASSETS_TO_SWAP",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "7522:61:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2614,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7522:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3631",
										"id": 2615,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7579:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_5ae62207e7adee0b793bf869601474e77943fa4d9e3e0420f34d788e59bc19bd",
											"typeString": "literal_string \"61\""
										},
										"value": "61"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f902735d",
									"id": 2619,
									"mutability": "constant",
									"name": "LP_REENTRANCY_NOT_ALLOWED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "7587:55:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2617,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7587:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3632",
										"id": 2618,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7638:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_d9670a00d025e59e1bd58d53874bea4ab34fea782716e2c168e89a3c8452d3bb",
											"typeString": "literal_string \"62\""
										},
										"value": "62"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "eca85d3a",
									"id": 2622,
									"mutability": "constant",
									"name": "LP_CALLER_MUST_BE_AN_ATOKEN",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "7646:57:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2620,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7646:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3633",
										"id": 2621,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7699:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_4569971f3d79dc8da7f8a6820be6cb8dc4a52bb0df6599b2aae7182111b63cd5",
											"typeString": "literal_string \"63\""
										},
										"value": "63"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d57bb964",
									"id": 2625,
									"mutability": "constant",
									"name": "LP_IS_PAUSED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "7707:42:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2623,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7707:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3634",
										"id": 2624,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7745:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_646d998f946f968f0675fd4e3cb527e1222094ea0d9cc1fd615146a8fe29802e",
											"typeString": "literal_string \"64\""
										},
										"value": "64"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "76f19030",
									"id": 2628,
									"mutability": "constant",
									"name": "LP_NO_MORE_RESERVES_ALLOWED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "7773:57:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2626,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7773:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3635",
										"id": 2627,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7826:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_606503ebd6bdca7290248af82fd5a09ca0489398da9f242244210336ae6ece9f",
											"typeString": "literal_string \"65\""
										},
										"value": "65"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d44e8e88",
									"id": 2631,
									"mutability": "constant",
									"name": "LP_INVALID_FLASH_LOAN_EXECUTOR_RETURN",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "7834:67:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2629,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7834:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3636",
										"id": 2630,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7897:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_35bb2e240092263378f77ea1e9c278099a33b604c4c4e26d13ea227e8bb74470",
											"typeString": "literal_string \"66\""
										},
										"value": "66"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "614cf6a1",
									"id": 2634,
									"mutability": "constant",
									"name": "RC_INVALID_LTV",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "7905:44:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2632,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7905:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3637",
										"id": 2633,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7945:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_eafa31dc210956fc0884ec5660eba9405197797219cbbda41b6aaf7118c651d8",
											"typeString": "literal_string \"67\""
										},
										"value": "67"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "bd013f5b",
									"id": 2637,
									"mutability": "constant",
									"name": "RC_INVALID_LIQ_THRESHOLD",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "7953:54:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2635,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7953:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3638",
										"id": 2636,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8003:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cc143a676b82d5e07b2c9d57717b403ab3c58caa273a42cdb95b15980141a86c",
											"typeString": "literal_string \"68\""
										},
										"value": "68"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5e869ff1",
									"id": 2640,
									"mutability": "constant",
									"name": "RC_INVALID_LIQ_BONUS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "8011:50:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2638,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8011:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3639",
										"id": 2639,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8057:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_db37925934a3d3177db64e11f5e0156ceb8a756fee58ded16e549afa607ddb1d",
											"typeString": "literal_string \"69\""
										},
										"value": "69"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "3f5d6ec8",
									"id": 2643,
									"mutability": "constant",
									"name": "RC_INVALID_DECIMALS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "8065:49:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2641,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8065:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3730",
										"id": 2642,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8110:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cdbc23227c72e0a3f4683bdbccfcbed38047ca1a70d48b78c210dc5393029019",
											"typeString": "literal_string \"70\""
										},
										"value": "70"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "9be4f03a",
									"id": 2646,
									"mutability": "constant",
									"name": "RC_INVALID_RESERVE_FACTOR",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "8118:55:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2644,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8118:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3731",
										"id": 2645,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8169:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2cc0d3dcb20652cd8f106aee76b6a7391771a130885634c0eb2bbe3cde796691",
											"typeString": "literal_string \"71\""
										},
										"value": "71"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "333e8ea8",
									"id": 2649,
									"mutability": "constant",
									"name": "LPAPR_INVALID_ADDRESSES_PROVIDER_ID",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "8177:65:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2647,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8177:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3732",
										"id": 2648,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8238:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_8fd0324b6a5df169e0aa0c7938ef0034d0e971a998f91b36eba211882d3617b1",
											"typeString": "literal_string \"72\""
										},
										"value": "72"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d7b079aa",
									"id": 2652,
									"mutability": "constant",
									"name": "VL_INCONSISTENT_FLASHLOAN_PARAMS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "8246:62:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2650,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8246:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3733",
										"id": 2651,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8304:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_b2219b801710730437d0358146c829b62297a059eceaa0b40b27aea2daecf595",
											"typeString": "literal_string \"73\""
										},
										"value": "73"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b72e40c7",
									"id": 2655,
									"mutability": "constant",
									"name": "LP_INCONSISTENT_PARAMS_LENGTH",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "8312:59:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2653,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8312:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3734",
										"id": 2654,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8367:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_57014f1e5f1d53e43fa40624186159531d6372d1ab8f40ec7882845ca66de31d",
											"typeString": "literal_string \"74\""
										},
										"value": "74"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "02454ad3",
									"id": 2658,
									"mutability": "constant",
									"name": "UL_INVALID_INDEX",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "8375:46:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2656,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8375:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3737",
										"id": 2657,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8417:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_7fe86492ed9171487feeb17b76d71244c5fb104d897816bb03a924e5871f3fa3",
											"typeString": "literal_string \"77\""
										},
										"value": "77"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "637a5a12",
									"id": 2661,
									"mutability": "constant",
									"name": "LP_NOT_CONTRACT",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "8425:45:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2659,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8425:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3738",
										"id": 2660,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8466:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_63867b8d5e748cf93e24f7b381d92337d037805bfc271d6d67e0e86772662677",
											"typeString": "literal_string \"78\""
										},
										"value": "78"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "cdad445a",
									"id": 2664,
									"mutability": "constant",
									"name": "SDT_STABLE_DEBT_OVERFLOW",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "8474:54:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2662,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8474:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3739",
										"id": 2663,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8524:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2bf418e3ea3cce1b306c1bbf566df40bf3703cc73b456ccd399088d784bc76ee",
											"typeString": "literal_string \"79\""
										},
										"value": "79"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1befa78d",
									"id": 2667,
									"mutability": "constant",
									"name": "SDT_BURN_EXCEEDS_BALANCE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2679,
									"src": "8532:54:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2665,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8532:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3830",
										"id": 2666,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8582:4:13",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_742ccb3c5ad7b0e2030ad7fa03711e32b9f4236452343c6e16a6cf67d464d149",
											"typeString": "literal_string \"80\""
										},
										"value": "80"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Errors.CollateralManagerErrors",
									"id": 2678,
									"members": [
										{
											"id": 2668,
											"name": "NO_ERROR",
											"nodeType": "EnumValue",
											"src": "8626:8:13"
										},
										{
											"id": 2669,
											"name": "NO_COLLATERAL_AVAILABLE",
											"nodeType": "EnumValue",
											"src": "8640:23:13"
										},
										{
											"id": 2670,
											"name": "COLLATERAL_CANNOT_BE_LIQUIDATED",
											"nodeType": "EnumValue",
											"src": "8669:31:13"
										},
										{
											"id": 2671,
											"name": "CURRRENCY_NOT_BORROWED",
											"nodeType": "EnumValue",
											"src": "8706:22:13"
										},
										{
											"id": 2672,
											"name": "HEALTH_FACTOR_ABOVE_THRESHOLD",
											"nodeType": "EnumValue",
											"src": "8734:29:13"
										},
										{
											"id": 2673,
											"name": "NOT_ENOUGH_LIQUIDITY",
											"nodeType": "EnumValue",
											"src": "8769:20:13"
										},
										{
											"id": 2674,
											"name": "NO_ACTIVE_RESERVE",
											"nodeType": "EnumValue",
											"src": "8795:17:13"
										},
										{
											"id": 2675,
											"name": "HEALTH_FACTOR_LOWER_THAN_LIQUIDATION_THRESHOLD",
											"nodeType": "EnumValue",
											"src": "8818:46:13"
										},
										{
											"id": 2676,
											"name": "INVALID_EQUAL_ASSETS_TO_SWAP",
											"nodeType": "EnumValue",
											"src": "8870:28:13"
										},
										{
											"id": 2677,
											"name": "FROZEN_RESERVE",
											"nodeType": "EnumValue",
											"src": "8904:14:13"
										}
									],
									"name": "CollateralManagerErrors",
									"nodeType": "EnumDefinition",
									"src": "8591:331:13"
								}
							],
							"scope": 2680,
							"src": "660:8264:13"
						}
					],
					"src": "37:8888:13"
				},
				"id": 13
			},
			"contracts/protocol/libraries/helpers/Helpers.sol": {
				"ast": {
					"absolutePath": "contracts/protocol/libraries/helpers/Helpers.sol",
					"exportedSymbols": {
						"Helpers": [
							2744
						]
					},
					"id": 2745,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2681,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:14"
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/IERC20.sol",
							"file": "../../../dependencies/openzeppelin/contracts/IERC20.sol",
							"id": 2683,
							"nodeType": "ImportDirective",
							"scope": 2745,
							"sourceUnit": 101,
							"src": "62:79:14",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 2682,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "70:6:14",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/protocol/libraries/types/DataTypes.sol",
							"file": "../types/DataTypes.sol",
							"id": 2685,
							"nodeType": "ImportDirective",
							"scope": 2745,
							"sourceUnit": 2783,
							"src": "142:49:14",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 2684,
										"name": "DataTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "150:9:14",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2686,
								"nodeType": "StructuredDocumentation",
								"src": "193:49:14",
								"text": " @title Helpers library\n @author Aave"
							},
							"fullyImplemented": true,
							"id": 2744,
							"linearizedBaseContracts": [
								2744
							],
							"name": "Helpers",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2714,
										"nodeType": "Block",
										"src": "609:150:14",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2703,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2689,
																	"src": "679:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2699,
																				"name": "reserve",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2691,
																				"src": "637:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ReserveData_$2771_storage_ptr",
																					"typeString": "struct DataTypes.ReserveData storage pointer"
																				}
																			},
																			"id": 2700,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stableDebtTokenAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2764,
																			"src": "637:30:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2698,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 100,
																		"src": "630:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$100_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 2701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "630:38:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$100",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 39,
																"src": "630:48:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "630:54:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2710,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2689,
																	"src": "743:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2706,
																				"name": "reserve",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2691,
																				"src": "699:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ReserveData_$2771_storage_ptr",
																					"typeString": "struct DataTypes.ReserveData storage pointer"
																				}
																			},
																			"id": 2707,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "variableDebtTokenAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2766,
																			"src": "699:32:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2705,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 100,
																		"src": "692:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$100_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 2708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "692:40:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$100",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 39,
																"src": "692:50:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "692:56:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2712,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "622:132:14",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 2697,
												"id": 2713,
												"nodeType": "Return",
												"src": "615:139:14"
											}
										]
									},
									"documentation": {
										"id": 2687,
										"nodeType": "StructuredDocumentation",
										"src": "263:207:14",
										"text": " @dev Fetches the user current stable and variable debt balances\n @param user The user address\n @param reserve The reserve data object\n @return The stable and variable debt balance*"
									},
									"id": 2715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserCurrentDebt",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2715,
												"src": "501:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "501:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2691,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2715,
												"src": "515:37:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveData_$2771_storage_ptr",
													"typeString": "struct DataTypes.ReserveData"
												},
												"typeName": {
													"contractScope": null,
													"id": 2690,
													"name": "DataTypes.ReserveData",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2771,
													"src": "515:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveData_$2771_storage_ptr",
														"typeString": "struct DataTypes.ReserveData"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "500:53:14"
									},
									"returnParameters": {
										"id": 2697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2715,
												"src": "589:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "589:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2696,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2715,
												"src": "598:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "588:18:14"
									},
									"scope": 2744,
									"src": "473:286:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2742,
										"nodeType": "Block",
										"src": "904:150:14",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2731,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2717,
																	"src": "974:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2727,
																				"name": "reserve",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2719,
																				"src": "932:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ReserveData_$2771_memory_ptr",
																					"typeString": "struct DataTypes.ReserveData memory"
																				}
																			},
																			"id": 2728,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stableDebtTokenAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2764,
																			"src": "932:30:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2726,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 100,
																		"src": "925:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$100_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 2729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "925:38:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$100",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 39,
																"src": "925:48:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "925:54:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2738,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2717,
																	"src": "1038:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2734,
																				"name": "reserve",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2719,
																				"src": "994:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ReserveData_$2771_memory_ptr",
																					"typeString": "struct DataTypes.ReserveData memory"
																				}
																			},
																			"id": 2735,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "variableDebtTokenAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2766,
																			"src": "994:32:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2733,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 100,
																		"src": "987:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$100_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 2736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "987:40:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$100",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 39,
																"src": "987:50:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "987:56:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2740,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "917:132:14",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 2725,
												"id": 2741,
												"nodeType": "Return",
												"src": "910:139:14"
											}
										]
									},
									"documentation": null,
									"id": 2743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserCurrentDebtMemory",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2743,
												"src": "797:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2719,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2743,
												"src": "811:36:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveData_$2771_memory_ptr",
													"typeString": "struct DataTypes.ReserveData"
												},
												"typeName": {
													"contractScope": null,
													"id": 2718,
													"name": "DataTypes.ReserveData",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2771,
													"src": "811:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveData_$2771_storage_ptr",
														"typeString": "struct DataTypes.ReserveData"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "796:52:14"
									},
									"returnParameters": {
										"id": 2725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2722,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2743,
												"src": "884:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2724,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2743,
												"src": "893:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "883:18:14"
									},
									"scope": 2744,
									"src": "763:291:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2745,
							"src": "243:813:14"
						}
					],
					"src": "37:1020:14"
				},
				"id": 14
			},
			"contracts/protocol/libraries/types/DataTypes.sol": {
				"ast": {
					"absolutePath": "contracts/protocol/libraries/types/DataTypes.sol",
					"exportedSymbols": {
						"DataTypes": [
							2782
						]
					},
					"id": 2783,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2746,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2782,
							"linearizedBaseContracts": [
								2782
							],
							"name": "DataTypes",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DataTypes.ReserveData",
									"id": 2771,
									"members": [
										{
											"constant": false,
											"id": 2748,
											"mutability": "mutable",
											"name": "configuration",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2771,
											"src": "251:37:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
												"typeString": "struct DataTypes.ReserveConfigurationMap"
											},
											"typeName": {
												"contractScope": null,
												"id": 2747,
												"name": "ReserveConfigurationMap",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 2774,
												"src": "251:23:15",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2774_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2750,
											"mutability": "mutable",
											"name": "liquidityIndex",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2771,
											"src": "338:22:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2749,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "338:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2752,
											"mutability": "mutable",
											"name": "variableBorrowIndex",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2771,
											"src": "412:27:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2751,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "412:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2754,
											"mutability": "mutable",
											"name": "currentLiquidityRate",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2771,
											"src": "493:28:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2753,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "493:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2756,
											"mutability": "mutable",
											"name": "currentVariableBorrowRate",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2771,
											"src": "584:33:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2755,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "584:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2758,
											"mutability": "mutable",
											"name": "currentStableBorrowRate",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2771,
											"src": "678:31:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2757,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "678:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2760,
											"mutability": "mutable",
											"name": "lastUpdateTimestamp",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2771,
											"src": "715:26:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint40",
												"typeString": "uint40"
											},
											"typeName": {
												"id": 2759,
												"name": "uint40",
												"nodeType": "ElementaryTypeName",
												"src": "715:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2762,
											"mutability": "mutable",
											"name": "aTokenAddress",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2771,
											"src": "770:21:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2761,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "770:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2764,
											"mutability": "mutable",
											"name": "stableDebtTokenAddress",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2771,
											"src": "797:30:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2763,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "797:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2766,
											"mutability": "mutable",
											"name": "variableDebtTokenAddress",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2771,
											"src": "833:32:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2765,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "833:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2768,
											"mutability": "mutable",
											"name": "interestRateStrategyAddress",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2771,
											"src": "915:35:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2767,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "915:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2770,
											"mutability": "mutable",
											"name": "id",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2771,
											"src": "1044:8:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2769,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1044:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "ReserveData",
									"nodeType": "StructDefinition",
									"scope": 2782,
									"src": "187:870:15",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ReserveConfigurationMap",
									"id": 2774,
									"members": [
										{
											"constant": false,
											"id": 2773,
											"mutability": "mutable",
											"name": "data",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2774,
											"src": "1405:12:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2772,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1405:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "ReserveConfigurationMap",
									"nodeType": "StructDefinition",
									"scope": 2782,
									"src": "1061:361:15",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.UserConfigurationMap",
									"id": 2777,
									"members": [
										{
											"constant": false,
											"id": 2776,
											"mutability": "mutable",
											"name": "data",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2777,
											"src": "1460:12:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2775,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1460:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UserConfigurationMap",
									"nodeType": "StructDefinition",
									"scope": 2782,
									"src": "1426:51:15",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.InterestRateMode",
									"id": 2781,
									"members": [
										{
											"id": 2778,
											"name": "NONE",
											"nodeType": "EnumValue",
											"src": "1504:4:15"
										},
										{
											"id": 2779,
											"name": "STABLE",
											"nodeType": "EnumValue",
											"src": "1510:6:15"
										},
										{
											"id": 2780,
											"name": "VARIABLE",
											"nodeType": "EnumValue",
											"src": "1518:8:15"
										}
									],
									"name": "InterestRateMode",
									"nodeType": "EnumDefinition",
									"src": "1481:46:15"
								}
							],
							"scope": 2783,
							"src": "62:1467:15"
						}
					],
					"src": "37:1493:15"
				},
				"id": 15
			}
		}
	}
}