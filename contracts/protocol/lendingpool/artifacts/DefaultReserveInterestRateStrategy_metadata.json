{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract ILendingPoolAddressesProvider",
						"name": "provider",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "optimalUtilizationRate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "baseVariableBorrowRate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "variableRateSlope1",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "variableRateSlope2",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "stableRateSlope1",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "stableRateSlope2",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "EXCESS_UTILIZATION_RATE",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "OPTIMAL_UTILIZATION_RATE",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "addressesProvider",
				"outputs": [
					{
						"internalType": "contract ILendingPoolAddressesProvider",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "baseVariableBorrowRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "reserve",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "availableLiquidity",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalStableDebt",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalVariableDebt",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "averageStableBorrowRate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "reserveFactor",
						"type": "uint256"
					}
				],
				"name": "calculateInterestRates",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getMaxVariableBorrowRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "stableRateSlope1",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "stableRateSlope2",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "variableRateSlope1",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "variableRateSlope2",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Aave*",
			"details": "The model of interest rate is based on 2 slopes, one before the `OPTIMAL_UTILIZATION_RATE` point of utilization and another from that one to 100% - An instance of this same contract, can't be used across different Aave markets, due to the caching   of the LendingPoolAddressesProvider",
			"kind": "dev",
			"methods": {
				"calculateInterestRates(address,uint256,uint256,uint256,uint256,uint256)": {
					"details": "Calculates the interest rates depending on the reserve's state and configurations",
					"params": {
						"availableLiquidity": "The liquidity available in the reserve",
						"averageStableBorrowRate": "The weighted average of all the stable rate loans",
						"reserve": "The address of the reserve",
						"reserveFactor": "The reserve portion of the interest that goes to the treasury of the market",
						"totalStableDebt": "The total borrowed from the reserve a stable rate",
						"totalVariableDebt": "The total borrowed from the reserve at a variable rate"
					},
					"returns": {
						"_0": "The liquidity rate, the stable borrow rate and the variable borrow rate*"
					}
				}
			},
			"stateVariables": {
				"EXCESS_UTILIZATION_RATE": {
					"details": "This constant represents the excess utilization rate above the optimal. It's always equal to 1-optimal utilization rate. Added as a constant here for gas optimizations. Expressed in ray*"
				},
				"OPTIMAL_UTILIZATION_RATE": {
					"details": "this constant represents the utilization rate at which the pool aims to obtain most competitive borrow rates. Expressed in ray*"
				}
			},
			"title": "DefaultReserveInterestRateStrategy contract",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "Implements the calculation of the interest rates depending on the reserve state",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/protocol/lendingpool/DefaultReserveInterestRateStrategy.sol": "DefaultReserveInterestRateStrategy"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/dependencies/openzeppelin/contracts/SafeMath.sol": {
			"keccak256": "0xfca35d11bafb85cf4f2203b41f1a98238dca59b6a9faa28b86ea3f9f63da8ec5",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://7019345b024afa93000c6b5a2b095be59c3c5352eb658619c941d23d0af5bc65",
				"dweb:/ipfs/QmZLxJKSbM66Wd1Qd43jSdiXdg7JP6DQ9J6LuANUZummM4"
			]
		},
		"contracts/interfaces/ILendingPoolAddressesProvider.sol": {
			"keccak256": "0xcb0e2c4c19c0bde86907b6ab45b6a1db4932d3642fc51410d56c9411a65b9f1d",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://38d01c9e664c64d46a15bbbda2933b5fb877d33f6746d2db32563962beea9119",
				"dweb:/ipfs/QmajEmcQZz3E6GzmLpeGvnEswuwCjVYy8svqdx8bxi4PuG"
			]
		},
		"contracts/interfaces/ILendingRateOracle.sol": {
			"keccak256": "0x4f7adee1cb217af64dac837ed3171abf3c4b7917aed7993b2d6850b9284675dc",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://ca2b82d6dc2d6e19bc0bf4184841302d707856d9080759c6033a40f619b0e935",
				"dweb:/ipfs/QmVLMeCWQjjeoym4wL5Hvw63th9BmU9JYPYcCM2G3XQ8V6"
			]
		},
		"contracts/interfaces/IReserveInterestRateStrategy.sol": {
			"keccak256": "0x3a9950a7a40e4c7e25d4e99dd9da6fbe578b8d7c177f25046ce496f1d4cb96c4",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://695a267915f439626fbc6e0c21421611c3fc0a845a104ac63e95ecfde7545868",
				"dweb:/ipfs/QmNrWXZSMLmtkxeMEMpeTVNyP1hDXJN1vJHArKvNetghSf"
			]
		},
		"contracts/protocol/lendingpool/DefaultReserveInterestRateStrategy.sol": {
			"keccak256": "0x52e45a1e4d0969524a362cabb4370176303b62d511ba2321e95d37c49287fdab",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://a6bf84defbd7f7d84968feb051f76b1ac01ee76d523ad50a1dfbeed4e598c37f",
				"dweb:/ipfs/QmU7c3m4w1iFVRGA11Fy3mEbsdtwfxDRxh7ZuqUyvVTa86"
			]
		},
		"contracts/protocol/libraries/helpers/Errors.sol": {
			"keccak256": "0xfb70949637d81dc9a3883601bb15226981f4c4847f65035e64bf5d120994efeb",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://43fb108a5038fbeb33294d3f4a9e7e4e021bef16f0e7a8a2f3ad9142808c7a8f",
				"dweb:/ipfs/QmUvAnwcuwmprQu4g3r1k3gE2EztuVPGRKJBMVX3KRC8W6"
			]
		},
		"contracts/protocol/libraries/math/PercentageMath.sol": {
			"keccak256": "0x3cc3b08aeee5b82a5f7b3958bae578e69f1b03a32fb9760ec21bdd1a9b109337",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://90b676cb885d38e6d47f11846c0c56166d28a95b4f90566b6230d2038f9f7c20",
				"dweb:/ipfs/QmPayXnuBpmkx5Y1ToShC9f8gjpFwgf2GWv9ngnvPPaBU7"
			]
		},
		"contracts/protocol/libraries/math/WadRayMath.sol": {
			"keccak256": "0xf66b7e208da18d12ca2b6a5c9d58f8091819da1524c028f30a36304993039c72",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://75519c3d78ad40da70a1d24cf10557068d6726c894bbc6674531c73302ecc610",
				"dweb:/ipfs/Qmea7Q6ysFm9WH69EZLak7wCeT7Fcw4H9qMZGAUA52QoRf"
			]
		}
	},
	"version": 1
}