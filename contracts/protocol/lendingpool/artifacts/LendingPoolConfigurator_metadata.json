{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "asset",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "proxy",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "implementation",
						"type": "address"
					}
				],
				"name": "ATokenUpgraded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "asset",
						"type": "address"
					}
				],
				"name": "BorrowingDisabledOnReserve",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "asset",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "stableRateEnabled",
						"type": "bool"
					}
				],
				"name": "BorrowingEnabledOnReserve",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "asset",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "ltv",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "liquidationThreshold",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "liquidationBonus",
						"type": "uint256"
					}
				],
				"name": "CollateralConfigurationChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "asset",
						"type": "address"
					}
				],
				"name": "ReserveActivated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "asset",
						"type": "address"
					}
				],
				"name": "ReserveDeactivated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "asset",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "decimals",
						"type": "uint256"
					}
				],
				"name": "ReserveDecimalsChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "asset",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "factor",
						"type": "uint256"
					}
				],
				"name": "ReserveFactorChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "asset",
						"type": "address"
					}
				],
				"name": "ReserveFrozen",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "asset",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "aToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "stableDebtToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "variableDebtToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "interestRateStrategyAddress",
						"type": "address"
					}
				],
				"name": "ReserveInitialized",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "asset",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "strategy",
						"type": "address"
					}
				],
				"name": "ReserveInterestRateStrategyChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "asset",
						"type": "address"
					}
				],
				"name": "ReserveUnfrozen",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "asset",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "proxy",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "implementation",
						"type": "address"
					}
				],
				"name": "StableDebtTokenUpgraded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "asset",
						"type": "address"
					}
				],
				"name": "StableRateDisabledOnReserve",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "asset",
						"type": "address"
					}
				],
				"name": "StableRateEnabledOnReserve",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "asset",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "proxy",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "implementation",
						"type": "address"
					}
				],
				"name": "VariableDebtTokenUpgraded",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "asset",
						"type": "address"
					}
				],
				"name": "activateReserve",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "asset",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "ltv",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "liquidationThreshold",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "liquidationBonus",
						"type": "uint256"
					}
				],
				"name": "configureReserveAsCollateral",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "asset",
						"type": "address"
					}
				],
				"name": "deactivateReserve",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "asset",
						"type": "address"
					}
				],
				"name": "disableBorrowingOnReserve",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "asset",
						"type": "address"
					}
				],
				"name": "disableReserveStableRate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "asset",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "stableBorrowRateEnabled",
						"type": "bool"
					}
				],
				"name": "enableBorrowingOnReserve",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "asset",
						"type": "address"
					}
				],
				"name": "enableReserveStableRate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "asset",
						"type": "address"
					}
				],
				"name": "freezeReserve",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "aTokenImpl",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "stableDebtTokenImpl",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "variableDebtTokenImpl",
						"type": "address"
					},
					{
						"internalType": "uint8",
						"name": "underlyingAssetDecimals",
						"type": "uint8"
					},
					{
						"internalType": "address",
						"name": "interestRateStrategyAddress",
						"type": "address"
					}
				],
				"name": "initReserve",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract ILendingPoolAddressesProvider",
						"name": "provider",
						"type": "address"
					}
				],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "val",
						"type": "bool"
					}
				],
				"name": "setPoolPause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "asset",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "reserveFactor",
						"type": "uint256"
					}
				],
				"name": "setReserveFactor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "asset",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "rateStrategyAddress",
						"type": "address"
					}
				],
				"name": "setReserveInterestRateStrategyAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "asset",
						"type": "address"
					}
				],
				"name": "unfreezeReserve",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "asset",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "implementation",
						"type": "address"
					}
				],
				"name": "updateAToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "asset",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "implementation",
						"type": "address"
					}
				],
				"name": "updateStableDebtToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "asset",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "implementation",
						"type": "address"
					}
				],
				"name": "updateVariableDebtToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Aave",
			"details": "Implements the configuration methods for the Aave protocol*",
			"events": {
				"ATokenUpgraded(address,address,address)": {
					"details": "Emitted when an aToken implementation is upgraded",
					"params": {
						"asset": "The address of the underlying asset of the reserve",
						"implementation": "The new aToken implementation*",
						"proxy": "The aToken proxy address"
					}
				},
				"BorrowingDisabledOnReserve(address)": {
					"details": "Emitted when borrowing is disabled on a reserve",
					"params": {
						"asset": "The address of the underlying asset of the reserve*"
					}
				},
				"BorrowingEnabledOnReserve(address,bool)": {
					"details": "Emitted when borrowing is enabled on a reserve",
					"params": {
						"asset": "The address of the underlying asset of the reserve",
						"stableRateEnabled": "True if stable rate borrowing is enabled, false otherwise*"
					}
				},
				"CollateralConfigurationChanged(address,uint256,uint256,uint256)": {
					"details": "Emitted when the collateralization risk parameters for the specified asset are updated.",
					"params": {
						"asset": "The address of the underlying asset of the reserve",
						"liquidationBonus": "The bonus liquidators receive to liquidate this asset*",
						"liquidationThreshold": "The threshold at which loans using this asset as collateral will be considered undercollateralized",
						"ltv": "The loan to value of the asset when used as collateral"
					}
				},
				"ReserveActivated(address)": {
					"details": "Emitted when a reserve is activated",
					"params": {
						"asset": "The address of the underlying asset of the reserve*"
					}
				},
				"ReserveDeactivated(address)": {
					"details": "Emitted when a reserve is deactivated",
					"params": {
						"asset": "The address of the underlying asset of the reserve*"
					}
				},
				"ReserveDecimalsChanged(address,uint256)": {
					"details": "Emitted when the reserve decimals are updated",
					"params": {
						"asset": "The address of the underlying asset of the reserve",
						"decimals": "The new decimals*"
					}
				},
				"ReserveFactorChanged(address,uint256)": {
					"details": "Emitted when a reserve factor is updated",
					"params": {
						"asset": "The address of the underlying asset of the reserve",
						"factor": "The new reserve factor*"
					}
				},
				"ReserveFrozen(address)": {
					"details": "Emitted when a reserve is frozen",
					"params": {
						"asset": "The address of the underlying asset of the reserve*"
					}
				},
				"ReserveInitialized(address,address,address,address,address)": {
					"details": "Emitted when a reserve is initialized.",
					"params": {
						"aToken": "The address of the associated aToken contract",
						"asset": "The address of the underlying asset of the reserve",
						"interestRateStrategyAddress": "The address of the interest rate strategy for the reserve*",
						"stableDebtToken": "The address of the associated stable rate debt token",
						"variableDebtToken": "The address of the associated variable rate debt token"
					}
				},
				"ReserveInterestRateStrategyChanged(address,address)": {
					"details": "Emitted when a reserve interest strategy contract is updated",
					"params": {
						"asset": "The address of the underlying asset of the reserve",
						"strategy": "The new address of the interest strategy contract*"
					}
				},
				"ReserveUnfrozen(address)": {
					"details": "Emitted when a reserve is unfrozen",
					"params": {
						"asset": "The address of the underlying asset of the reserve*"
					}
				},
				"StableDebtTokenUpgraded(address,address,address)": {
					"details": "Emitted when the implementation of a stable debt token is upgraded",
					"params": {
						"asset": "The address of the underlying asset of the reserve",
						"implementation": "The new aToken implementation*",
						"proxy": "The stable debt token proxy address"
					}
				},
				"StableRateDisabledOnReserve(address)": {
					"details": "Emitted when stable rate borrowing is disabled on a reserve",
					"params": {
						"asset": "The address of the underlying asset of the reserve*"
					}
				},
				"StableRateEnabledOnReserve(address)": {
					"details": "Emitted when stable rate borrowing is enabled on a reserve",
					"params": {
						"asset": "The address of the underlying asset of the reserve*"
					}
				},
				"VariableDebtTokenUpgraded(address,address,address)": {
					"details": "Emitted when the implementation of a variable debt token is upgraded",
					"params": {
						"asset": "The address of the underlying asset of the reserve",
						"implementation": "The new aToken implementation*",
						"proxy": "The variable debt token proxy address"
					}
				}
			},
			"kind": "dev",
			"methods": {
				"activateReserve(address)": {
					"details": "Activates a reserve",
					"params": {
						"asset": "The address of the underlying asset of the reserve*"
					}
				},
				"configureReserveAsCollateral(address,uint256,uint256,uint256)": {
					"details": "Configures the reserve collateralization parameters all the values are expressed in percentages with two decimals of precision. A valid value is 10000, which means 100.00%",
					"params": {
						"asset": "The address of the underlying asset of the reserve",
						"liquidationBonus": "The bonus liquidators receive to liquidate this asset. The values is always above 100%. A value of 105% means the liquidator will receive a 5% bonus*",
						"liquidationThreshold": "The threshold at which loans using this asset as collateral will be considered undercollateralized",
						"ltv": "The loan to value of the asset when used as collateral"
					}
				},
				"deactivateReserve(address)": {
					"details": "Deactivates a reserve",
					"params": {
						"asset": "The address of the underlying asset of the reserve*"
					}
				},
				"disableBorrowingOnReserve(address)": {
					"details": "Disables borrowing on a reserve",
					"params": {
						"asset": "The address of the underlying asset of the reserve*"
					}
				},
				"disableReserveStableRate(address)": {
					"details": "Disable stable rate borrowing on a reserve",
					"params": {
						"asset": "The address of the underlying asset of the reserve*"
					}
				},
				"enableBorrowingOnReserve(address,bool)": {
					"details": "Enables borrowing on a reserve",
					"params": {
						"asset": "The address of the underlying asset of the reserve",
						"stableBorrowRateEnabled": "True if stable borrow rate needs to be enabled by default on this reserve*"
					}
				},
				"enableReserveStableRate(address)": {
					"details": "Enable stable rate borrowing on a reserve",
					"params": {
						"asset": "The address of the underlying asset of the reserve*"
					}
				},
				"freezeReserve(address)": {
					"details": "Freezes a reserve. A frozen reserve doesn't allow any new deposit, borrow or rate swap  but allows repayments, liquidations, rate rebalances and withdrawals",
					"params": {
						"asset": "The address of the underlying asset of the reserve*"
					}
				},
				"initReserve(address,address,address,uint8,address)": {
					"details": "Initializes a reserve",
					"params": {
						"aTokenImpl": "The address of the aToken contract implementation",
						"interestRateStrategyAddress": "The address of the interest rate strategy contract for this reserve*",
						"stableDebtTokenImpl": "The address of the stable debt token contract",
						"underlyingAssetDecimals": "The decimals of the reserve underlying asset",
						"variableDebtTokenImpl": "The address of the variable debt token contract"
					}
				},
				"setPoolPause(bool)": {
					"details": "pauses or unpauses all the actions of the protocol, including aToken transfers",
					"params": {
						"val": "true if protocol needs to be paused, false otherwise*"
					}
				},
				"setReserveFactor(address,uint256)": {
					"details": "Updates the reserve factor of a reserve",
					"params": {
						"asset": "The address of the underlying asset of the reserve",
						"reserveFactor": "The new reserve factor of the reserve*"
					}
				},
				"setReserveInterestRateStrategyAddress(address,address)": {
					"details": "Sets the interest rate strategy of a reserve",
					"params": {
						"asset": "The address of the underlying asset of the reserve",
						"rateStrategyAddress": "The new address of the interest strategy contract*"
					}
				},
				"unfreezeReserve(address)": {
					"details": "Unfreezes a reserve",
					"params": {
						"asset": "The address of the underlying asset of the reserve*"
					}
				},
				"updateAToken(address,address)": {
					"details": "Updates the aToken implementation for the reserve",
					"params": {
						"asset": "The address of the underlying asset of the reserve to be updated",
						"implementation": "The address of the new aToken implementation*"
					}
				},
				"updateStableDebtToken(address,address)": {
					"details": "Updates the stable debt token implementation for the reserve",
					"params": {
						"asset": "The address of the underlying asset of the reserve to be updated",
						"implementation": "The address of the new aToken implementation*"
					}
				},
				"updateVariableDebtToken(address,address)": {
					"details": "Updates the variable debt token implementation for the asset",
					"params": {
						"asset": "The address of the underlying asset of the reserve to be updated",
						"implementation": "The address of the new aToken implementation*"
					}
				}
			},
			"title": "LendingPoolConfigurator contract",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/protocol/lendingpool/LendingPoolConfigurator.sol": "LendingPoolConfigurator"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/dependencies/openzeppelin/contracts/Address.sol": {
			"keccak256": "0xb7f2cd193efe93976d7b473fc4fa27dda83bd4db5b81889cbcd4701f3b7023ae",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://2275632637acd2f30d576612dcddc1c6ba78d81af4d044fafe870e6a809a8b6e",
				"dweb:/ipfs/QmW3uMzrLbjzP45zVpP8e9V6o8WFSceHiHq8WDMJ8YjCeL"
			]
		},
		"contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
			"keccak256": "0x6406b04abfeda2c8c80ea3faf797ce4501e66db41fb6ff4e299ebe0402879f44",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://33b0db81db37bd6fe20aa0b23581c6b0edef2f3c49d0bd88b4fe46c1164adb00",
				"dweb:/ipfs/QmYn1zYwt3ahpkLYwHh6h5b1UJrzP2xy5G3at9oEVNw2c1"
			]
		},
		"contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol": {
			"keccak256": "0x4dade975e9d49dcd7785b30f9e56f80ba9322f3b037a6e39912a32e49a6a817c",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://84b4c20094e95699e746ecf1fad83748139fadf844a548a09e4949840fb6232f",
				"dweb:/ipfs/Qme51kM9jqbjEyd7wQ8DNRNRAt5hY7FZHsaRxTP3xvXi5D"
			]
		},
		"contracts/dependencies/openzeppelin/contracts/SafeMath.sol": {
			"keccak256": "0xfca35d11bafb85cf4f2203b41f1a98238dca59b6a9faa28b86ea3f9f63da8ec5",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://7019345b024afa93000c6b5a2b095be59c3c5352eb658619c941d23d0af5bc65",
				"dweb:/ipfs/QmZLxJKSbM66Wd1Qd43jSdiXdg7JP6DQ9J6LuANUZummM4"
			]
		},
		"contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol": {
			"keccak256": "0x873eec666154f26e157e33a2732e4288aa2e62415b0a8c75f283878a6b00c21b",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://602c28fbb9704bfc08e32625f8181356d009ac32ca7daa3b120473a0ea3a30b8",
				"dweb:/ipfs/Qma8Mx2ggvZsCQTj664Chbv2PeeCMJSiNvrUTJ8bc6pq4Q"
			]
		},
		"contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol": {
			"keccak256": "0x9a0b77e7d43d1515e36f4acf849481b7aba27e526e631c9dda707a7c89a4ccb7",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://0ec09f5f893734be3fa59f997b976d09efcc8354b05d0e53170cd33f85e52aae",
				"dweb:/ipfs/QmQDxnkhnTCGno1BtQiHDvFAjPyvVd4EMyQbCtgEuiQrve"
			]
		},
		"contracts/dependencies/openzeppelin/upgradeability/Proxy.sol": {
			"keccak256": "0x2b8af3eb1572f574aa114cf11395b6077f5be77f30599b13b882db5298cd32d4",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://d0374f1ecfbb3648078e52efddf6e493c8849a5d8862c3fcd259c620ab2b5285",
				"dweb:/ipfs/QmWNBxH7w8nJGTWJLDziNLETsBvohNj94eMg9cxAtDRJ5L"
			]
		},
		"contracts/interfaces/ILendingPool.sol": {
			"keccak256": "0x5fa85a3137312e0d37602723af7408ed97636028699bdf7a7c7cc2dc34cdbafc",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://2f084d52067cbb14f10a00813b17c386681e17e295f878d3d8992cef63e67ac1",
				"dweb:/ipfs/QmWGjEYp4ZHmMxW7zkV8ctsmpc5kAYDw3yqaf1LZGsFFuJ"
			]
		},
		"contracts/interfaces/ILendingPoolAddressesProvider.sol": {
			"keccak256": "0xcb0e2c4c19c0bde86907b6ab45b6a1db4932d3642fc51410d56c9411a65b9f1d",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://38d01c9e664c64d46a15bbbda2933b5fb877d33f6746d2db32563962beea9119",
				"dweb:/ipfs/QmajEmcQZz3E6GzmLpeGvnEswuwCjVYy8svqdx8bxi4PuG"
			]
		},
		"contracts/interfaces/ITokenConfiguration.sol": {
			"keccak256": "0x4bf4297a79fd3df0188936e75dfb1bb5781f8362e49fbf8924d48b106c5ce4bb",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://79246fdb266dc097179d5c1b8b101047d163cbc157bacdb7bd57975e8fff93b6",
				"dweb:/ipfs/QmeTMM1mA1vjeDeoF9oWiKZgbqXrnCy9C4yitDqGJbeyMP"
			]
		},
		"contracts/protocol/lendingpool/LendingPoolConfigurator.sol": {
			"keccak256": "0xca3770aa457bd5f43cffbc80c136a8870a7e6b6f71ecdd7463bbda89609fc247",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://3d151ba1fa81ffada212929d46a430c166863a7992d062f4cb1a9dc813eefa39",
				"dweb:/ipfs/QmbbrkDjr4s74TWkszECiTFVR6Ge4xb7mR1SwyFZiZRdZJ"
			]
		},
		"contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol": {
			"keccak256": "0xe1904d68e61d3e57217f3369dccc64886e8bc40ecc5124a99a439eb080118a28",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://7aa664d7a4744eb8266b13386bcde7f7886ade50ef632ec3b8eb96a450ef6a63",
				"dweb:/ipfs/QmPW6YiM9ZiMbXFHNz6HCt9ZhLeiWYtFqGoMgYcQTPahZx"
			]
		},
		"contracts/protocol/libraries/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol": {
			"keccak256": "0xbace2c18e58fdb57d0069ea63f3a4a64bffa098451313fd4a722f623aed6f9b3",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://5e8c1fdd2dc536497be88943682add25516dae7f7ca8510af8450a2a6868c97c",
				"dweb:/ipfs/QmSZH9oepZiVn4gp6yrByPMe4msLAEcME5ULm7CrNGjXbF"
			]
		},
		"contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol": {
			"keccak256": "0x29712c302422dcd03a036df5fa6b34897982c35e943d59e9db0704142da0f892",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://d0bc9bed6b54b7b97c3a01123cee12de8f5c744575e1c231735ec7666db8ede7",
				"dweb:/ipfs/QmQUyz92ft5hM4CcwEduTgcMUgfmdimhUHaaLMzm6Gh8nh"
			]
		},
		"contracts/protocol/libraries/configuration/ReserveConfiguration.sol": {
			"keccak256": "0x7e3691bd4353fea9391f96894241d929c6528fad315d21281725a1fe61600485",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://8b1beb77c3485458045a4079642cddd3bfe2fd27c87ac95fccde67d18ec21597",
				"dweb:/ipfs/QmV8HQGK6Gb9Va32tzGJ9a52jw2h1vbRJ1osx7bLW49LDi"
			]
		},
		"contracts/protocol/libraries/helpers/Errors.sol": {
			"keccak256": "0xfb70949637d81dc9a3883601bb15226981f4c4847f65035e64bf5d120994efeb",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://43fb108a5038fbeb33294d3f4a9e7e4e021bef16f0e7a8a2f3ad9142808c7a8f",
				"dweb:/ipfs/QmUvAnwcuwmprQu4g3r1k3gE2EztuVPGRKJBMVX3KRC8W6"
			]
		},
		"contracts/protocol/libraries/math/PercentageMath.sol": {
			"keccak256": "0x3cc3b08aeee5b82a5f7b3958bae578e69f1b03a32fb9760ec21bdd1a9b109337",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://90b676cb885d38e6d47f11846c0c56166d28a95b4f90566b6230d2038f9f7c20",
				"dweb:/ipfs/QmPayXnuBpmkx5Y1ToShC9f8gjpFwgf2GWv9ngnvPPaBU7"
			]
		},
		"contracts/protocol/libraries/types/DataTypes.sol": {
			"keccak256": "0xb1d3ae94d3e4b3bf23b3394d820a3a2b5ba56fd5389f561f3fdd73ed1c60c391",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://47c11d578cc1e0df27e4e85cfe5831a48b78d6e939d34e17db4bc65a54c899fe",
				"dweb:/ipfs/QmYdYLkYFJe3psmQUH1S1uNhGE9xyxeDunuEW9gBPg9vDB"
			]
		}
	},
	"version": 1
}