{
	"id": "c768fa35332b54429fd3c13c67e900b2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/misc/WalletBalanceProvider.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\npragma experimental ABIEncoderV2;\n\nimport {Address} from '../dependencies/openzeppelin/contracts/Address.sol';\nimport {IERC20} from '../dependencies/openzeppelin/contracts/IERC20.sol';\n\nimport {ILendingPoolAddressesProvider} from '../interfaces/ILendingPoolAddressesProvider.sol';\nimport {ILendingPool} from '../interfaces/ILendingPool.sol';\nimport {SafeERC20} from '../dependencies/openzeppelin/contracts/SafeERC20.sol';\nimport {ReserveConfiguration} from '../protocol/libraries/configuration/ReserveConfiguration.sol';\nimport {DataTypes} from '../protocol/libraries/types/DataTypes.sol';\n\n/**\n * @title WalletBalanceProvider contract\n * @author Aave, influenced by https://github.com/wbobeirne/eth-balance-checker/blob/master/contracts/BalanceChecker.sol\n * @notice Implements a logic of getting multiple tokens balance for one user address\n * @dev NOTE: THIS CONTRACT IS NOT USED WITHIN THE AAVE PROTOCOL. It's an accessory contract used to reduce the number of calls\n * towards the blockchain from the Aave backend.\n **/\ncontract WalletBalanceProvider {\n  using Address for address payable;\n  using Address for address;\n  using SafeERC20 for IERC20;\n  using ReserveConfiguration for DataTypes.ReserveConfigurationMap;\n\n  address constant MOCK_ETH_ADDRESS = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\n\n  /**\n    @dev Fallback function, don't accept any ETH\n    **/\n  receive() external payable {\n    //only contracts can send ETH to the core\n    require(msg.sender.isContract(), '22');\n  }\n\n  /**\n    @dev Check the token balance of a wallet in a token contract\n\n    Returns the balance of the token for user. Avoids possible errors:\n      - return 0 on non-contract address\n    **/\n  function balanceOf(address user, address token) public view returns (uint256) {\n    if (token == MOCK_ETH_ADDRESS) {\n      return user.balance; // ETH balance\n      // check if token is actually a contract\n    } else if (token.isContract()) {\n      return IERC20(token).balanceOf(user);\n    }\n    revert('INVALID_TOKEN');\n  }\n\n  /**\n   * @notice Fetches, for a list of _users and _tokens (ETH included with mock address), the balances\n   * @param users The list of users\n   * @param tokens The list of tokens\n   * @return And array with the concatenation of, for each user, his/her balances\n   **/\n  function batchBalanceOf(address[] calldata users, address[] calldata tokens)\n    external\n    view\n    returns (uint256[] memory)\n  {\n    uint256[] memory balances = new uint256[](users.length * tokens.length);\n\n    for (uint256 i = 0; i < users.length; i++) {\n      for (uint256 j = 0; j < tokens.length; j++) {\n        balances[i * tokens.length + j] = balanceOf(users[i], tokens[j]);\n      }\n    }\n\n    return balances;\n  }\n\n  /**\n    @dev provides balances of user wallet for all reserves available on the pool\n    */\n  function getUserWalletBalances(address provider, address user)\n    external\n    view\n    returns (address[] memory, uint256[] memory)\n  {\n    ILendingPool pool = ILendingPool(ILendingPoolAddressesProvider(provider).getLendingPool());\n\n    address[] memory reserves = pool.getReservesList();\n    address[] memory reservesWithEth = new address[](reserves.length + 1);\n    for (uint256 i = 0; i < reserves.length; i++) {\n      reservesWithEth[i] = reserves[i];\n    }\n    reservesWithEth[reserves.length] = MOCK_ETH_ADDRESS;\n\n    uint256[] memory balances = new uint256[](reservesWithEth.length);\n\n    for (uint256 j = 0; j < reserves.length; j++) {\n      DataTypes.ReserveConfigurationMap memory configuration =\n        pool.getConfiguration(reservesWithEth[j]);\n\n      (bool isActive, , , ) = configuration.getFlagsMemory();\n\n      if (!isActive) {\n        balances[j] = 0;\n        continue;\n      }\n      balances[j] = balanceOf(user, reservesWithEth[j]);\n    }\n    balances[reserves.length] = balanceOf(user, MOCK_ETH_ADDRESS);\n\n    return (reservesWithEth, balances);\n  }\n}\n"
			},
			"contracts/protocol/libraries/types/DataTypes.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\nlibrary DataTypes {\n  // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\n  struct ReserveData {\n    //stores the reserve configuration\n    ReserveConfigurationMap configuration;\n    //the liquidity index. Expressed in ray\n    uint128 liquidityIndex;\n    //variable borrow index. Expressed in ray\n    uint128 variableBorrowIndex;\n    //the current supply rate. Expressed in ray\n    uint128 currentLiquidityRate;\n    //the current variable borrow rate. Expressed in ray\n    uint128 currentVariableBorrowRate;\n    //the current stable borrow rate. Expressed in ray\n    uint128 currentStableBorrowRate;\n    uint40 lastUpdateTimestamp;\n    //tokens addresses\n    address aTokenAddress;\n    address stableDebtTokenAddress;\n    address variableDebtTokenAddress;\n    //address of the interest rate strategy\n    address interestRateStrategyAddress;\n    //the id of the reserve. Represents the position in the list of the active reserves\n    uint8 id;\n  }\n\n  struct ReserveConfigurationMap {\n    //bit 0-15: LTV\n    //bit 16-31: Liq. threshold\n    //bit 32-47: Liq. bonus\n    //bit 48-55: Decimals\n    //bit 56: Reserve is active\n    //bit 57: reserve is frozen\n    //bit 58: borrowing is enabled\n    //bit 59: stable rate borrowing enabled\n    //bit 60-63: reserved\n    //bit 64-79: reserve factor\n    uint256 data;\n  }\n\n  struct UserConfigurationMap {\n    uint256 data;\n  }\n\n  enum InterestRateMode {NONE, STABLE, VARIABLE}\n}\n"
			},
			"contracts/protocol/libraries/configuration/ReserveConfiguration.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\nimport {Errors} from '../helpers/Errors.sol';\nimport {DataTypes} from '../types/DataTypes.sol';\n\n/**\n * @title ReserveConfiguration library\n * @author Aave\n * @notice Implements the bitmap logic to handle the reserve configuration\n */\nlibrary ReserveConfiguration {\n  uint256 constant LTV_MASK =                   0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000; // prettier-ignore\n  uint256 constant LIQUIDATION_THRESHOLD_MASK = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFF; // prettier-ignore\n  uint256 constant LIQUIDATION_BONUS_MASK =     0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFF; // prettier-ignore\n  uint256 constant DECIMALS_MASK =              0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFF; // prettier-ignore\n  uint256 constant ACTIVE_MASK =                0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFF; // prettier-ignore\n  uint256 constant FROZEN_MASK =                0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFF; // prettier-ignore\n  uint256 constant BORROWING_MASK =             0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFFFFFF; // prettier-ignore\n  uint256 constant STABLE_BORROWING_MASK =      0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFF; // prettier-ignore\n  uint256 constant RESERVE_FACTOR_MASK =        0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFF; // prettier-ignore\n\n  /// @dev For the LTV, the start bit is 0 (up to 15), hence no bitshifting is needed\n  uint256 constant LIQUIDATION_THRESHOLD_START_BIT_POSITION = 16;\n  uint256 constant LIQUIDATION_BONUS_START_BIT_POSITION = 32;\n  uint256 constant RESERVE_DECIMALS_START_BIT_POSITION = 48;\n  uint256 constant IS_ACTIVE_START_BIT_POSITION = 56;\n  uint256 constant IS_FROZEN_START_BIT_POSITION = 57;\n  uint256 constant BORROWING_ENABLED_START_BIT_POSITION = 58;\n  uint256 constant STABLE_BORROWING_ENABLED_START_BIT_POSITION = 59;\n  uint256 constant RESERVE_FACTOR_START_BIT_POSITION = 64;\n\n  uint256 constant MAX_VALID_LTV = 65535;\n  uint256 constant MAX_VALID_LIQUIDATION_THRESHOLD = 65535;\n  uint256 constant MAX_VALID_LIQUIDATION_BONUS = 65535;\n  uint256 constant MAX_VALID_DECIMALS = 255;\n  uint256 constant MAX_VALID_RESERVE_FACTOR = 65535;\n\n  /**\n   * @dev Sets the Loan to Value of the reserve\n   * @param self The reserve configuration\n   * @param ltv the new ltv\n   **/\n  function setLtv(DataTypes.ReserveConfigurationMap memory self, uint256 ltv) internal pure {\n    require(ltv <= MAX_VALID_LTV, Errors.RC_INVALID_LTV);\n\n    self.data = (self.data & LTV_MASK) | ltv;\n  }\n\n  /**\n   * @dev Gets the Loan to Value of the reserve\n   * @param self The reserve configuration\n   * @return The loan to value\n   **/\n  function getLtv(DataTypes.ReserveConfigurationMap storage self) internal view returns (uint256) {\n    return self.data & ~LTV_MASK;\n  }\n\n  /**\n   * @dev Sets the liquidation threshold of the reserve\n   * @param self The reserve configuration\n   * @param threshold The new liquidation threshold\n   **/\n  function setLiquidationThreshold(DataTypes.ReserveConfigurationMap memory self, uint256 threshold)\n    internal\n    pure\n  {\n    require(threshold <= MAX_VALID_LIQUIDATION_THRESHOLD, Errors.RC_INVALID_LIQ_THRESHOLD);\n\n    self.data =\n      (self.data & LIQUIDATION_THRESHOLD_MASK) |\n      (threshold << LIQUIDATION_THRESHOLD_START_BIT_POSITION);\n  }\n\n  /**\n   * @dev Gets the liquidation threshold of the reserve\n   * @param self The reserve configuration\n   * @return The liquidation threshold\n   **/\n  function getLiquidationThreshold(DataTypes.ReserveConfigurationMap storage self)\n    internal\n    view\n    returns (uint256)\n  {\n    return (self.data & ~LIQUIDATION_THRESHOLD_MASK) >> LIQUIDATION_THRESHOLD_START_BIT_POSITION;\n  }\n\n  /**\n   * @dev Sets the liquidation bonus of the reserve\n   * @param self The reserve configuration\n   * @param bonus The new liquidation bonus\n   **/\n  function setLiquidationBonus(DataTypes.ReserveConfigurationMap memory self, uint256 bonus)\n    internal\n    pure\n  {\n    require(bonus <= MAX_VALID_LIQUIDATION_BONUS, Errors.RC_INVALID_LIQ_BONUS);\n\n    self.data =\n      (self.data & LIQUIDATION_BONUS_MASK) |\n      (bonus << LIQUIDATION_BONUS_START_BIT_POSITION);\n  }\n\n  /**\n   * @dev Gets the liquidation bonus of the reserve\n   * @param self The reserve configuration\n   * @return The liquidation bonus\n   **/\n  function getLiquidationBonus(DataTypes.ReserveConfigurationMap storage self)\n    internal\n    view\n    returns (uint256)\n  {\n    return (self.data & ~LIQUIDATION_BONUS_MASK) >> LIQUIDATION_BONUS_START_BIT_POSITION;\n  }\n\n  /**\n   * @dev Sets the decimals of the underlying asset of the reserve\n   * @param self The reserve configuration\n   * @param decimals The decimals\n   **/\n  function setDecimals(DataTypes.ReserveConfigurationMap memory self, uint256 decimals)\n    internal\n    pure\n  {\n    require(decimals <= MAX_VALID_DECIMALS, Errors.RC_INVALID_DECIMALS);\n\n    self.data = (self.data & DECIMALS_MASK) | (decimals << RESERVE_DECIMALS_START_BIT_POSITION);\n  }\n\n  /**\n   * @dev Gets the decimals of the underlying asset of the reserve\n   * @param self The reserve configuration\n   * @return The decimals of the asset\n   **/\n  function getDecimals(DataTypes.ReserveConfigurationMap storage self)\n    internal\n    view\n    returns (uint256)\n  {\n    return (self.data & ~DECIMALS_MASK) >> RESERVE_DECIMALS_START_BIT_POSITION;\n  }\n\n  /**\n   * @dev Sets the active state of the reserve\n   * @param self The reserve configuration\n   * @param active The active state\n   **/\n  function setActive(DataTypes.ReserveConfigurationMap memory self, bool active) internal pure {\n    self.data =\n      (self.data & ACTIVE_MASK) |\n      (uint256(active ? 1 : 0) << IS_ACTIVE_START_BIT_POSITION);\n  }\n\n  /**\n   * @dev Gets the active state of the reserve\n   * @param self The reserve configuration\n   * @return The active state\n   **/\n  function getActive(DataTypes.ReserveConfigurationMap storage self) internal view returns (bool) {\n    return (self.data & ~ACTIVE_MASK) != 0;\n  }\n\n  /**\n   * @dev Sets the frozen state of the reserve\n   * @param self The reserve configuration\n   * @param frozen The frozen state\n   **/\n  function setFrozen(DataTypes.ReserveConfigurationMap memory self, bool frozen) internal pure {\n    self.data =\n      (self.data & FROZEN_MASK) |\n      (uint256(frozen ? 1 : 0) << IS_FROZEN_START_BIT_POSITION);\n  }\n\n  /**\n   * @dev Gets the frozen state of the reserve\n   * @param self The reserve configuration\n   * @return The frozen state\n   **/\n  function getFrozen(DataTypes.ReserveConfigurationMap storage self) internal view returns (bool) {\n    return (self.data & ~FROZEN_MASK) != 0;\n  }\n\n  /**\n   * @dev Enables or disables borrowing on the reserve\n   * @param self The reserve configuration\n   * @param enabled True if the borrowing needs to be enabled, false otherwise\n   **/\n  function setBorrowingEnabled(DataTypes.ReserveConfigurationMap memory self, bool enabled)\n    internal\n    pure\n  {\n    self.data =\n      (self.data & BORROWING_MASK) |\n      (uint256(enabled ? 1 : 0) << BORROWING_ENABLED_START_BIT_POSITION);\n  }\n\n  /**\n   * @dev Gets the borrowing state of the reserve\n   * @param self The reserve configuration\n   * @return The borrowing state\n   **/\n  function getBorrowingEnabled(DataTypes.ReserveConfigurationMap storage self)\n    internal\n    view\n    returns (bool)\n  {\n    return (self.data & ~BORROWING_MASK) != 0;\n  }\n\n  /**\n   * @dev Enables or disables stable rate borrowing on the reserve\n   * @param self The reserve configuration\n   * @param enabled True if the stable rate borrowing needs to be enabled, false otherwise\n   **/\n  function setStableRateBorrowingEnabled(\n    DataTypes.ReserveConfigurationMap memory self,\n    bool enabled\n  ) internal pure {\n    self.data =\n      (self.data & STABLE_BORROWING_MASK) |\n      (uint256(enabled ? 1 : 0) << STABLE_BORROWING_ENABLED_START_BIT_POSITION);\n  }\n\n  /**\n   * @dev Gets the stable rate borrowing state of the reserve\n   * @param self The reserve configuration\n   * @return The stable rate borrowing state\n   **/\n  function getStableRateBorrowingEnabled(DataTypes.ReserveConfigurationMap storage self)\n    internal\n    view\n    returns (bool)\n  {\n    return (self.data & ~STABLE_BORROWING_MASK) != 0;\n  }\n\n  /**\n   * @dev Sets the reserve factor of the reserve\n   * @param self The reserve configuration\n   * @param reserveFactor The reserve factor\n   **/\n  function setReserveFactor(DataTypes.ReserveConfigurationMap memory self, uint256 reserveFactor)\n    internal\n    pure\n  {\n    require(reserveFactor <= MAX_VALID_RESERVE_FACTOR, Errors.RC_INVALID_RESERVE_FACTOR);\n\n    self.data =\n      (self.data & RESERVE_FACTOR_MASK) |\n      (reserveFactor << RESERVE_FACTOR_START_BIT_POSITION);\n  }\n\n  /**\n   * @dev Gets the reserve factor of the reserve\n   * @param self The reserve configuration\n   * @return The reserve factor\n   **/\n  function getReserveFactor(DataTypes.ReserveConfigurationMap storage self)\n    internal\n    view\n    returns (uint256)\n  {\n    return (self.data & ~RESERVE_FACTOR_MASK) >> RESERVE_FACTOR_START_BIT_POSITION;\n  }\n\n  /**\n   * @dev Gets the configuration flags of the reserve\n   * @param self The reserve configuration\n   * @return The state flags representing active, frozen, borrowing enabled, stableRateBorrowing enabled\n   **/\n  function getFlags(DataTypes.ReserveConfigurationMap storage self)\n    internal\n    view\n    returns (\n      bool,\n      bool,\n      bool,\n      bool\n    )\n  {\n    uint256 dataLocal = self.data;\n\n    return (\n      (dataLocal & ~ACTIVE_MASK) != 0,\n      (dataLocal & ~FROZEN_MASK) != 0,\n      (dataLocal & ~BORROWING_MASK) != 0,\n      (dataLocal & ~STABLE_BORROWING_MASK) != 0\n    );\n  }\n\n  /**\n   * @dev Gets the configuration paramters of the reserve\n   * @param self The reserve configuration\n   * @return The state params representing ltv, liquidation threshold, liquidation bonus, the reserve decimals\n   **/\n  function getParams(DataTypes.ReserveConfigurationMap storage self)\n    internal\n    view\n    returns (\n      uint256,\n      uint256,\n      uint256,\n      uint256,\n      uint256\n    )\n  {\n    uint256 dataLocal = self.data;\n\n    return (\n      dataLocal & ~LTV_MASK,\n      (dataLocal & ~LIQUIDATION_THRESHOLD_MASK) >> LIQUIDATION_THRESHOLD_START_BIT_POSITION,\n      (dataLocal & ~LIQUIDATION_BONUS_MASK) >> LIQUIDATION_BONUS_START_BIT_POSITION,\n      (dataLocal & ~DECIMALS_MASK) >> RESERVE_DECIMALS_START_BIT_POSITION,\n      (dataLocal & ~RESERVE_FACTOR_MASK) >> RESERVE_FACTOR_START_BIT_POSITION\n    );\n  }\n\n  /**\n   * @dev Gets the configuration paramters of the reserve from a memory object\n   * @param self The reserve configuration\n   * @return The state params representing ltv, liquidation threshold, liquidation bonus, the reserve decimals\n   **/\n  function getParamsMemory(DataTypes.ReserveConfigurationMap memory self)\n    internal\n    pure\n    returns (\n      uint256,\n      uint256,\n      uint256,\n      uint256,\n      uint256\n    )\n  {\n    return (\n      self.data & ~LTV_MASK,\n      (self.data & ~LIQUIDATION_THRESHOLD_MASK) >> LIQUIDATION_THRESHOLD_START_BIT_POSITION,\n      (self.data & ~LIQUIDATION_BONUS_MASK) >> LIQUIDATION_BONUS_START_BIT_POSITION,\n      (self.data & ~DECIMALS_MASK) >> RESERVE_DECIMALS_START_BIT_POSITION,\n      (self.data & ~RESERVE_FACTOR_MASK) >> RESERVE_FACTOR_START_BIT_POSITION\n    );\n  }\n\n  /**\n   * @dev Gets the configuration flags of the reserve from a memory object\n   * @param self The reserve configuration\n   * @return The state flags representing active, frozen, borrowing enabled, stableRateBorrowing enabled\n   **/\n  function getFlagsMemory(DataTypes.ReserveConfigurationMap memory self)\n    internal\n    pure\n    returns (\n      bool,\n      bool,\n      bool,\n      bool\n    )\n  {\n    return (\n      (self.data & ~ACTIVE_MASK) != 0,\n      (self.data & ~FROZEN_MASK) != 0,\n      (self.data & ~BORROWING_MASK) != 0,\n      (self.data & ~STABLE_BORROWING_MASK) != 0\n    );\n  }\n}\n"
			},
			"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.12;\n\nimport {IERC20} from './IERC20.sol';\nimport {SafeMath} from './SafeMath.sol';\nimport {Address} from './Address.sol';\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n  using SafeMath for uint256;\n  using Address for address;\n\n  function safeTransfer(\n    IERC20 token,\n    address to,\n    uint256 value\n  ) internal {\n    callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n  }\n\n  function safeTransferFrom(\n    IERC20 token,\n    address from,\n    address to,\n    uint256 value\n  ) internal {\n    callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n  }\n\n  function safeApprove(\n    IERC20 token,\n    address spender,\n    uint256 value\n  ) internal {\n    require(\n      (value == 0) || (token.allowance(address(this), spender) == 0),\n      'SafeERC20: approve from non-zero to non-zero allowance'\n    );\n    callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n  }\n\n  function callOptionalReturn(IERC20 token, bytes memory data) private {\n    require(address(token).isContract(), 'SafeERC20: call to non-contract');\n\n    // solhint-disable-next-line avoid-low-level-calls\n    (bool success, bytes memory returndata) = address(token).call(data);\n    require(success, 'SafeERC20: low-level call failed');\n\n    if (returndata.length > 0) {\n      // Return data is optional\n      // solhint-disable-next-line max-line-length\n      require(abi.decode(returndata, (bool)), 'SafeERC20: ERC20 operation did not succeed');\n    }\n  }\n}\n"
			},
			"contracts/interfaces/ILendingPool.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\npragma experimental ABIEncoderV2;\n\nimport {ILendingPoolAddressesProvider} from './ILendingPoolAddressesProvider.sol';\nimport {DataTypes} from '../protocol/libraries/types/DataTypes.sol';\n\ninterface ILendingPool {\n  /**\n   * @dev Emitted on deposit()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address initiating the deposit\n   * @param onBehalfOf The beneficiary of the deposit, receiving the aTokens\n   * @param amount The amount deposited\n   * @param referral The referral code used\n   **/\n  event Deposit(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint16 indexed referral\n  );\n\n  /**\n   * @dev Emitted on withdraw()\n   * @param reserve The address of the underlyng asset being withdrawn\n   * @param user The address initiating the withdrawal, owner of aTokens\n   * @param to Address that will receive the underlying\n   * @param amount The amount to be withdrawn\n   **/\n  event Withdraw(address indexed reserve, address indexed user, address indexed to, uint256 amount);\n\n  /**\n   * @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n   * @param reserve The address of the underlying asset being borrowed\n   * @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n   * initiator of the transaction on flashLoan()\n   * @param onBehalfOf The address that will be getting the debt\n   * @param amount The amount borrowed out\n   * @param borrowRateMode The rate mode: 1 for Stable, 2 for Variable\n   * @param borrowRate The numeric rate at which the user has borrowed\n   * @param referral The referral code used\n   **/\n  event Borrow(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint256 borrowRateMode,\n    uint256 borrowRate,\n    uint16 indexed referral\n  );\n\n  /**\n   * @dev Emitted on repay()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The beneficiary of the repayment, getting his debt reduced\n   * @param repayer The address of the user initiating the repay(), providing the funds\n   * @param amount The amount repaid\n   **/\n  event Repay(\n    address indexed reserve,\n    address indexed user,\n    address indexed repayer,\n    uint256 amount\n  );\n\n  /**\n   * @dev Emitted on swapBorrowRateMode()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user swapping his rate mode\n   * @param rateMode The rate mode that the user wants to swap to\n   **/\n  event Swap(address indexed reserve, address indexed user, uint256 rateMode);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   **/\n  event ReserveUsedAsCollateralEnabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   **/\n  event ReserveUsedAsCollateralDisabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on rebalanceStableBorrowRate()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user for which the rebalance has been executed\n   **/\n  event RebalanceStableBorrowRate(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on flashLoan()\n   * @param target The address of the flash loan receiver contract\n   * @param initiator The address initiating the flash loan\n   * @param asset The address of the asset being flash borrowed\n   * @param amount The amount flash borrowed\n   * @param premium The fee flash borrowed\n   * @param referralCode The referral code used\n   **/\n  event FlashLoan(\n    address indexed target,\n    address indexed initiator,\n    address indexed asset,\n    uint256 amount,\n    uint256 premium,\n    uint16 referralCode\n  );\n\n  /**\n   * @dev Emitted when the pause is triggered.\n   */\n  event Paused();\n\n  /**\n   * @dev Emitted when the pause is lifted.\n   */\n  event Unpaused();\n\n  /**\n   * @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\n   * LendingPoolCollateral manager using a DELEGATECALL\n   * This allows to have the events in the generated ABI for LendingPool.\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param liquidatedCollateralAmount The amount of collateral received by the liiquidator\n   * @param liquidator The address of the liquidator\n   * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   **/\n  event LiquidationCall(\n    address indexed collateralAsset,\n    address indexed debtAsset,\n    address indexed user,\n    uint256 debtToCover,\n    uint256 liquidatedCollateralAmount,\n    address liquidator,\n    bool receiveAToken\n  );\n\n  /**\n   * @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared\n   * in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\n   * the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\n   * gets added to the LendingPool ABI\n   * @param reserve The address of the underlying asset of the reserve\n   * @param liquidityRate The new liquidity rate\n   * @param stableBorrowRate The new stable borrow rate\n   * @param variableBorrowRate The new variable borrow rate\n   * @param liquidityIndex The new liquidity index\n   * @param variableBorrowIndex The new variable borrow index\n   **/\n  event ReserveDataUpdated(\n    address indexed reserve,\n    uint256 liquidityRate,\n    uint256 stableBorrowRate,\n    uint256 variableBorrowRate,\n    uint256 liquidityIndex,\n    uint256 variableBorrowIndex\n  );\n\n  /**\n   * @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n   * - E.g. User deposits 100 USDC and gets in return 100 aUSDC\n   * @param asset The address of the underlying asset to deposit\n   * @param amount The amount to be deposited\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   *   is a different wallet\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   **/\n  function deposit(\n    address asset,\n    uint256 amount,\n    address onBehalfOf,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n   * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n   * @param asset The address of the underlying asset to withdraw\n   * @param amount The underlying amount to be withdrawn\n   *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n   * @param to Address that will receive the underlying, same as msg.sender if the user\n   *   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   *   different wallet\n   * @return The final amount withdrawn\n   **/\n  function withdraw(\n    address asset,\n    uint256 amount,\n    address to\n  ) external returns (uint256);\n\n  /**\n   * @dev Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n   * already deposited enough collateral, or he was given enough allowance by a credit delegator on the\n   * corresponding debt token (StableDebtToken or VariableDebtToken)\n   * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n   * @param asset The address of the underlying asset to borrow\n   * @param amount The amount to be borrowed\n   * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   * @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself\n   * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n   * if he has been given credit delegation allowance\n   **/\n  function borrow(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode,\n    uint16 referralCode,\n    address onBehalfOf\n  ) external;\n\n  /**\n   * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n   * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n   * @param asset The address of the borrowed underlying asset previously borrowed\n   * @param amount The amount to repay\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n   * @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n   * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\n   * other borrower whose debt should be removed\n   * @return The final amount repaid\n   **/\n  function repay(\n    address asset,\n    uint256 amount,\n    uint256 rateMode,\n    address onBehalfOf\n  ) external returns (uint256);\n\n  /**\n   * @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa\n   * @param asset The address of the underlying asset borrowed\n   * @param rateMode The rate mode that the user wants to swap to\n   **/\n  function swapBorrowRateMode(address asset, uint256 rateMode) external;\n\n  /**\n   * @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n   * - Users can be rebalanced if the following conditions are satisfied:\n   *     1. Usage ratio is above 95%\n   *     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\n   *        borrowed at a stable rate and depositors are not earning enough\n   * @param asset The address of the underlying asset borrowed\n   * @param user The address of the user to be rebalanced\n   **/\n  function rebalanceStableBorrowRate(address asset, address user) external;\n\n  /**\n   * @dev Allows depositors to enable/disable a specific deposited asset as collateral\n   * @param asset The address of the underlying asset deposited\n   * @param useAsCollateral `true` if the user wants to use the deposit as collateral, `false` otherwise\n   **/\n  function setUserUseReserveAsCollateral(address asset, bool useAsCollateral) external;\n\n  /**\n   * @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n   * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   **/\n  function liquidationCall(\n    address collateralAsset,\n    address debtAsset,\n    address user,\n    uint256 debtToCover,\n    bool receiveAToken\n  ) external;\n\n  /**\n   * @dev Allows smartcontracts to access the liquidity of the pool within one transaction,\n   * as long as the amount taken plus a fee is returned.\n   * IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\n   * For further details please visit https://developers.aave.com\n   * @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\n   * @param assets The addresses of the assets being flash-borrowed\n   * @param amounts The amounts amounts being flash-borrowed\n   * @param modes Types of the debt to open if the flash loan is not returned:\n   *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n   * @param params Variadic packed params to pass to the receiver as extra information\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   **/\n  function flashLoan(\n    address receiverAddress,\n    address[] calldata assets,\n    uint256[] calldata amounts,\n    uint256[] calldata modes,\n    address onBehalfOf,\n    bytes calldata params,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @dev Returns the user account data across all the reserves\n   * @param user The address of the user\n   * @return totalCollateralETH the total collateral in ETH of the user\n   * @return totalDebtETH the total debt in ETH of the user\n   * @return availableBorrowsETH the borrowing power left of the user\n   * @return currentLiquidationThreshold the liquidation threshold of the user\n   * @return ltv the loan to value of the user\n   * @return healthFactor the current health factor of the user\n   **/\n  function getUserAccountData(address user)\n    external\n    view\n    returns (\n      uint256 totalCollateralETH,\n      uint256 totalDebtETH,\n      uint256 availableBorrowsETH,\n      uint256 currentLiquidationThreshold,\n      uint256 ltv,\n      uint256 healthFactor\n    );\n\n  function initReserve(\n    address reserve,\n    address aTokenAddress,\n    address stableDebtAddress,\n    address variableDebtAddress,\n    address interestRateStrategyAddress\n  ) external;\n\n  function setReserveInterestRateStrategyAddress(address reserve, address rateStrategyAddress)\n    external;\n\n  function setConfiguration(address reserve, uint256 configuration) external;\n\n  /**\n   * @dev Returns the configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The configuration of the reserve\n   **/\n  function getConfiguration(address asset)\n    external\n    view\n    returns (DataTypes.ReserveConfigurationMap memory);\n\n  /**\n   * @dev Returns the configuration of the user across all the reserves\n   * @param user The user address\n   * @return The configuration of the user\n   **/\n  function getUserConfiguration(address user)\n    external\n    view\n    returns (DataTypes.UserConfigurationMap memory);\n\n  /**\n   * @dev Returns the normalized income normalized income of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve's normalized income\n   */\n  function getReserveNormalizedIncome(address asset) external view returns (uint256);\n\n  /**\n   * @dev Returns the normalized variable debt per unit of asset\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve normalized variable debt\n   */\n  function getReserveNormalizedVariableDebt(address asset) external view returns (uint256);\n\n  /**\n   * @dev Returns the state and configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The state of the reserve\n   **/\n  function getReserveData(address asset) external view returns (DataTypes.ReserveData memory);\n\n  function finalizeTransfer(\n    address asset,\n    address from,\n    address to,\n    uint256 amount,\n    uint256 balanceFromAfter,\n    uint256 balanceToBefore\n  ) external;\n\n  function getReservesList() external view returns (address[] memory);\n\n  function getAddressesProvider() external view returns (ILendingPoolAddressesProvider);\n\n  function setPause(bool val) external;\n\n  function paused() external view returns (bool);\n}\n"
			},
			"contracts/interfaces/ILendingPoolAddressesProvider.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\n/**\n * @title LendingPoolAddressesProvider contract\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\n * - Owned by the Aave Governance\n * @author Aave\n **/\ninterface ILendingPoolAddressesProvider {\n  event MarketIdSet(string newMarketId);\n  event LendingPoolUpdated(address indexed newAddress);\n  event ConfigurationAdminUpdated(address indexed newAddress);\n  event EmergencyAdminUpdated(address indexed newAddress);\n  event LendingPoolConfiguratorUpdated(address indexed newAddress);\n  event LendingPoolCollateralManagerUpdated(address indexed newAddress);\n  event PriceOracleUpdated(address indexed newAddress);\n  event LendingRateOracleUpdated(address indexed newAddress);\n  event ProxyCreated(bytes32 id, address indexed newAddress);\n  event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\n\n  function getMarketId() external view returns (string memory);\n\n  function setMarketId(string calldata marketId) external;\n\n  function setAddress(bytes32 id, address newAddress) external;\n\n  function setAddressAsProxy(bytes32 id, address impl) external;\n\n  function getAddress(bytes32 id) external view returns (address);\n\n  function getLendingPool() external view returns (address);\n\n  function setLendingPoolImpl(address pool) external;\n\n  function getLendingPoolConfigurator() external view returns (address);\n\n  function setLendingPoolConfiguratorImpl(address configurator) external;\n\n  function getLendingPoolCollateralManager() external view returns (address);\n\n  function setLendingPoolCollateralManager(address manager) external;\n\n  function getPoolAdmin() external view returns (address);\n\n  function setPoolAdmin(address admin) external;\n\n  function getEmergencyAdmin() external view returns (address);\n\n  function setEmergencyAdmin(address admin) external;\n\n  function getPriceOracle() external view returns (address);\n\n  function setPriceOracle(address priceOracle) external;\n\n  function getLendingRateOracle() external view returns (address);\n\n  function setLendingRateOracle(address lendingRateOracle) external;\n}\n"
			},
			"contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"contracts/dependencies/openzeppelin/contracts/Address.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n  /**\n   * @dev Returns true if `account` is a contract.\n   *\n   * [IMPORTANT]\n   * ====\n   * It is unsafe to assume that an address for which this function returns\n   * false is an externally-owned account (EOA) and not a contract.\n   *\n   * Among others, `isContract` will return false for the following\n   * types of addresses:\n   *\n   *  - an externally-owned account\n   *  - a contract in construction\n   *  - an address where a contract will be created\n   *  - an address where a contract lived, but was destroyed\n   * ====\n   */\n  function isContract(address account) internal view returns (bool) {\n    // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n    // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n    // for accounts without code, i.e. `keccak256('')`\n    bytes32 codehash;\n    bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n    // solhint-disable-next-line no-inline-assembly\n    assembly {\n      codehash := extcodehash(account)\n    }\n    return (codehash != accountHash && codehash != 0x0);\n  }\n\n  /**\n   * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n   * `recipient`, forwarding all available gas and reverting on errors.\n   *\n   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n   * of certain opcodes, possibly making contracts go over the 2300 gas limit\n   * imposed by `transfer`, making them unable to receive funds via\n   * `transfer`. {sendValue} removes this limitation.\n   *\n   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n   *\n   * IMPORTANT: because control is transferred to `recipient`, care must be\n   * taken to not create reentrancy vulnerabilities. Consider using\n   * {ReentrancyGuard} or the\n   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n   */\n  function sendValue(address payable recipient, uint256 amount) internal {\n    require(address(this).balance >= amount, 'Address: insufficient balance');\n\n    // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n    (bool success, ) = recipient.call{value: amount}('');\n    require(success, 'Address: unable to send value, recipient may have reverted');\n  }\n}\n"
			},
			"contracts/protocol/libraries/helpers/Errors.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\n/**\n * @title Errors library\n * @author Aave\n * @notice Defines the error messages emitted by the different contracts of the Aave protocol\n * @dev Error messages prefix glossary:\n *  - VL = ValidationLogic\n *  - MATH = Math libraries\n *  - CT = Common errors between tokens (AToken, VariableDebtToken and StableDebtToken)\n *  - AT = AToken\n *  - SDT = StableDebtToken\n *  - VDT = VariableDebtToken\n *  - LP = LendingPool\n *  - LPAPR = LendingPoolAddressesProviderRegistry\n *  - LPC = LendingPoolConfiguration\n *  - RL = ReserveLogic\n *  - LPCM = LendingPoolCollateralManager\n *  - P = Pausable\n */\nlibrary Errors {\n  //common errors\n  string public constant CALLER_NOT_POOL_ADMIN = '33'; // 'The caller must be the pool admin'\n  string public constant BORROW_ALLOWANCE_NOT_ENOUGH = '59'; // User borrows on behalf, but allowance are too small\n\n  //contract specific errors\n  string public constant VL_INVALID_AMOUNT = '1'; // 'Amount must be greater than 0'\n  string public constant VL_NO_ACTIVE_RESERVE = '2'; // 'Action requires an active reserve'\n  string public constant VL_RESERVE_FROZEN = '3'; // 'Action cannot be performed because the reserve is frozen'\n  string public constant VL_CURRENT_AVAILABLE_LIQUIDITY_NOT_ENOUGH = '4'; // 'The current liquidity is not enough'\n  string public constant VL_NOT_ENOUGH_AVAILABLE_USER_BALANCE = '5'; // 'User cannot withdraw more than the available balance'\n  string public constant VL_TRANSFER_NOT_ALLOWED = '6'; // 'Transfer cannot be allowed.'\n  string public constant VL_BORROWING_NOT_ENABLED = '7'; // 'Borrowing is not enabled'\n  string public constant VL_INVALID_INTEREST_RATE_MODE_SELECTED = '8'; // 'Invalid interest rate mode selected'\n  string public constant VL_COLLATERAL_BALANCE_IS_0 = '9'; // 'The collateral balance is 0'\n  string public constant VL_HEALTH_FACTOR_LOWER_THAN_LIQUIDATION_THRESHOLD = '10'; // 'Health factor is lesser than the liquidation threshold'\n  string public constant VL_COLLATERAL_CANNOT_COVER_NEW_BORROW = '11'; // 'There is not enough collateral to cover a new borrow'\n  string public constant VL_STABLE_BORROWING_NOT_ENABLED = '12'; // stable borrowing not enabled\n  string public constant VL_COLLATERAL_SAME_AS_BORROWING_CURRENCY = '13'; // collateral is (mostly) the same currency that is being borrowed\n  string public constant VL_AMOUNT_BIGGER_THAN_MAX_LOAN_SIZE_STABLE = '14'; // 'The requested amount is greater than the max loan size in stable rate mode\n  string public constant VL_NO_DEBT_OF_SELECTED_TYPE = '15'; // 'for repayment of stable debt, the user needs to have stable debt, otherwise, he needs to have variable debt'\n  string public constant VL_NO_EXPLICIT_AMOUNT_TO_REPAY_ON_BEHALF = '16'; // 'To repay on behalf of an user an explicit amount to repay is needed'\n  string public constant VL_NO_STABLE_RATE_LOAN_IN_RESERVE = '17'; // 'User does not have a stable rate loan in progress on this reserve'\n  string public constant VL_NO_VARIABLE_RATE_LOAN_IN_RESERVE = '18'; // 'User does not have a variable rate loan in progress on this reserve'\n  string public constant VL_UNDERLYING_BALANCE_NOT_GREATER_THAN_0 = '19'; // 'The underlying balance needs to be greater than 0'\n  string public constant VL_DEPOSIT_ALREADY_IN_USE = '20'; // 'User deposit is already being used as collateral'\n  string public constant LP_NOT_ENOUGH_STABLE_BORROW_BALANCE = '21'; // 'User does not have any stable rate loan for this reserve'\n  string public constant LP_INTEREST_RATE_REBALANCE_CONDITIONS_NOT_MET = '22'; // 'Interest rate rebalance conditions were not met'\n  string public constant LP_LIQUIDATION_CALL_FAILED = '23'; // 'Liquidation call failed'\n  string public constant LP_NOT_ENOUGH_LIQUIDITY_TO_BORROW = '24'; // 'There is not enough liquidity available to borrow'\n  string public constant LP_REQUESTED_AMOUNT_TOO_SMALL = '25'; // 'The requested amount is too small for a FlashLoan.'\n  string public constant LP_INCONSISTENT_PROTOCOL_ACTUAL_BALANCE = '26'; // 'The actual balance of the protocol is inconsistent'\n  string public constant LP_CALLER_NOT_LENDING_POOL_CONFIGURATOR = '27'; // 'The caller of the function is not the lending pool configurator'\n  string public constant LP_INCONSISTENT_FLASHLOAN_PARAMS = '28';\n  string public constant CT_CALLER_MUST_BE_LENDING_POOL = '29'; // 'The caller of this function must be a lending pool'\n  string public constant CT_CANNOT_GIVE_ALLOWANCE_TO_HIMSELF = '30'; // 'User cannot give allowance to himself'\n  string public constant CT_TRANSFER_AMOUNT_NOT_GT_0 = '31'; // 'Transferred amount needs to be greater than zero'\n  string public constant RL_RESERVE_ALREADY_INITIALIZED = '32'; // 'Reserve has already been initialized'\n  string public constant LPC_RESERVE_LIQUIDITY_NOT_0 = '34'; // 'The liquidity of the reserve needs to be 0'\n  string public constant LPC_INVALID_ATOKEN_POOL_ADDRESS = '35'; // 'The liquidity of the reserve needs to be 0'\n  string public constant LPC_INVALID_STABLE_DEBT_TOKEN_POOL_ADDRESS = '36'; // 'The liquidity of the reserve needs to be 0'\n  string public constant LPC_INVALID_VARIABLE_DEBT_TOKEN_POOL_ADDRESS = '37'; // 'The liquidity of the reserve needs to be 0'\n  string public constant LPC_INVALID_STABLE_DEBT_TOKEN_UNDERLYING_ADDRESS = '38'; // 'The liquidity of the reserve needs to be 0'\n  string public constant LPC_INVALID_VARIABLE_DEBT_TOKEN_UNDERLYING_ADDRESS = '39'; // 'The liquidity of the reserve needs to be 0'\n  string public constant LPC_INVALID_ADDRESSES_PROVIDER_ID = '40'; // 'The liquidity of the reserve needs to be 0'\n  string public constant LPC_INVALID_CONFIGURATION = '75'; // 'Invalid risk parameters for the reserve'\n  string public constant LPC_CALLER_NOT_EMERGENCY_ADMIN = '76'; // 'The caller must be the emergency admin'\n  string public constant LPAPR_PROVIDER_NOT_REGISTERED = '41'; // 'Provider is not registered'\n  string public constant LPCM_HEALTH_FACTOR_NOT_BELOW_THRESHOLD = '42'; // 'Health factor is not below the threshold'\n  string public constant LPCM_COLLATERAL_CANNOT_BE_LIQUIDATED = '43'; // 'The collateral chosen cannot be liquidated'\n  string public constant LPCM_SPECIFIED_CURRENCY_NOT_BORROWED_BY_USER = '44'; // 'User did not borrow the specified currency'\n  string public constant LPCM_NOT_ENOUGH_LIQUIDITY_TO_LIQUIDATE = '45'; // \"There isn't enough liquidity available to liquidate\"\n  string public constant LPCM_NO_ERRORS = '46'; // 'No errors'\n  string public constant LP_INVALID_FLASHLOAN_MODE = '47'; //Invalid flashloan mode selected\n  string public constant MATH_MULTIPLICATION_OVERFLOW = '48';\n  string public constant MATH_ADDITION_OVERFLOW = '49';\n  string public constant MATH_DIVISION_BY_ZERO = '50';\n  string public constant RL_LIQUIDITY_INDEX_OVERFLOW = '51'; //  Liquidity index overflows uint128\n  string public constant RL_VARIABLE_BORROW_INDEX_OVERFLOW = '52'; //  Variable borrow index overflows uint128\n  string public constant RL_LIQUIDITY_RATE_OVERFLOW = '53'; //  Liquidity rate overflows uint128\n  string public constant RL_VARIABLE_BORROW_RATE_OVERFLOW = '54'; //  Variable borrow rate overflows uint128\n  string public constant RL_STABLE_BORROW_RATE_OVERFLOW = '55'; //  Stable borrow rate overflows uint128\n  string public constant CT_INVALID_MINT_AMOUNT = '56'; //invalid amount to mint\n  string public constant LP_FAILED_REPAY_WITH_COLLATERAL = '57';\n  string public constant CT_INVALID_BURN_AMOUNT = '58'; //invalid amount to burn\n  string public constant LP_FAILED_COLLATERAL_SWAP = '60';\n  string public constant LP_INVALID_EQUAL_ASSETS_TO_SWAP = '61';\n  string public constant LP_REENTRANCY_NOT_ALLOWED = '62';\n  string public constant LP_CALLER_MUST_BE_AN_ATOKEN = '63';\n  string public constant LP_IS_PAUSED = '64'; // 'Pool is paused'\n  string public constant LP_NO_MORE_RESERVES_ALLOWED = '65';\n  string public constant LP_INVALID_FLASH_LOAN_EXECUTOR_RETURN = '66';\n  string public constant RC_INVALID_LTV = '67';\n  string public constant RC_INVALID_LIQ_THRESHOLD = '68';\n  string public constant RC_INVALID_LIQ_BONUS = '69';\n  string public constant RC_INVALID_DECIMALS = '70';\n  string public constant RC_INVALID_RESERVE_FACTOR = '71';\n  string public constant LPAPR_INVALID_ADDRESSES_PROVIDER_ID = '72';\n  string public constant VL_INCONSISTENT_FLASHLOAN_PARAMS = '73';\n  string public constant LP_INCONSISTENT_PARAMS_LENGTH = '74';\n  string public constant UL_INVALID_INDEX = '77';\n  string public constant LP_NOT_CONTRACT = '78';\n  string public constant SDT_STABLE_DEBT_OVERFLOW = '79';\n  string public constant SDT_BURN_EXCEEDS_BALANCE = '80';\n\n  enum CollateralManagerErrors {\n    NO_ERROR,\n    NO_COLLATERAL_AVAILABLE,\n    COLLATERAL_CANNOT_BE_LIQUIDATED,\n    CURRRENCY_NOT_BORROWED,\n    HEALTH_FACTOR_ABOVE_THRESHOLD,\n    NOT_ENOUGH_LIQUIDITY,\n    NO_ACTIVE_RESERVE,\n    HEALTH_FACTOR_LOWER_THAN_LIQUIDATION_THRESHOLD,\n    INVALID_EQUAL_ASSETS_TO_SWAP,\n    FROZEN_RESERVE\n  }\n}\n"
			},
			"contracts/dependencies/openzeppelin/contracts/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.6.12;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n  /**\n   * @dev Returns the addition of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `+` operator.\n   *\n   * Requirements:\n   * - Addition cannot overflow.\n   */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, 'SafeMath: addition overflow');\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    return sub(a, b, 'SafeMath: subtraction overflow');\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(\n    uint256 a,\n    uint256 b,\n    string memory errorMessage\n  ) internal pure returns (uint256) {\n    require(b <= a, errorMessage);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the multiplication of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `*` operator.\n   *\n   * Requirements:\n   * - Multiplication cannot overflow.\n   */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, 'SafeMath: multiplication overflow');\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return div(a, b, 'SafeMath: division by zero');\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(\n    uint256 a,\n    uint256 b,\n    string memory errorMessage\n  ) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, errorMessage);\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    return mod(a, b, 'SafeMath: modulo by zero');\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts with custom message when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(\n    uint256 a,\n    uint256 b,\n    string memory errorMessage\n  ) internal pure returns (uint256) {\n    require(b != 0, errorMessage);\n    return a % b;\n  }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/dependencies/openzeppelin/contracts/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":130:2528  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":130:2528  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122093d929e9255a31a618822d038a5070bc0f29f948496e43b9ca7e13af705eed6564736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093d929e9255a31a618822d038a5070bc0f29f948496e43b9ca7e13af705eed6564736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xD9 0x29 0xE9 0x25 GAS BALANCE 0xA6 XOR DUP3 0x2D SUB DUP11 POP PUSH17 0xBC0F29F948496E43B9CA7E13AF705EED65 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "130:2398:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093d929e9255a31a618822d038a5070bc0f29f948496e43b9ca7e13af705eed6564736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xD9 0x29 0xE9 0x25 GAS BALANCE 0xA6 XOR DUP3 0x2D SUB DUP11 POP PUSH17 0xBC0F29F948496E43B9CA7E13AF705EED65 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "130:2398:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 130,
									"end": 2528,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 130,
									"end": 2528,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122093d929e9255a31a618822d038a5070bc0f29f948496e43b9ca7e13af705eed6564736f6c634300060c0033",
									".code": [
										{
											"begin": 130,
											"end": 2528,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 130,
											"end": 2528,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 130,
											"end": 2528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 130,
											"end": 2528,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 130,
											"end": 2528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 130,
											"end": 2528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 130,
											"end": 2528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 2528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 2528,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"keccak256\":\"0xb7f2cd193efe93976d7b473fc4fa27dda83bd4db5b81889cbcd4701f3b7023ae\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://2275632637acd2f30d576612dcddc1c6ba78d81af4d044fafe870e6a809a8b6e\",\"dweb:/ipfs/QmW3uMzrLbjzP45zVpP8e9V6o8WFSceHiHq8WDMJ8YjCeL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0x6406b04abfeda2c8c80ea3faf797ce4501e66db41fb6ff4e299ebe0402879f44\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://33b0db81db37bd6fe20aa0b23581c6b0edef2f3c49d0bd88b4fe46c1164adb00\",\"dweb:/ipfs/QmYn1zYwt3ahpkLYwHh6h5b1UJrzP2xy5G3at9oEVNw2c1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol\":634:2030  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol\":634:2030  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bfe92e7c7203651c1598bd5e0bb7842604674a3d8b982cbad2401a64dbc7105a64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bfe92e7c7203651c1598bd5e0bb7842604674a3d8b982cbad2401a64dbc7105a64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0xE9 0x2E PUSH29 0x7203651C1598BD5E0BB7842604674A3D8B982CBAD2401A64DBC7105A64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "634:1396:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bfe92e7c7203651c1598bd5e0bb7842604674a3d8b982cbad2401a64dbc7105a64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0xE9 0x2E PUSH29 0x7203651C1598BD5E0BB7842604674A3D8B982CBAD2401A64DBC7105A64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "634:1396:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 634,
									"end": 2030,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 634,
									"end": 2030,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bfe92e7c7203651c1598bd5e0bb7842604674a3d8b982cbad2401a64dbc7105a64736f6c634300060c0033",
									".code": [
										{
											"begin": 634,
											"end": 2030,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 634,
											"end": 2030,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 634,
											"end": 2030,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 634,
											"end": 2030,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 634,
											"end": 2030,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 634,
											"end": 2030,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 634,
											"end": 2030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 2030,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 634,
											"end": 2030,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"keccak256\":\"0xb7f2cd193efe93976d7b473fc4fa27dda83bd4db5b81889cbcd4701f3b7023ae\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://2275632637acd2f30d576612dcddc1c6ba78d81af4d044fafe870e6a809a8b6e\",\"dweb:/ipfs/QmW3uMzrLbjzP45zVpP8e9V6o8WFSceHiHq8WDMJ8YjCeL\"]},\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0x6406b04abfeda2c8c80ea3faf797ce4501e66db41fb6ff4e299ebe0402879f44\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://33b0db81db37bd6fe20aa0b23581c6b0edef2f3c49d0bd88b4fe46c1164adb00\",\"dweb:/ipfs/QmYn1zYwt3ahpkLYwHh6h5b1UJrzP2xy5G3at9oEVNw2c1\"]},\"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol\":{\"keccak256\":\"0xd664a81c469ebd6c7b09ca8be499e6af30100e3e42be6bfea9f4a90c02a7cb1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9f8ac1ffeaaefc7685abd544813e31ebb46e81b393291d68b1a99a9c7550df2\",\"dweb:/ipfs/QmP3xWkMNgDBbDn9HF6vVKpHTP5rW4j7dxWmhKsxicQ7Mg\"]},\"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":{\"keccak256\":\"0xfca35d11bafb85cf4f2203b41f1a98238dca59b6a9faa28b86ea3f9f63da8ec5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://7019345b024afa93000c6b5a2b095be59c3c5352eb658619c941d23d0af5bc65\",\"dweb:/ipfs/QmZLxJKSbM66Wd1Qd43jSdiXdg7JP6DQ9J6LuANUZummM4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/dependencies/openzeppelin/contracts/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":626:4968  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":626:4968  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a1bd78d2d20e95b81481b7c60e9fa29307a20e9f12fbea3b3158cdacb3361fef64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a1bd78d2d20e95b81481b7c60e9fa29307a20e9f12fbea3b3158cdacb3361fef64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xBD PUSH25 0xD2D20E95B81481B7C60E9FA29307A20E9F12FBEA3B3158CDAC 0xB3 CALLDATASIZE 0x1F 0xEF PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "626:4342:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a1bd78d2d20e95b81481b7c60e9fa29307a20e9f12fbea3b3158cdacb3361fef64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xBD PUSH25 0xD2D20E95B81481B7C60E9FA29307A20E9F12FBEA3B3158CDAC 0xB3 CALLDATASIZE 0x1F 0xEF PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "626:4342:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 626,
									"end": 4968,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 626,
									"end": 4968,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a1bd78d2d20e95b81481b7c60e9fa29307a20e9f12fbea3b3158cdacb3361fef64736f6c634300060c0033",
									".code": [
										{
											"begin": 626,
											"end": 4968,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 626,
											"end": 4968,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 626,
											"end": 4968,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 626,
											"end": 4968,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 626,
											"end": 4968,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 4968,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 626,
											"end": 4968,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 4968,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 626,
											"end": 4968,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":{\"keccak256\":\"0xfca35d11bafb85cf4f2203b41f1a98238dca59b6a9faa28b86ea3f9f63da8ec5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://7019345b024afa93000c6b5a2b095be59c3c5352eb658619c941d23d0af5bc65\",\"dweb:/ipfs/QmZLxJKSbM66Wd1Qd43jSdiXdg7JP6DQ9J6LuANUZummM4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ILendingPool.sol": {
				"ILendingPool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "borrowRateMode",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "borrowRate",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referral",
									"type": "uint16"
								}
							],
							"name": "Borrow",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referral",
									"type": "uint16"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "initiator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "premium",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "FlashLoan",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "collateralAsset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "debtAsset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "debtToCover",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidatedCollateralAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "liquidator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "receiveAToken",
									"type": "bool"
								}
							],
							"name": "LiquidationCall",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "RebalanceStableBorrowRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "repayer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Repay",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidityRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stableBorrowRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableBorrowRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidityIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableBorrowIndex",
									"type": "uint256"
								}
							],
							"name": "ReserveDataUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "ReserveUsedAsCollateralDisabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "ReserveUsedAsCollateralEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rateMode",
									"type": "uint256"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRateMode",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								}
							],
							"name": "borrow",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balanceFromAfter",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balanceToBefore",
									"type": "uint256"
								}
							],
							"name": "finalizeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiverAddress",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "modes",
									"type": "uint256[]"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "params",
									"type": "bytes"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "flashLoan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAddressesProvider",
							"outputs": [
								{
									"internalType": "contract ILendingPoolAddressesProvider",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getConfiguration",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "data",
											"type": "uint256"
										}
									],
									"internalType": "struct DataTypes.ReserveConfigurationMap",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveData",
							"outputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "data",
													"type": "uint256"
												}
											],
											"internalType": "struct DataTypes.ReserveConfigurationMap",
											"name": "configuration",
											"type": "tuple"
										},
										{
											"internalType": "uint128",
											"name": "liquidityIndex",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "variableBorrowIndex",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentLiquidityRate",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentVariableBorrowRate",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentStableBorrowRate",
											"type": "uint128"
										},
										{
											"internalType": "uint40",
											"name": "lastUpdateTimestamp",
											"type": "uint40"
										},
										{
											"internalType": "address",
											"name": "aTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "stableDebtTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "variableDebtTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "interestRateStrategyAddress",
											"type": "address"
										},
										{
											"internalType": "uint8",
											"name": "id",
											"type": "uint8"
										}
									],
									"internalType": "struct DataTypes.ReserveData",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveNormalizedIncome",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveNormalizedVariableDebt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReservesList",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserAccountData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalCollateralETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalDebtETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "availableBorrowsETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "currentLiquidationThreshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ltv",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "healthFactor",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserConfiguration",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "data",
											"type": "uint256"
										}
									],
									"internalType": "struct DataTypes.UserConfigurationMap",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "aTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "stableDebtAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "variableDebtAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "interestRateStrategyAddress",
									"type": "address"
								}
							],
							"name": "initReserve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collateralAsset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "debtAsset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "debtToCover",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "receiveAToken",
									"type": "bool"
								}
							],
							"name": "liquidationCall",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "rebalanceStableBorrowRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rateMode",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								}
							],
							"name": "repay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "configuration",
									"type": "uint256"
								}
							],
							"name": "setConfiguration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "val",
									"type": "bool"
								}
							],
							"name": "setPause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rateStrategyAddress",
									"type": "address"
								}
							],
							"name": "setReserveInterestRateStrategyAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "useAsCollateral",
									"type": "bool"
								}
							],
							"name": "setUserUseReserveAsCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rateMode",
									"type": "uint256"
								}
							],
							"name": "swapBorrowRateMode",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Borrow(address,address,address,uint256,uint256,uint256,uint16)": {
								"details": "Emitted on borrow() and flashLoan() when debt needs to be opened",
								"params": {
									"amount": "The amount borrowed out",
									"borrowRate": "The numeric rate at which the user has borrowed",
									"borrowRateMode": "The rate mode: 1 for Stable, 2 for Variable",
									"onBehalfOf": "The address that will be getting the debt",
									"referral": "The referral code used*",
									"reserve": "The address of the underlying asset being borrowed",
									"user": "The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()"
								}
							},
							"Deposit(address,address,address,uint256,uint16)": {
								"details": "Emitted on deposit()",
								"params": {
									"amount": "The amount deposited",
									"onBehalfOf": "The beneficiary of the deposit, receiving the aTokens",
									"referral": "The referral code used*",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address initiating the deposit"
								}
							},
							"FlashLoan(address,address,address,uint256,uint256,uint16)": {
								"details": "Emitted on flashLoan()",
								"params": {
									"amount": "The amount flash borrowed",
									"asset": "The address of the asset being flash borrowed",
									"initiator": "The address initiating the flash loan",
									"premium": "The fee flash borrowed",
									"referralCode": "The referral code used*",
									"target": "The address of the flash loan receiver contract"
								}
							},
							"LiquidationCall(address,address,address,uint256,uint256,address,bool)": {
								"details": "Emitted when a borrower is liquidated. This event is emitted by the LendingPool via LendingPoolCollateral manager using a DELEGATECALL This allows to have the events in the generated ABI for LendingPool.",
								"params": {
									"collateralAsset": "The address of the underlying asset used as collateral, to receive as result of the liquidation",
									"debtAsset": "The address of the underlying borrowed asset to be repaid with the liquidation",
									"debtToCover": "The debt amount of borrowed `asset` the liquidator wants to cover",
									"liquidatedCollateralAmount": "The amount of collateral received by the liiquidator",
									"liquidator": "The address of the liquidator",
									"receiveAToken": "`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*",
									"user": "The address of the borrower getting liquidated"
								}
							},
							"Paused()": {
								"details": "Emitted when the pause is triggered."
							},
							"RebalanceStableBorrowRate(address,address)": {
								"details": "Emitted on rebalanceStableBorrowRate()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user for which the rebalance has been executed*"
								}
							},
							"Repay(address,address,address,uint256)": {
								"details": "Emitted on repay()",
								"params": {
									"amount": "The amount repaid*",
									"repayer": "The address of the user initiating the repay(), providing the funds",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The beneficiary of the repayment, getting his debt reduced"
								}
							},
							"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)": {
								"details": "Emitted when the state of a reserve is updated. NOTE: This event is actually declared in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal, the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it gets added to the LendingPool ABI",
								"params": {
									"liquidityIndex": "The new liquidity index",
									"liquidityRate": "The new liquidity rate",
									"reserve": "The address of the underlying asset of the reserve",
									"stableBorrowRate": "The new stable borrow rate",
									"variableBorrowIndex": "The new variable borrow index*",
									"variableBorrowRate": "The new variable borrow rate"
								}
							},
							"ReserveUsedAsCollateralDisabled(address,address)": {
								"details": "Emitted on setUserUseReserveAsCollateral()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user enabling the usage as collateral*"
								}
							},
							"ReserveUsedAsCollateralEnabled(address,address)": {
								"details": "Emitted on setUserUseReserveAsCollateral()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user enabling the usage as collateral*"
								}
							},
							"Swap(address,address,uint256)": {
								"details": "Emitted on swapBorrowRateMode()",
								"params": {
									"rateMode": "The rate mode that the user wants to swap to*",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user swapping his rate mode"
								}
							},
							"Unpaused()": {
								"details": "Emitted when the pause is lifted."
							},
							"Withdraw(address,address,address,uint256)": {
								"details": "Emitted on withdraw()",
								"params": {
									"amount": "The amount to be withdrawn*",
									"reserve": "The address of the underlyng asset being withdrawn",
									"to": "Address that will receive the underlying",
									"user": "The address initiating the withdrawal, owner of aTokens"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"borrow(address,uint256,uint256,uint16,address)": {
								"details": "Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already deposited enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`",
								"params": {
									"amount": "The amount to be borrowed",
									"asset": "The address of the underlying asset to borrow",
									"interestRateMode": "The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable",
									"onBehalfOf": "Address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance*",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"deposit(address,uint256,address,uint16)": {
								"details": "Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User deposits 100 USDC and gets in return 100 aUSDC",
								"params": {
									"amount": "The amount to be deposited",
									"asset": "The address of the underlying asset to deposit",
									"onBehalfOf": "The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"
								}
							},
							"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
								"details": "Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned. IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://developers.aave.com",
								"params": {
									"amounts": "The amounts amounts being flash-borrowed",
									"assets": "The addresses of the assets being flash-borrowed",
									"modes": "Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address",
									"onBehalfOf": "The address  that will receive the debt in the case of using on `modes` 1 or 2",
									"params": "Variadic packed params to pass to the receiver as extra information",
									"receiverAddress": "The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"
								}
							},
							"getConfiguration(address)": {
								"details": "Returns the configuration of the reserve",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The configuration of the reserve*"
								}
							},
							"getReserveData(address)": {
								"details": "Returns the state and configuration of the reserve",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The state of the reserve*"
								}
							},
							"getReserveNormalizedIncome(address)": {
								"details": "Returns the normalized income normalized income of the reserve",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The reserve's normalized income"
								}
							},
							"getReserveNormalizedVariableDebt(address)": {
								"details": "Returns the normalized variable debt per unit of asset",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The reserve normalized variable debt"
								}
							},
							"getUserAccountData(address)": {
								"details": "Returns the user account data across all the reserves",
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"availableBorrowsETH": "the borrowing power left of the user",
									"currentLiquidationThreshold": "the liquidation threshold of the user",
									"healthFactor": "the current health factor of the user*",
									"ltv": "the loan to value of the user",
									"totalCollateralETH": "the total collateral in ETH of the user",
									"totalDebtETH": "the total debt in ETH of the user"
								}
							},
							"getUserConfiguration(address)": {
								"details": "Returns the configuration of the user across all the reserves",
								"params": {
									"user": "The user address"
								},
								"returns": {
									"_0": "The configuration of the user*"
								}
							},
							"liquidationCall(address,address,address,uint256,bool)": {
								"details": "Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk",
								"params": {
									"collateralAsset": "The address of the underlying asset used as collateral, to receive as result of the liquidation",
									"debtAsset": "The address of the underlying borrowed asset to be repaid with the liquidation",
									"debtToCover": "The debt amount of borrowed `asset` the liquidator wants to cover",
									"receiveAToken": "`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*",
									"user": "The address of the borrower getting liquidated"
								}
							},
							"rebalanceStableBorrowRate(address,address)": {
								"details": "Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been        borrowed at a stable rate and depositors are not earning enough",
								"params": {
									"asset": "The address of the underlying asset borrowed",
									"user": "The address of the user to be rebalanced*"
								}
							},
							"repay(address,uint256,uint256,address)": {
								"params": {
									"amount": "The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`",
									"asset": "The address of the borrowed underlying asset previously borrowed",
									"onBehalfOf": "Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed",
									"rateMode": "The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable"
								},
								"returns": {
									"_0": "The final amount repaid*"
								}
							},
							"setUserUseReserveAsCollateral(address,bool)": {
								"details": "Allows depositors to enable/disable a specific deposited asset as collateral",
								"params": {
									"asset": "The address of the underlying asset deposited",
									"useAsCollateral": "`true` if the user wants to use the deposit as collateral, `false` otherwise*"
								}
							},
							"swapBorrowRateMode(address,uint256)": {
								"details": "Allows a borrower to swap his debt between stable and variable mode, or viceversa",
								"params": {
									"asset": "The address of the underlying asset borrowed",
									"rateMode": "The rate mode that the user wants to swap to*"
								}
							},
							"withdraw(address,uint256,address)": {
								"details": "Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC",
								"params": {
									"amount": "The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance",
									"asset": "The address of the underlying asset to withdraw",
									"to": "Address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet"
								},
								"returns": {
									"_0": "The final amount withdrawn*"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"borrow(address,uint256,uint256,uint16,address)": "a415bcad",
							"deposit(address,uint256,address,uint16)": "e8eda9df",
							"finalizeTransfer(address,address,address,uint256,uint256,uint256)": "d5ed3933",
							"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": "ab9c4b5d",
							"getAddressesProvider()": "fe65acfe",
							"getConfiguration(address)": "c44b11f7",
							"getReserveData(address)": "35ea6a75",
							"getReserveNormalizedIncome(address)": "d15e0053",
							"getReserveNormalizedVariableDebt(address)": "386497fd",
							"getReservesList()": "d1946dbc",
							"getUserAccountData(address)": "bf92857c",
							"getUserConfiguration(address)": "4417a583",
							"initReserve(address,address,address,address,address)": "7a708e92",
							"liquidationCall(address,address,address,uint256,bool)": "00a718a9",
							"paused()": "5c975abb",
							"rebalanceStableBorrowRate(address,address)": "cd112382",
							"repay(address,uint256,uint256,address)": "573ade81",
							"setConfiguration(address,uint256)": "b8d29276",
							"setPause(bool)": "bedb86fb",
							"setReserveInterestRateStrategyAddress(address,address)": "1d2118f9",
							"setUserUseReserveAsCollateral(address,bool)": "5a3b74b9",
							"swapBorrowRateMode(address,uint256)": "94ba89a2",
							"withdraw(address,uint256,address)": "69328dec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowRateMode\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referral\",\"type\":\"uint16\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referral\",\"type\":\"uint16\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidatedCollateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"LiquidationCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"RebalanceStableBorrowRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"repayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowIndex\",\"type\":\"uint256\"}],\"name\":\"ReserveDataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceFromAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceToBefore\",\"type\":\"uint256\"}],\"name\":\"finalizeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"modes\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddressesProvider\",\"outputs\":[{\"internalType\":\"contract ILendingPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"},{\"internalType\":\"uint128\",\"name\":\"liquidityIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"variableBorrowIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentLiquidityRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentVariableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentStableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"internalType\":\"struct DataTypes.ReserveData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedVariableDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReservesList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserAccountData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalCollateralETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDebtETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableBorrowsETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentLiquidationThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ltv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"healthFactor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.UserConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"}],\"name\":\"initReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"liquidationCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"rebalanceStableBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"repay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"configuration\",\"type\":\"uint256\"}],\"name\":\"setConfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"val\",\"type\":\"bool\"}],\"name\":\"setPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rateStrategyAddress\",\"type\":\"address\"}],\"name\":\"setReserveInterestRateStrategyAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useAsCollateral\",\"type\":\"bool\"}],\"name\":\"setUserUseReserveAsCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"}],\"name\":\"swapBorrowRateMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Borrow(address,address,address,uint256,uint256,uint256,uint16)\":{\"details\":\"Emitted on borrow() and flashLoan() when debt needs to be opened\",\"params\":{\"amount\":\"The amount borrowed out\",\"borrowRate\":\"The numeric rate at which the user has borrowed\",\"borrowRateMode\":\"The rate mode: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address that will be getting the debt\",\"referral\":\"The referral code used*\",\"reserve\":\"The address of the underlying asset being borrowed\",\"user\":\"The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()\"}},\"Deposit(address,address,address,uint256,uint16)\":{\"details\":\"Emitted on deposit()\",\"params\":{\"amount\":\"The amount deposited\",\"onBehalfOf\":\"The beneficiary of the deposit, receiving the aTokens\",\"referral\":\"The referral code used*\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the deposit\"}},\"FlashLoan(address,address,address,uint256,uint256,uint16)\":{\"details\":\"Emitted on flashLoan()\",\"params\":{\"amount\":\"The amount flash borrowed\",\"asset\":\"The address of the asset being flash borrowed\",\"initiator\":\"The address initiating the flash loan\",\"premium\":\"The fee flash borrowed\",\"referralCode\":\"The referral code used*\",\"target\":\"The address of the flash loan receiver contract\"}},\"LiquidationCall(address,address,address,uint256,uint256,address,bool)\":{\"details\":\"Emitted when a borrower is liquidated. This event is emitted by the LendingPool via LendingPoolCollateral manager using a DELEGATECALL This allows to have the events in the generated ABI for LendingPool.\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"liquidatedCollateralAmount\":\"The amount of collateral received by the liiquidator\",\"liquidator\":\"The address of the liquidator\",\"receiveAToken\":\"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*\",\"user\":\"The address of the borrower getting liquidated\"}},\"Paused()\":{\"details\":\"Emitted when the pause is triggered.\"},\"RebalanceStableBorrowRate(address,address)\":{\"details\":\"Emitted on rebalanceStableBorrowRate()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user for which the rebalance has been executed*\"}},\"Repay(address,address,address,uint256)\":{\"details\":\"Emitted on repay()\",\"params\":{\"amount\":\"The amount repaid*\",\"repayer\":\"The address of the user initiating the repay(), providing the funds\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The beneficiary of the repayment, getting his debt reduced\"}},\"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when the state of a reserve is updated. NOTE: This event is actually declared in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal, the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it gets added to the LendingPool ABI\",\"params\":{\"liquidityIndex\":\"The new liquidity index\",\"liquidityRate\":\"The new liquidity rate\",\"reserve\":\"The address of the underlying asset of the reserve\",\"stableBorrowRate\":\"The new stable borrow rate\",\"variableBorrowIndex\":\"The new variable borrow index*\",\"variableBorrowRate\":\"The new variable borrow rate\"}},\"ReserveUsedAsCollateralDisabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral*\"}},\"ReserveUsedAsCollateralEnabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral*\"}},\"Swap(address,address,uint256)\":{\"details\":\"Emitted on swapBorrowRateMode()\",\"params\":{\"rateMode\":\"The rate mode that the user wants to swap to*\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user swapping his rate mode\"}},\"Unpaused()\":{\"details\":\"Emitted when the pause is lifted.\"},\"Withdraw(address,address,address,uint256)\":{\"details\":\"Emitted on withdraw()\",\"params\":{\"amount\":\"The amount to be withdrawn*\",\"reserve\":\"The address of the underlyng asset being withdrawn\",\"to\":\"Address that will receive the underlying\",\"user\":\"The address initiating the withdrawal, owner of aTokens\"}}},\"kind\":\"dev\",\"methods\":{\"borrow(address,uint256,uint256,uint16,address)\":{\"details\":\"Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already deposited enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`\",\"params\":{\"amount\":\"The amount to be borrowed\",\"asset\":\"The address of the underlying asset to borrow\",\"interestRateMode\":\"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"Address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance*\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"deposit(address,uint256,address,uint16)\":{\"details\":\"Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User deposits 100 USDC and gets in return 100 aUSDC\",\"params\":{\"amount\":\"The amount to be deposited\",\"asset\":\"The address of the underlying asset to deposit\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*\"}},\"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)\":{\"details\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned. IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://developers.aave.com\",\"params\":{\"amounts\":\"The amounts amounts being flash-borrowed\",\"assets\":\"The addresses of the assets being flash-borrowed\",\"modes\":\"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\",\"onBehalfOf\":\"The address  that will receive the debt in the case of using on `modes` 1 or 2\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*\"}},\"getConfiguration(address)\":{\"details\":\"Returns the configuration of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The configuration of the reserve*\"}},\"getReserveData(address)\":{\"details\":\"Returns the state and configuration of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The state of the reserve*\"}},\"getReserveNormalizedIncome(address)\":{\"details\":\"Returns the normalized income normalized income of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve's normalized income\"}},\"getReserveNormalizedVariableDebt(address)\":{\"details\":\"Returns the normalized variable debt per unit of asset\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve normalized variable debt\"}},\"getUserAccountData(address)\":{\"details\":\"Returns the user account data across all the reserves\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"availableBorrowsETH\":\"the borrowing power left of the user\",\"currentLiquidationThreshold\":\"the liquidation threshold of the user\",\"healthFactor\":\"the current health factor of the user*\",\"ltv\":\"the loan to value of the user\",\"totalCollateralETH\":\"the total collateral in ETH of the user\",\"totalDebtETH\":\"the total debt in ETH of the user\"}},\"getUserConfiguration(address)\":{\"details\":\"Returns the configuration of the user across all the reserves\",\"params\":{\"user\":\"The user address\"},\"returns\":{\"_0\":\"The configuration of the user*\"}},\"liquidationCall(address,address,address,uint256,bool)\":{\"details\":\"Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"receiveAToken\":\"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*\",\"user\":\"The address of the borrower getting liquidated\"}},\"rebalanceStableBorrowRate(address,address)\":{\"details\":\"Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been        borrowed at a stable rate and depositors are not earning enough\",\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"user\":\"The address of the user to be rebalanced*\"}},\"repay(address,uint256,uint256,address)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"onBehalfOf\":\"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\",\"rateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\"},\"returns\":{\"_0\":\"The final amount repaid*\"}},\"setUserUseReserveAsCollateral(address,bool)\":{\"details\":\"Allows depositors to enable/disable a specific deposited asset as collateral\",\"params\":{\"asset\":\"The address of the underlying asset deposited\",\"useAsCollateral\":\"`true` if the user wants to use the deposit as collateral, `false` otherwise*\"}},\"swapBorrowRateMode(address,uint256)\":{\"details\":\"Allows a borrower to swap his debt between stable and variable mode, or viceversa\",\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"rateMode\":\"The rate mode that the user wants to swap to*\"}},\"withdraw(address,uint256,address)\":{\"details\":\"Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\",\"params\":{\"amount\":\"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance\",\"asset\":\"The address of the underlying asset to withdraw\",\"to\":\"Address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet\"},\"returns\":{\"_0\":\"The final amount withdrawn*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"repay(address,uint256,uint256,address)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ILendingPool.sol\":\"ILendingPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ILendingPool.sol\":{\"keccak256\":\"0x5fa85a3137312e0d37602723af7408ed97636028699bdf7a7c7cc2dc34cdbafc\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://2f084d52067cbb14f10a00813b17c386681e17e295f878d3d8992cef63e67ac1\",\"dweb:/ipfs/QmWGjEYp4ZHmMxW7zkV8ctsmpc5kAYDw3yqaf1LZGsFFuJ\"]},\"contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0xcb0e2c4c19c0bde86907b6ab45b6a1db4932d3642fc51410d56c9411a65b9f1d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://38d01c9e664c64d46a15bbbda2933b5fb877d33f6746d2db32563962beea9119\",\"dweb:/ipfs/QmajEmcQZz3E6GzmLpeGvnEswuwCjVYy8svqdx8bxi4PuG\"]},\"contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0xb1d3ae94d3e4b3bf23b3394d820a3a2b5ba56fd5389f561f3fdd73ed1c60c391\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://47c11d578cc1e0df27e4e85cfe5831a48b78d6e939d34e17db4bc65a54c899fe\",\"dweb:/ipfs/QmYdYLkYFJe3psmQUH1S1uNhGE9xyxeDunuEW9gBPg9vDB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"repay(address,uint256,uint256,address)": {
								"notice": "Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ILendingPoolAddressesProvider.sol": {
				"ILendingPoolAddressesProvider": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "hasProxy",
									"type": "bool"
								}
							],
							"name": "AddressSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ConfigurationAdminUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "EmergencyAdminUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingPoolCollateralManagerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingPoolConfiguratorUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingPoolUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingRateOracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "newMarketId",
									"type": "string"
								}
							],
							"name": "MarketIdSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PriceOracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ProxyCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "getAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getEmergencyAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPoolCollateralManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPoolConfigurator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingRateOracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMarketId",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPriceOracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "setAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "impl",
									"type": "address"
								}
							],
							"name": "setAddressAsProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "setEmergencyAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "manager",
									"type": "address"
								}
							],
							"name": "setLendingPoolCollateralManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "configurator",
									"type": "address"
								}
							],
							"name": "setLendingPoolConfiguratorImpl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "setLendingPoolImpl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lendingRateOracle",
									"type": "address"
								}
							],
							"name": "setLendingRateOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "marketId",
									"type": "string"
								}
							],
							"name": "setMarketId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "setPoolAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "priceOracle",
									"type": "address"
								}
							],
							"name": "setPriceOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aave*",
						"details": "Main registry of addresses part of or connected to the protocol, including permissioned roles - Acting also as factory of proxies and admin of those, so with right to change its implementations - Owned by the Aave Governance",
						"kind": "dev",
						"methods": {},
						"title": "LendingPoolAddressesProvider contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAddress(bytes32)": "21f8a721",
							"getEmergencyAdmin()": "ddcaa9ea",
							"getLendingPool()": "0261bf8b",
							"getLendingPoolCollateralManager()": "712d9171",
							"getLendingPoolConfigurator()": "85c858b1",
							"getLendingRateOracle()": "3618abba",
							"getMarketId()": "568ef470",
							"getPoolAdmin()": "aecda378",
							"getPriceOracle()": "fca513a8",
							"setAddress(bytes32,address)": "ca446dd9",
							"setAddressAsProxy(bytes32,address)": "5dcc528c",
							"setEmergencyAdmin(address)": "35da3394",
							"setLendingPoolCollateralManager(address)": "398e5553",
							"setLendingPoolConfiguratorImpl(address)": "c12542df",
							"setLendingPoolImpl(address)": "5aef021f",
							"setLendingRateOracle(address)": "820d1274",
							"setMarketId(string)": "f67b1847",
							"setPoolAdmin(address)": "283d62ad",
							"setPriceOracle(address)": "530e784f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"hasProxy\",\"type\":\"bool\"}],\"name\":\"AddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ConfigurationAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"EmergencyAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolCollateralManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolConfiguratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingRateOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"MarketIdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ProxyCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEmergencyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolCollateralManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolConfigurator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingRateOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"setAddressAsProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setEmergencyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"setLendingPoolCollateralManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"configurator\",\"type\":\"address\"}],\"name\":\"setLendingPoolConfiguratorImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"setLendingPoolImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lendingRateOracle\",\"type\":\"address\"}],\"name\":\"setLendingRateOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"marketId\",\"type\":\"string\"}],\"name\":\"setMarketId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setPoolAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave*\",\"details\":\"Main registry of addresses part of or connected to the protocol, including permissioned roles - Acting also as factory of proxies and admin of those, so with right to change its implementations - Owned by the Aave Governance\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LendingPoolAddressesProvider contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ILendingPoolAddressesProvider.sol\":\"ILendingPoolAddressesProvider\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0xcb0e2c4c19c0bde86907b6ab45b6a1db4932d3642fc51410d56c9411a65b9f1d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://38d01c9e664c64d46a15bbbda2933b5fb877d33f6746d2db32563962beea9119\",\"dweb:/ipfs/QmajEmcQZz3E6GzmLpeGvnEswuwCjVYy8svqdx8bxi4PuG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/misc/WalletBalanceProvider.sol": {
				"WalletBalanceProvider": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "users",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "tokens",
									"type": "address[]"
								}
							],
							"name": "batchBalanceOf",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserWalletBalances",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"author": "Aave, influenced by https://github.com/wbobeirne/eth-balance-checker/blob/master/contracts/BalanceChecker.sol",
						"details": "NOTE: THIS CONTRACT IS NOT USED WITHIN THE AAVE PROTOCOL. It's an accessory contract used to reduce the number of calls towards the blockchain from the Aave backend.*",
						"kind": "dev",
						"methods": {
							"balanceOf(address,address)": {
								"details": "Check the token balance of a wallet in a token contract Returns the balance of the token for user. Avoids possible errors: - return 0 on non-contract address*"
							},
							"batchBalanceOf(address[],address[])": {
								"params": {
									"tokens": "The list of tokens",
									"users": "The list of users"
								},
								"returns": {
									"_0": "And array with the concatenation of, for each user, his/her balances*"
								}
							},
							"getUserWalletBalances(address,address)": {
								"details": "provides balances of user wallet for all reserves available on the pool"
							}
						},
						"title": "WalletBalanceProvider contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/misc/WalletBalanceProvider.sol\":1087:3949  contract WalletBalanceProvider {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/misc/WalletBalanceProvider.sol\":1087:3949  contract WalletBalanceProvider {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x02405343\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb59b28ef\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf7888aec\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/misc/WalletBalanceProvider.sol\":1520:1543  msg.sender.isContract() */\n      tag_8\n        /* \"contracts/misc/WalletBalanceProvider.sol\":1520:1530  msg.sender */\n      caller\n        /* \"contracts/misc/WalletBalanceProvider.sol\":1520:1541  msg.sender.isContract */\n      tag_9\n        /* \"contracts/misc/WalletBalanceProvider.sol\":1520:1543  msg.sender.isContract() */\n      jump\t// in\n    tag_8:\n        /* \"contracts/misc/WalletBalanceProvider.sol\":1512:1550  require(msg.sender.isContract(), '22') */\n      tag_10\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_11\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_10:\n        /* \"contracts/misc/WalletBalanceProvider.sol\":1087:3949  contract WalletBalanceProvider {... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2875:3947  function getUserWalletBalances(address provider, address user)... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_14\n      tag_15\n      calldatasize\n      0x04\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap3\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2351:2777  function batchBalanceOf(address[] calldata users, address[] calldata tokens)... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n        /* \"contracts/misc/WalletBalanceProvider.sol\":1751:2076  function balanceOf(address user, address token) public view returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_16\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":686:1272  function isContract(address account) internal view returns (bool) {... */\n    tag_9:\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":746:750  bool */\n      0x00\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1185:1205  extcodehash(account) */\n      dup2\n      extcodehash\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1032:1098  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1224:1247  codehash != accountHash */\n      dup2\n      dup2\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1224:1266  codehash != accountHash && codehash != 0x0 */\n      tag_34\n      jumpi\n      pop\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1251:1266  codehash != 0x0 */\n      dup2\n      iszero\n      iszero\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1224:1266  codehash != accountHash && codehash != 0x0 */\n    tag_34:\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":1216:1267  return (codehash != accountHash && codehash != 0x0) */\n      swap5\n        /* \"contracts/dependencies/openzeppelin/contracts/Address.sol\":686:1272  function isContract(address account) internal view returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2875:3947  function getUserWalletBalances(address provider, address user)... */\n    tag_17:\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2973:2989  address[] memory */\n      0x60\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2991:3007  uint256[] memory */\n      dup1\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3017:3034  ILendingPool pool */\n      0x00\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3080:3088  provider */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3050:3104  ILendingPoolAddressesProvider(provider).getLendingPool */\n      and\n      0x0261bf8b\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3050:3106  ILendingPoolAddressesProvider(provider).getLendingPool() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_38\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_38:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3017:3107  ILendingPool pool = ILendingPool(ILendingPoolAddressesProvider(provider).getLendingPool()) */\n      swap1\n      pop\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3114:3139  address[] memory reserves */\n      0x60\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3142:3146  pool */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3142:3162  pool.getReservesList */\n      and\n      0xd1946dbc\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3142:3164  pool.getReservesList() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_43\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_43:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_44\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3114:3164  address[] memory reserves = pool.getReservesList() */\n      swap1\n      pop\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3170:3202  address[] memory reservesWithEth */\n      0x60\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3219:3227  reserves */\n      dup2\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3219:3234  reserves.length */\n      mload\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3237:3238  1 */\n      0x01\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3219:3238  reserves.length + 1 */\n      add\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3205:3239  new address[](reserves.length + 1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_47\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_47:\n      pop\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3170:3239  address[] memory reservesWithEth = new address[](reserves.length + 1) */\n      swap1\n      pop\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3250:3259  uint256 i */\n      0x00\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3245:3338  for (uint256 i = 0; i < reserves.length; i++) {... */\n    tag_48:\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3269:3277  reserves */\n      dup3\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3269:3284  reserves.length */\n      mload\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3265:3266  i */\n      dup2\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3265:3284  i < reserves.length */\n      lt\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3245:3338  for (uint256 i = 0; i < reserves.length; i++) {... */\n      iszero\n      tag_49\n      jumpi\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3320:3328  reserves */\n      dup3\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3329:3330  i */\n      dup2\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3320:3331  reserves[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_51\n      jumpi\n      invalid\n    tag_51:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3299:3314  reservesWithEth */\n      dup3\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3315:3316  i */\n      dup3\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3299:3317  reservesWithEth[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_52\n      jumpi\n      invalid\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3299:3331  reservesWithEth[i] = reserves[i] */\n      swap1\n      swap3\n      and\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3299:3317  reservesWithEth[i] */\n      0x20\n      swap3\n      dup4\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      add\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3299:3331  reservesWithEth[i] = reserves[i] */\n      mstore\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3286:3289  i++ */\n      0x01\n      add\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3245:3338  for (uint256 i = 0; i < reserves.length; i++) {... */\n      jump(tag_48)\n    tag_49:\n      pop\n        /* \"contracts/misc/WalletBalanceProvider.sol\":1323:1365  0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3343:3358  reservesWithEth */\n      dup2\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3359:3367  reserves */\n      dup4\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3359:3374  reserves.length */\n      mload\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3343:3375  reservesWithEth[reserves.length] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_53\n      jumpi\n      invalid\n    tag_53:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3343:3394  reservesWithEth[reserves.length] = MOCK_ETH_ADDRESS */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3401:3426  uint256[] memory balances */\n      0x60\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3443:3458  reservesWithEth */\n      dup2\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3443:3465  reservesWithEth.length */\n      mload\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3429:3466  new uint256[](reservesWithEth.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_55\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_55:\n      pop\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3401:3466  uint256[] memory balances = new uint256[](reservesWithEth.length) */\n      swap1\n      pop\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3478:3487  uint256 j */\n      0x00\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3473:3835  for (uint256 j = 0; j < reserves.length; j++) {... */\n    tag_56:\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3497:3505  reserves */\n      dup4\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3497:3512  reserves.length */\n      mload\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3493:3494  j */\n      dup2\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3493:3512  j < reserves.length */\n      lt\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3473:3835  for (uint256 j = 0; j < reserves.length; j++) {... */\n      iszero\n      tag_57\n      jumpi\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3527:3581  DataTypes.ReserveConfigurationMap memory configuration */\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3592:3596  pool */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3592:3613  pool.getConfiguration */\n      and\n      0xc44b11f7\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3614:3629  reservesWithEth */\n      dup6\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3630:3631  j */\n      dup5\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3614:3632  reservesWithEth[j] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_61\n      jumpi\n      invalid\n    tag_61:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3592:3633  pool.getConfiguration(reservesWithEth[j]) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_66\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3527:3633  DataTypes.ReserveConfigurationMap memory configuration =... */\n      swap1\n      pop\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3643:3656  bool isActive */\n      0x00\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3666:3696  configuration.getFlagsMemory() */\n      tag_69\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3666:3679  configuration */\n      dup3\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3666:3694  configuration.getFlagsMemory */\n      tag_70\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3666:3696  configuration.getFlagsMemory() */\n      jump\t// in\n    tag_69:\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3642:3696  (bool isActive, , , ) = configuration.getFlagsMemory() */\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3710:3718  isActive */\n      dup1\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3705:3772  if (!isActive) {... */\n      tag_71\n      jumpi\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3744:3745  0 */\n      0x00\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3730:3738  balances */\n      dup5\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3739:3740  j */\n      dup5\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3730:3741  balances[j] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_72\n      jumpi\n      invalid\n    tag_72:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3730:3745  balances[j] = 0 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3755:3763  continue */\n      pop\n      pop\n      jump(tag_58)\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3705:3772  if (!isActive) {... */\n    tag_71:\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3793:3828  balanceOf(user, reservesWithEth[j]) */\n      tag_73\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3803:3807  user */\n      dup11\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3809:3824  reservesWithEth */\n      dup7\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3825:3826  j */\n      dup6\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3809:3827  reservesWithEth[j] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_74\n      jumpi\n      invalid\n    tag_74:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3793:3802  balanceOf */\n      tag_30\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3793:3828  balanceOf(user, reservesWithEth[j]) */\n      jump\t// in\n    tag_73:\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3779:3787  balances */\n      dup5\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3788:3789  j */\n      dup5\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3779:3790  balances[j] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_75\n      jumpi\n      invalid\n    tag_75:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3779:3828  balances[j] = balanceOf(user, reservesWithEth[j]) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3473:3835  for (uint256 j = 0; j < reserves.length; j++) {... */\n      pop\n      pop\n    tag_58:\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3514:3517  j++ */\n      0x01\n      add\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3473:3835  for (uint256 j = 0; j < reserves.length; j++) {... */\n      jump(tag_56)\n    tag_57:\n      pop\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3868:3901  balanceOf(user, MOCK_ETH_ADDRESS) */\n      tag_76\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3878:3882  user */\n      dup8\n        /* \"contracts/misc/WalletBalanceProvider.sol\":1323:1365  0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3868:3877  balanceOf */\n      tag_30\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3868:3901  balanceOf(user, MOCK_ETH_ADDRESS) */\n      jump\t// in\n    tag_76:\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3840:3848  balances */\n      dup2\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3849:3857  reserves */\n      dup5\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3849:3864  reserves.length */\n      mload\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3840:3865  balances[reserves.length] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_77\n      jumpi\n      invalid\n    tag_77:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3840:3901  balances[reserves.length] = balanceOf(user, MOCK_ETH_ADDRESS) */\n      mstore\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3916:3931  reservesWithEth */\n      swap1\n      swap5\n      pop\n        /* \"contracts/misc/WalletBalanceProvider.sol\":3933:3941  balances */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2875:3947  function getUserWalletBalances(address provider, address user)... */\n    tag_35:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2351:2777  function batchBalanceOf(address[] calldata users, address[] calldata tokens)... */\n    tag_24:\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2463:2479  uint256[] memory */\n      0x60\n      dup1\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2531:2559  users.length * tokens.length */\n      dup5\n      dup4\n      mul\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2517:2560  new uint256[](users.length * tokens.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_80\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_80:\n      pop\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2489:2560  uint256[] memory balances = new uint256[](users.length * tokens.length) */\n      swap1\n      pop\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2572:2581  uint256 i */\n      0x00\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2567:2751  for (uint256 i = 0; i < users.length; i++) {... */\n    tag_81:\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2587:2603  i < users.length */\n      dup6\n      dup2\n      lt\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2567:2751  for (uint256 i = 0; i < users.length; i++) {... */\n      iszero\n      tag_82\n      jumpi\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2623:2632  uint256 j */\n      0x00\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2618:2745  for (uint256 j = 0; j < tokens.length; j++) {... */\n    tag_84:\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2638:2655  j < tokens.length */\n      dup5\n      dup2\n      lt\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2618:2745  for (uint256 j = 0; j < tokens.length; j++) {... */\n      iszero\n      tag_85\n      jumpi\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2706:2736  balanceOf(users[i], tokens[j]) */\n      tag_87\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2716:2721  users */\n      dup9\n      dup9\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2722:2723  i */\n      dup5\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2716:2724  users[i] */\n      dup2\n      dup2\n      lt\n      tag_88\n      jumpi\n      invalid\n    tag_88:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2726:2732  tokens */\n      dup8\n      dup8\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2733:2734  j */\n      dup5\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2726:2735  tokens[j] */\n      dup2\n      dup2\n      lt\n      tag_91\n      jumpi\n      invalid\n    tag_91:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2706:2736  balanceOf(users[i], tokens[j]) */\n    tag_87:\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2672:2703  balances[i * tokens.length + j] */\n      dup4\n      mload\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2672:2680  balances */\n      dup5\n      swap1\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2681:2698  i * tokens.length */\n      dup5\n      dup9\n      mul\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2681:2702  i * tokens.length + j */\n      dup5\n      add\n      swap1\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2672:2703  balances[i * tokens.length + j] */\n      dup2\n      lt\n      tag_93\n      jumpi\n      invalid\n    tag_93:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2672:2736  balances[i * tokens.length + j] = balanceOf(users[i], tokens[j]) */\n      mstore\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2657:2660  j++ */\n      0x01\n      add\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2618:2745  for (uint256 j = 0; j < tokens.length; j++) {... */\n      jump(tag_84)\n    tag_85:\n      pop\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2605:2608  i++ */\n      0x01\n      add\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2567:2751  for (uint256 i = 0; i < users.length; i++) {... */\n      jump(tag_81)\n    tag_82:\n      pop\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2764:2772  balances */\n      swap6\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2351:2777  function batchBalanceOf(address[] calldata users, address[] calldata tokens)... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/misc/WalletBalanceProvider.sol\":1751:2076  function balanceOf(address user, address token) public view returns (uint256) {... */\n    tag_30:\n        /* \"contracts/misc/WalletBalanceProvider.sol\":1820:1827  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/WalletBalanceProvider.sol\":1839:1864  token == MOCK_ETH_ADDRESS */\n      dup3\n      and\n        /* \"contracts/misc/WalletBalanceProvider.sol\":1323:1365  0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n        /* \"contracts/misc/WalletBalanceProvider.sol\":1839:1864  token == MOCK_ETH_ADDRESS */\n      eq\n        /* \"contracts/misc/WalletBalanceProvider.sol\":1835:2043  if (token == MOCK_ETH_ADDRESS) {... */\n      iszero\n      tag_95\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/WalletBalanceProvider.sol\":1881:1893  user.balance */\n      dup3\n      and\n      balance\n        /* \"contracts/misc/WalletBalanceProvider.sol\":1874:1893  return user.balance */\n      jump(tag_94)\n        /* \"contracts/misc/WalletBalanceProvider.sol\":1835:2043  if (token == MOCK_ETH_ADDRESS) {... */\n    tag_95:\n        /* \"contracts/misc/WalletBalanceProvider.sol\":1972:1990  token.isContract() */\n      tag_97\n        /* \"contracts/misc/WalletBalanceProvider.sol\":1972:1977  token */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/WalletBalanceProvider.sol\":1972:1988  token.isContract */\n      and\n      tag_9\n        /* \"contracts/misc/WalletBalanceProvider.sol\":1972:1990  token.isContract() */\n      jump\t// in\n    tag_97:\n        /* \"contracts/misc/WalletBalanceProvider.sol\":1968:2043  if (token.isContract()) {... */\n      iszero\n      tag_98\n      jumpi\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2007:2036  IERC20(token).balanceOf(user) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2007:2030  IERC20(token).balanceOf */\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2007:2036  IERC20(token).balanceOf(user) */\n      tag_99\n      swap1\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2031:2035  user */\n      dup7\n      swap1\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2007:2036  IERC20(token).balanceOf(user) */\n      0x04\n      add\n      tag_63\n      jump\t// in\n    tag_99:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_102\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_102:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2000:2036  return IERC20(token).balanceOf(user) */\n      swap1\n      pop\n      jump(tag_94)\n        /* \"contracts/misc/WalletBalanceProvider.sol\":1968:2043  if (token.isContract()) {... */\n    tag_98:\n        /* \"contracts/misc/WalletBalanceProvider.sol\":2048:2071  revert('INVALID_TOKEN') */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_11\n      swap1\n      tag_106\n      jump\t// in\n        /* \"contracts/misc/WalletBalanceProvider.sol\":1751:2076  function balanceOf(address user, address token) public view returns (uint256) {... */\n    tag_94:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/protocol/libraries/configuration/ReserveConfiguration.sol\":11756:12111  function getFlagsMemory(DataTypes.ReserveConfigurationMap memory self)... */\n    tag_70:\n        /* \"contracts/protocol/libraries/configuration/ReserveConfiguration.sol\":11940:11949  self.data */\n      mload\n        /* \"contracts/protocol/libraries/configuration/ReserveConfiguration.sol\":11952:11964  ~ACTIVE_MASK */\n      0x0100000000000000\n        /* \"contracts/protocol/libraries/configuration/ReserveConfiguration.sol\":11940:11964  self.data & ~ACTIVE_MASK */\n      dup2\n      and\n        /* \"contracts/protocol/libraries/configuration/ReserveConfiguration.sol\":11939:11970  (self.data & ~ACTIVE_MASK) != 0 */\n      iszero\n      iszero\n      swap2\n        /* \"contracts/protocol/libraries/configuration/ReserveConfiguration.sol\":11991:12003  ~FROZEN_MASK */\n      0x0200000000000000\n        /* \"contracts/protocol/libraries/configuration/ReserveConfiguration.sol\":11979:12003  self.data & ~FROZEN_MASK */\n      dup3\n      and\n        /* \"contracts/protocol/libraries/configuration/ReserveConfiguration.sol\":11978:12009  (self.data & ~FROZEN_MASK) != 0 */\n      iszero\n      iszero\n      swap2\n        /* \"contracts/protocol/libraries/configuration/ReserveConfiguration.sol\":12030:12045  ~BORROWING_MASK */\n      0x0400000000000000\n        /* \"contracts/protocol/libraries/configuration/ReserveConfiguration.sol\":12018:12045  self.data & ~BORROWING_MASK */\n      dup2\n      and\n        /* \"contracts/protocol/libraries/configuration/ReserveConfiguration.sol\":12017:12051  (self.data & ~BORROWING_MASK) != 0 */\n      iszero\n      iszero\n      swap2\n        /* \"contracts/protocol/libraries/configuration/ReserveConfiguration.sol\":12072:12094  ~STABLE_BORROWING_MASK */\n      0x0800000000000000\n        /* \"contracts/protocol/libraries/configuration/ReserveConfiguration.sol\":12060:12094  self.data & ~STABLE_BORROWING_MASK */\n      swap1\n      swap2\n      and\n        /* \"contracts/protocol/libraries/configuration/ReserveConfiguration.sol\":12059:12100  (self.data & ~STABLE_BORROWING_MASK) != 0 */\n      iszero\n      iszero\n      swap1\n        /* \"contracts/protocol/libraries/configuration/ReserveConfiguration.sol\":11756:12111  function getFlagsMemory(DataTypes.ReserveConfigurationMap memory self)... */\n      jump\t// out\n    tag_60:\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"--CODEGEN--\":142:276   */\n    tag_109:\n        /* \"--CODEGEN--\":220:233   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":238:271   */\n      tag_94\n        /* \"--CODEGEN--\":220:233   */\n      dup2\n        /* \"--CODEGEN--\":238:271   */\n      tag_112\n      jump\t// in\n        /* \"--CODEGEN--\":301:653   */\n    tag_113:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":431:434   */\n      dup4\n        /* \"--CODEGEN--\":424:428   */\n      0x1f\n        /* \"--CODEGEN--\":416:422   */\n      dup5\n        /* \"--CODEGEN--\":412:429   */\n      add\n        /* \"--CODEGEN--\":408:435   */\n      slt\n        /* \"--CODEGEN--\":398:400   */\n      tag_115\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":439:451   */\n      revert\n        /* \"--CODEGEN--\":398:400   */\n    tag_115:\n      pop\n        /* \"--CODEGEN--\":469:489   */\n      dup2\n      calldataload\n        /* \"--CODEGEN--\":509:527   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":498:528   */\n      dup2\n      gt\n        /* \"--CODEGEN--\":495:497   */\n      iszero\n      tag_116\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":531:543   */\n      revert\n        /* \"--CODEGEN--\":495:497   */\n    tag_116:\n        /* \"--CODEGEN--\":575:579   */\n      0x20\n        /* \"--CODEGEN--\":567:573   */\n      dup4\n        /* \"--CODEGEN--\":563:580   */\n      add\n        /* \"--CODEGEN--\":551:580   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":626:629   */\n      dup4\n        /* \"--CODEGEN--\":575:579   */\n      0x20\n      dup1\n        /* \"--CODEGEN--\":610:616   */\n      dup4\n        /* \"--CODEGEN--\":606:623   */\n      mul\n        /* \"--CODEGEN--\":567:573   */\n      dup6\n        /* \"--CODEGEN--\":592:624   */\n      add\n      add\n        /* \"--CODEGEN--\":589:630   */\n      gt\n        /* \"--CODEGEN--\":586:588   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":643:644   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":633:645   */\n      revert\n        /* \"--CODEGEN--\":1965:2206   */\n    tag_90:\n      0x00\n        /* \"--CODEGEN--\":2069:2071   */\n      0x20\n        /* \"--CODEGEN--\":2057:2066   */\n      dup3\n        /* \"--CODEGEN--\":2048:2055   */\n      dup5\n        /* \"--CODEGEN--\":2044:2067   */\n      sub\n        /* \"--CODEGEN--\":2040:2072   */\n      slt\n        /* \"--CODEGEN--\":2037:2039   */\n      iszero\n      tag_119\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":2075:2087   */\n      revert\n        /* \"--CODEGEN--\":2037:2039   */\n    tag_119:\n        /* \"--CODEGEN--\":85:91   */\n      dup2\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_120\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_112\n      jump\t// in\n    tag_120:\n        /* \"--CODEGEN--\":2127:2190   */\n      swap4\n        /* \"--CODEGEN--\":2031:2206   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":2213:2476   */\n    tag_40:\n      0x00\n        /* \"--CODEGEN--\":2328:2330   */\n      0x20\n        /* \"--CODEGEN--\":2316:2325   */\n      dup3\n        /* \"--CODEGEN--\":2307:2314   */\n      dup5\n        /* \"--CODEGEN--\":2303:2326   */\n      sub\n        /* \"--CODEGEN--\":2299:2331   */\n      slt\n        /* \"--CODEGEN--\":2296:2298   */\n      iszero\n      tag_122\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":2334:2346   */\n      revert\n        /* \"--CODEGEN--\":2296:2298   */\n    tag_122:\n        /* \"--CODEGEN--\":226:232   */\n      dup2\n        /* \"--CODEGEN--\":220:233   */\n      mload\n        /* \"--CODEGEN--\":238:271   */\n      tag_120\n        /* \"--CODEGEN--\":265:270   */\n      dup2\n        /* \"--CODEGEN--\":238:271   */\n      tag_112\n      jump\t// in\n        /* \"--CODEGEN--\":2483:2849   */\n    tag_16:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":2604:2606   */\n      0x40\n        /* \"--CODEGEN--\":2592:2601   */\n      dup4\n        /* \"--CODEGEN--\":2583:2590   */\n      dup6\n        /* \"--CODEGEN--\":2579:2602   */\n      sub\n        /* \"--CODEGEN--\":2575:2607   */\n      slt\n        /* \"--CODEGEN--\":2572:2574   */\n      iszero\n      tag_125\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":2610:2622   */\n      revert\n        /* \"--CODEGEN--\":2572:2574   */\n    tag_125:\n        /* \"--CODEGEN--\":85:91   */\n      dup3\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_126\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_112\n      jump\t// in\n    tag_126:\n        /* \"--CODEGEN--\":2662:2725   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":2762:2764   */\n      0x20\n        /* \"--CODEGEN--\":2801:2823   */\n      dup4\n      add\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_127\n        /* \"--CODEGEN--\":72:92   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_112\n      jump\t// in\n    tag_127:\n        /* \"--CODEGEN--\":2770:2833   */\n      dup1\n      swap2\n      pop\n      pop\n        /* \"--CODEGEN--\":2566:2849   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":2856:3534   */\n    tag_23:\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"--CODEGEN--\":3047:3049   */\n      0x40\n        /* \"--CODEGEN--\":3035:3044   */\n      dup6\n        /* \"--CODEGEN--\":3026:3033   */\n      dup8\n        /* \"--CODEGEN--\":3022:3045   */\n      sub\n        /* \"--CODEGEN--\":3018:3050   */\n      slt\n        /* \"--CODEGEN--\":3015:3017   */\n      iszero\n      tag_129\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":3053:3065   */\n      revert\n        /* \"--CODEGEN--\":3015:3017   */\n    tag_129:\n        /* \"--CODEGEN--\":3111:3128   */\n      dup5\n        /* \"--CODEGEN--\":3098:3129   */\n      calldataload\n        /* \"--CODEGEN--\":3149:3167   */\n      0xffffffffffffffff\n      dup1\n        /* \"--CODEGEN--\":3141:3147   */\n      dup3\n        /* \"--CODEGEN--\":3138:3168   */\n      gt\n        /* \"--CODEGEN--\":3135:3137   */\n      iszero\n      tag_130\n      jumpi\n      dup4\n      dup5\n        /* \"--CODEGEN--\":3171:3183   */\n      revert\n        /* \"--CODEGEN--\":3135:3137   */\n    tag_130:\n        /* \"--CODEGEN--\":3209:3289   */\n      tag_131\n        /* \"--CODEGEN--\":3281:3288   */\n      dup9\n        /* \"--CODEGEN--\":3272:3278   */\n      dup4\n        /* \"--CODEGEN--\":3261:3270   */\n      dup10\n        /* \"--CODEGEN--\":3257:3279   */\n      add\n        /* \"--CODEGEN--\":3209:3289   */\n      tag_113\n      jump\t// in\n    tag_131:\n        /* \"--CODEGEN--\":3191:3289   */\n      swap1\n      swap7\n      pop\n      swap5\n      pop\n        /* \"--CODEGEN--\":3354:3356   */\n      0x20\n        /* \"--CODEGEN--\":3339:3357   */\n      dup8\n      add\n        /* \"--CODEGEN--\":3326:3358   */\n      calldataload\n      swap2\n      pop\n        /* \"--CODEGEN--\":3367:3397   */\n      dup1\n      dup3\n      gt\n        /* \"--CODEGEN--\":3364:3366   */\n      iszero\n      tag_132\n      jumpi\n      dup4\n      dup5\n        /* \"--CODEGEN--\":3400:3412   */\n      revert\n        /* \"--CODEGEN--\":3364:3366   */\n    tag_132:\n      pop\n        /* \"--CODEGEN--\":3438:3518   */\n      tag_133\n        /* \"--CODEGEN--\":3510:3517   */\n      dup8\n        /* \"--CODEGEN--\":3501:3507   */\n      dup3\n        /* \"--CODEGEN--\":3490:3499   */\n      dup9\n        /* \"--CODEGEN--\":3486:3508   */\n      add\n        /* \"--CODEGEN--\":3438:3518   */\n      tag_113\n      jump\t// in\n    tag_133:\n        /* \"--CODEGEN--\":3009:3534   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n        /* \"--CODEGEN--\":3420:3518   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"--CODEGEN--\":3009:3534   */\n      jump\t// out\n        /* \"--CODEGEN--\":3541:3933   */\n    tag_45:\n      0x00\n        /* \"--CODEGEN--\":3681:3683   */\n      0x20\n      dup1\n        /* \"--CODEGEN--\":3669:3678   */\n      dup4\n        /* \"--CODEGEN--\":3660:3667   */\n      dup6\n        /* \"--CODEGEN--\":3656:3679   */\n      sub\n        /* \"--CODEGEN--\":3652:3684   */\n      slt\n        /* \"--CODEGEN--\":3649:3651   */\n      iszero\n      tag_135\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":3687:3699   */\n      revert\n        /* \"--CODEGEN--\":3649:3651   */\n    tag_135:\n        /* \"--CODEGEN--\":3738:3755   */\n      dup3\n        /* \"--CODEGEN--\":3732:3756   */\n      mload\n        /* \"--CODEGEN--\":3776:3794   */\n      0xffffffffffffffff\n      dup1\n        /* \"--CODEGEN--\":3768:3774   */\n      dup3\n        /* \"--CODEGEN--\":3765:3795   */\n      gt\n        /* \"--CODEGEN--\":3762:3764   */\n      iszero\n      tag_136\n      jumpi\n      dup4\n      dup5\n        /* \"--CODEGEN--\":3798:3810   */\n      revert\n        /* \"--CODEGEN--\":3762:3764   */\n    tag_136:\n        /* \"--CODEGEN--\":3900:3906   */\n      dup2\n        /* \"--CODEGEN--\":3889:3898   */\n      dup6\n        /* \"--CODEGEN--\":3885:3907   */\n      add\n      swap2\n      pop\n        /* \"--CODEGEN--\":807:810   */\n      dup6\n        /* \"--CODEGEN--\":800:804   */\n      0x1f\n        /* \"--CODEGEN--\":792:798   */\n      dup4\n        /* \"--CODEGEN--\":788:805   */\n      add\n        /* \"--CODEGEN--\":784:811   */\n      slt\n        /* \"--CODEGEN--\":774:776   */\n      tag_137\n      jumpi\n      dup4\n      dup5\n        /* \"--CODEGEN--\":815:827   */\n      revert\n        /* \"--CODEGEN--\":774:776   */\n    tag_137:\n        /* \"--CODEGEN--\":855:861   */\n      dup2\n        /* \"--CODEGEN--\":849:862   */\n      mload\n        /* \"--CODEGEN--\":3776:3794   */\n      dup2\n        /* \"--CODEGEN--\":10207:10213   */\n      dup2\n        /* \"--CODEGEN--\":10204:10234   */\n      gt\n        /* \"--CODEGEN--\":10201:10203   */\n      iszero\n      tag_138\n      jumpi\n      dup5\n      dup6\n        /* \"--CODEGEN--\":10237:10249   */\n      revert\n        /* \"--CODEGEN--\":10201:10203   */\n    tag_138:\n        /* \"--CODEGEN--\":3681:3683   */\n      dup4\n        /* \"--CODEGEN--\":10274:10280   */\n      dup2\n        /* \"--CODEGEN--\":10270:10287   */\n      mul\n      swap2\n      pop\n        /* \"--CODEGEN--\":877:957   */\n      tag_139\n        /* \"--CODEGEN--\":3681:3683   */\n      dup5\n        /* \"--CODEGEN--\":10270:10287   */\n      dup4\n        /* \"--CODEGEN--\":10335:10350   */\n      add\n        /* \"--CODEGEN--\":877:957   */\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"--CODEGEN--\":985:1006   */\n      dup2\n      dup2\n      mstore\n        /* \"--CODEGEN--\":1042:1056   */\n      dup5\n      dup2\n      add\n      swap1\n        /* \"--CODEGEN--\":1017:1034   */\n      dup5\n      dup7\n      add\n        /* \"--CODEGEN--\":1122:1149   */\n      dup5\n      dup7\n      add\n      dup8\n      add\n        /* \"--CODEGEN--\":1119:1155   */\n      dup11\n      lt\n        /* \"--CODEGEN--\":1116:1118   */\n      iszero\n      tag_141\n      jumpi\n      dup8\n      dup9\n        /* \"--CODEGEN--\":1158:1170   */\n      revert\n        /* \"--CODEGEN--\":1116:1118   */\n    tag_141:\n      dup8\n        /* \"--CODEGEN--\":1184:1194   */\n      swap6\n      pop\n        /* \"--CODEGEN--\":1178:1395   */\n    tag_142:\n        /* \"--CODEGEN--\":1203:1209   */\n      dup4\n        /* \"--CODEGEN--\":1200:1201   */\n      dup7\n        /* \"--CODEGEN--\":1197:1210   */\n      lt\n        /* \"--CODEGEN--\":1178:1395   */\n      iszero\n      tag_144\n      jumpi\n        /* \"--CODEGEN--\":1283:1331   */\n      tag_145\n        /* \"--CODEGEN--\":1327:1330   */\n      dup11\n        /* \"--CODEGEN--\":1315:1325   */\n      dup3\n        /* \"--CODEGEN--\":1283:1331   */\n      tag_109\n      jump\t// in\n    tag_145:\n        /* \"--CODEGEN--\":1271:1332   */\n      dup4\n      mstore\n        /* \"--CODEGEN--\":1225:1226   */\n      0x01\n        /* \"--CODEGEN--\":1218:1227   */\n      swap6\n      swap1\n      swap6\n      add\n      swap5\n        /* \"--CODEGEN--\":1346:1360   */\n      swap2\n      dup7\n      add\n      swap2\n        /* \"--CODEGEN--\":1374:1388   */\n      dup7\n      add\n        /* \"--CODEGEN--\":1178:1395   */\n      jump(tag_142)\n    tag_144:\n      pop\n        /* \"--CODEGEN--\":3818:3917   */\n      swap9\n        /* \"--CODEGEN--\":3643:3933   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":3940:4285   */\n    tag_68:\n      0x00\n        /* \"--CODEGEN--\":4096:4098   */\n      0x20\n        /* \"--CODEGEN--\":4084:4093   */\n      dup3\n        /* \"--CODEGEN--\":4075:4082   */\n      dup5\n        /* \"--CODEGEN--\":4071:4094   */\n      sub\n        /* \"--CODEGEN--\":4067:4099   */\n      slt\n        /* \"--CODEGEN--\":4064:4066   */\n      iszero\n      tag_147\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":4102:4114   */\n      revert\n        /* \"--CODEGEN--\":4064:4066   */\n    tag_147:\n        /* \"--CODEGEN--\":1633:1653   */\n      tag_148\n        /* \"--CODEGEN--\":4096:4098   */\n      0x20\n        /* \"--CODEGEN--\":1633:1653   */\n      tag_140\n      jump\t// in\n    tag_148:\n        /* \"--CODEGEN--\":1902:1915   */\n      swap2\n      mload\n        /* \"--CODEGEN--\":1710:1796   */\n      dup3\n      mstore\n      pop\n        /* \"--CODEGEN--\":1717:1733   */\n      swap2\n        /* \"--CODEGEN--\":4058:4285   */\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":4292:4555   */\n    tag_104:\n      0x00\n        /* \"--CODEGEN--\":4407:4409   */\n      0x20\n        /* \"--CODEGEN--\":4395:4404   */\n      dup3\n        /* \"--CODEGEN--\":4386:4393   */\n      dup5\n        /* \"--CODEGEN--\":4382:4405   */\n      sub\n        /* \"--CODEGEN--\":4378:4410   */\n      slt\n        /* \"--CODEGEN--\":4375:4377   */\n      iszero\n      tag_150\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":4413:4425   */\n      revert\n        /* \"--CODEGEN--\":4375:4377   */\n    tag_150:\n      pop\n        /* \"--CODEGEN--\":1902:1915   */\n      mload\n      swap2\n        /* \"--CODEGEN--\":4369:4555   */\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":5916:6606   */\n    tag_151:\n      0x00\n        /* \"--CODEGEN--\":6109:6114   */\n      dup2\n        /* \"--CODEGEN--\":10786:10798   */\n      mload\n        /* \"--CODEGEN--\":11332:11338   */\n      dup1\n        /* \"--CODEGEN--\":11327:11330   */\n      dup5\n        /* \"--CODEGEN--\":11320:11339   */\n      mstore\n        /* \"--CODEGEN--\":11369:11373   */\n      0x20\n      dup1\n        /* \"--CODEGEN--\":11364:11367   */\n      dup6\n        /* \"--CODEGEN--\":11360:11374   */\n      add\n        /* \"--CODEGEN--\":6121:6214   */\n      swap5\n      pop\n        /* \"--CODEGEN--\":11369:11373   */\n      dup1\n        /* \"--CODEGEN--\":6285:6290   */\n      dup5\n        /* \"--CODEGEN--\":10482:10496   */\n      add\n      dup4\n        /* \"--CODEGEN--\":6324:6584   */\n    tag_153:\n        /* \"--CODEGEN--\":6349:6355   */\n      dup4\n        /* \"--CODEGEN--\":6346:6347   */\n      dup2\n        /* \"--CODEGEN--\":6343:6356   */\n      lt\n        /* \"--CODEGEN--\":6324:6584   */\n      iszero\n      tag_155\n      jumpi\n        /* \"--CODEGEN--\":6410:6423   */\n      dup2\n      mload\n        /* \"--CODEGEN--\":7307:7344   */\n      dup8\n      mstore\n        /* \"--CODEGEN--\":4898:4912   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"--CODEGEN--\":11060:11074   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"--CODEGEN--\":6371:6372   */\n      0x01\n        /* \"--CODEGEN--\":6364:6373   */\n      add\n        /* \"--CODEGEN--\":6324:6584   */\n      jump(tag_153)\n    tag_155:\n      pop\n        /* \"--CODEGEN--\":6590:6600   */\n      swap5\n      swap6\n        /* \"--CODEGEN--\":6040:6606   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":7476:7698   */\n    tag_63:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":11907:11961   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"--CODEGEN--\":4987:5024   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":7603:7605   */\n      0x20\n        /* \"--CODEGEN--\":7588:7606   */\n      add\n      swap1\n        /* \"--CODEGEN--\":7574:7698   */\n      jump\t// out\n        /* \"--CODEGEN--\":7705:8334   */\n    tag_19:\n        /* \"--CODEGEN--\":7960:7962   */\n      0x40\n        /* \"--CODEGEN--\":7974:8021   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":10786:10798   */\n      dup4\n      mload\n        /* \"--CODEGEN--\":7945:7963   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":11320:11339   */\n      dup2\n      swap1\n      mstore\n        /* \"--CODEGEN--\":7705:8334   */\n      0x00\n      swap1\n        /* \"--CODEGEN--\":11369:11373   */\n      0x20\n      swap1\n        /* \"--CODEGEN--\":11360:11374   */\n      0x60\n      dup5\n      add\n      swap1\n        /* \"--CODEGEN--\":10482:10496   */\n      dup3\n      dup8\n      add\n        /* \"--CODEGEN--\":7705:8334   */\n      dup5\n        /* \"--CODEGEN--\":5595:5855   */\n    tag_158:\n        /* \"--CODEGEN--\":5620:5626   */\n      dup3\n        /* \"--CODEGEN--\":5617:5618   */\n      dup2\n        /* \"--CODEGEN--\":5614:5627   */\n      lt\n        /* \"--CODEGEN--\":5595:5855   */\n      iszero\n      tag_160\n      jumpi\n        /* \"--CODEGEN--\":5681:5694   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":11907:11961   */\n      and\n        /* \"--CODEGEN--\":4987:5024   */\n      dup5\n      mstore\n        /* \"--CODEGEN--\":4716:4730   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"--CODEGEN--\":11060:11074   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"--CODEGEN--\":509:527   */\n      0x01\n        /* \"--CODEGEN--\":5635:5644   */\n      add\n        /* \"--CODEGEN--\":5595:5855   */\n      jump(tag_158)\n    tag_160:\n        /* \"--CODEGEN--\":5599:5613   */\n      pop\n      pop\n      pop\n        /* \"--CODEGEN--\":8191:8200   */\n      dup4\n        /* \"--CODEGEN--\":8185:8189   */\n      dup2\n        /* \"--CODEGEN--\":8181:8201   */\n      sub\n        /* \"--CODEGEN--\":11369:11373   */\n      dup3\n        /* \"--CODEGEN--\":8165:8174   */\n      dup6\n        /* \"--CODEGEN--\":8161:8179   */\n      add\n        /* \"--CODEGEN--\":8154:8202   */\n      mstore\n        /* \"--CODEGEN--\":8216:8324   */\n      tag_161\n        /* \"--CODEGEN--\":8319:8323   */\n      dup2\n        /* \"--CODEGEN--\":8310:8316   */\n      dup7\n        /* \"--CODEGEN--\":8216:8324   */\n      tag_151\n      jump\t// in\n    tag_161:\n        /* \"--CODEGEN--\":8208:8324   */\n      swap7\n        /* \"--CODEGEN--\":7931:8334   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":8341:8711   */\n    tag_26:\n      0x00\n        /* \"--CODEGEN--\":8518:8520   */\n      0x20\n        /* \"--CODEGEN--\":8539:8556   */\n      dup3\n        /* \"--CODEGEN--\":8532:8579   */\n      mstore\n        /* \"--CODEGEN--\":8593:8701   */\n      tag_120\n        /* \"--CODEGEN--\":8518:8520   */\n      0x20\n        /* \"--CODEGEN--\":8507:8516   */\n      dup4\n        /* \"--CODEGEN--\":8503:8521   */\n      add\n        /* \"--CODEGEN--\":8687:8693   */\n      dup5\n        /* \"--CODEGEN--\":8593:8701   */\n      tag_151\n      jump\t// in\n        /* \"--CODEGEN--\":8718:9134   */\n    tag_106:\n        /* \"--CODEGEN--\":8918:8920   */\n      0x20\n        /* \"--CODEGEN--\":8932:8979   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":6839:6841   */\n      0x0d\n        /* \"--CODEGEN--\":8903:8921   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":11320:11339   */\n      mstore\n      shl(0x99, 0x24a72b20a624a22faa27a5a2a7)\n        /* \"--CODEGEN--\":11360:11374   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":6855:6891   */\n      mstore\n        /* \"--CODEGEN--\":6910:6922   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":8889:9134   */\n      jump\t// out\n        /* \"--CODEGEN--\":9141:9557   */\n    tag_12:\n        /* \"--CODEGEN--\":9341:9343   */\n      0x20\n        /* \"--CODEGEN--\":9355:9402   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":7161:7162   */\n      0x02\n        /* \"--CODEGEN--\":9326:9344   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":11320:11339   */\n      mstore\n      shl(0xf1, 0x1919)\n        /* \"--CODEGEN--\":11360:11374   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":7176:7201   */\n      mstore\n        /* \"--CODEGEN--\":7220:7232   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":9312:9557   */\n      jump\t// out\n        /* \"--CODEGEN--\":9564:9786   */\n    tag_32:\n        /* \"--CODEGEN--\":7307:7344   */\n      swap1\n      dup2\n      mstore\n        /* \"--CODEGEN--\":9691:9693   */\n      0x20\n        /* \"--CODEGEN--\":9676:9694   */\n      add\n      swap1\n        /* \"--CODEGEN--\":9662:9786   */\n      jump\t// out\n        /* \"--CODEGEN--\":9793:10049   */\n    tag_140:\n        /* \"--CODEGEN--\":9855:9857   */\n      0x40\n        /* \"--CODEGEN--\":9849:9858   */\n      mload\n        /* \"--CODEGEN--\":9881:9898   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":9956:9974   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":9941:9975   */\n      dup2\n      gt\n        /* \"--CODEGEN--\":9977:9999   */\n      dup3\n      dup3\n      lt\n        /* \"--CODEGEN--\":9938:10000   */\n      or\n        /* \"--CODEGEN--\":9935:9937   */\n      iszero\n      tag_168\n      jumpi\n        /* \"--CODEGEN--\":10013:10014   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":10003:10015   */\n      revert\n        /* \"--CODEGEN--\":9935:9937   */\n    tag_168:\n        /* \"--CODEGEN--\":9855:9857   */\n      0x40\n        /* \"--CODEGEN--\":10022:10044   */\n      mstore\n        /* \"--CODEGEN--\":9833:10049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":12052:12169   */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":11907:11961   */\n      dup2\n      and\n        /* \"--CODEGEN--\":12111:12146   */\n      dup2\n      eq\n        /* \"--CODEGEN--\":12101:12103   */\n      tag_170\n      jumpi\n        /* \"--CODEGEN--\":12160:12161   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":12150:12162   */\n      revert\n        /* \"--CODEGEN--\":12101:12103   */\n    tag_170:\n        /* \"--CODEGEN--\":12095:12169   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207ae67703d49267c117fb5657d5acf71315b42fa382a2989a68cd98ccc5351bc964736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610a63806100206000396000f3fe6080604052600436106100385760003560e01c80630240534314610072578063b59b28ef146100a9578063f7888aec146100d65761006d565b3661006d5761004633610103565b61006b5760405162461bcd60e51b8152600401610062906109c9565b60405180910390fd5b005b600080fd5b34801561007e57600080fd5b5061009261008d366004610758565b61013f565b6040516100a092919061092f565b60405180910390f35b3480156100b557600080fd5b506100c96100c4366004610790565b6104b1565b6040516100a0919061098f565b3480156100e257600080fd5b506100f66100f1366004610758565b61058d565b6040516100a091906109e5565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061013757508115155b949350505050565b6060806000846001600160a01b0316630261bf8b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561017d57600080fd5b505afa158015610191573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b5919061073c565b90506060816001600160a01b031663d1946dbc6040518163ffffffff1660e01b815260040160006040518083038186803b1580156101f257600080fd5b505afa158015610206573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261022e91908101906107f9565b90506060815160010167ffffffffffffffff8111801561024d57600080fd5b50604051908082528060200260200182016040528015610277578160200160208202803683370190505b50905060005b82518110156102c65782818151811061029257fe5b60200260200101518282815181106102a657fe5b6001600160a01b039092166020928302919091019091015260010161027d565b5073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee818351815181106102e957fe5b60200260200101906001600160a01b031690816001600160a01b0316815250506060815167ffffffffffffffff8111801561032357600080fd5b5060405190808252806020026020018201604052801561034d578160200160208202803683370190505b50905060005b835181101561046b576103646106b9565b856001600160a01b031663c44b11f785848151811061037f57fe5b60200260200101516040518263ffffffff1660e01b81526004016103a3919061091b565b60206040518083038186803b1580156103bb57600080fd5b505afa1580156103cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f391906108a4565b905060006104008261067d565b50505090508061042b57600084848151811061041857fe5b6020026020010181815250505050610463565b6104488a86858151811061043b57fe5b602002602001015161058d565b84848151811061045457fe5b60200260200101818152505050505b600101610353565b5061048a8773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee61058d565b8184518151811061049757fe5b6020908102919091010152909450925050505b9250929050565b60608084830267ffffffffffffffff811180156104cd57600080fd5b506040519080825280602002602001820160405280156104f7578160200160208202803683370190505b50905060005b858110156105835760005b8481101561057a5761055588888481811061051f57fe5b90506020020160208101906105349190610719565b87878481811061054057fe5b90506020020160208101906100f19190610719565b83518490848802840190811061056757fe5b6020908102919091010152600101610508565b506001016104fd565b5095945050505050565b60006001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156105c557506001600160a01b03821631610677565b6105d7826001600160a01b0316610103565b1561065f576040516370a0823160e01b81526001600160a01b038316906370a082319061060890869060040161091b565b60206040518083038186803b15801561062057600080fd5b505afa158015610634573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065891906108c9565b9050610677565b60405162461bcd60e51b8152600401610062906109a2565b92915050565b51670100000000000000811615159167020000000000000082161515916704000000000000008116151591670800000000000000909116151590565b6040518060200160405280600081525090565b805161067781610a15565b60008083601f8401126106e8578182fd5b50813567ffffffffffffffff8111156106ff578182fd5b60208301915083602080830285010111156104aa57600080fd5b60006020828403121561072a578081fd5b813561073581610a15565b9392505050565b60006020828403121561074d578081fd5b815161073581610a15565b6000806040838503121561076a578081fd5b823561077581610a15565b9150602083013561078581610a15565b809150509250929050565b600080600080604085870312156107a5578182fd5b843567ffffffffffffffff808211156107bc578384fd5b6107c8888389016106d7565b909650945060208701359150808211156107e0578384fd5b506107ed878288016106d7565b95989497509550505050565b6000602080838503121561080b578182fd5b825167ffffffffffffffff80821115610822578384fd5b818501915085601f830112610835578384fd5b815181811115610843578485fd5b83810291506108538483016109ee565b8181528481019084860184860187018a101561086d578788fd5b8795505b83861015610897576108838a826106cc565b835260019590950194918601918601610871565b5098975050505050505050565b6000602082840312156108b5578081fd5b6108bf60206109ee565b9151825250919050565b6000602082840312156108da578081fd5b5051919050565b6000815180845260208085019450808401835b83811015610910578151875295820195908201906001016108f4565b509495945050505050565b6001600160a01b0391909116815260200190565b604080825283519082018190526000906020906060840190828701845b828110156109715781516001600160a01b03168452928401929084019060010161094c565b5050508381038285015261098581866108e1565b9695505050505050565b60006020825261073560208301846108e1565b6020808252600d908201526c24a72b20a624a22faa27a5a2a760991b604082015260600190565b602080825260029082015261191960f11b604082015260600190565b90815260200190565b60405181810167ffffffffffffffff81118282101715610a0d57600080fd5b604052919050565b6001600160a01b0381168114610a2a57600080fd5b5056fea26469706673582212207ae67703d49267c117fb5657d5acf71315b42fa382a2989a68cd98ccc5351bc964736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA63 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2405343 EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0xB59B28EF EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0xF7888AEC EQ PUSH2 0xD6 JUMPI PUSH2 0x6D JUMP JUMPDEST CALLDATASIZE PUSH2 0x6D JUMPI PUSH2 0x46 CALLER PUSH2 0x103 JUMP JUMPDEST PUSH2 0x6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62 SWAP1 PUSH2 0x9C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x92 PUSH2 0x8D CALLDATASIZE PUSH1 0x4 PUSH2 0x758 JUMP JUMPDEST PUSH2 0x13F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA0 SWAP3 SWAP2 SWAP1 PUSH2 0x92F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC9 PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x790 JUMP JUMPDEST PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x98F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF6 PUSH2 0xF1 CALLDATASIZE PUSH1 0x4 PUSH2 0x758 JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x137 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x261BF8B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x191 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x73C JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD1946DBC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x206 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x22E SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x7F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 MLOAD PUSH1 0x1 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x277 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2C6 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x292 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A6 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x27D JUMP JUMPDEST POP PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 DUP4 MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x2E9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x60 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x34D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x46B JUMPI PUSH2 0x364 PUSH2 0x6B9 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC44B11F7 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x37F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0x8A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x400 DUP3 PUSH2 0x67D JUMP JUMPDEST POP POP POP SWAP1 POP DUP1 PUSH2 0x42B JUMPI PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x418 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP POP PUSH2 0x463 JUMP JUMPDEST PUSH2 0x448 DUP11 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x43B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x58D JUMP JUMPDEST DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x454 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x353 JUMP JUMPDEST POP PUSH2 0x48A DUP8 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH2 0x58D JUMP JUMPDEST DUP2 DUP5 MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x497 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP1 SWAP5 POP SWAP3 POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP5 DUP4 MUL PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x4CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4F7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x57A JUMPI PUSH2 0x555 DUP9 DUP9 DUP5 DUP2 DUP2 LT PUSH2 0x51F JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x534 SWAP2 SWAP1 PUSH2 0x719 JUMP JUMPDEST DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x540 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x719 JUMP JUMPDEST DUP4 MLOAD DUP5 SWAP1 DUP5 DUP9 MUL DUP5 ADD SWAP1 DUP2 LT PUSH2 0x567 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x508 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x4FD JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE EQ ISZERO PUSH2 0x5C5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND BALANCE PUSH2 0x677 JUMP JUMPDEST PUSH2 0x5D7 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x103 JUMP JUMPDEST ISZERO PUSH2 0x65F JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x608 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x620 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x634 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x658 SWAP2 SWAP1 PUSH2 0x8C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x677 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62 SWAP1 PUSH2 0x9A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST MLOAD PUSH8 0x100000000000000 DUP2 AND ISZERO ISZERO SWAP2 PUSH8 0x200000000000000 DUP3 AND ISZERO ISZERO SWAP2 PUSH8 0x400000000000000 DUP2 AND ISZERO ISZERO SWAP2 PUSH8 0x800000000000000 SWAP1 SWAP2 AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x677 DUP2 PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x6E8 JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6FF JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x735 DUP2 PUSH2 0xA15 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x74D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x735 DUP2 PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x76A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x775 DUP2 PUSH2 0xA15 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x785 DUP2 PUSH2 0xA15 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x7A5 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x7BC JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x7C8 DUP9 DUP4 DUP10 ADD PUSH2 0x6D7 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x7E0 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x7ED DUP8 DUP3 DUP9 ADD PUSH2 0x6D7 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x80B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x822 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x835 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x843 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP4 DUP2 MUL SWAP2 POP PUSH2 0x853 DUP5 DUP4 ADD PUSH2 0x9EE JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP1 DUP5 DUP7 ADD DUP5 DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x86D JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x897 JUMPI PUSH2 0x883 DUP11 DUP3 PUSH2 0x6CC JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x871 JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8B5 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x8BF PUSH1 0x20 PUSH2 0x9EE JUMP JUMPDEST SWAP2 MLOAD DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8DA JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x910 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x8F4 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x971 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x94C JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE PUSH2 0x985 DUP2 DUP7 PUSH2 0x8E1 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x735 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8E1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x24A72B20A624A22FAA27A5A2A7 PUSH1 0x99 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x1919 PUSH1 0xF1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xA0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0xE67703D49267C117FB5657D5ACF71315B42FA382A2989A68CD98CC 0xC5 CALLDATALOAD SHL 0xC9 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1087:2862:6:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100385760003560e01c80630240534314610072578063b59b28ef146100a9578063f7888aec146100d65761006d565b3661006d5761004633610103565b61006b5760405162461bcd60e51b8152600401610062906109c9565b60405180910390fd5b005b600080fd5b34801561007e57600080fd5b5061009261008d366004610758565b61013f565b6040516100a092919061092f565b60405180910390f35b3480156100b557600080fd5b506100c96100c4366004610790565b6104b1565b6040516100a0919061098f565b3480156100e257600080fd5b506100f66100f1366004610758565b61058d565b6040516100a091906109e5565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061013757508115155b949350505050565b6060806000846001600160a01b0316630261bf8b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561017d57600080fd5b505afa158015610191573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b5919061073c565b90506060816001600160a01b031663d1946dbc6040518163ffffffff1660e01b815260040160006040518083038186803b1580156101f257600080fd5b505afa158015610206573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261022e91908101906107f9565b90506060815160010167ffffffffffffffff8111801561024d57600080fd5b50604051908082528060200260200182016040528015610277578160200160208202803683370190505b50905060005b82518110156102c65782818151811061029257fe5b60200260200101518282815181106102a657fe5b6001600160a01b039092166020928302919091019091015260010161027d565b5073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee818351815181106102e957fe5b60200260200101906001600160a01b031690816001600160a01b0316815250506060815167ffffffffffffffff8111801561032357600080fd5b5060405190808252806020026020018201604052801561034d578160200160208202803683370190505b50905060005b835181101561046b576103646106b9565b856001600160a01b031663c44b11f785848151811061037f57fe5b60200260200101516040518263ffffffff1660e01b81526004016103a3919061091b565b60206040518083038186803b1580156103bb57600080fd5b505afa1580156103cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f391906108a4565b905060006104008261067d565b50505090508061042b57600084848151811061041857fe5b6020026020010181815250505050610463565b6104488a86858151811061043b57fe5b602002602001015161058d565b84848151811061045457fe5b60200260200101818152505050505b600101610353565b5061048a8773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee61058d565b8184518151811061049757fe5b6020908102919091010152909450925050505b9250929050565b60608084830267ffffffffffffffff811180156104cd57600080fd5b506040519080825280602002602001820160405280156104f7578160200160208202803683370190505b50905060005b858110156105835760005b8481101561057a5761055588888481811061051f57fe5b90506020020160208101906105349190610719565b87878481811061054057fe5b90506020020160208101906100f19190610719565b83518490848802840190811061056757fe5b6020908102919091010152600101610508565b506001016104fd565b5095945050505050565b60006001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156105c557506001600160a01b03821631610677565b6105d7826001600160a01b0316610103565b1561065f576040516370a0823160e01b81526001600160a01b038316906370a082319061060890869060040161091b565b60206040518083038186803b15801561062057600080fd5b505afa158015610634573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065891906108c9565b9050610677565b60405162461bcd60e51b8152600401610062906109a2565b92915050565b51670100000000000000811615159167020000000000000082161515916704000000000000008116151591670800000000000000909116151590565b6040518060200160405280600081525090565b805161067781610a15565b60008083601f8401126106e8578182fd5b50813567ffffffffffffffff8111156106ff578182fd5b60208301915083602080830285010111156104aa57600080fd5b60006020828403121561072a578081fd5b813561073581610a15565b9392505050565b60006020828403121561074d578081fd5b815161073581610a15565b6000806040838503121561076a578081fd5b823561077581610a15565b9150602083013561078581610a15565b809150509250929050565b600080600080604085870312156107a5578182fd5b843567ffffffffffffffff808211156107bc578384fd5b6107c8888389016106d7565b909650945060208701359150808211156107e0578384fd5b506107ed878288016106d7565b95989497509550505050565b6000602080838503121561080b578182fd5b825167ffffffffffffffff80821115610822578384fd5b818501915085601f830112610835578384fd5b815181811115610843578485fd5b83810291506108538483016109ee565b8181528481019084860184860187018a101561086d578788fd5b8795505b83861015610897576108838a826106cc565b835260019590950194918601918601610871565b5098975050505050505050565b6000602082840312156108b5578081fd5b6108bf60206109ee565b9151825250919050565b6000602082840312156108da578081fd5b5051919050565b6000815180845260208085019450808401835b83811015610910578151875295820195908201906001016108f4565b509495945050505050565b6001600160a01b0391909116815260200190565b604080825283519082018190526000906020906060840190828701845b828110156109715781516001600160a01b03168452928401929084019060010161094c565b5050508381038285015261098581866108e1565b9695505050505050565b60006020825261073560208301846108e1565b6020808252600d908201526c24a72b20a624a22faa27a5a2a760991b604082015260600190565b602080825260029082015261191960f11b604082015260600190565b90815260200190565b60405181810167ffffffffffffffff81118282101715610a0d57600080fd5b604052919050565b6001600160a01b0381168114610a2a57600080fd5b5056fea26469706673582212207ae67703d49267c117fb5657d5acf71315b42fa382a2989a68cd98ccc5351bc964736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2405343 EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0xB59B28EF EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0xF7888AEC EQ PUSH2 0xD6 JUMPI PUSH2 0x6D JUMP JUMPDEST CALLDATASIZE PUSH2 0x6D JUMPI PUSH2 0x46 CALLER PUSH2 0x103 JUMP JUMPDEST PUSH2 0x6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62 SWAP1 PUSH2 0x9C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x92 PUSH2 0x8D CALLDATASIZE PUSH1 0x4 PUSH2 0x758 JUMP JUMPDEST PUSH2 0x13F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA0 SWAP3 SWAP2 SWAP1 PUSH2 0x92F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC9 PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x790 JUMP JUMPDEST PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x98F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF6 PUSH2 0xF1 CALLDATASIZE PUSH1 0x4 PUSH2 0x758 JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x137 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x261BF8B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x191 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x73C JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD1946DBC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x206 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x22E SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x7F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 MLOAD PUSH1 0x1 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x277 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2C6 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x292 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A6 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x27D JUMP JUMPDEST POP PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 DUP4 MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x2E9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x60 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x34D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x46B JUMPI PUSH2 0x364 PUSH2 0x6B9 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC44B11F7 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x37F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0x8A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x400 DUP3 PUSH2 0x67D JUMP JUMPDEST POP POP POP SWAP1 POP DUP1 PUSH2 0x42B JUMPI PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x418 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP POP PUSH2 0x463 JUMP JUMPDEST PUSH2 0x448 DUP11 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x43B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x58D JUMP JUMPDEST DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x454 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x353 JUMP JUMPDEST POP PUSH2 0x48A DUP8 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH2 0x58D JUMP JUMPDEST DUP2 DUP5 MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x497 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP1 SWAP5 POP SWAP3 POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP5 DUP4 MUL PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x4CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4F7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x57A JUMPI PUSH2 0x555 DUP9 DUP9 DUP5 DUP2 DUP2 LT PUSH2 0x51F JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x534 SWAP2 SWAP1 PUSH2 0x719 JUMP JUMPDEST DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x540 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x719 JUMP JUMPDEST DUP4 MLOAD DUP5 SWAP1 DUP5 DUP9 MUL DUP5 ADD SWAP1 DUP2 LT PUSH2 0x567 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x508 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x4FD JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE EQ ISZERO PUSH2 0x5C5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND BALANCE PUSH2 0x677 JUMP JUMPDEST PUSH2 0x5D7 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x103 JUMP JUMPDEST ISZERO PUSH2 0x65F JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x608 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x91B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x620 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x634 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x658 SWAP2 SWAP1 PUSH2 0x8C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x677 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62 SWAP1 PUSH2 0x9A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST MLOAD PUSH8 0x100000000000000 DUP2 AND ISZERO ISZERO SWAP2 PUSH8 0x200000000000000 DUP3 AND ISZERO ISZERO SWAP2 PUSH8 0x400000000000000 DUP2 AND ISZERO ISZERO SWAP2 PUSH8 0x800000000000000 SWAP1 SWAP2 AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x677 DUP2 PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x6E8 JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6FF JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x735 DUP2 PUSH2 0xA15 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x74D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x735 DUP2 PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x76A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x775 DUP2 PUSH2 0xA15 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x785 DUP2 PUSH2 0xA15 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x7A5 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x7BC JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x7C8 DUP9 DUP4 DUP10 ADD PUSH2 0x6D7 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x7E0 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x7ED DUP8 DUP3 DUP9 ADD PUSH2 0x6D7 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x80B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x822 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x835 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x843 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP4 DUP2 MUL SWAP2 POP PUSH2 0x853 DUP5 DUP4 ADD PUSH2 0x9EE JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP1 DUP5 DUP7 ADD DUP5 DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x86D JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x897 JUMPI PUSH2 0x883 DUP11 DUP3 PUSH2 0x6CC JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x871 JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8B5 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x8BF PUSH1 0x20 PUSH2 0x9EE JUMP JUMPDEST SWAP2 MLOAD DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8DA JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x910 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x8F4 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x971 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x94C JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE PUSH2 0x985 DUP2 DUP7 PUSH2 0x8E1 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x735 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8E1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x24A72B20A624A22FAA27A5A2A7 PUSH1 0x99 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH2 0x1919 PUSH1 0xF1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xA0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0xE67703D49267C117FB5657D5ACF71315B42FA382A2989A68CD98CC 0xC5 CALLDATALOAD SHL 0xC9 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1087:2862:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1520:23;:10;:21;:23::i;:::-;1512:38;;;;-1:-1:-1;;;1512:38:6;;;;;;;:::i;:::-;;;;;;;;;1087:2862;;;;;2875:1072;;;;;;;;;;-1:-1:-1;2875:1072:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2351:426;;;;;;;;;;-1:-1:-1;2351:426:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1751:325::-;;;;;;;;;;-1:-1:-1;1751:325:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;686:586:0:-;746:4;1185:20;;1032:66;1224:23;;;;;;:42;;-1:-1:-1;1251:15:0;;;1224:42;1216:51;686:586;-1:-1:-1;;;;686:586:0:o;2875:1072:6:-;2973:16;2991;3017:17;3080:8;-1:-1:-1;;;;;3050:54:6;;:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3017:90;;3114:25;3142:4;-1:-1:-1;;;;;3142:20:6;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3142:22:6;;;;;;;;;;;;:::i;:::-;3114:50;;3170:32;3219:8;:15;3237:1;3219:19;3205:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3205:34:6;;3170:69;;3250:9;3245:93;3269:8;:15;3265:1;:19;3245:93;;;3320:8;3329:1;3320:11;;;;;;;;;;;;;;3299:15;3315:1;3299:18;;;;;;;;-1:-1:-1;;;;;3299:32:6;;;:18;;;;;;;;;;;:32;3286:3;;3245:93;;;;1323:42;3343:15;3359:8;:15;3343:32;;;;;;;;;;;;;:51;-1:-1:-1;;;;;3343:51:6;;;-1:-1:-1;;;;;3343:51:6;;;;;3401:25;3443:15;:22;3429:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3429:37:6;;3401:65;;3478:9;3473:362;3497:8;:15;3493:1;:19;3473:362;;;3527:54;;:::i;:::-;3592:4;-1:-1:-1;;;;;3592:21:6;;3614:15;3630:1;3614:18;;;;;;;;;;;;;;3592:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3527:106;;3643:13;3666:30;:13;:28;:30::i;:::-;3642:54;;;;;3710:8;3705:67;;3744:1;3730:8;3739:1;3730:11;;;;;;;;;;;;;:15;;;;;3755:8;;;;3705:67;3793:35;3803:4;3809:15;3825:1;3809:18;;;;;;;;;;;;;;3793:9;:35::i;:::-;3779:8;3788:1;3779:11;;;;;;;;;;;;;:49;;;;;3473:362;;;3514:3;;3473:362;;;;3868:33;3878:4;1323:42;3868:9;:33::i;:::-;3840:8;3849;:15;3840:25;;;;;;;;;;;;;;;;;:61;3916:15;;-1:-1:-1;3933:8:6;-1:-1:-1;;;2875:1072:6;;;;;;:::o;2351:426::-;2463:16;;2531:28;;;2517:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2517:43:6;;2489:71;;2572:9;2567:184;2587:16;;;2567:184;;;2623:9;2618:127;2638:17;;;2618:127;;;2706:30;2716:5;;2722:1;2716:8;;;;;;;;;;;;;;;;;;;;:::i;:::-;2726:6;;2733:1;2726:9;;;;;;;;;;;;;;;;;;;;:::i;2706:30::-;2672:31;;:8;;2681:17;;;:21;;;2672:31;;;;;;;;;;;;;;;:64;2657:3;;2618:127;;;-1:-1:-1;2605:3:6;;2567:184;;;-1:-1:-1;2764:8:6;2351:426;-1:-1:-1;;;;;2351:426:6:o;1751:325::-;1820:7;-1:-1:-1;;;;;1839:25:6;;1323:42;1839:25;1835:208;;;-1:-1:-1;;;;;;1881:12:6;;;1874:19;;1835:208;1972:18;:5;-1:-1:-1;;;;;1972:16:6;;:18::i;:::-;1968:75;;;2007:29;;-1:-1:-1;;;2007:29:6;;-1:-1:-1;;;;;2007:23:6;;;;;:29;;2031:4;;2007:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2000:36;;;;1968:75;2048:23;;-1:-1:-1;;;2048:23:6;;;;;;;:::i;1751:325::-;;;;;:::o;11756:355:7:-;11940:9;11952:12;11940:24;;11939:31;;;11991:12;11979:24;;11978:31;;;12030:15;12018:27;;12017:34;;;12072:22;12060:34;;;12059:41;;;11756:355::o;-1:-1:-1:-;;;;;;;;;;;;;;:::o;142:134::-;220:13;;238:33;220:13;238:33;:::i;301:352::-;;;431:3;424:4;416:6;412:17;408:27;398:2;;-1:-1;;439:12;398:2;-1:-1;469:20;;509:18;498:30;;495:2;;;-1:-1;;531:12;495:2;575:4;567:6;563:17;551:29;;626:3;575:4;;610:6;606:17;567:6;592:32;;589:41;586:2;;;643:1;;633:12;1965:241;;2069:2;2057:9;2048:7;2044:23;2040:32;2037:2;;;-1:-1;;2075:12;2037:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;2127:63;2031:175;-1:-1;;;2031:175::o;2213:263::-;;2328:2;2316:9;2307:7;2303:23;2299:32;2296:2;;;-1:-1;;2334:12;2296:2;226:6;220:13;238:33;265:5;238:33;:::i;2483:366::-;;;2604:2;2592:9;2583:7;2579:23;2575:32;2572:2;;;-1:-1;;2610:12;2572:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;2662:63;-1:-1;2762:2;2801:22;;72:20;97:33;72:20;97:33;:::i;:::-;2770:63;;;;2566:283;;;;;:::o;2856:678::-;;;;;3047:2;3035:9;3026:7;3022:23;3018:32;3015:2;;;-1:-1;;3053:12;3015:2;3111:17;3098:31;3149:18;;3141:6;3138:30;3135:2;;;-1:-1;;3171:12;3135:2;3209:80;3281:7;3272:6;3261:9;3257:22;3209:80;:::i;:::-;3191:98;;-1:-1;3191:98;-1:-1;3354:2;3339:18;;3326:32;;-1:-1;3367:30;;;3364:2;;;-1:-1;;3400:12;3364:2;;3438:80;3510:7;3501:6;3490:9;3486:22;3438:80;:::i;:::-;3009:525;;;;-1:-1;3420:98;-1:-1;;;;3009:525::o;3541:392::-;;3681:2;;3669:9;3660:7;3656:23;3652:32;3649:2;;;-1:-1;;3687:12;3649:2;3738:17;3732:24;3776:18;;3768:6;3765:30;3762:2;;;-1:-1;;3798:12;3762:2;3900:6;3889:9;3885:22;;;807:3;800:4;792:6;788:17;784:27;774:2;;-1:-1;;815:12;774:2;855:6;849:13;3776:18;10207:6;10204:30;10201:2;;;-1:-1;;10237:12;10201:2;3681;10274:6;10270:17;;;877:80;3681:2;10270:17;10335:15;877:80;:::i;:::-;985:21;;;1042:14;;;;1017:17;;;1122:27;;;;;1119:36;-1:-1;1116:2;;;-1:-1;;1158:12;1116:2;-1:-1;1184:10;;1178:217;1203:6;1200:1;1197:13;1178:217;;;1283:48;1327:3;1315:10;1283:48;:::i;:::-;1271:61;;1225:1;1218:9;;;;;1346:14;;;;1374;;1178:217;;;-1:-1;3818:99;3643:290;-1:-1;;;;;;;;3643:290::o;3940:345::-;;4096:2;4084:9;4075:7;4071:23;4067:32;4064:2;;;-1:-1;;4102:12;4064:2;1633:20;4096:2;1633:20;:::i;:::-;1902:13;;1710:86;;-1:-1;1717:16;4058:227;-1:-1;4058:227::o;4292:263::-;;4407:2;4395:9;4386:7;4382:23;4378:32;4375:2;;;-1:-1;;4413:12;4375:2;-1:-1;1902:13;;4369:186;-1:-1;4369:186::o;5916:690::-;;6109:5;10786:12;11332:6;11327:3;11320:19;11369:4;;11364:3;11360:14;6121:93;;11369:4;6285:5;10482:14;-1:-1;6324:260;6349:6;6346:1;6343:13;6324:260;;;6410:13;;7307:37;;4898:14;;;;11060;;;;6371:1;6364:9;6324:260;;;-1:-1;6590:10;;6040:566;-1:-1;;;;;6040:566::o;7476:222::-;-1:-1;;;;;11907:54;;;;4987:37;;7603:2;7588:18;;7574:124::o;7705:629::-;7960:2;7974:47;;;10786:12;;7945:18;;;11320:19;;;7705:629;;11369:4;;11360:14;;;;10482;;;7705:629;5595:260;5620:6;5617:1;5614:13;5595:260;;;5681:13;;-1:-1;;;;;11907:54;4987:37;;4716:14;;;;11060;;;;509:18;5635:9;5595:260;;;5599:14;;;8191:9;8185:4;8181:20;11369:4;8165:9;8161:18;8154:48;8216:108;8319:4;8310:6;8216:108;:::i;:::-;8208:116;7931:403;-1:-1;;;;;;7931:403::o;8341:370::-;;8518:2;8539:17;8532:47;8593:108;8518:2;8507:9;8503:18;8687:6;8593:108;:::i;8718:416::-;8918:2;8932:47;;;6839:2;8903:18;;;11320:19;-1:-1;;;11360:14;;;6855:36;6910:12;;;8889:245::o;9141:416::-;9341:2;9355:47;;;7161:1;9326:18;;;11320:19;-1:-1;;;11360:14;;;7176:25;7220:12;;;9312:245::o;9564:222::-;7307:37;;;9691:2;9676:18;;9662:124::o;9793:256::-;9855:2;9849:9;9881:17;;;9956:18;9941:34;;9977:22;;;9938:62;9935:2;;;10013:1;;10003:12;9935:2;9855;10022:22;9833:216;;-1:-1;9833:216::o;12052:117::-;-1:-1;;;;;11907:54;;12111:35;;12101:2;;12160:1;;12150:12;12101:2;12095:74;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "531800",
								"executionCost": "568",
								"totalCost": "532368"
							},
							"external": {
								"balanceOf(address,address)": "infinite",
								"batchBalanceOf(address[],address[])": "infinite",
								"getUserWalletBalances(address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1087,
									"end": 3949,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1087,
									"end": 3949,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1087,
									"end": 3949,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 3949,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 3949,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 3949,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 3949,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1087,
									"end": 3949,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 3949,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1087,
									"end": 3949,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 3949,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 3949,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1087,
									"end": 3949,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 3949,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 3949,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1087,
									"end": 3949,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 3949,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1087,
									"end": 3949,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1087,
									"end": 3949,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 3949,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1087,
									"end": 3949,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207ae67703d49267c117fb5657d5acf71315b42fa382a2989a68cd98ccc5351bc964736f6c634300060c0033",
									".code": [
										{
											"begin": 1087,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "2405343"
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "B59B28EF"
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "F7888AEC"
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1520,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1520,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1520,
											"end": 1543,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1520,
											"end": 1543,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1520,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1512,
											"end": 1550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1550,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 1550,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 1550,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1550,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1550,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 1550,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1512,
											"end": 1550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1512,
											"end": 1550,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1512,
											"end": 1550,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1512,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1550,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 1550,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1550,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1550,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1550,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1550,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1512,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 3949,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 686,
											"end": 1272,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 686,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 746,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1205,
											"name": "EXTCODEHASH",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1098,
											"name": "PUSH",
											"source": 0,
											"value": "C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1224,
											"end": 1266,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1251,
											"end": 1266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1266,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1266,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1266,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1224,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1267,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 686,
											"end": 1272,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 686,
											"end": 1272,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2973,
											"end": 2989,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2991,
											"end": 3007,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3017,
											"end": 3034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3080,
											"end": 3088,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3050,
											"end": 3104,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3104,
											"name": "PUSH",
											"source": 6,
											"value": "261BF8B"
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3050,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3017,
											"end": 3107,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3017,
											"end": 3107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3114,
											"end": 3139,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3142,
											"end": 3146,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "PUSH",
											"source": 6,
											"value": "D1946DBC"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3114,
											"end": 3164,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3114,
											"end": 3164,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3202,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3219,
											"end": 3227,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3219,
											"end": 3234,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3238,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3219,
											"end": 3238,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3239,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3338,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 3245,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3269,
											"end": 3277,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3269,
											"end": 3284,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3265,
											"end": 3266,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3265,
											"end": 3284,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3338,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3245,
											"end": 3338,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3320,
											"end": 3328,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3329,
											"end": 3330,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3320,
											"end": 3331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3320,
											"end": 3331,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3320,
											"end": 3331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3320,
											"end": 3331,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3320,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3320,
											"end": 3331,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3320,
											"end": 3331,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3320,
											"end": 3331,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3320,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3320,
											"end": 3331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3320,
											"end": 3331,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3320,
											"end": 3331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3320,
											"end": 3331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3320,
											"end": 3331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3320,
											"end": 3331,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3314,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3316,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3299,
											"end": 3331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3331,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3331,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3289,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3286,
											"end": 3289,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 3245,
											"end": 3338,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3338,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3245,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1365,
											"name": "PUSH",
											"source": 6,
											"value": "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
										},
										{
											"begin": 3343,
											"end": 3358,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3367,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3374,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3343,
											"end": 3394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3343,
											"end": 3394,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3343,
											"end": 3394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3343,
											"end": 3394,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3343,
											"end": 3394,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3343,
											"end": 3394,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3343,
											"end": 3394,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3343,
											"end": 3394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3343,
											"end": 3394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3401,
											"end": 3426,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3443,
											"end": 3458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3465,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3401,
											"end": 3466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3401,
											"end": 3466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3478,
											"end": 3487,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3835,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3473,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3505,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3512,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3494,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3512,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3835,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 3473,
											"end": 3835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3527,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 3527,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3527,
											"end": 3581,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3527,
											"end": 3581,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 3527,
											"end": 3581,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3596,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3592,
											"end": 3613,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3613,
											"name": "PUSH",
											"source": 6,
											"value": "C44B11F7"
										},
										{
											"begin": 3614,
											"end": 3629,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3631,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3614,
											"end": 3632,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3614,
											"end": 3632,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3614,
											"end": 3632,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3614,
											"end": 3632,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3614,
											"end": 3632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3614,
											"end": 3632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3614,
											"end": 3632,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3614,
											"end": 3632,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3614,
											"end": 3632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3614,
											"end": 3632,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3614,
											"end": 3632,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3614,
											"end": 3632,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3614,
											"end": 3632,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3614,
											"end": 3632,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3614,
											"end": 3632,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3592,
											"end": 3633,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3527,
											"end": 3633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3527,
											"end": 3633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3643,
											"end": 3656,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3666,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3666,
											"end": 3679,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3666,
											"end": 3696,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3666,
											"end": 3696,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3666,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3642,
											"end": 3696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3642,
											"end": 3696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3642,
											"end": 3696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3642,
											"end": 3696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3642,
											"end": 3696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3718,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3705,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3705,
											"end": 3772,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3744,
											"end": 3745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3730,
											"end": 3738,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3739,
											"end": 3740,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3741,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3741,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3741,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3741,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 3730,
											"end": 3741,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3741,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3741,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 3730,
											"end": 3741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3741,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3730,
											"end": 3741,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3741,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3730,
											"end": 3741,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3741,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 3755,
											"end": 3763,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3705,
											"end": 3772,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3705,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 3803,
											"end": 3807,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3824,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3825,
											"end": 3826,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3827,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3827,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3827,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3827,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 3809,
											"end": 3827,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3827,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3827,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 3809,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3827,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3809,
											"end": 3827,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3827,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3809,
											"end": 3827,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3827,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3827,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3793,
											"end": 3828,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3793,
											"end": 3828,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 3793,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3779,
											"end": 3787,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3788,
											"end": 3789,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3779,
											"end": 3790,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3779,
											"end": 3790,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3779,
											"end": 3790,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3779,
											"end": 3790,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3779,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 3779,
											"end": 3790,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3779,
											"end": 3790,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3779,
											"end": 3790,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 3779,
											"end": 3790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3779,
											"end": 3790,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3779,
											"end": 3790,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3779,
											"end": 3790,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3779,
											"end": 3790,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3779,
											"end": 3790,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3779,
											"end": 3828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3779,
											"end": 3828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3779,
											"end": 3828,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3779,
											"end": 3828,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3779,
											"end": 3828,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3835,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 3473,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3514,
											"end": 3517,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3514,
											"end": 3517,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3473,
											"end": 3835,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3835,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 3473,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3868,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3878,
											"end": 3882,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1365,
											"name": "PUSH",
											"source": 6,
											"value": "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
										},
										{
											"begin": 3868,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3868,
											"end": 3901,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3868,
											"end": 3901,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3868,
											"end": 3901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 3848,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3849,
											"end": 3857,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3849,
											"end": 3864,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 3901,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 3931,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3947,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2463,
											"end": 2479,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2560,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2560,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2751,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2567,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2603,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2603,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2603,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2751,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2567,
											"end": 2751,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 2632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2745,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2618,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2638,
											"end": 2655,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2638,
											"end": 2655,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2638,
											"end": 2655,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2745,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2618,
											"end": 2745,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2716,
											"end": 2721,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2721,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2722,
											"end": 2723,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2724,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2724,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2724,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2716,
											"end": 2724,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2724,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2724,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2716,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2724,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2724,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2716,
											"end": 2724,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2724,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2724,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2716,
											"end": 2724,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2724,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2716,
											"end": 2724,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2716,
											"end": 2724,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2716,
											"end": 2724,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2716,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2706,
											"end": 2736,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2706,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2680,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 2698,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 2698,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 2698,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 2702,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 2702,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 2702,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2736,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2657,
											"end": 2660,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2657,
											"end": 2660,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2618,
											"end": 2745,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2745,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2618,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2605,
											"end": 2608,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2605,
											"end": 2608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2567,
											"end": 2751,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2751,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2567,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2764,
											"end": 2772,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2351,
											"end": 2777,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1820,
											"end": 1827,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1839,
											"end": 1864,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1864,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1365,
											"name": "PUSH",
											"source": 6,
											"value": "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
										},
										{
											"begin": 1839,
											"end": 1864,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 2043,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1835,
											"end": 2043,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1881,
											"end": 1893,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1881,
											"end": 1893,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1881,
											"end": 1893,
											"name": "BALANCE",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1874,
											"end": 1893,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 2043,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1835,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1972,
											"end": 1977,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1972,
											"end": 1988,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2043,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1968,
											"end": 2043,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2007,
											"end": 2030,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2030,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2030,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 2007,
											"end": 2030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2035,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2035,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2036,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2000,
											"end": 2036,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2043,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1968,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2071,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2071,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2048,
											"end": 2071,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2071,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2071,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2071,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2048,
											"end": 2071,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2048,
											"end": 2071,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 2076,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11756,
											"end": 12111,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 11756,
											"end": 12111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11940,
											"end": 11949,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11952,
											"end": 11964,
											"name": "PUSH",
											"source": 7,
											"value": "100000000000000"
										},
										{
											"begin": 11940,
											"end": 11964,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11940,
											"end": 11964,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11939,
											"end": 11970,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11939,
											"end": 11970,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11939,
											"end": 11970,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11991,
											"end": 12003,
											"name": "PUSH",
											"source": 7,
											"value": "200000000000000"
										},
										{
											"begin": 11979,
											"end": 12003,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11979,
											"end": 12003,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11978,
											"end": 12009,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11978,
											"end": 12009,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11978,
											"end": 12009,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12030,
											"end": 12045,
											"name": "PUSH",
											"source": 7,
											"value": "400000000000000"
										},
										{
											"begin": 12018,
											"end": 12045,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12018,
											"end": 12045,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 12017,
											"end": 12051,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12017,
											"end": 12051,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12017,
											"end": 12051,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12072,
											"end": 12094,
											"name": "PUSH",
											"source": 7,
											"value": "800000000000000"
										},
										{
											"begin": 12060,
											"end": 12094,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12060,
											"end": 12094,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12060,
											"end": 12094,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 12059,
											"end": 12100,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12059,
											"end": 12100,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12059,
											"end": 12100,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11756,
											"end": 12111,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 142,
											"end": 276,
											"name": "tag",
											"source": -1,
											"value": "109"
										},
										{
											"begin": 142,
											"end": 276,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 220,
											"end": 233,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 220,
											"end": 233,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 238,
											"end": 271,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "94"
										},
										{
											"begin": 220,
											"end": 233,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 238,
											"end": 271,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "112"
										},
										{
											"begin": 238,
											"end": 271,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 301,
											"end": 653,
											"name": "tag",
											"source": -1,
											"value": "113"
										},
										{
											"begin": 301,
											"end": 653,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 301,
											"end": 653,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 653,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 431,
											"end": 434,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 424,
											"end": 428,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 416,
											"end": 422,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 412,
											"end": 429,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 408,
											"end": 435,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 398,
											"end": 400,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "115"
										},
										{
											"begin": 398,
											"end": 400,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 439,
											"end": 451,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 398,
											"end": 400,
											"name": "tag",
											"source": -1,
											"value": "115"
										},
										{
											"begin": 398,
											"end": 400,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 469,
											"end": 489,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 469,
											"end": 489,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 509,
											"end": 527,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 498,
											"end": 528,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 498,
											"end": 528,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 495,
											"end": 497,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 495,
											"end": 497,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "116"
										},
										{
											"begin": 495,
											"end": 497,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 531,
											"end": 543,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 495,
											"end": 497,
											"name": "tag",
											"source": -1,
											"value": "116"
										},
										{
											"begin": 495,
											"end": 497,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 575,
											"end": 579,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 567,
											"end": 573,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 563,
											"end": 580,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 626,
											"end": 629,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 575,
											"end": 579,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 575,
											"end": 579,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 610,
											"end": 616,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 606,
											"end": 623,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 567,
											"end": 573,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 592,
											"end": 624,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 592,
											"end": 624,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 589,
											"end": 630,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 586,
											"end": 588,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 586,
											"end": 588,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "35"
										},
										{
											"begin": 586,
											"end": 588,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 643,
											"end": 644,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 643,
											"end": 644,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 633,
											"end": 645,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1965,
											"end": 2206,
											"name": "tag",
											"source": -1,
											"value": "90"
										},
										{
											"begin": 1965,
											"end": 2206,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1965,
											"end": 2206,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2071,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2057,
											"end": 2066,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2048,
											"end": 2055,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2044,
											"end": 2067,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2040,
											"end": 2072,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 2037,
											"end": 2039,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2037,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "119"
										},
										{
											"begin": 2037,
											"end": 2039,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2075,
											"end": 2087,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2037,
											"end": 2039,
											"name": "tag",
											"source": -1,
											"value": "119"
										},
										{
											"begin": 2037,
											"end": 2039,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "120"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "112"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "120"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2127,
											"end": 2190,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 2031,
											"end": 2206,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2031,
											"end": 2206,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 2213,
											"end": 2476,
											"name": "tag",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 2213,
											"end": 2476,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2213,
											"end": 2476,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2330,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2316,
											"end": 2325,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2307,
											"end": 2314,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2299,
											"end": 2331,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 2296,
											"end": 2298,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2296,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "122"
										},
										{
											"begin": 2296,
											"end": 2298,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2334,
											"end": 2346,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2296,
											"end": 2298,
											"name": "tag",
											"source": -1,
											"value": "122"
										},
										{
											"begin": 2296,
											"end": 2298,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 226,
											"end": 232,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 220,
											"end": 233,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 238,
											"end": 271,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "120"
										},
										{
											"begin": 265,
											"end": 270,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 238,
											"end": 271,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "112"
										},
										{
											"begin": 238,
											"end": 271,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 2483,
											"end": 2849,
											"name": "tag",
											"source": -1,
											"value": "16"
										},
										{
											"begin": 2483,
											"end": 2849,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2483,
											"end": 2849,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2849,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2604,
											"end": 2606,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 2592,
											"end": 2601,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2583,
											"end": 2590,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 2579,
											"end": 2602,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2575,
											"end": 2607,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 2572,
											"end": 2574,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2572,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "125"
										},
										{
											"begin": 2572,
											"end": 2574,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2610,
											"end": 2622,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2572,
											"end": 2574,
											"name": "tag",
											"source": -1,
											"value": "125"
										},
										{
											"begin": 2572,
											"end": 2574,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "126"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "112"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "126"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2662,
											"end": 2725,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2762,
											"end": 2764,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2801,
											"end": 2823,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2801,
											"end": 2823,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "127"
										},
										{
											"begin": 72,
											"end": 92,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "112"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "127"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2770,
											"end": 2833,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2770,
											"end": 2833,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2770,
											"end": 2833,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2770,
											"end": 2833,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2566,
											"end": 2849,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 2566,
											"end": 2849,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2566,
											"end": 2849,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 2566,
											"end": 2849,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2566,
											"end": 2849,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2566,
											"end": 2849,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 2856,
											"end": 3534,
											"name": "tag",
											"source": -1,
											"value": "23"
										},
										{
											"begin": 2856,
											"end": 3534,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2856,
											"end": 3534,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 3534,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2856,
											"end": 3534,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 3534,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3047,
											"end": 3049,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 3035,
											"end": 3044,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 3026,
											"end": 3033,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 3022,
											"end": 3045,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3018,
											"end": 3050,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 3015,
											"end": 3017,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3015,
											"end": 3017,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "129"
										},
										{
											"begin": 3015,
											"end": 3017,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3053,
											"end": 3065,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3015,
											"end": 3017,
											"name": "tag",
											"source": -1,
											"value": "129"
										},
										{
											"begin": 3015,
											"end": 3017,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3111,
											"end": 3128,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3098,
											"end": 3129,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 3149,
											"end": 3167,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3149,
											"end": 3167,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3141,
											"end": 3147,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3138,
											"end": 3168,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 3135,
											"end": 3137,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3135,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "130"
										},
										{
											"begin": 3135,
											"end": 3137,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3171,
											"end": 3183,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3135,
											"end": 3137,
											"name": "tag",
											"source": -1,
											"value": "130"
										},
										{
											"begin": 3135,
											"end": 3137,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3209,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "131"
										},
										{
											"begin": 3281,
											"end": 3288,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 3272,
											"end": 3278,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3261,
											"end": 3270,
											"name": "DUP10",
											"source": -1
										},
										{
											"begin": 3257,
											"end": 3279,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3209,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "113"
										},
										{
											"begin": 3209,
											"end": 3289,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 3209,
											"end": 3289,
											"name": "tag",
											"source": -1,
											"value": "131"
										},
										{
											"begin": 3209,
											"end": 3289,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3289,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3289,
											"name": "SWAP7",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3289,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3354,
											"end": 3356,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3339,
											"end": 3357,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 3339,
											"end": 3357,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3326,
											"end": 3358,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 3326,
											"end": 3358,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3367,
											"end": 3397,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3367,
											"end": 3397,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3367,
											"end": 3397,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 3364,
											"end": 3366,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3364,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "132"
										},
										{
											"begin": 3364,
											"end": 3366,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3400,
											"end": 3412,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3364,
											"end": 3366,
											"name": "tag",
											"source": -1,
											"value": "132"
										},
										{
											"begin": 3364,
											"end": 3366,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3364,
											"end": 3366,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3438,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "133"
										},
										{
											"begin": 3510,
											"end": 3517,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 3501,
											"end": 3507,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3490,
											"end": 3499,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 3486,
											"end": 3508,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3438,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "113"
										},
										{
											"begin": 3438,
											"end": 3518,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 3438,
											"end": 3518,
											"name": "tag",
											"source": -1,
											"value": "133"
										},
										{
											"begin": 3438,
											"end": 3518,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3009,
											"end": 3534,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 3009,
											"end": 3534,
											"name": "SWAP9",
											"source": -1
										},
										{
											"begin": 3009,
											"end": 3534,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 3009,
											"end": 3534,
											"name": "SWAP8",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3420,
											"end": 3518,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3009,
											"end": 3534,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 3541,
											"end": 3933,
											"name": "tag",
											"source": -1,
											"value": "45"
										},
										{
											"begin": 3541,
											"end": 3933,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3541,
											"end": 3933,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3683,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3681,
											"end": 3683,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3669,
											"end": 3678,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3660,
											"end": 3667,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 3656,
											"end": 3679,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3652,
											"end": 3684,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 3649,
											"end": 3651,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3649,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "135"
										},
										{
											"begin": 3649,
											"end": 3651,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3687,
											"end": 3699,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3649,
											"end": 3651,
											"name": "tag",
											"source": -1,
											"value": "135"
										},
										{
											"begin": 3649,
											"end": 3651,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3738,
											"end": 3755,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3732,
											"end": 3756,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 3776,
											"end": 3794,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3776,
											"end": 3794,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3765,
											"end": 3795,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 3762,
											"end": 3764,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3762,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "136"
										},
										{
											"begin": 3762,
											"end": 3764,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3798,
											"end": 3810,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3762,
											"end": 3764,
											"name": "tag",
											"source": -1,
											"value": "136"
										},
										{
											"begin": 3762,
											"end": 3764,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3900,
											"end": 3906,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3889,
											"end": 3898,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 3885,
											"end": 3907,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3885,
											"end": 3907,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3885,
											"end": 3907,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 807,
											"end": 810,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 800,
											"end": 804,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 792,
											"end": 798,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 788,
											"end": 805,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 784,
											"end": 811,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 774,
											"end": 776,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "137"
										},
										{
											"begin": 774,
											"end": 776,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 815,
											"end": 827,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 774,
											"end": 776,
											"name": "tag",
											"source": -1,
											"value": "137"
										},
										{
											"begin": 774,
											"end": 776,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 855,
											"end": 861,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 849,
											"end": 862,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 3776,
											"end": 3794,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 10207,
											"end": 10213,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 10204,
											"end": 10234,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 10201,
											"end": 10203,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 10201,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "138"
										},
										{
											"begin": 10201,
											"end": 10203,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 10237,
											"end": 10249,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 10201,
											"end": 10203,
											"name": "tag",
											"source": -1,
											"value": "138"
										},
										{
											"begin": 10201,
											"end": 10203,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3681,
											"end": 3683,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 10274,
											"end": 10280,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 10270,
											"end": 10287,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 10270,
											"end": 10287,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 10270,
											"end": 10287,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 877,
											"end": 957,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "139"
										},
										{
											"begin": 3681,
											"end": 3683,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 10270,
											"end": 10287,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 10335,
											"end": 10350,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 877,
											"end": 957,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "140"
										},
										{
											"begin": 877,
											"end": 957,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 877,
											"end": 957,
											"name": "tag",
											"source": -1,
											"value": "139"
										},
										{
											"begin": 877,
											"end": 957,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 985,
											"end": 1006,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 985,
											"end": 1006,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 985,
											"end": 1006,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1042,
											"end": 1056,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1042,
											"end": 1056,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1042,
											"end": 1056,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1042,
											"end": 1056,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1017,
											"end": 1034,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1017,
											"end": 1034,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 1017,
											"end": 1034,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1122,
											"end": 1149,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1122,
											"end": 1149,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 1122,
											"end": 1149,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1122,
											"end": 1149,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 1122,
											"end": 1149,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1119,
											"end": 1155,
											"name": "DUP11",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1116,
											"end": 1118,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 1116,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "141"
										},
										{
											"begin": 1116,
											"end": 1118,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 1158,
											"end": 1170,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1116,
											"end": 1118,
											"name": "tag",
											"source": -1,
											"value": "141"
										},
										{
											"begin": 1116,
											"end": 1118,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 1184,
											"end": 1194,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 1184,
											"end": 1194,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1178,
											"end": 1395,
											"name": "tag",
											"source": -1,
											"value": "142"
										},
										{
											"begin": 1178,
											"end": 1395,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1203,
											"end": 1209,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1200,
											"end": 1201,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 1197,
											"end": 1210,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1178,
											"end": 1395,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 1178,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "144"
										},
										{
											"begin": 1178,
											"end": 1395,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "145"
										},
										{
											"begin": 1327,
											"end": 1330,
											"name": "DUP11",
											"source": -1
										},
										{
											"begin": 1315,
											"end": 1325,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "109"
										},
										{
											"begin": 1283,
											"end": 1331,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 1283,
											"end": 1331,
											"name": "tag",
											"source": -1,
											"value": "145"
										},
										{
											"begin": 1283,
											"end": 1331,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1271,
											"end": 1332,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1271,
											"end": 1332,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1225,
											"end": 1226,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 1218,
											"end": 1227,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 1218,
											"end": 1227,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1218,
											"end": 1227,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 1218,
											"end": 1227,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1218,
											"end": 1227,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 1346,
											"end": 1360,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1346,
											"end": 1360,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 1346,
											"end": 1360,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1346,
											"end": 1360,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1178,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "142"
										},
										{
											"begin": 1178,
											"end": 1395,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1178,
											"end": 1395,
											"name": "tag",
											"source": -1,
											"value": "144"
										},
										{
											"begin": 1178,
											"end": 1395,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3818,
											"end": 3917,
											"name": "SWAP9",
											"source": -1
										},
										{
											"begin": 3643,
											"end": 3933,
											"name": "SWAP8",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3643,
											"end": 3933,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 3940,
											"end": 4285,
											"name": "tag",
											"source": -1,
											"value": "68"
										},
										{
											"begin": 3940,
											"end": 4285,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3940,
											"end": 4285,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4096,
											"end": 4098,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 4084,
											"end": 4093,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4075,
											"end": 4082,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 4071,
											"end": 4094,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4067,
											"end": 4099,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 4064,
											"end": 4066,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4064,
											"end": 4066,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "147"
										},
										{
											"begin": 4064,
											"end": 4066,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4114,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4064,
											"end": 4066,
											"name": "tag",
											"source": -1,
											"value": "147"
										},
										{
											"begin": 4064,
											"end": 4066,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1633,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "148"
										},
										{
											"begin": 4096,
											"end": 4098,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1633,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "140"
										},
										{
											"begin": 1633,
											"end": 1653,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 1633,
											"end": 1653,
											"name": "tag",
											"source": -1,
											"value": "148"
										},
										{
											"begin": 1633,
											"end": 1653,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1902,
											"end": 1915,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1902,
											"end": 1915,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1796,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1796,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1717,
											"end": 1733,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4058,
											"end": 4285,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4058,
											"end": 4285,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 4292,
											"end": 4555,
											"name": "tag",
											"source": -1,
											"value": "104"
										},
										{
											"begin": 4292,
											"end": 4555,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4292,
											"end": 4555,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4407,
											"end": 4409,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 4395,
											"end": 4404,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4386,
											"end": 4393,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 4382,
											"end": 4405,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4378,
											"end": 4410,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 4375,
											"end": 4377,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4375,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "150"
										},
										{
											"begin": 4375,
											"end": 4377,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4413,
											"end": 4425,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4375,
											"end": 4377,
											"name": "tag",
											"source": -1,
											"value": "150"
										},
										{
											"begin": 4375,
											"end": 4377,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1902,
											"end": 1915,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 1902,
											"end": 1915,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4369,
											"end": 4555,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4369,
											"end": 4555,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 5916,
											"end": 6606,
											"name": "tag",
											"source": -1,
											"value": "151"
										},
										{
											"begin": 5916,
											"end": 6606,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5916,
											"end": 6606,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6109,
											"end": 6114,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 10786,
											"end": 10798,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 11332,
											"end": 11338,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 11327,
											"end": 11330,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 11320,
											"end": 11339,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11369,
											"end": 11373,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 11369,
											"end": 11373,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 11364,
											"end": 11367,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 11360,
											"end": 11374,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6121,
											"end": 6214,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 6121,
											"end": 6214,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11369,
											"end": 11373,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 6285,
											"end": 6290,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 10482,
											"end": 10496,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 6324,
											"end": 6584,
											"name": "tag",
											"source": -1,
											"value": "153"
										},
										{
											"begin": 6324,
											"end": 6584,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6349,
											"end": 6355,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 6346,
											"end": 6347,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6343,
											"end": 6356,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 6324,
											"end": 6584,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 6324,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "155"
										},
										{
											"begin": 6324,
											"end": 6584,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 6410,
											"end": 6423,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6410,
											"end": 6423,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 7307,
											"end": 7344,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 7307,
											"end": 7344,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4898,
											"end": 4912,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 4898,
											"end": 4912,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4898,
											"end": 4912,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4898,
											"end": 4912,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 11060,
											"end": 11074,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 11060,
											"end": 11074,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 11060,
											"end": 11074,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11060,
											"end": 11074,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6371,
											"end": 6372,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 6364,
											"end": 6373,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6324,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "153"
										},
										{
											"begin": 6324,
											"end": 6584,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 6324,
											"end": 6584,
											"name": "tag",
											"source": -1,
											"value": "155"
										},
										{
											"begin": 6324,
											"end": 6584,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6590,
											"end": 6600,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 6590,
											"end": 6600,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 6040,
											"end": 6606,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6040,
											"end": 6606,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7476,
											"end": 7698,
											"name": "tag",
											"source": -1,
											"value": "63"
										},
										{
											"begin": 7476,
											"end": 7698,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11907,
											"end": 11961,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 11907,
											"end": 11961,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 11907,
											"end": 11961,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 11907,
											"end": 11961,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 4987,
											"end": 5024,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4987,
											"end": 5024,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7603,
											"end": 7605,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 7588,
											"end": 7606,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7588,
											"end": 7606,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 7574,
											"end": 7698,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7705,
											"end": 8334,
											"name": "tag",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 7705,
											"end": 8334,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7960,
											"end": 7962,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 7974,
											"end": 8021,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 7974,
											"end": 8021,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 7974,
											"end": 8021,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10786,
											"end": 10798,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 10786,
											"end": 10798,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11320,
											"end": 11339,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 11320,
											"end": 11339,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 11320,
											"end": 11339,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7705,
											"end": 8334,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7705,
											"end": 8334,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 11369,
											"end": 11373,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 11369,
											"end": 11373,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 11360,
											"end": 11374,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 11360,
											"end": 11374,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 11360,
											"end": 11374,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11360,
											"end": 11374,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 10482,
											"end": 10496,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 10482,
											"end": 10496,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 10482,
											"end": 10496,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7705,
											"end": 8334,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 5595,
											"end": 5855,
											"name": "tag",
											"source": -1,
											"value": "158"
										},
										{
											"begin": 5595,
											"end": 5855,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5620,
											"end": 5626,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 5617,
											"end": 5618,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 5614,
											"end": 5627,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 5595,
											"end": 5855,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5595,
											"end": 5855,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "160"
										},
										{
											"begin": 5595,
											"end": 5855,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 5681,
											"end": 5694,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 5681,
											"end": 5694,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11907,
											"end": 11961,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 4987,
											"end": 5024,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 4987,
											"end": 5024,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4716,
											"end": 4730,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 4716,
											"end": 4730,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 4716,
											"end": 4730,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4716,
											"end": 4730,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 11060,
											"end": 11074,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 11060,
											"end": 11074,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 11060,
											"end": 11074,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11060,
											"end": 11074,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 509,
											"end": 527,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 5635,
											"end": 5644,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5595,
											"end": 5855,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "158"
										},
										{
											"begin": 5595,
											"end": 5855,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 5595,
											"end": 5855,
											"name": "tag",
											"source": -1,
											"value": "160"
										},
										{
											"begin": 5595,
											"end": 5855,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5599,
											"end": 5613,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5599,
											"end": 5613,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5599,
											"end": 5613,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8191,
											"end": 8200,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 8185,
											"end": 8189,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 8181,
											"end": 8201,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11369,
											"end": 11373,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 8165,
											"end": 8174,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 8161,
											"end": 8179,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8154,
											"end": 8202,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8216,
											"end": 8324,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "161"
										},
										{
											"begin": 8319,
											"end": 8323,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 8216,
											"end": 8324,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "151"
										},
										{
											"begin": 8216,
											"end": 8324,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 8216,
											"end": 8324,
											"name": "tag",
											"source": -1,
											"value": "161"
										},
										{
											"begin": 8216,
											"end": 8324,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8208,
											"end": 8324,
											"name": "SWAP7",
											"source": -1
										},
										{
											"begin": 7931,
											"end": 8334,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7931,
											"end": 8334,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 8341,
											"end": 8711,
											"name": "tag",
											"source": -1,
											"value": "26"
										},
										{
											"begin": 8341,
											"end": 8711,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8341,
											"end": 8711,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8518,
											"end": 8520,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 8539,
											"end": 8556,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 8532,
											"end": 8579,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8593,
											"end": 8701,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "120"
										},
										{
											"begin": 8518,
											"end": 8520,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 8507,
											"end": 8516,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 8503,
											"end": 8521,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8687,
											"end": 8693,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 8593,
											"end": 8701,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "151"
										},
										{
											"begin": 8593,
											"end": 8701,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 8718,
											"end": 9134,
											"name": "tag",
											"source": -1,
											"value": "106"
										},
										{
											"begin": 8718,
											"end": 9134,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8918,
											"end": 8920,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 8932,
											"end": 8979,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 8932,
											"end": 8979,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 8932,
											"end": 8979,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6839,
											"end": 6841,
											"name": "PUSH",
											"source": -1,
											"value": "D"
										},
										{
											"begin": 8903,
											"end": 8921,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 8903,
											"end": 8921,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 8903,
											"end": 8921,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11320,
											"end": 11339,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24A72B20A624A22FAA27A5A2A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11360,
											"end": 11374,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 11360,
											"end": 11374,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 11360,
											"end": 11374,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6855,
											"end": 6891,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6910,
											"end": 6922,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 6910,
											"end": 6922,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6910,
											"end": 6922,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 8889,
											"end": 9134,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 9141,
											"end": 9557,
											"name": "tag",
											"source": -1,
											"value": "12"
										},
										{
											"begin": 9141,
											"end": 9557,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 9341,
											"end": 9343,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 9355,
											"end": 9402,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 9355,
											"end": 9402,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 9355,
											"end": 9402,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7161,
											"end": 7162,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": 9326,
											"end": 9344,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 9326,
											"end": 9344,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 9326,
											"end": 9344,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11320,
											"end": 11339,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11360,
											"end": 11374,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 11360,
											"end": 11374,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 11360,
											"end": 11374,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7176,
											"end": 7201,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7220,
											"end": 7232,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 7220,
											"end": 7232,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7220,
											"end": 7232,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 9312,
											"end": 9557,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 9564,
											"end": 9786,
											"name": "tag",
											"source": -1,
											"value": "32"
										},
										{
											"begin": 9564,
											"end": 9786,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7307,
											"end": 7344,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 7307,
											"end": 7344,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7307,
											"end": 7344,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9691,
											"end": 9693,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 9676,
											"end": 9694,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9676,
											"end": 9694,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 9662,
											"end": 9786,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 9793,
											"end": 10049,
											"name": "tag",
											"source": -1,
											"value": "140"
										},
										{
											"begin": 9793,
											"end": 10049,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 9855,
											"end": 9857,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 9849,
											"end": 9858,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 9881,
											"end": 9898,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 9881,
											"end": 9898,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 9881,
											"end": 9898,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9956,
											"end": 9974,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9941,
											"end": 9975,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 9941,
											"end": 9975,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 9977,
											"end": 9999,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 9977,
											"end": 9999,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 9977,
											"end": 9999,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 9938,
											"end": 10000,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 9935,
											"end": 9937,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 9935,
											"end": 9937,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "168"
										},
										{
											"begin": 9935,
											"end": 9937,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 10013,
											"end": 10014,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10013,
											"end": 10014,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 10003,
											"end": 10015,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 9935,
											"end": 9937,
											"name": "tag",
											"source": -1,
											"value": "168"
										},
										{
											"begin": 9935,
											"end": 9937,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 9855,
											"end": 9857,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10022,
											"end": 10044,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9833,
											"end": 10049,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 9833,
											"end": 10049,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9833,
											"end": 10049,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 12052,
											"end": 12169,
											"name": "tag",
											"source": -1,
											"value": "112"
										},
										{
											"begin": 12052,
											"end": 12169,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11907,
											"end": 11961,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 11907,
											"end": 11961,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 12111,
											"end": 12146,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 12111,
											"end": 12146,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 12101,
											"end": 12103,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "170"
										},
										{
											"begin": 12101,
											"end": 12103,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 12160,
											"end": 12161,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12160,
											"end": 12161,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 12150,
											"end": 12162,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 12101,
											"end": 12103,
											"name": "tag",
											"source": -1,
											"value": "170"
										},
										{
											"begin": 12101,
											"end": 12103,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12095,
											"end": 12169,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12095,
											"end": 12169,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,address)": "f7888aec",
							"batchBalanceOf(address[],address[])": "b59b28ef",
							"getUserWalletBalances(address,address)": "02405343"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"batchBalanceOf\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserWalletBalances\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Aave, influenced by https://github.com/wbobeirne/eth-balance-checker/blob/master/contracts/BalanceChecker.sol\",\"details\":\"NOTE: THIS CONTRACT IS NOT USED WITHIN THE AAVE PROTOCOL. It's an accessory contract used to reduce the number of calls towards the blockchain from the Aave backend.*\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,address)\":{\"details\":\"Check the token balance of a wallet in a token contract Returns the balance of the token for user. Avoids possible errors: - return 0 on non-contract address*\"},\"batchBalanceOf(address[],address[])\":{\"params\":{\"tokens\":\"The list of tokens\",\"users\":\"The list of users\"},\"returns\":{\"_0\":\"And array with the concatenation of, for each user, his/her balances*\"}},\"getUserWalletBalances(address,address)\":{\"details\":\"provides balances of user wallet for all reserves available on the pool\"}},\"title\":\"WalletBalanceProvider contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchBalanceOf(address[],address[])\":{\"notice\":\"Fetches, for a list of _users and _tokens (ETH included with mock address), the balances\"}},\"notice\":\"Implements a logic of getting multiple tokens balance for one user address\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/misc/WalletBalanceProvider.sol\":\"WalletBalanceProvider\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"keccak256\":\"0xb7f2cd193efe93976d7b473fc4fa27dda83bd4db5b81889cbcd4701f3b7023ae\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://2275632637acd2f30d576612dcddc1c6ba78d81af4d044fafe870e6a809a8b6e\",\"dweb:/ipfs/QmW3uMzrLbjzP45zVpP8e9V6o8WFSceHiHq8WDMJ8YjCeL\"]},\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0x6406b04abfeda2c8c80ea3faf797ce4501e66db41fb6ff4e299ebe0402879f44\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://33b0db81db37bd6fe20aa0b23581c6b0edef2f3c49d0bd88b4fe46c1164adb00\",\"dweb:/ipfs/QmYn1zYwt3ahpkLYwHh6h5b1UJrzP2xy5G3at9oEVNw2c1\"]},\"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol\":{\"keccak256\":\"0xd664a81c469ebd6c7b09ca8be499e6af30100e3e42be6bfea9f4a90c02a7cb1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9f8ac1ffeaaefc7685abd544813e31ebb46e81b393291d68b1a99a9c7550df2\",\"dweb:/ipfs/QmP3xWkMNgDBbDn9HF6vVKpHTP5rW4j7dxWmhKsxicQ7Mg\"]},\"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":{\"keccak256\":\"0xfca35d11bafb85cf4f2203b41f1a98238dca59b6a9faa28b86ea3f9f63da8ec5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://7019345b024afa93000c6b5a2b095be59c3c5352eb658619c941d23d0af5bc65\",\"dweb:/ipfs/QmZLxJKSbM66Wd1Qd43jSdiXdg7JP6DQ9J6LuANUZummM4\"]},\"contracts/interfaces/ILendingPool.sol\":{\"keccak256\":\"0x5fa85a3137312e0d37602723af7408ed97636028699bdf7a7c7cc2dc34cdbafc\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://2f084d52067cbb14f10a00813b17c386681e17e295f878d3d8992cef63e67ac1\",\"dweb:/ipfs/QmWGjEYp4ZHmMxW7zkV8ctsmpc5kAYDw3yqaf1LZGsFFuJ\"]},\"contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0xcb0e2c4c19c0bde86907b6ab45b6a1db4932d3642fc51410d56c9411a65b9f1d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://38d01c9e664c64d46a15bbbda2933b5fb877d33f6746d2db32563962beea9119\",\"dweb:/ipfs/QmajEmcQZz3E6GzmLpeGvnEswuwCjVYy8svqdx8bxi4PuG\"]},\"contracts/misc/WalletBalanceProvider.sol\":{\"keccak256\":\"0x0d08bccd9e404a125067a7b89e76f18515af93d17fef43a580e3be449857e482\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f0b3317787e38076cb319e5ecb76f1fdfb1148924dc1774a432cd9e6426f4aa7\",\"dweb:/ipfs/QmdwKY7wNYCNoMMAAomFcehH9t6Mg9Z1jjHz3YdmGhemqE\"]},\"contracts/protocol/libraries/configuration/ReserveConfiguration.sol\":{\"keccak256\":\"0x7e3691bd4353fea9391f96894241d929c6528fad315d21281725a1fe61600485\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://8b1beb77c3485458045a4079642cddd3bfe2fd27c87ac95fccde67d18ec21597\",\"dweb:/ipfs/QmV8HQGK6Gb9Va32tzGJ9a52jw2h1vbRJ1osx7bLW49LDi\"]},\"contracts/protocol/libraries/helpers/Errors.sol\":{\"keccak256\":\"0xfb70949637d81dc9a3883601bb15226981f4c4847f65035e64bf5d120994efeb\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://43fb108a5038fbeb33294d3f4a9e7e4e021bef16f0e7a8a2f3ad9142808c7a8f\",\"dweb:/ipfs/QmUvAnwcuwmprQu4g3r1k3gE2EztuVPGRKJBMVX3KRC8W6\"]},\"contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0xb1d3ae94d3e4b3bf23b3394d820a3a2b5ba56fd5389f561f3fdd73ed1c60c391\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://47c11d578cc1e0df27e4e85cfe5831a48b78d6e939d34e17db4bc65a54c899fe\",\"dweb:/ipfs/QmYdYLkYFJe3psmQUH1S1uNhGE9xyxeDunuEW9gBPg9vDB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"batchBalanceOf(address[],address[])": {
								"notice": "Fetches, for a list of _users and _tokens (ETH included with mock address), the balances"
							}
						},
						"notice": "Implements a logic of getting multiple tokens balance for one user address",
						"version": 1
					}
				}
			},
			"contracts/protocol/libraries/configuration/ReserveConfiguration.sol": {
				"ReserveConfiguration": {
					"abi": [],
					"devdoc": {
						"author": "Aave",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"LIQUIDATION_THRESHOLD_START_BIT_POSITION": {
								"details": "For the LTV, the start bit is 0 (up to 15), hence no bitshifting is needed"
							}
						},
						"title": "ReserveConfiguration library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/protocol/libraries/configuration/ReserveConfiguration.sol\":297:12113  library ReserveConfiguration {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/protocol/libraries/configuration/ReserveConfiguration.sol\":297:12113  library ReserveConfiguration {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122002f45f9ffa6871f35159c4aa08c9edd3e2de74ddb04088fcf4cea0d6123823ce64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122002f45f9ffa6871f35159c4aa08c9edd3e2de74ddb04088fcf4cea0d6123823ce64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL DELEGATECALL 0x5F SWAP16 STATICCALL PUSH9 0x71F35159C4AA08C9ED 0xD3 0xE2 0xDE PUSH21 0xDDB04088FCF4CEA0D6123823CE64736F6C63430006 0xC STOP CALLER ",
							"sourceMap": "297:11816:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122002f45f9ffa6871f35159c4aa08c9edd3e2de74ddb04088fcf4cea0d6123823ce64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL DELEGATECALL 0x5F SWAP16 STATICCALL PUSH9 0x71F35159C4AA08C9ED 0xD3 0xE2 0xDE PUSH21 0xDDB04088FCF4CEA0D6123823CE64736F6C63430006 0xC STOP CALLER ",
							"sourceMap": "297:11816:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getActive(struct DataTypes.ReserveConfigurationMap storage pointer)": "infinite",
								"getBorrowingEnabled(struct DataTypes.ReserveConfigurationMap storage pointer)": "infinite",
								"getDecimals(struct DataTypes.ReserveConfigurationMap storage pointer)": "infinite",
								"getFlags(struct DataTypes.ReserveConfigurationMap storage pointer)": "infinite",
								"getFlagsMemory(struct DataTypes.ReserveConfigurationMap memory)": "infinite",
								"getFrozen(struct DataTypes.ReserveConfigurationMap storage pointer)": "infinite",
								"getLiquidationBonus(struct DataTypes.ReserveConfigurationMap storage pointer)": "infinite",
								"getLiquidationThreshold(struct DataTypes.ReserveConfigurationMap storage pointer)": "infinite",
								"getLtv(struct DataTypes.ReserveConfigurationMap storage pointer)": "infinite",
								"getParams(struct DataTypes.ReserveConfigurationMap storage pointer)": "infinite",
								"getParamsMemory(struct DataTypes.ReserveConfigurationMap memory)": "infinite",
								"getReserveFactor(struct DataTypes.ReserveConfigurationMap storage pointer)": "infinite",
								"getStableRateBorrowingEnabled(struct DataTypes.ReserveConfigurationMap storage pointer)": "infinite",
								"setActive(struct DataTypes.ReserveConfigurationMap memory,bool)": "infinite",
								"setBorrowingEnabled(struct DataTypes.ReserveConfigurationMap memory,bool)": "infinite",
								"setDecimals(struct DataTypes.ReserveConfigurationMap memory,uint256)": "infinite",
								"setFrozen(struct DataTypes.ReserveConfigurationMap memory,bool)": "infinite",
								"setLiquidationBonus(struct DataTypes.ReserveConfigurationMap memory,uint256)": "infinite",
								"setLiquidationThreshold(struct DataTypes.ReserveConfigurationMap memory,uint256)": "infinite",
								"setLtv(struct DataTypes.ReserveConfigurationMap memory,uint256)": "infinite",
								"setReserveFactor(struct DataTypes.ReserveConfigurationMap memory,uint256)": "infinite",
								"setStableRateBorrowingEnabled(struct DataTypes.ReserveConfigurationMap memory,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 297,
									"end": 12113,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "INVALID",
									"source": 7
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 297,
									"end": 12113,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122002f45f9ffa6871f35159c4aa08c9edd3e2de74ddb04088fcf4cea0d6123823ce64736f6c634300060c0033",
									".code": [
										{
											"begin": 297,
											"end": 12113,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 297,
											"end": 12113,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 297,
											"end": 12113,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 297,
											"end": 12113,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 297,
											"end": 12113,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 12113,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 297,
											"end": 12113,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 12113,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 297,
											"end": 12113,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Aave\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"LIQUIDATION_THRESHOLD_START_BIT_POSITION\":{\"details\":\"For the LTV, the start bit is 0 (up to 15), hence no bitshifting is needed\"}},\"title\":\"ReserveConfiguration library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Implements the bitmap logic to handle the reserve configuration\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/protocol/libraries/configuration/ReserveConfiguration.sol\":\"ReserveConfiguration\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/protocol/libraries/configuration/ReserveConfiguration.sol\":{\"keccak256\":\"0x7e3691bd4353fea9391f96894241d929c6528fad315d21281725a1fe61600485\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://8b1beb77c3485458045a4079642cddd3bfe2fd27c87ac95fccde67d18ec21597\",\"dweb:/ipfs/QmV8HQGK6Gb9Va32tzGJ9a52jw2h1vbRJ1osx7bLW49LDi\"]},\"contracts/protocol/libraries/helpers/Errors.sol\":{\"keccak256\":\"0xfb70949637d81dc9a3883601bb15226981f4c4847f65035e64bf5d120994efeb\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://43fb108a5038fbeb33294d3f4a9e7e4e021bef16f0e7a8a2f3ad9142808c7a8f\",\"dweb:/ipfs/QmUvAnwcuwmprQu4g3r1k3gE2EztuVPGRKJBMVX3KRC8W6\"]},\"contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0xb1d3ae94d3e4b3bf23b3394d820a3a2b5ba56fd5389f561f3fdd73ed1c60c391\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://47c11d578cc1e0df27e4e85cfe5831a48b78d6e939d34e17db4bc65a54c899fe\",\"dweb:/ipfs/QmYdYLkYFJe3psmQUH1S1uNhGE9xyxeDunuEW9gBPg9vDB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Implements the bitmap logic to handle the reserve configuration",
						"version": 1
					}
				}
			},
			"contracts/protocol/libraries/helpers/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "BORROW_ALLOWANCE_NOT_ENOUGH",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CALLER_NOT_POOL_ADMIN",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CT_CALLER_MUST_BE_LENDING_POOL",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CT_CANNOT_GIVE_ALLOWANCE_TO_HIMSELF",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CT_INVALID_BURN_AMOUNT",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CT_INVALID_MINT_AMOUNT",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CT_TRANSFER_AMOUNT_NOT_GT_0",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPAPR_INVALID_ADDRESSES_PROVIDER_ID",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPAPR_PROVIDER_NOT_REGISTERED",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPCM_COLLATERAL_CANNOT_BE_LIQUIDATED",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPCM_HEALTH_FACTOR_NOT_BELOW_THRESHOLD",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPCM_NOT_ENOUGH_LIQUIDITY_TO_LIQUIDATE",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPCM_NO_ERRORS",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPCM_SPECIFIED_CURRENCY_NOT_BORROWED_BY_USER",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPC_CALLER_NOT_EMERGENCY_ADMIN",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPC_INVALID_ADDRESSES_PROVIDER_ID",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPC_INVALID_ATOKEN_POOL_ADDRESS",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPC_INVALID_CONFIGURATION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPC_INVALID_STABLE_DEBT_TOKEN_POOL_ADDRESS",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPC_INVALID_STABLE_DEBT_TOKEN_UNDERLYING_ADDRESS",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPC_INVALID_VARIABLE_DEBT_TOKEN_POOL_ADDRESS",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPC_INVALID_VARIABLE_DEBT_TOKEN_UNDERLYING_ADDRESS",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LPC_RESERVE_LIQUIDITY_NOT_0",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_CALLER_MUST_BE_AN_ATOKEN",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_CALLER_NOT_LENDING_POOL_CONFIGURATOR",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_FAILED_COLLATERAL_SWAP",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_FAILED_REPAY_WITH_COLLATERAL",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_INCONSISTENT_FLASHLOAN_PARAMS",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_INCONSISTENT_PARAMS_LENGTH",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_INCONSISTENT_PROTOCOL_ACTUAL_BALANCE",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_INTEREST_RATE_REBALANCE_CONDITIONS_NOT_MET",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_INVALID_EQUAL_ASSETS_TO_SWAP",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_INVALID_FLASHLOAN_MODE",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_INVALID_FLASH_LOAN_EXECUTOR_RETURN",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_IS_PAUSED",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_LIQUIDATION_CALL_FAILED",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_NOT_CONTRACT",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_NOT_ENOUGH_LIQUIDITY_TO_BORROW",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_NOT_ENOUGH_STABLE_BORROW_BALANCE",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_NO_MORE_RESERVES_ALLOWED",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_REENTRANCY_NOT_ALLOWED",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LP_REQUESTED_AMOUNT_TOO_SMALL",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MATH_ADDITION_OVERFLOW",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MATH_DIVISION_BY_ZERO",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MATH_MULTIPLICATION_OVERFLOW",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RC_INVALID_DECIMALS",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RC_INVALID_LIQ_BONUS",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RC_INVALID_LIQ_THRESHOLD",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RC_INVALID_LTV",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RC_INVALID_RESERVE_FACTOR",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RL_LIQUIDITY_INDEX_OVERFLOW",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RL_LIQUIDITY_RATE_OVERFLOW",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RL_RESERVE_ALREADY_INITIALIZED",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RL_STABLE_BORROW_RATE_OVERFLOW",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RL_VARIABLE_BORROW_INDEX_OVERFLOW",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RL_VARIABLE_BORROW_RATE_OVERFLOW",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SDT_BURN_EXCEEDS_BALANCE",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SDT_STABLE_DEBT_OVERFLOW",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UL_INVALID_INDEX",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_AMOUNT_BIGGER_THAN_MAX_LOAN_SIZE_STABLE",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_BORROWING_NOT_ENABLED",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_COLLATERAL_BALANCE_IS_0",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_COLLATERAL_CANNOT_COVER_NEW_BORROW",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_COLLATERAL_SAME_AS_BORROWING_CURRENCY",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_CURRENT_AVAILABLE_LIQUIDITY_NOT_ENOUGH",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_DEPOSIT_ALREADY_IN_USE",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_HEALTH_FACTOR_LOWER_THAN_LIQUIDATION_THRESHOLD",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_INCONSISTENT_FLASHLOAN_PARAMS",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_INVALID_AMOUNT",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_INVALID_INTEREST_RATE_MODE_SELECTED",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_NOT_ENOUGH_AVAILABLE_USER_BALANCE",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_NO_ACTIVE_RESERVE",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_NO_DEBT_OF_SELECTED_TYPE",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_NO_EXPLICIT_AMOUNT_TO_REPAY_ON_BEHALF",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_NO_STABLE_RATE_LOAN_IN_RESERVE",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_NO_VARIABLE_RATE_LOAN_IN_RESERVE",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_RESERVE_FROZEN",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_STABLE_BORROWING_NOT_ENABLED",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_TRANSFER_NOT_ALLOWED",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VL_UNDERLYING_BALANCE_NOT_GREATER_THAN_0",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aave",
						"details": "Error messages prefix glossary:  - VL = ValidationLogic  - MATH = Math libraries  - CT = Common errors between tokens (AToken, VariableDebtToken and StableDebtToken)  - AT = AToken  - SDT = StableDebtToken  - VDT = VariableDebtToken  - LP = LendingPool  - LPAPR = LendingPoolAddressesProviderRegistry  - LPC = LendingPoolConfiguration  - RL = ReserveLogic  - LPCM = LendingPoolCollateralManager  - P = Pausable",
						"kind": "dev",
						"methods": {},
						"title": "Errors library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/protocol/libraries/helpers/Errors.sol\":660:8924  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":660:8924  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6ba4271f\n      gt\n      tag_82\n      jumpi\n      dup1\n      0xcdad445a\n      gt\n      tag_83\n      jumpi\n      dup1\n      0xe2c16d69\n      gt\n      tag_84\n      jumpi\n      dup1\n      0xf11c6720\n      gt\n      tag_85\n      jumpi\n      dup1\n      0xf11c6720\n      eq\n      tag_77\n      jumpi\n      dup1\n      0xf3d9cc11\n      eq\n      tag_78\n      jumpi\n      dup1\n      0xf902735d\n      eq\n      tag_79\n      jumpi\n      dup1\n      0xfb681def\n      eq\n      tag_80\n      jumpi\n      dup1\n      0xfe75fd26\n      eq\n      tag_81\n      jumpi\n      jump(tag_1)\n    tag_85:\n      dup1\n      0xe2c16d69\n      eq\n      tag_72\n      jumpi\n      dup1\n      0xe6632748\n      eq\n      tag_73\n      jumpi\n      dup1\n      0xe7bf91b3\n      eq\n      tag_74\n      jumpi\n      dup1\n      0xeca85d3a\n      eq\n      tag_75\n      jumpi\n      dup1\n      0xf0473259\n      eq\n      tag_76\n      jumpi\n      jump(tag_1)\n    tag_84:\n      dup1\n      0xd7510e0c\n      gt\n      tag_86\n      jumpi\n      dup1\n      0xd7510e0c\n      eq\n      tag_67\n      jumpi\n      dup1\n      0xd7b079aa\n      eq\n      tag_68\n      jumpi\n      dup1\n      0xdaf23547\n      eq\n      tag_69\n      jumpi\n      dup1\n      0xe0d7dfd7\n      eq\n      tag_70\n      jumpi\n      dup1\n      0xe29425dc\n      eq\n      tag_71\n      jumpi\n      jump(tag_1)\n    tag_86:\n      dup1\n      0xcdad445a\n      eq\n      tag_62\n      jumpi\n      dup1\n      0xd3e370ee\n      eq\n      tag_63\n      jumpi\n      dup1\n      0xd44e8e88\n      eq\n      tag_64\n      jumpi\n      dup1\n      0xd57bb964\n      eq\n      tag_65\n      jumpi\n      dup1\n      0xd6f681b6\n      eq\n      tag_66\n      jumpi\n      jump(tag_1)\n    tag_83:\n      dup1\n      0xa39ed4ff\n      gt\n      tag_87\n      jumpi\n      dup1\n      0xb89652cd\n      gt\n      tag_88\n      jumpi\n      dup1\n      0xb89652cd\n      eq\n      tag_57\n      jumpi\n      dup1\n      0xbd013f5b\n      eq\n      tag_58\n      jumpi\n      dup1\n      0xc09e2618\n      eq\n      tag_59\n      jumpi\n      dup1\n      0xc2d628df\n      eq\n      tag_60\n      jumpi\n      dup1\n      0xcc5fc44c\n      eq\n      tag_61\n      jumpi\n      jump(tag_1)\n    tag_88:\n      dup1\n      0xa39ed4ff\n      eq\n      tag_52\n      jumpi\n      dup1\n      0xa8440241\n      eq\n      tag_53\n      jumpi\n      dup1\n      0xac753236\n      eq\n      tag_54\n      jumpi\n      dup1\n      0xb36a2cf3\n      eq\n      tag_55\n      jumpi\n      dup1\n      0xb72e40c7\n      eq\n      tag_56\n      jumpi\n      jump(tag_1)\n    tag_87:\n      dup1\n      0x7865a627\n      gt\n      tag_89\n      jumpi\n      dup1\n      0x7865a627\n      eq\n      tag_47\n      jumpi\n      dup1\n      0x871938a8\n      eq\n      tag_48\n      jumpi\n      dup1\n      0x91a9fb18\n      eq\n      tag_49\n      jumpi\n      dup1\n      0x9be4f03a\n      eq\n      tag_50\n      jumpi\n      dup1\n      0xa2fbc8ad\n      eq\n      tag_51\n      jumpi\n      jump(tag_1)\n    tag_89:\n      dup1\n      0x6ba4271f\n      eq\n      tag_42\n      jumpi\n      dup1\n      0x6d422aa1\n      eq\n      tag_43\n      jumpi\n      dup1\n      0x708b8dd3\n      eq\n      tag_44\n      jumpi\n      dup1\n      0x71a629da\n      eq\n      tag_45\n      jumpi\n      dup1\n      0x76f19030\n      eq\n      tag_46\n      jumpi\n      jump(tag_1)\n    tag_82:\n      dup1\n      0x3aa786a8\n      gt\n      tag_90\n      jumpi\n      dup1\n      0x4a529f91\n      gt\n      tag_91\n      jumpi\n      dup1\n      0x614cf6a1\n      gt\n      tag_92\n      jumpi\n      dup1\n      0x614cf6a1\n      eq\n      tag_37\n      jumpi\n      dup1\n      0x637a5a12\n      eq\n      tag_38\n      jumpi\n      dup1\n      0x6422b257\n      eq\n      tag_39\n      jumpi\n      dup1\n      0x65344799\n      eq\n      tag_40\n      jumpi\n      dup1\n      0x6ab5e615\n      eq\n      tag_41\n      jumpi\n      jump(tag_1)\n    tag_92:\n      dup1\n      0x4a529f91\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x4fe4f1ab\n      eq\n      tag_33\n      jumpi\n      dup1\n      0x55bab12c\n      eq\n      tag_34\n      jumpi\n      dup1\n      0x5a9786d4\n      eq\n      tag_35\n      jumpi\n      dup1\n      0x5e869ff1\n      eq\n      tag_36\n      jumpi\n      jump(tag_1)\n    tag_91:\n      dup1\n      0x4349e3d8\n      gt\n      tag_93\n      jumpi\n      dup1\n      0x4349e3d8\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x44942004\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x44dc4f70\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x47d25300\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x4927c63a\n      eq\n      tag_31\n      jumpi\n      jump(tag_1)\n    tag_93:\n      dup1\n      0x3aa786a8\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x3b5d25aa\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x3f5d6ec8\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x407374a4\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x41b40ba5\n      eq\n      tag_26\n      jumpi\n      jump(tag_1)\n    tag_90:\n      dup1\n      0x22a6f08e\n      gt\n      tag_94\n      jumpi\n      dup1\n      0x333e8ea8\n      gt\n      tag_95\n      jumpi\n      dup1\n      0x333e8ea8\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x35a9d21d\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x36565ab1\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x3872b0ad\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x390f34ba\n      eq\n      tag_21\n      jumpi\n      jump(tag_1)\n    tag_95:\n      dup1\n      0x22a6f08e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x2ace698a\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x2b34c349\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x2b9c57f6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x2ea347b0\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_94:\n      dup1\n      0x1291a38b\n      gt\n      tag_96\n      jumpi\n      dup1\n      0x1291a38b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x179476c5\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x1befa78d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x1ea7c604\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x1ec68b1d\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_96:\n      dup1\n      0x02454ad3\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x029d2344\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06f355ad\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0b8fd588\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0f5ee482\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8375:8421  string public constant UL_INVALID_INDEX = '77' */\n    tag_2:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_99:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_101\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_99)\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_102\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_102:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6542:6600  string public constant MATH_MULTIPLICATION_OVERFLOW = '48' */\n    tag_3:\n      tag_97\n      tag_104\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4406:4471  string public constant CT_CANNOT_GIVE_ALLOWANCE_TO_HIMSELF = '30' */\n    tag_4:\n      tag_97\n      tag_110\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3949:4018  string public constant LP_INCONSISTENT_PROTOCOL_ACTUAL_BALANCE = '26' */\n    tag_5:\n      tag_97\n      tag_116\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6604:6656  string public constant MATH_ADDITION_OVERFLOW = '49' */\n    tag_6:\n      tag_97\n      tag_122\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7236:7288  string public constant CT_INVALID_MINT_AMOUNT = '56' */\n    tag_7:\n      tag_97\n      tag_128\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1226:1296  string public constant VL_CURRENT_AVAILABLE_LIQUIDITY_NOT_ENOUGH = '4' */\n    tag_8:\n      tag_97\n      tag_134\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8532:8586  string public constant SDT_BURN_EXCEEDS_BALANCE = '80' */\n    tag_9:\n      tag_97\n      tag_140\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6386:6430  string public constant LPCM_NO_ERRORS = '46' */\n    tag_10:\n      tag_97\n      tag_146\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1848:1927  string public constant VL_HEALTH_FACTOR_LOWER_THAN_LIQUIDATION_THRESHOLD = '10' */\n    tag_11:\n      tag_97\n      tag_152\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3708:3771  string public constant LP_NOT_ENOUGH_LIQUIDITY_TO_BORROW = '24' */\n    tag_12:\n      tag_97\n      tag_158\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1991:2058  string public constant VL_COLLATERAL_CANNOT_COVER_NEW_BORROW = '11' */\n    tag_13:\n      tag_97\n      tag_164\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4220:4282  string public constant LP_INCONSISTENT_FLASHLOAN_PARAMS = '28' */\n    tag_14:\n      tag_97\n      tag_170\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7382:7434  string public constant CT_INVALID_BURN_AMOUNT = '58' */\n    tag_15:\n      tag_97\n      tag_176\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7022:7084  string public constant RL_VARIABLE_BORROW_RATE_OVERFLOW = '54' */\n    tag_16:\n      tag_97\n      tag_182\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8177:8242  string public constant LPAPR_INVALID_ADDRESSES_PROVIDER_ID = '72' */\n    tag_17:\n      tag_97\n      tag_188\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3114:3184  string public constant VL_UNDERLYING_BALANCE_NOT_GREATER_THAN_0 = '19' */\n    tag_18:\n      tag_97\n      tag_194\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1557:1610  string public constant VL_BORROWING_NOT_ENABLED = '7' */\n    tag_19:\n      tag_97\n      tag_200\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5341:5421  string public constant LPC_INVALID_VARIABLE_DEBT_TOKEN_UNDERLYING_ADDRESS = '39' */\n    tag_20:\n      tag_97\n      tag_206\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3830:3889  string public constant LP_REQUESTED_AMOUNT_TOO_SMALL = '25' */\n    tag_21:\n      tag_97\n      tag_212\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2358:2430  string public constant VL_AMOUNT_BIGGER_THAN_MAX_LOAN_SIZE_STABLE = '14' */\n    tag_22:\n      tag_97\n      tag_218\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1644:1711  string public constant VL_INVALID_INTEREST_RATE_MODE_SELECTED = '8' */\n    tag_23:\n      tag_97\n      tag_224\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8065:8114  string public constant RC_INVALID_DECIMALS = '70' */\n    tag_24:\n      tag_97\n      tag_230\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6013:6079  string public constant LPCM_COLLATERAL_CANNOT_BE_LIQUIDATED = '43' */\n    tag_25:\n      tag_97\n      tag_236\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5211:5289  string public constant LPC_INVALID_STABLE_DEBT_TOKEN_UNDERLYING_ADDRESS = '38' */\n    tag_26:\n      tag_97\n      tag_242\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6660:6711  string public constant MATH_DIVISION_BY_ZERO = '50' */\n    tag_27:\n      tag_97\n      tag_248\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6814:6877  string public constant RL_VARIABLE_BORROW_INDEX_OVERFLOW = '52' */\n    tag_28:\n      tag_97\n      tag_254\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3356:3421  string public constant LP_NOT_ENOUGH_STABLE_BORROW_BALANCE = '21' */\n    tag_29:\n      tag_97\n      tag_260\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5588:5643  string public constant LPC_INVALID_CONFIGURATION = '75' */\n    tag_30:\n      tag_97\n      tag_266\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2120:2181  string public constant VL_STABLE_BORROWING_NOT_ENABLED = '12' */\n    tag_31:\n      tag_97\n      tag_272\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3619:3675  string public constant LP_LIQUIDATION_CALL_FAILED = '23' */\n    tag_32:\n      tag_97\n      tag_278\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6715:6772  string public constant RL_LIQUIDITY_INDEX_OVERFLOW = '51' */\n    tag_33:\n      tag_97\n      tag_284\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7463:7518  string public constant LP_FAILED_COLLATERAL_SWAP = '60' */\n    tag_34:\n      tag_97\n      tag_290\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5473:5536  string public constant LPC_INVALID_ADDRESSES_PROVIDER_ID = '40' */\n    tag_35:\n      tag_97\n      tag_296\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8011:8061  string public constant RC_INVALID_LIQ_BONUS = '69' */\n    tag_36:\n      tag_97\n      tag_302\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7905:7949  string public constant RC_INVALID_LTV = '67' */\n    tag_37:\n      tag_97\n      tag_308\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8425:8470  string public constant LP_NOT_CONTRACT = '78' */\n    tag_38:\n      tag_97\n      tag_314\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2834:2897  string public constant VL_NO_STABLE_RATE_LOAN_IN_RESERVE = '17' */\n    tag_39:\n      tag_97\n      tag_320\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4739:4796  string public constant LPC_RESERVE_LIQUIDITY_NOT_0 = '34' */\n    tag_40:\n      tag_97\n      tag_326\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2972:3037  string public constant VL_NO_VARIABLE_RATE_LOAN_IN_RESERVE = '18' */\n    tag_41:\n      tag_97\n      tag_332\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4286:4346  string public constant CT_CALLER_MUST_BE_LENDING_POOL = '29' */\n    tag_42:\n      tag_97\n      tag_338\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7131:7191  string public constant RL_STABLE_BORROW_RATE_OVERFLOW = '55' */\n    tag_43:\n      tag_97\n      tag_344\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1756:1811  string public constant VL_COLLATERAL_BALANCE_IS_0 = '9' */\n    tag_44:\n      tag_97\n      tag_350\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6131:6205  string public constant LPCM_SPECIFIED_CURRENCY_NOT_BORROWED_BY_USER = '44' */\n    tag_45:\n      tag_97\n      tag_356\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7773:7830  string public constant LP_NO_MORE_RESERVES_ALLOWED = '65' */\n    tag_46:\n      tag_97\n      tag_362\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1022:1071  string public constant VL_NO_ACTIVE_RESERVE = '2' */\n    tag_47:\n      tag_97\n      tag_368\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":937:983  string public constant VL_INVALID_AMOUNT = '1' */\n    tag_48:\n      tag_97\n      tag_374\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2513:2570  string public constant VL_NO_DEBT_OF_SELECTED_TYPE = '15' */\n    tag_49:\n      tag_97\n      tag_380\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8118:8173  string public constant RC_INVALID_RESERVE_FACTOR = '71' */\n    tag_50:\n      tag_97\n      tag_386\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4518:4575  string public constant CT_TRANSFER_AMOUNT_NOT_GT_0 = '31' */\n    tag_51:\n      tag_97\n      tag_392\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2217:2287  string public constant VL_COLLATERAL_SAME_AS_BORROWING_CURRENCY = '13' */\n    tag_52:\n      tag_97\n      tag_398\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1341:1406  string public constant VL_NOT_ENOUGH_AVAILABLE_USER_BALANCE = '5' */\n    tag_53:\n      tag_97\n      tag_404\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":697:748  string public constant CALLER_NOT_POOL_ADMIN = '33' */\n    tag_54:\n      tag_97\n      tag_410\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4078:4147  string public constant LP_CALLER_NOT_LENDING_POOL_CONFIGURATOR = '27' */\n    tag_55:\n      tag_97\n      tag_416\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8312:8371  string public constant LP_INCONSISTENT_PARAMS_LENGTH = '74' */\n    tag_56:\n      tag_97\n      tag_422\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3487:3562  string public constant LP_INTEREST_RATE_REBALANCE_CONDITIONS_NOT_MET = '22' */\n    tag_57:\n      tag_97\n      tag_428\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7953:8007  string public constant RC_INVALID_LIQ_THRESHOLD = '68' */\n    tag_58:\n      tag_97\n      tag_434\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5085:5159  string public constant LPC_INVALID_VARIABLE_DEBT_TOKEN_POOL_ADDRESS = '37' */\n    tag_59:\n      tag_97\n      tag_440\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7522:7583  string public constant LP_INVALID_EQUAL_ASSETS_TO_SWAP = '61' */\n    tag_60:\n      tag_97\n      tag_446\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6257:6325  string public constant LPCM_NOT_ENOUGH_LIQUIDITY_TO_LIQUIDATE = '45' */\n    tag_61:\n      tag_97\n      tag_452\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8474:8528  string public constant SDT_STABLE_DEBT_OVERFLOW = '79' */\n    tag_62:\n      tag_97\n      tag_458\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5692:5752  string public constant LPC_CALLER_NOT_EMERGENCY_ADMIN = '76' */\n    tag_63:\n      tag_97\n      tag_464\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7834:7901  string public constant LP_INVALID_FLASH_LOAN_EXECUTOR_RETURN = '66' */\n    tag_64:\n      tag_97\n      tag_470\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7707:7749  string public constant LP_IS_PAUSED = '64' */\n    tag_65:\n      tag_97\n      tag_476\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5800:5859  string public constant LPAPR_PROVIDER_NOT_REGISTERED = '41' */\n    tag_66:\n      tag_97\n      tag_482\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1114:1160  string public constant VL_RESERVE_FROZEN = '3' */\n    tag_67:\n      tag_97\n      tag_488\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8246:8308  string public constant VL_INCONSISTENT_FLASHLOAN_PARAMS = '73' */\n    tag_68:\n      tag_97\n      tag_494\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2687:2757  string public constant VL_NO_EXPLICIT_AMOUNT_TO_REPAY_ON_BEHALF = '16' */\n    tag_69:\n      tag_97\n      tag_500\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4961:5033  string public constant LPC_INVALID_STABLE_DEBT_TOKEN_POOL_ADDRESS = '36' */\n    tag_70:\n      tag_97\n      tag_506\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3243:3298  string public constant VL_DEPOSIT_ALREADY_IN_USE = '20' */\n    tag_71:\n      tag_97\n      tag_512\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":791:848  string public constant BORROW_ALLOWANCE_NOT_ENOUGH = '59' */\n    tag_72:\n      tag_97\n      tag_518\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7317:7378  string public constant LP_FAILED_REPAY_WITH_COLLATERAL = '57' */\n    tag_73:\n      tag_97\n      tag_524\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6449:6504  string public constant LP_INVALID_FLASHLOAN_MODE = '47' */\n    tag_74:\n      tag_97\n      tag_530\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7646:7703  string public constant LP_CALLER_MUST_BE_AN_ATOKEN = '63' */\n    tag_75:\n      tag_97\n      tag_536\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4848:4909  string public constant LPC_INVALID_ATOKEN_POOL_ADDRESS = '35' */\n    tag_76:\n      tag_97\n      tag_542\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6925:6981  string public constant RL_LIQUIDITY_RATE_OVERFLOW = '53' */\n    tag_77:\n      tag_97\n      tag_548\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1468:1520  string public constant VL_TRANSFER_NOT_ALLOWED = '6' */\n    tag_78:\n      tag_97\n      tag_554\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7587:7642  string public constant LP_REENTRANCY_NOT_ALLOWED = '62' */\n    tag_79:\n      tag_97\n      tag_560\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5895:5963  string public constant LPCM_HEALTH_FACTOR_NOT_BELOW_THRESHOLD = '42' */\n    tag_80:\n      tag_97\n      tag_566\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4633:4693  string public constant RL_RESERVE_ALREADY_INITIALIZED = '32' */\n    tag_81:\n      tag_97\n      tag_572\n      jump\t// in\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8375:8421  string public constant UL_INVALID_INDEX = '77' */\n    tag_98:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3737)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6542:6600  string public constant MATH_MULTIPLICATION_OVERFLOW = '48' */\n    tag_104:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf3, 0x0687)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4406:4471  string public constant CT_CANNOT_GIVE_ALLOWANCE_TO_HIMSELF = '30' */\n    tag_110:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf4, 0x0333)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3949:4018  string public constant LP_INCONSISTENT_PROTOCOL_ACTUAL_BALANCE = '26' */\n    tag_116:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x191b)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6604:6656  string public constant MATH_ADDITION_OVERFLOW = '49' */\n    tag_122:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3439)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7236:7288  string public constant CT_INVALID_MINT_AMOUNT = '56' */\n    tag_128:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x1a9b)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1226:1296  string public constant VL_CURRENT_AVAILABLE_LIQUIDITY_NOT_ENOUGH = '4' */\n    tag_134:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xfa, 0x0d)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8532:8586  string public constant SDT_BURN_EXCEEDS_BALANCE = '80' */\n    tag_140:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf4, 0x0383)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6386:6430  string public constant LPCM_NO_ERRORS = '46' */\n    tag_146:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x1a1b)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1848:1927  string public constant VL_HEALTH_FACTOR_LOWER_THAN_LIQUIDATION_THRESHOLD = '10' */\n    tag_152:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf4, 0x0313)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3708:3771  string public constant LP_NOT_ENOUGH_LIQUIDITY_TO_BORROW = '24' */\n    tag_158:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf2, 0x0c8d)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1991:2058  string public constant VL_COLLATERAL_CANNOT_COVER_NEW_BORROW = '11' */\n    tag_164:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3131)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4220:4282  string public constant LP_INCONSISTENT_FLASHLOAN_PARAMS = '28' */\n    tag_170:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf3, 0x0647)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7382:7434  string public constant CT_INVALID_BURN_AMOUNT = '58' */\n    tag_176:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf3, 0x06a7)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7022:7084  string public constant RL_VARIABLE_BORROW_RATE_OVERFLOW = '54' */\n    tag_182:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf2, 0x0d4d)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8177:8242  string public constant LPAPR_INVALID_ADDRESSES_PROVIDER_ID = '72' */\n    tag_188:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x1b99)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3114:3184  string public constant VL_UNDERLYING_BALANCE_NOT_GREATER_THAN_0 = '19' */\n    tag_194:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3139)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1557:1610  string public constant VL_BORROWING_NOT_ENABLED = '7' */\n    tag_200:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf8, 0x37)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5341:5421  string public constant LPC_INVALID_VARIABLE_DEBT_TOKEN_UNDERLYING_ADDRESS = '39' */\n    tag_206:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3339)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3830:3889  string public constant LP_REQUESTED_AMOUNT_TOO_SMALL = '25' */\n    tag_212:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3235)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2358:2430  string public constant VL_AMOUNT_BIGGER_THAN_MAX_LOAN_SIZE_STABLE = '14' */\n    tag_218:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf2, 0x0c4d)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1644:1711  string public constant VL_INVALID_INTEREST_RATE_MODE_SELECTED = '8' */\n    tag_224:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xfb, 0x07)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8065:8114  string public constant RC_INVALID_DECIMALS = '70' */\n    tag_230:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf4, 0x0373)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6013:6079  string public constant LPCM_COLLATERAL_CANNOT_BE_LIQUIDATED = '43' */\n    tag_236:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3433)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5211:5289  string public constant LPC_INVALID_STABLE_DEBT_TOKEN_UNDERLYING_ADDRESS = '38' */\n    tag_242:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf3, 0x0667)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6660:6711  string public constant MATH_DIVISION_BY_ZERO = '50' */\n    tag_248:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf4, 0x0353)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6814:6877  string public constant RL_VARIABLE_BORROW_INDEX_OVERFLOW = '52' */\n    tag_254:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x1a99)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3356:3421  string public constant LP_NOT_ENOUGH_STABLE_BORROW_BALANCE = '21' */\n    tag_260:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3231)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5588:5643  string public constant LPC_INVALID_CONFIGURATION = '75' */\n    tag_266:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3735)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2120:2181  string public constant VL_STABLE_BORROWING_NOT_ENABLED = '12' */\n    tag_272:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x1899)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3619:3675  string public constant LP_LIQUIDATION_CALL_FAILED = '23' */\n    tag_278:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3233)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6715:6772  string public constant RL_LIQUIDITY_INDEX_OVERFLOW = '51' */\n    tag_284:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3531)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7463:7518  string public constant LP_FAILED_COLLATERAL_SWAP = '60' */\n    tag_290:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf4, 0x0363)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5473:5536  string public constant LPC_INVALID_ADDRESSES_PROVIDER_ID = '40' */\n    tag_296:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf4, 0x0343)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8011:8061  string public constant RC_INVALID_LIQ_BONUS = '69' */\n    tag_302:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3639)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7905:7949  string public constant RC_INVALID_LTV = '67' */\n    tag_308:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3637)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8425:8470  string public constant LP_NOT_CONTRACT = '78' */\n    tag_314:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf3, 0x06e7)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2834:2897  string public constant VL_NO_STABLE_RATE_LOAN_IN_RESERVE = '17' */\n    tag_320:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3137)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4739:4796  string public constant LPC_RESERVE_LIQUIDITY_NOT_0 = '34' */\n    tag_326:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf2, 0x0ccd)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2972:3037  string public constant VL_NO_VARIABLE_RATE_LOAN_IN_RESERVE = '18' */\n    tag_332:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf3, 0x0627)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4286:4346  string public constant CT_CALLER_MUST_BE_LENDING_POOL = '29' */\n    tag_338:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3239)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7131:7191  string public constant RL_STABLE_BORROW_RATE_OVERFLOW = '55' */\n    tag_344:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3535)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1756:1811  string public constant VL_COLLATERAL_BALANCE_IS_0 = '9' */\n    tag_350:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf8, 0x39)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6131:6205  string public constant LPCM_SPECIFIED_CURRENCY_NOT_BORROWED_BY_USER = '44' */\n    tag_356:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf2, 0x0d0d)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7773:7830  string public constant LP_NO_MORE_RESERVES_ALLOWED = '65' */\n    tag_362:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3635)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1022:1071  string public constant VL_NO_ACTIVE_RESERVE = '2' */\n    tag_368:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf9, 0x19)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":937:983  string public constant VL_INVALID_AMOUNT = '1' */\n    tag_374:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf8, 0x31)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2513:2570  string public constant VL_NO_DEBT_OF_SELECTED_TYPE = '15' */\n    tag_380:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3135)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8118:8173  string public constant RC_INVALID_RESERVE_FACTOR = '71' */\n    tag_386:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3731)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4518:4575  string public constant CT_TRANSFER_AMOUNT_NOT_GT_0 = '31' */\n    tag_392:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3331)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2217:2287  string public constant VL_COLLATERAL_SAME_AS_BORROWING_CURRENCY = '13' */\n    tag_398:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3133)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1341:1406  string public constant VL_NOT_ENOUGH_AVAILABLE_USER_BALANCE = '5' */\n    tag_404:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf8, 0x35)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":697:748  string public constant CALLER_NOT_POOL_ADMIN = '33' */\n    tag_410:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3333)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4078:4147  string public constant LP_CALLER_NOT_LENDING_POOL_CONFIGURATOR = '27' */\n    tag_416:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3237)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8312:8371  string public constant LP_INCONSISTENT_PARAMS_LENGTH = '74' */\n    tag_422:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf2, 0x0dcd)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3487:3562  string public constant LP_INTEREST_RATE_REBALANCE_CONDITIONS_NOT_MET = '22' */\n    tag_428:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x1919)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7953:8007  string public constant RC_INVALID_LIQ_THRESHOLD = '68' */\n    tag_434:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf3, 0x06c7)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5085:5159  string public constant LPC_INVALID_VARIABLE_DEBT_TOKEN_POOL_ADDRESS = '37' */\n    tag_440:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3337)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7522:7583  string public constant LP_INVALID_EQUAL_ASSETS_TO_SWAP = '61' */\n    tag_446:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3631)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6257:6325  string public constant LPCM_NOT_ENOUGH_LIQUIDITY_TO_LIQUIDATE = '45' */\n    tag_452:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3435)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8474:8528  string public constant SDT_STABLE_DEBT_OVERFLOW = '79' */\n    tag_458:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3739)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5692:5752  string public constant LPC_CALLER_NOT_EMERGENCY_ADMIN = '76' */\n    tag_464:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x1b9b)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7834:7901  string public constant LP_INVALID_FLASH_LOAN_EXECUTOR_RETURN = '66' */\n    tag_470:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x1b1b)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7707:7749  string public constant LP_IS_PAUSED = '64' */\n    tag_476:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf2, 0x0d8d)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5800:5859  string public constant LPAPR_PROVIDER_NOT_REGISTERED = '41' */\n    tag_482:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3431)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1114:1160  string public constant VL_RESERVE_FROZEN = '3' */\n    tag_488:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf8, 0x33)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":8246:8308  string public constant VL_INCONSISTENT_FLASHLOAN_PARAMS = '73' */\n    tag_494:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3733)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":2687:2757  string public constant VL_NO_EXPLICIT_AMOUNT_TO_REPAY_ON_BEHALF = '16' */\n    tag_500:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x189b)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4961:5033  string public constant LPC_INVALID_STABLE_DEBT_TOKEN_POOL_ADDRESS = '36' */\n    tag_506:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x199b)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":3243:3298  string public constant VL_DEPOSIT_ALREADY_IN_USE = '20' */\n    tag_512:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf4, 0x0323)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":791:848  string public constant BORROW_ALLOWANCE_NOT_ENOUGH = '59' */\n    tag_518:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3539)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7317:7378  string public constant LP_FAILED_REPAY_WITH_COLLATERAL = '57' */\n    tag_524:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3537)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6449:6504  string public constant LP_INVALID_FLASHLOAN_MODE = '47' */\n    tag_530:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3437)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7646:7703  string public constant LP_CALLER_MUST_BE_AN_ATOKEN = '63' */\n    tag_536:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3633)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4848:4909  string public constant LPC_INVALID_ATOKEN_POOL_ADDRESS = '35' */\n    tag_542:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3335)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":6925:6981  string public constant RL_LIQUIDITY_RATE_OVERFLOW = '53' */\n    tag_548:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x3533)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":1468:1520  string public constant VL_TRANSFER_NOT_ALLOWED = '6' */\n    tag_554:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf9, 0x1b)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":7587:7642  string public constant LP_REENTRANCY_NOT_ALLOWED = '62' */\n    tag_560:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x1b19)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":5895:5963  string public constant LPCM_HEALTH_FACTOR_NOT_BELOW_THRESHOLD = '42' */\n    tag_566:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x1a19)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/protocol/libraries/helpers/Errors.sol\":4633:4693  string public constant RL_RESERVE_ALREADY_INITIALIZED = '32' */\n    tag_572:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x1999)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n\n    auxdata: 0xa264697066735822122031dc367ad4466b8be1fcde1dc598e31bd7cee9829694af2139923ac0db7f5faa64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH2 0x1111 PUSH2 0x26 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x19 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x48A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6BA4271F GT PUSH2 0x261 JUMPI DUP1 PUSH4 0xCDAD445A GT PUSH2 0x150 JUMPI DUP1 PUSH4 0xE2C16D69 GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xF11C6720 GT PUSH2 0x91 JUMPI DUP1 PUSH4 0xF11C6720 EQ PUSH2 0x75C JUMPI DUP1 PUSH4 0xF3D9CC11 EQ PUSH2 0x764 JUMPI DUP1 PUSH4 0xF902735D EQ PUSH2 0x76C JUMPI DUP1 PUSH4 0xFB681DEF EQ PUSH2 0x774 JUMPI DUP1 PUSH4 0xFE75FD26 EQ PUSH2 0x77C JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0xE2C16D69 EQ PUSH2 0x734 JUMPI DUP1 PUSH4 0xE6632748 EQ PUSH2 0x73C JUMPI DUP1 PUSH4 0xE7BF91B3 EQ PUSH2 0x744 JUMPI DUP1 PUSH4 0xECA85D3A EQ PUSH2 0x74C JUMPI DUP1 PUSH4 0xF0473259 EQ PUSH2 0x754 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0xD7510E0C GT PUSH2 0x114 JUMPI DUP1 PUSH4 0xD7510E0C EQ PUSH2 0x70C JUMPI DUP1 PUSH4 0xD7B079AA EQ PUSH2 0x714 JUMPI DUP1 PUSH4 0xDAF23547 EQ PUSH2 0x71C JUMPI DUP1 PUSH4 0xE0D7DFD7 EQ PUSH2 0x724 JUMPI DUP1 PUSH4 0xE29425DC EQ PUSH2 0x72C JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0xCDAD445A EQ PUSH2 0x6E4 JUMPI DUP1 PUSH4 0xD3E370EE EQ PUSH2 0x6EC JUMPI DUP1 PUSH4 0xD44E8E88 EQ PUSH2 0x6F4 JUMPI DUP1 PUSH4 0xD57BB964 EQ PUSH2 0x6FC JUMPI DUP1 PUSH4 0xD6F681B6 EQ PUSH2 0x704 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0xA39ED4FF GT PUSH2 0x1DE JUMPI DUP1 PUSH4 0xB89652CD GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0xB89652CD EQ PUSH2 0x6BC JUMPI DUP1 PUSH4 0xBD013F5B EQ PUSH2 0x6C4 JUMPI DUP1 PUSH4 0xC09E2618 EQ PUSH2 0x6CC JUMPI DUP1 PUSH4 0xC2D628DF EQ PUSH2 0x6D4 JUMPI DUP1 PUSH4 0xCC5FC44C EQ PUSH2 0x6DC JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0xA39ED4FF EQ PUSH2 0x694 JUMPI DUP1 PUSH4 0xA8440241 EQ PUSH2 0x69C JUMPI DUP1 PUSH4 0xAC753236 EQ PUSH2 0x6A4 JUMPI DUP1 PUSH4 0xB36A2CF3 EQ PUSH2 0x6AC JUMPI DUP1 PUSH4 0xB72E40C7 EQ PUSH2 0x6B4 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x7865A627 GT PUSH2 0x225 JUMPI DUP1 PUSH4 0x7865A627 EQ PUSH2 0x66C JUMPI DUP1 PUSH4 0x871938A8 EQ PUSH2 0x674 JUMPI DUP1 PUSH4 0x91A9FB18 EQ PUSH2 0x67C JUMPI DUP1 PUSH4 0x9BE4F03A EQ PUSH2 0x684 JUMPI DUP1 PUSH4 0xA2FBC8AD EQ PUSH2 0x68C JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x6BA4271F EQ PUSH2 0x644 JUMPI DUP1 PUSH4 0x6D422AA1 EQ PUSH2 0x64C JUMPI DUP1 PUSH4 0x708B8DD3 EQ PUSH2 0x654 JUMPI DUP1 PUSH4 0x71A629DA EQ PUSH2 0x65C JUMPI DUP1 PUSH4 0x76F19030 EQ PUSH2 0x664 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x3AA786A8 GT PUSH2 0x37D JUMPI DUP1 PUSH4 0x4A529F91 GT PUSH2 0x2FA JUMPI DUP1 PUSH4 0x614CF6A1 GT PUSH2 0x2BE JUMPI DUP1 PUSH4 0x614CF6A1 EQ PUSH2 0x61C JUMPI DUP1 PUSH4 0x637A5A12 EQ PUSH2 0x624 JUMPI DUP1 PUSH4 0x6422B257 EQ PUSH2 0x62C JUMPI DUP1 PUSH4 0x65344799 EQ PUSH2 0x634 JUMPI DUP1 PUSH4 0x6AB5E615 EQ PUSH2 0x63C JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x4A529F91 EQ PUSH2 0x5F4 JUMPI DUP1 PUSH4 0x4FE4F1AB EQ PUSH2 0x5FC JUMPI DUP1 PUSH4 0x55BAB12C EQ PUSH2 0x604 JUMPI DUP1 PUSH4 0x5A9786D4 EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0x5E869FF1 EQ PUSH2 0x614 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x4349E3D8 GT PUSH2 0x341 JUMPI DUP1 PUSH4 0x4349E3D8 EQ PUSH2 0x5CC JUMPI DUP1 PUSH4 0x44942004 EQ PUSH2 0x5D4 JUMPI DUP1 PUSH4 0x44DC4F70 EQ PUSH2 0x5DC JUMPI DUP1 PUSH4 0x47D25300 EQ PUSH2 0x5E4 JUMPI DUP1 PUSH4 0x4927C63A EQ PUSH2 0x5EC JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x3AA786A8 EQ PUSH2 0x5A4 JUMPI DUP1 PUSH4 0x3B5D25AA EQ PUSH2 0x5AC JUMPI DUP1 PUSH4 0x3F5D6EC8 EQ PUSH2 0x5B4 JUMPI DUP1 PUSH4 0x407374A4 EQ PUSH2 0x5BC JUMPI DUP1 PUSH4 0x41B40BA5 EQ PUSH2 0x5C4 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x22A6F08E GT PUSH2 0x40B JUMPI DUP1 PUSH4 0x333E8EA8 GT PUSH2 0x3CF JUMPI DUP1 PUSH4 0x333E8EA8 EQ PUSH2 0x57C JUMPI DUP1 PUSH4 0x35A9D21D EQ PUSH2 0x584 JUMPI DUP1 PUSH4 0x36565AB1 EQ PUSH2 0x58C JUMPI DUP1 PUSH4 0x3872B0AD EQ PUSH2 0x594 JUMPI DUP1 PUSH4 0x390F34BA EQ PUSH2 0x59C JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x22A6F08E EQ PUSH2 0x554 JUMPI DUP1 PUSH4 0x2ACE698A EQ PUSH2 0x55C JUMPI DUP1 PUSH4 0x2B34C349 EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0x2B9C57F6 EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0x2EA347B0 EQ PUSH2 0x574 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x1291A38B GT PUSH2 0x452 JUMPI DUP1 PUSH4 0x1291A38B EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0x179476C5 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0x1BEFA78D EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0x1EA7C604 EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0x1EC68B1D EQ PUSH2 0x54C JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x2454AD3 EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0x29D2344 EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0x6F355AD EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0xB8FD588 EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0xF5EE482 EQ PUSH2 0x524 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x497 PUSH2 0x784 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4D1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4B9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4FE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x497 PUSH2 0x7A2 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x7C0 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x7DE JUMP JUMPDEST PUSH2 0x497 PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x497 PUSH2 0x81A JUMP JUMPDEST PUSH2 0x497 PUSH2 0x838 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x873 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x891 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x8AF JUMP JUMPDEST PUSH2 0x497 PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x497 PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x497 PUSH2 0x909 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x927 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x945 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x963 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x981 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x497 PUSH2 0x9BC JUMP JUMPDEST PUSH2 0x497 PUSH2 0x9DA JUMP JUMPDEST PUSH2 0x497 PUSH2 0x9F8 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xA15 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xA51 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xA6F JUMP JUMPDEST PUSH2 0x497 PUSH2 0xA8D JUMP JUMPDEST PUSH2 0x497 PUSH2 0xAAB JUMP JUMPDEST PUSH2 0x497 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xB05 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xB23 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xB41 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xB5F JUMP JUMPDEST PUSH2 0x497 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x497 PUSH2 0xB9B JUMP JUMPDEST PUSH2 0x497 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xBF5 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xC13 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xC31 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0x497 PUSH2 0xC6D JUMP JUMPDEST PUSH2 0x497 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x497 PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xCC6 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xCE3 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xD00 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x497 PUSH2 0xD3C JUMP JUMPDEST PUSH2 0x497 PUSH2 0xD5A JUMP JUMPDEST PUSH2 0x497 PUSH2 0xD78 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xD95 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xDEF JUMP JUMPDEST PUSH2 0x497 PUSH2 0xE0D JUMP JUMPDEST PUSH2 0x497 PUSH2 0xE2B JUMP JUMPDEST PUSH2 0x497 PUSH2 0xE49 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xE85 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xEC1 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xEDF JUMP JUMPDEST PUSH2 0x497 PUSH2 0xEFD JUMP JUMPDEST PUSH2 0x497 PUSH2 0xF1B JUMP JUMPDEST PUSH2 0x497 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xF56 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xF74 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xF92 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xFB0 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xFCE JUMP JUMPDEST PUSH2 0x497 PUSH2 0xFEC JUMP JUMPDEST PUSH2 0x497 PUSH2 0x100A JUMP JUMPDEST PUSH2 0x497 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x1046 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x1064 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x1081 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x497 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3737 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x687 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x333 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x191B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3439 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A9B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD PUSH1 0xFA SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x383 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A1B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x313 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC8D PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3131 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x647 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6A7 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4D PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B99 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3139 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x37 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3339 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3235 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC4D PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 PUSH1 0xFB SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x373 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3433 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x667 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x353 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A99 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3231 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3735 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1899 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3233 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3531 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x363 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x343 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3639 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3637 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6E7 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3137 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCCD PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x627 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3239 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3535 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x39 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD0D PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3635 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x19 PUSH1 0xF9 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3135 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3731 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3331 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3133 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x35 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3333 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3237 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDCD PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1919 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6C7 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3337 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3631 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3435 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3739 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B9B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B1B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD8D PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3431 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x33 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3733 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x189B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x199B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x323 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3539 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3537 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3437 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3633 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3335 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3533 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1B PUSH1 0xF9 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B19 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A19 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1999 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0xDC CALLDATASIZE PUSH27 0xD4466B8BE1FCDE1DC598E31BD7CEE9829694AF2139923AC0DB7F5F 0xAA PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "660:8264:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x48A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6BA4271F GT PUSH2 0x261 JUMPI DUP1 PUSH4 0xCDAD445A GT PUSH2 0x150 JUMPI DUP1 PUSH4 0xE2C16D69 GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xF11C6720 GT PUSH2 0x91 JUMPI DUP1 PUSH4 0xF11C6720 EQ PUSH2 0x75C JUMPI DUP1 PUSH4 0xF3D9CC11 EQ PUSH2 0x764 JUMPI DUP1 PUSH4 0xF902735D EQ PUSH2 0x76C JUMPI DUP1 PUSH4 0xFB681DEF EQ PUSH2 0x774 JUMPI DUP1 PUSH4 0xFE75FD26 EQ PUSH2 0x77C JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0xE2C16D69 EQ PUSH2 0x734 JUMPI DUP1 PUSH4 0xE6632748 EQ PUSH2 0x73C JUMPI DUP1 PUSH4 0xE7BF91B3 EQ PUSH2 0x744 JUMPI DUP1 PUSH4 0xECA85D3A EQ PUSH2 0x74C JUMPI DUP1 PUSH4 0xF0473259 EQ PUSH2 0x754 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0xD7510E0C GT PUSH2 0x114 JUMPI DUP1 PUSH4 0xD7510E0C EQ PUSH2 0x70C JUMPI DUP1 PUSH4 0xD7B079AA EQ PUSH2 0x714 JUMPI DUP1 PUSH4 0xDAF23547 EQ PUSH2 0x71C JUMPI DUP1 PUSH4 0xE0D7DFD7 EQ PUSH2 0x724 JUMPI DUP1 PUSH4 0xE29425DC EQ PUSH2 0x72C JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0xCDAD445A EQ PUSH2 0x6E4 JUMPI DUP1 PUSH4 0xD3E370EE EQ PUSH2 0x6EC JUMPI DUP1 PUSH4 0xD44E8E88 EQ PUSH2 0x6F4 JUMPI DUP1 PUSH4 0xD57BB964 EQ PUSH2 0x6FC JUMPI DUP1 PUSH4 0xD6F681B6 EQ PUSH2 0x704 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0xA39ED4FF GT PUSH2 0x1DE JUMPI DUP1 PUSH4 0xB89652CD GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0xB89652CD EQ PUSH2 0x6BC JUMPI DUP1 PUSH4 0xBD013F5B EQ PUSH2 0x6C4 JUMPI DUP1 PUSH4 0xC09E2618 EQ PUSH2 0x6CC JUMPI DUP1 PUSH4 0xC2D628DF EQ PUSH2 0x6D4 JUMPI DUP1 PUSH4 0xCC5FC44C EQ PUSH2 0x6DC JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0xA39ED4FF EQ PUSH2 0x694 JUMPI DUP1 PUSH4 0xA8440241 EQ PUSH2 0x69C JUMPI DUP1 PUSH4 0xAC753236 EQ PUSH2 0x6A4 JUMPI DUP1 PUSH4 0xB36A2CF3 EQ PUSH2 0x6AC JUMPI DUP1 PUSH4 0xB72E40C7 EQ PUSH2 0x6B4 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x7865A627 GT PUSH2 0x225 JUMPI DUP1 PUSH4 0x7865A627 EQ PUSH2 0x66C JUMPI DUP1 PUSH4 0x871938A8 EQ PUSH2 0x674 JUMPI DUP1 PUSH4 0x91A9FB18 EQ PUSH2 0x67C JUMPI DUP1 PUSH4 0x9BE4F03A EQ PUSH2 0x684 JUMPI DUP1 PUSH4 0xA2FBC8AD EQ PUSH2 0x68C JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x6BA4271F EQ PUSH2 0x644 JUMPI DUP1 PUSH4 0x6D422AA1 EQ PUSH2 0x64C JUMPI DUP1 PUSH4 0x708B8DD3 EQ PUSH2 0x654 JUMPI DUP1 PUSH4 0x71A629DA EQ PUSH2 0x65C JUMPI DUP1 PUSH4 0x76F19030 EQ PUSH2 0x664 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x3AA786A8 GT PUSH2 0x37D JUMPI DUP1 PUSH4 0x4A529F91 GT PUSH2 0x2FA JUMPI DUP1 PUSH4 0x614CF6A1 GT PUSH2 0x2BE JUMPI DUP1 PUSH4 0x614CF6A1 EQ PUSH2 0x61C JUMPI DUP1 PUSH4 0x637A5A12 EQ PUSH2 0x624 JUMPI DUP1 PUSH4 0x6422B257 EQ PUSH2 0x62C JUMPI DUP1 PUSH4 0x65344799 EQ PUSH2 0x634 JUMPI DUP1 PUSH4 0x6AB5E615 EQ PUSH2 0x63C JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x4A529F91 EQ PUSH2 0x5F4 JUMPI DUP1 PUSH4 0x4FE4F1AB EQ PUSH2 0x5FC JUMPI DUP1 PUSH4 0x55BAB12C EQ PUSH2 0x604 JUMPI DUP1 PUSH4 0x5A9786D4 EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0x5E869FF1 EQ PUSH2 0x614 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x4349E3D8 GT PUSH2 0x341 JUMPI DUP1 PUSH4 0x4349E3D8 EQ PUSH2 0x5CC JUMPI DUP1 PUSH4 0x44942004 EQ PUSH2 0x5D4 JUMPI DUP1 PUSH4 0x44DC4F70 EQ PUSH2 0x5DC JUMPI DUP1 PUSH4 0x47D25300 EQ PUSH2 0x5E4 JUMPI DUP1 PUSH4 0x4927C63A EQ PUSH2 0x5EC JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x3AA786A8 EQ PUSH2 0x5A4 JUMPI DUP1 PUSH4 0x3B5D25AA EQ PUSH2 0x5AC JUMPI DUP1 PUSH4 0x3F5D6EC8 EQ PUSH2 0x5B4 JUMPI DUP1 PUSH4 0x407374A4 EQ PUSH2 0x5BC JUMPI DUP1 PUSH4 0x41B40BA5 EQ PUSH2 0x5C4 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x22A6F08E GT PUSH2 0x40B JUMPI DUP1 PUSH4 0x333E8EA8 GT PUSH2 0x3CF JUMPI DUP1 PUSH4 0x333E8EA8 EQ PUSH2 0x57C JUMPI DUP1 PUSH4 0x35A9D21D EQ PUSH2 0x584 JUMPI DUP1 PUSH4 0x36565AB1 EQ PUSH2 0x58C JUMPI DUP1 PUSH4 0x3872B0AD EQ PUSH2 0x594 JUMPI DUP1 PUSH4 0x390F34BA EQ PUSH2 0x59C JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x22A6F08E EQ PUSH2 0x554 JUMPI DUP1 PUSH4 0x2ACE698A EQ PUSH2 0x55C JUMPI DUP1 PUSH4 0x2B34C349 EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0x2B9C57F6 EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0x2EA347B0 EQ PUSH2 0x574 JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x1291A38B GT PUSH2 0x452 JUMPI DUP1 PUSH4 0x1291A38B EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0x179476C5 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0x1BEFA78D EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0x1EA7C604 EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0x1EC68B1D EQ PUSH2 0x54C JUMPI PUSH2 0x48A JUMP JUMPDEST DUP1 PUSH4 0x2454AD3 EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0x29D2344 EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0x6F355AD EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0xB8FD588 EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0xF5EE482 EQ PUSH2 0x524 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x497 PUSH2 0x784 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4D1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4B9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4FE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x497 PUSH2 0x7A2 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x7C0 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x7DE JUMP JUMPDEST PUSH2 0x497 PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x497 PUSH2 0x81A JUMP JUMPDEST PUSH2 0x497 PUSH2 0x838 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x873 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x891 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x8AF JUMP JUMPDEST PUSH2 0x497 PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x497 PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x497 PUSH2 0x909 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x927 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x945 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x963 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x981 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x497 PUSH2 0x9BC JUMP JUMPDEST PUSH2 0x497 PUSH2 0x9DA JUMP JUMPDEST PUSH2 0x497 PUSH2 0x9F8 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xA15 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xA51 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xA6F JUMP JUMPDEST PUSH2 0x497 PUSH2 0xA8D JUMP JUMPDEST PUSH2 0x497 PUSH2 0xAAB JUMP JUMPDEST PUSH2 0x497 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xB05 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xB23 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xB41 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xB5F JUMP JUMPDEST PUSH2 0x497 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x497 PUSH2 0xB9B JUMP JUMPDEST PUSH2 0x497 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xBF5 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xC13 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xC31 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0x497 PUSH2 0xC6D JUMP JUMPDEST PUSH2 0x497 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x497 PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xCC6 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xCE3 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xD00 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x497 PUSH2 0xD3C JUMP JUMPDEST PUSH2 0x497 PUSH2 0xD5A JUMP JUMPDEST PUSH2 0x497 PUSH2 0xD78 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xD95 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xDEF JUMP JUMPDEST PUSH2 0x497 PUSH2 0xE0D JUMP JUMPDEST PUSH2 0x497 PUSH2 0xE2B JUMP JUMPDEST PUSH2 0x497 PUSH2 0xE49 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xE85 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xEC1 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xEDF JUMP JUMPDEST PUSH2 0x497 PUSH2 0xEFD JUMP JUMPDEST PUSH2 0x497 PUSH2 0xF1B JUMP JUMPDEST PUSH2 0x497 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xF56 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xF74 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xF92 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xFB0 JUMP JUMPDEST PUSH2 0x497 PUSH2 0xFCE JUMP JUMPDEST PUSH2 0x497 PUSH2 0xFEC JUMP JUMPDEST PUSH2 0x497 PUSH2 0x100A JUMP JUMPDEST PUSH2 0x497 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x1046 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x1064 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x1081 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x497 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3737 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x687 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x333 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x191B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3439 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A9B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD PUSH1 0xFA SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x383 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A1B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x313 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC8D PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3131 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x647 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6A7 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4D PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B99 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3139 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x37 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3339 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3235 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC4D PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 PUSH1 0xFB SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x373 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3433 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x667 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x353 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A99 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3231 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3735 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1899 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3233 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3531 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x363 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x343 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3639 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3637 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6E7 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3137 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCCD PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x627 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3239 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3535 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x39 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD0D PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3635 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x19 PUSH1 0xF9 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3135 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3731 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3331 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3133 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x35 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3333 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3237 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDCD PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1919 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6C7 PUSH1 0xF3 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3337 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3631 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3435 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3739 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B9B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B1B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD8D PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3431 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x33 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3733 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x189B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x199B PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x323 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3539 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3537 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3437 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3633 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3335 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3533 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1B PUSH1 0xF9 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B19 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A19 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1999 PUSH1 0xF1 SHL DUP2 MSTORE POP DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0xDC CALLDATASIZE PUSH27 0xD4466B8BE1FCDE1DC598E31BD7CEE9829694AF2139923AC0DB7F5F 0xAA PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMapi;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6542:58;;;:::i;4406:65::-;;;:::i;3949:69::-;;;:::i;6604:52::-;;;:::i;7236:::-;;;:::i;1226:70::-;;;:::i;8532:54::-;;;:::i;6386:44::-;;;:::i;1848:79::-;;;:::i;3708:63::-;;;:::i;1991:67::-;;;:::i;4220:62::-;;;:::i;7382:52::-;;;:::i;7022:62::-;;;:::i;8177:65::-;;;:::i;3114:70::-;;;:::i;1557:53::-;;;:::i;5341:80::-;;;:::i;3830:59::-;;;:::i;2358:72::-;;;:::i;1644:67::-;;;:::i;8065:49::-;;;:::i;6013:66::-;;;:::i;5211:78::-;;;:::i;6660:51::-;;;:::i;6814:63::-;;;:::i;3356:65::-;;;:::i;5588:55::-;;;:::i;2120:61::-;;;:::i;3619:56::-;;;:::i;6715:57::-;;;:::i;7463:55::-;;;:::i;5473:63::-;;;:::i;8011:50::-;;;:::i;7905:44::-;;;:::i;8425:45::-;;;:::i;2834:63::-;;;:::i;4739:57::-;;;:::i;2972:65::-;;;:::i;4286:60::-;;;:::i;7131:::-;;;:::i;1756:55::-;;;:::i;6131:74::-;;;:::i;7773:57::-;;;:::i;1022:49::-;;;:::i;937:46::-;;;:::i;2513:57::-;;;:::i;8118:55::-;;;:::i;4518:57::-;;;:::i;2217:70::-;;;:::i;1341:65::-;;;:::i;697:51::-;;;:::i;4078:69::-;;;:::i;8312:59::-;;;:::i;3487:75::-;;;:::i;7953:54::-;;;:::i;5085:74::-;;;:::i;7522:61::-;;;:::i;6257:68::-;;;:::i;8474:54::-;;;:::i;5692:60::-;;;:::i;7834:67::-;;;:::i;7707:42::-;;;:::i;5800:59::-;;;:::i;1114:46::-;;;:::i;8246:62::-;;;:::i;2687:70::-;;;:::i;4961:72::-;;;:::i;3243:55::-;;;:::i;791:57::-;;;:::i;7317:61::-;;;:::i;6449:55::-;;;:::i;7646:57::-;;;:::i;4848:61::-;;;:::i;6925:56::-;;;:::i;1468:52::-;;;:::i;7587:55::-;;;:::i;5895:68::-;;;:::i;4633:60::-;;;:::i;8375:46::-;;;;;;;;;;;;;;-1:-1:-1;;;8375:46:8;;;;:::o;6542:58::-;;;;;;;;;;;;;;-1:-1:-1;;;6542:58:8;;;;:::o;4406:65::-;;;;;;;;;;;;;;-1:-1:-1;;;4406:65:8;;;;:::o;3949:69::-;;;;;;;;;;;;;;-1:-1:-1;;;3949:69:8;;;;:::o;6604:52::-;;;;;;;;;;;;;;-1:-1:-1;;;6604:52:8;;;;:::o;7236:::-;;;;;;;;;;;;;;-1:-1:-1;;;7236:52:8;;;;:::o;1226:70::-;;;;;;;;;;;;;;-1:-1:-1;;;1226:70:8;;;;:::o;8532:54::-;;;;;;;;;;;;;;-1:-1:-1;;;8532:54:8;;;;:::o;6386:44::-;;;;;;;;;;;;;;-1:-1:-1;;;6386:44:8;;;;:::o;1848:79::-;;;;;;;;;;;;;;-1:-1:-1;;;1848:79:8;;;;:::o;3708:63::-;;;;;;;;;;;;;;-1:-1:-1;;;3708:63:8;;;;:::o;1991:67::-;;;;;;;;;;;;;;-1:-1:-1;;;1991:67:8;;;;:::o;4220:62::-;;;;;;;;;;;;;;-1:-1:-1;;;4220:62:8;;;;:::o;7382:52::-;;;;;;;;;;;;;;-1:-1:-1;;;7382:52:8;;;;:::o;7022:62::-;;;;;;;;;;;;;;-1:-1:-1;;;7022:62:8;;;;:::o;8177:65::-;;;;;;;;;;;;;;-1:-1:-1;;;8177:65:8;;;;:::o;3114:70::-;;;;;;;;;;;;;;-1:-1:-1;;;3114:70:8;;;;:::o;1557:53::-;;;;;;;;;;;;;;-1:-1:-1;;;1557:53:8;;;;:::o;5341:80::-;;;;;;;;;;;;;;-1:-1:-1;;;5341:80:8;;;;:::o;3830:59::-;;;;;;;;;;;;;;-1:-1:-1;;;3830:59:8;;;;:::o;2358:72::-;;;;;;;;;;;;;;-1:-1:-1;;;2358:72:8;;;;:::o;1644:67::-;;;;;;;;;;;;;;-1:-1:-1;;;1644:67:8;;;;:::o;8065:49::-;;;;;;;;;;;;;;-1:-1:-1;;;8065:49:8;;;;:::o;6013:66::-;;;;;;;;;;;;;;-1:-1:-1;;;6013:66:8;;;;:::o;5211:78::-;;;;;;;;;;;;;;-1:-1:-1;;;5211:78:8;;;;:::o;6660:51::-;;;;;;;;;;;;;;-1:-1:-1;;;6660:51:8;;;;:::o;6814:63::-;;;;;;;;;;;;;;-1:-1:-1;;;6814:63:8;;;;:::o;3356:65::-;;;;;;;;;;;;;;-1:-1:-1;;;3356:65:8;;;;:::o;5588:55::-;;;;;;;;;;;;;;-1:-1:-1;;;5588:55:8;;;;:::o;2120:61::-;;;;;;;;;;;;;;-1:-1:-1;;;2120:61:8;;;;:::o;3619:56::-;;;;;;;;;;;;;;-1:-1:-1;;;3619:56:8;;;;:::o;6715:57::-;;;;;;;;;;;;;;-1:-1:-1;;;6715:57:8;;;;:::o;7463:55::-;;;;;;;;;;;;;;-1:-1:-1;;;7463:55:8;;;;:::o;5473:63::-;;;;;;;;;;;;;;-1:-1:-1;;;5473:63:8;;;;:::o;8011:50::-;;;;;;;;;;;;;;-1:-1:-1;;;8011:50:8;;;;:::o;7905:44::-;;;;;;;;;;;;;;-1:-1:-1;;;7905:44:8;;;;:::o;8425:45::-;;;;;;;;;;;;;;-1:-1:-1;;;8425:45:8;;;;:::o;2834:63::-;;;;;;;;;;;;;;-1:-1:-1;;;2834:63:8;;;;:::o;4739:57::-;;;;;;;;;;;;;;-1:-1:-1;;;4739:57:8;;;;:::o;2972:65::-;;;;;;;;;;;;;;-1:-1:-1;;;2972:65:8;;;;:::o;4286:60::-;;;;;;;;;;;;;;-1:-1:-1;;;4286:60:8;;;;:::o;7131:::-;;;;;;;;;;;;;;-1:-1:-1;;;7131:60:8;;;;:::o;1756:55::-;;;;;;;;;;;;;;-1:-1:-1;;;1756:55:8;;;;:::o;6131:74::-;;;;;;;;;;;;;;-1:-1:-1;;;6131:74:8;;;;:::o;7773:57::-;;;;;;;;;;;;;;-1:-1:-1;;;7773:57:8;;;;:::o;1022:49::-;;;;;;;;;;;;;;-1:-1:-1;;;1022:49:8;;;;:::o;937:46::-;;;;;;;;;;;;;;-1:-1:-1;;;937:46:8;;;;:::o;2513:57::-;;;;;;;;;;;;;;-1:-1:-1;;;2513:57:8;;;;:::o;8118:55::-;;;;;;;;;;;;;;-1:-1:-1;;;8118:55:8;;;;:::o;4518:57::-;;;;;;;;;;;;;;-1:-1:-1;;;4518:57:8;;;;:::o;2217:70::-;;;;;;;;;;;;;;-1:-1:-1;;;2217:70:8;;;;:::o;1341:65::-;;;;;;;;;;;;;;-1:-1:-1;;;1341:65:8;;;;:::o;697:51::-;;;;;;;;;;;;;;-1:-1:-1;;;697:51:8;;;;:::o;4078:69::-;;;;;;;;;;;;;;-1:-1:-1;;;4078:69:8;;;;:::o;8312:59::-;;;;;;;;;;;;;;-1:-1:-1;;;8312:59:8;;;;:::o;3487:75::-;;;;;;;;;;;;;;-1:-1:-1;;;3487:75:8;;;;:::o;7953:54::-;;;;;;;;;;;;;;-1:-1:-1;;;7953:54:8;;;;:::o;5085:74::-;;;;;;;;;;;;;;-1:-1:-1;;;5085:74:8;;;;:::o;7522:61::-;;;;;;;;;;;;;;-1:-1:-1;;;7522:61:8;;;;:::o;6257:68::-;;;;;;;;;;;;;;-1:-1:-1;;;6257:68:8;;;;:::o;8474:54::-;;;;;;;;;;;;;;-1:-1:-1;;;8474:54:8;;;;:::o;5692:60::-;;;;;;;;;;;;;;-1:-1:-1;;;5692:60:8;;;;:::o;7834:67::-;;;;;;;;;;;;;;-1:-1:-1;;;7834:67:8;;;;:::o;7707:42::-;;;;;;;;;;;;;;-1:-1:-1;;;7707:42:8;;;;:::o;5800:59::-;;;;;;;;;;;;;;-1:-1:-1;;;5800:59:8;;;;:::o;1114:46::-;;;;;;;;;;;;;;-1:-1:-1;;;1114:46:8;;;;:::o;8246:62::-;;;;;;;;;;;;;;-1:-1:-1;;;8246:62:8;;;;:::o;2687:70::-;;;;;;;;;;;;;;-1:-1:-1;;;2687:70:8;;;;:::o;4961:72::-;;;;;;;;;;;;;;-1:-1:-1;;;4961:72:8;;;;:::o;3243:55::-;;;;;;;;;;;;;;-1:-1:-1;;;3243:55:8;;;;:::o;791:57::-;;;;;;;;;;;;;;-1:-1:-1;;;791:57:8;;;;:::o;7317:61::-;;;;;;;;;;;;;;-1:-1:-1;;;7317:61:8;;;;:::o;6449:55::-;;;;;;;;;;;;;;-1:-1:-1;;;6449:55:8;;;;:::o;7646:57::-;;;;;;;;;;;;;;-1:-1:-1;;;7646:57:8;;;;:::o;4848:61::-;;;;;;;;;;;;;;-1:-1:-1;;;4848:61:8;;;;:::o;6925:56::-;;;;;;;;;;;;;;-1:-1:-1;;;6925:56:8;;;;:::o;1468:52::-;;;;;;;;;;;;;;-1:-1:-1;;;1468:52:8;;;;:::o;7587:55::-;;;;;;;;;;;;;;-1:-1:-1;;;7587:55:8;;;;:::o;5895:68::-;;;;;;;;;;;;;;-1:-1:-1;;;5895:68:8;;;;:::o;4633:60::-;;;;;;;;;;;;;;-1:-1:-1;;;4633:60:8;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "873800",
								"executionCost": "934",
								"totalCost": "874734"
							},
							"external": {
								"BORROW_ALLOWANCE_NOT_ENOUGH()": "infinite",
								"CALLER_NOT_POOL_ADMIN()": "infinite",
								"CT_CALLER_MUST_BE_LENDING_POOL()": "infinite",
								"CT_CANNOT_GIVE_ALLOWANCE_TO_HIMSELF()": "infinite",
								"CT_INVALID_BURN_AMOUNT()": "infinite",
								"CT_INVALID_MINT_AMOUNT()": "infinite",
								"CT_TRANSFER_AMOUNT_NOT_GT_0()": "infinite",
								"LPAPR_INVALID_ADDRESSES_PROVIDER_ID()": "infinite",
								"LPAPR_PROVIDER_NOT_REGISTERED()": "infinite",
								"LPCM_COLLATERAL_CANNOT_BE_LIQUIDATED()": "infinite",
								"LPCM_HEALTH_FACTOR_NOT_BELOW_THRESHOLD()": "infinite",
								"LPCM_NOT_ENOUGH_LIQUIDITY_TO_LIQUIDATE()": "infinite",
								"LPCM_NO_ERRORS()": "infinite",
								"LPCM_SPECIFIED_CURRENCY_NOT_BORROWED_BY_USER()": "infinite",
								"LPC_CALLER_NOT_EMERGENCY_ADMIN()": "infinite",
								"LPC_INVALID_ADDRESSES_PROVIDER_ID()": "infinite",
								"LPC_INVALID_ATOKEN_POOL_ADDRESS()": "infinite",
								"LPC_INVALID_CONFIGURATION()": "infinite",
								"LPC_INVALID_STABLE_DEBT_TOKEN_POOL_ADDRESS()": "infinite",
								"LPC_INVALID_STABLE_DEBT_TOKEN_UNDERLYING_ADDRESS()": "infinite",
								"LPC_INVALID_VARIABLE_DEBT_TOKEN_POOL_ADDRESS()": "infinite",
								"LPC_INVALID_VARIABLE_DEBT_TOKEN_UNDERLYING_ADDRESS()": "infinite",
								"LPC_RESERVE_LIQUIDITY_NOT_0()": "infinite",
								"LP_CALLER_MUST_BE_AN_ATOKEN()": "infinite",
								"LP_CALLER_NOT_LENDING_POOL_CONFIGURATOR()": "infinite",
								"LP_FAILED_COLLATERAL_SWAP()": "infinite",
								"LP_FAILED_REPAY_WITH_COLLATERAL()": "infinite",
								"LP_INCONSISTENT_FLASHLOAN_PARAMS()": "infinite",
								"LP_INCONSISTENT_PARAMS_LENGTH()": "infinite",
								"LP_INCONSISTENT_PROTOCOL_ACTUAL_BALANCE()": "infinite",
								"LP_INTEREST_RATE_REBALANCE_CONDITIONS_NOT_MET()": "infinite",
								"LP_INVALID_EQUAL_ASSETS_TO_SWAP()": "infinite",
								"LP_INVALID_FLASHLOAN_MODE()": "infinite",
								"LP_INVALID_FLASH_LOAN_EXECUTOR_RETURN()": "infinite",
								"LP_IS_PAUSED()": "infinite",
								"LP_LIQUIDATION_CALL_FAILED()": "infinite",
								"LP_NOT_CONTRACT()": "infinite",
								"LP_NOT_ENOUGH_LIQUIDITY_TO_BORROW()": "infinite",
								"LP_NOT_ENOUGH_STABLE_BORROW_BALANCE()": "infinite",
								"LP_NO_MORE_RESERVES_ALLOWED()": "infinite",
								"LP_REENTRANCY_NOT_ALLOWED()": "infinite",
								"LP_REQUESTED_AMOUNT_TOO_SMALL()": "infinite",
								"MATH_ADDITION_OVERFLOW()": "infinite",
								"MATH_DIVISION_BY_ZERO()": "infinite",
								"MATH_MULTIPLICATION_OVERFLOW()": "infinite",
								"RC_INVALID_DECIMALS()": "infinite",
								"RC_INVALID_LIQ_BONUS()": "infinite",
								"RC_INVALID_LIQ_THRESHOLD()": "infinite",
								"RC_INVALID_LTV()": "infinite",
								"RC_INVALID_RESERVE_FACTOR()": "infinite",
								"RL_LIQUIDITY_INDEX_OVERFLOW()": "infinite",
								"RL_LIQUIDITY_RATE_OVERFLOW()": "infinite",
								"RL_RESERVE_ALREADY_INITIALIZED()": "infinite",
								"RL_STABLE_BORROW_RATE_OVERFLOW()": "infinite",
								"RL_VARIABLE_BORROW_INDEX_OVERFLOW()": "infinite",
								"RL_VARIABLE_BORROW_RATE_OVERFLOW()": "infinite",
								"SDT_BURN_EXCEEDS_BALANCE()": "infinite",
								"SDT_STABLE_DEBT_OVERFLOW()": "infinite",
								"UL_INVALID_INDEX()": "infinite",
								"VL_AMOUNT_BIGGER_THAN_MAX_LOAN_SIZE_STABLE()": "infinite",
								"VL_BORROWING_NOT_ENABLED()": "infinite",
								"VL_COLLATERAL_BALANCE_IS_0()": "infinite",
								"VL_COLLATERAL_CANNOT_COVER_NEW_BORROW()": "infinite",
								"VL_COLLATERAL_SAME_AS_BORROWING_CURRENCY()": "infinite",
								"VL_CURRENT_AVAILABLE_LIQUIDITY_NOT_ENOUGH()": "infinite",
								"VL_DEPOSIT_ALREADY_IN_USE()": "infinite",
								"VL_HEALTH_FACTOR_LOWER_THAN_LIQUIDATION_THRESHOLD()": "infinite",
								"VL_INCONSISTENT_FLASHLOAN_PARAMS()": "infinite",
								"VL_INVALID_AMOUNT()": "infinite",
								"VL_INVALID_INTEREST_RATE_MODE_SELECTED()": "infinite",
								"VL_NOT_ENOUGH_AVAILABLE_USER_BALANCE()": "infinite",
								"VL_NO_ACTIVE_RESERVE()": "infinite",
								"VL_NO_DEBT_OF_SELECTED_TYPE()": "infinite",
								"VL_NO_EXPLICIT_AMOUNT_TO_REPAY_ON_BEHALF()": "infinite",
								"VL_NO_STABLE_RATE_LOAN_IN_RESERVE()": "infinite",
								"VL_NO_VARIABLE_RATE_LOAN_IN_RESERVE()": "infinite",
								"VL_RESERVE_FROZEN()": "infinite",
								"VL_STABLE_BORROWING_NOT_ENABLED()": "infinite",
								"VL_TRANSFER_NOT_ALLOWED()": "infinite",
								"VL_UNDERLYING_BALANCE_NOT_GREATER_THAN_0()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 660,
									"end": 8924,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "INVALID",
									"source": 8
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 660,
									"end": 8924,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122031dc367ad4466b8be1fcde1dc598e31bd7cee9829694af2139923ac0db7f5faa64736f6c634300060c0033",
									".code": [
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "6BA4271F"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "CDAD445A"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "E2C16D69"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "F11C6720"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "F11C6720"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "F3D9CC11"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "F902735D"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "FB681DEF"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "FE75FD26"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "E2C16D69"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "E6632748"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "E7BF91B3"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "ECA85D3A"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "F0473259"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "D7510E0C"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "D7510E0C"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "D7B079AA"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "DAF23547"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "E0D7DFD7"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "E29425DC"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "CDAD445A"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "D3E370EE"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "D44E8E88"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "D57BB964"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "D6F681B6"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "A39ED4FF"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "B89652CD"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "B89652CD"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "BD013F5B"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "C09E2618"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "C2D628DF"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "CC5FC44C"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "A39ED4FF"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "A8440241"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "AC753236"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "B36A2CF3"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "B72E40C7"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "7865A627"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "7865A627"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "871938A8"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "91A9FB18"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "9BE4F03A"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "A2FBC8AD"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "6BA4271F"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "6D422AA1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "708B8DD3"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "71A629DA"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "76F19030"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "3AA786A8"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "4A529F91"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "614CF6A1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "614CF6A1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "637A5A12"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "6422B257"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "65344799"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "6AB5E615"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "4A529F91"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "4FE4F1AB"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "55BAB12C"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "5A9786D4"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "5E869FF1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "4349E3D8"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "4349E3D8"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "44942004"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "44DC4F70"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "47D25300"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "4927C63A"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "3AA786A8"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "3B5D25AA"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "3F5D6EC8"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "407374A4"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "41B40BA5"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "22A6F08E"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "333E8EA8"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "333E8EA8"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "35A9D21D"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "36565AB1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "3872B0AD"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "390F34BA"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "22A6F08E"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "2ACE698A"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "2B34C349"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "2B9C57F6"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "2EA347B0"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "1291A38B"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "1291A38B"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "179476C5"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "1BEFA78D"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "1EA7C604"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "1EC68B1D"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "2454AD3"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "29D2344"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "6F355AD"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "B8FD588"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "F5EE482"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 8924,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 937,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 697,
											"end": 748,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 697,
											"end": 748,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 697,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 697,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 697,
											"end": 748,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 791,
											"end": 848,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 791,
											"end": 848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 791,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 791,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 791,
											"end": 848,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3737"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8421,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "687"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "333"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4406,
											"end": 4471,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 4018,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3439"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6604,
											"end": 6656,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A9B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7236,
											"end": 7288,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1296,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "383"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8586,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6430,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1848,
											"end": 1927,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3771,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3131"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1991,
											"end": 2058,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "647"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4220,
											"end": 4282,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7382,
											"end": 7434,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7022,
											"end": 7084,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8177,
											"end": 8242,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3139"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3184,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3339"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5421,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3235"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3830,
											"end": 3889,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2430,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1644,
											"end": 1711,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8065,
											"end": 8114,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3433"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6079,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "667"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5211,
											"end": 5289,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "353"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 6711,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6814,
											"end": 6877,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3421,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3735"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5588,
											"end": 5643,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1899"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2120,
											"end": 2181,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3233"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3675,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3531"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6715,
											"end": 6772,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "363"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7463,
											"end": 7518,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "343"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5473,
											"end": 5536,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3639"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8011,
											"end": 8061,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3637"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7905,
											"end": 7949,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8425,
											"end": 8470,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3137"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4739,
											"end": 4796,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "627"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2972,
											"end": 3037,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3239"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4286,
											"end": 4346,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3535"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7191,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1811,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6131,
											"end": 6205,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3635"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7773,
											"end": 7830,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1022,
											"end": 1071,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 937,
											"end": 983,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 937,
											"end": 983,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 937,
											"end": 983,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 937,
											"end": 983,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 937,
											"end": 983,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 937,
											"end": 983,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 937,
											"end": 983,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 937,
											"end": 983,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 937,
											"end": 983,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 937,
											"end": 983,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 937,
											"end": 983,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 937,
											"end": 983,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 937,
											"end": 983,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3135"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2570,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3731"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8118,
											"end": 8173,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3331"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3133"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2287,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "35"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1406,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 697,
											"end": 748,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 697,
											"end": 748,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 697,
											"end": 748,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 748,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 697,
											"end": 748,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 697,
											"end": 748,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 748,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 697,
											"end": 748,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 748,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 697,
											"end": 748,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 697,
											"end": 748,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 697,
											"end": 748,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 697,
											"end": 748,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 697,
											"end": 748,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 697,
											"end": 748,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3333"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 697,
											"end": 748,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 697,
											"end": 748,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 697,
											"end": 748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 697,
											"end": 748,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 697,
											"end": 748,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3237"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8312,
											"end": 8371,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3487,
											"end": 3562,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7953,
											"end": 8007,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3337"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3631"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7522,
											"end": 7583,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3435"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6257,
											"end": 6325,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3739"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8474,
											"end": 8528,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7834,
											"end": 7901,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "tag",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "tag",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3431"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5859,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "33"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1160,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "tag",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3733"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8246,
											"end": 8308,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "tag",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "189B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2687,
											"end": 2757,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "tag",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "199B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4961,
											"end": 5033,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "tag",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "323"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3243,
											"end": 3298,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 791,
											"end": 848,
											"name": "tag",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 791,
											"end": 848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 791,
											"end": 848,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 848,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 848,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 791,
											"end": 848,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 848,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 848,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 848,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 791,
											"end": 848,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 791,
											"end": 848,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 791,
											"end": 848,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 791,
											"end": 848,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 791,
											"end": 848,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 791,
											"end": 848,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3539"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 791,
											"end": 848,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 791,
											"end": 848,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 791,
											"end": 848,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 848,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 791,
											"end": 848,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "tag",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3537"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7317,
											"end": 7378,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "tag",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3437"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6504,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "tag",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7646,
											"end": 7703,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "tag",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3335"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4848,
											"end": 4909,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "tag",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3533"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6925,
											"end": 6981,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "tag",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1468,
											"end": 1520,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "tag",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7587,
											"end": 7642,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "tag",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5963,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "tag",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1999"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BORROW_ALLOWANCE_NOT_ENOUGH()": "e2c16d69",
							"CALLER_NOT_POOL_ADMIN()": "ac753236",
							"CT_CALLER_MUST_BE_LENDING_POOL()": "6ba4271f",
							"CT_CANNOT_GIVE_ALLOWANCE_TO_HIMSELF()": "06f355ad",
							"CT_INVALID_BURN_AMOUNT()": "2b9c57f6",
							"CT_INVALID_MINT_AMOUNT()": "1291a38b",
							"CT_TRANSFER_AMOUNT_NOT_GT_0()": "a2fbc8ad",
							"LPAPR_INVALID_ADDRESSES_PROVIDER_ID()": "333e8ea8",
							"LPAPR_PROVIDER_NOT_REGISTERED()": "d6f681b6",
							"LPCM_COLLATERAL_CANNOT_BE_LIQUIDATED()": "407374a4",
							"LPCM_HEALTH_FACTOR_NOT_BELOW_THRESHOLD()": "fb681def",
							"LPCM_NOT_ENOUGH_LIQUIDITY_TO_LIQUIDATE()": "cc5fc44c",
							"LPCM_NO_ERRORS()": "1ea7c604",
							"LPCM_SPECIFIED_CURRENCY_NOT_BORROWED_BY_USER()": "71a629da",
							"LPC_CALLER_NOT_EMERGENCY_ADMIN()": "d3e370ee",
							"LPC_INVALID_ADDRESSES_PROVIDER_ID()": "5a9786d4",
							"LPC_INVALID_ATOKEN_POOL_ADDRESS()": "f0473259",
							"LPC_INVALID_CONFIGURATION()": "47d25300",
							"LPC_INVALID_STABLE_DEBT_TOKEN_POOL_ADDRESS()": "e0d7dfd7",
							"LPC_INVALID_STABLE_DEBT_TOKEN_UNDERLYING_ADDRESS()": "41b40ba5",
							"LPC_INVALID_VARIABLE_DEBT_TOKEN_POOL_ADDRESS()": "c09e2618",
							"LPC_INVALID_VARIABLE_DEBT_TOKEN_UNDERLYING_ADDRESS()": "3872b0ad",
							"LPC_RESERVE_LIQUIDITY_NOT_0()": "65344799",
							"LP_CALLER_MUST_BE_AN_ATOKEN()": "eca85d3a",
							"LP_CALLER_NOT_LENDING_POOL_CONFIGURATOR()": "b36a2cf3",
							"LP_FAILED_COLLATERAL_SWAP()": "55bab12c",
							"LP_FAILED_REPAY_WITH_COLLATERAL()": "e6632748",
							"LP_INCONSISTENT_FLASHLOAN_PARAMS()": "2b34c349",
							"LP_INCONSISTENT_PARAMS_LENGTH()": "b72e40c7",
							"LP_INCONSISTENT_PROTOCOL_ACTUAL_BALANCE()": "0b8fd588",
							"LP_INTEREST_RATE_REBALANCE_CONDITIONS_NOT_MET()": "b89652cd",
							"LP_INVALID_EQUAL_ASSETS_TO_SWAP()": "c2d628df",
							"LP_INVALID_FLASHLOAN_MODE()": "e7bf91b3",
							"LP_INVALID_FLASH_LOAN_EXECUTOR_RETURN()": "d44e8e88",
							"LP_IS_PAUSED()": "d57bb964",
							"LP_LIQUIDATION_CALL_FAILED()": "4a529f91",
							"LP_NOT_CONTRACT()": "637a5a12",
							"LP_NOT_ENOUGH_LIQUIDITY_TO_BORROW()": "22a6f08e",
							"LP_NOT_ENOUGH_STABLE_BORROW_BALANCE()": "44dc4f70",
							"LP_NO_MORE_RESERVES_ALLOWED()": "76f19030",
							"LP_REENTRANCY_NOT_ALLOWED()": "f902735d",
							"LP_REQUESTED_AMOUNT_TOO_SMALL()": "390f34ba",
							"MATH_ADDITION_OVERFLOW()": "0f5ee482",
							"MATH_DIVISION_BY_ZERO()": "4349e3d8",
							"MATH_MULTIPLICATION_OVERFLOW()": "029d2344",
							"RC_INVALID_DECIMALS()": "3f5d6ec8",
							"RC_INVALID_LIQ_BONUS()": "5e869ff1",
							"RC_INVALID_LIQ_THRESHOLD()": "bd013f5b",
							"RC_INVALID_LTV()": "614cf6a1",
							"RC_INVALID_RESERVE_FACTOR()": "9be4f03a",
							"RL_LIQUIDITY_INDEX_OVERFLOW()": "4fe4f1ab",
							"RL_LIQUIDITY_RATE_OVERFLOW()": "f11c6720",
							"RL_RESERVE_ALREADY_INITIALIZED()": "fe75fd26",
							"RL_STABLE_BORROW_RATE_OVERFLOW()": "6d422aa1",
							"RL_VARIABLE_BORROW_INDEX_OVERFLOW()": "44942004",
							"RL_VARIABLE_BORROW_RATE_OVERFLOW()": "2ea347b0",
							"SDT_BURN_EXCEEDS_BALANCE()": "1befa78d",
							"SDT_STABLE_DEBT_OVERFLOW()": "cdad445a",
							"UL_INVALID_INDEX()": "02454ad3",
							"VL_AMOUNT_BIGGER_THAN_MAX_LOAN_SIZE_STABLE()": "3aa786a8",
							"VL_BORROWING_NOT_ENABLED()": "36565ab1",
							"VL_COLLATERAL_BALANCE_IS_0()": "708b8dd3",
							"VL_COLLATERAL_CANNOT_COVER_NEW_BORROW()": "2ace698a",
							"VL_COLLATERAL_SAME_AS_BORROWING_CURRENCY()": "a39ed4ff",
							"VL_CURRENT_AVAILABLE_LIQUIDITY_NOT_ENOUGH()": "179476c5",
							"VL_DEPOSIT_ALREADY_IN_USE()": "e29425dc",
							"VL_HEALTH_FACTOR_LOWER_THAN_LIQUIDATION_THRESHOLD()": "1ec68b1d",
							"VL_INCONSISTENT_FLASHLOAN_PARAMS()": "d7b079aa",
							"VL_INVALID_AMOUNT()": "871938a8",
							"VL_INVALID_INTEREST_RATE_MODE_SELECTED()": "3b5d25aa",
							"VL_NOT_ENOUGH_AVAILABLE_USER_BALANCE()": "a8440241",
							"VL_NO_ACTIVE_RESERVE()": "7865a627",
							"VL_NO_DEBT_OF_SELECTED_TYPE()": "91a9fb18",
							"VL_NO_EXPLICIT_AMOUNT_TO_REPAY_ON_BEHALF()": "daf23547",
							"VL_NO_STABLE_RATE_LOAN_IN_RESERVE()": "6422b257",
							"VL_NO_VARIABLE_RATE_LOAN_IN_RESERVE()": "6ab5e615",
							"VL_RESERVE_FROZEN()": "d7510e0c",
							"VL_STABLE_BORROWING_NOT_ENABLED()": "4927c63a",
							"VL_TRANSFER_NOT_ALLOWED()": "f3d9cc11",
							"VL_UNDERLYING_BALANCE_NOT_GREATER_THAN_0()": "35a9d21d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BORROW_ALLOWANCE_NOT_ENOUGH\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CALLER_NOT_POOL_ADMIN\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CT_CALLER_MUST_BE_LENDING_POOL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CT_CANNOT_GIVE_ALLOWANCE_TO_HIMSELF\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CT_INVALID_BURN_AMOUNT\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CT_INVALID_MINT_AMOUNT\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CT_TRANSFER_AMOUNT_NOT_GT_0\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPAPR_INVALID_ADDRESSES_PROVIDER_ID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPAPR_PROVIDER_NOT_REGISTERED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPCM_COLLATERAL_CANNOT_BE_LIQUIDATED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPCM_HEALTH_FACTOR_NOT_BELOW_THRESHOLD\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPCM_NOT_ENOUGH_LIQUIDITY_TO_LIQUIDATE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPCM_NO_ERRORS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPCM_SPECIFIED_CURRENCY_NOT_BORROWED_BY_USER\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPC_CALLER_NOT_EMERGENCY_ADMIN\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPC_INVALID_ADDRESSES_PROVIDER_ID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPC_INVALID_ATOKEN_POOL_ADDRESS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPC_INVALID_CONFIGURATION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPC_INVALID_STABLE_DEBT_TOKEN_POOL_ADDRESS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPC_INVALID_STABLE_DEBT_TOKEN_UNDERLYING_ADDRESS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPC_INVALID_VARIABLE_DEBT_TOKEN_POOL_ADDRESS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPC_INVALID_VARIABLE_DEBT_TOKEN_UNDERLYING_ADDRESS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPC_RESERVE_LIQUIDITY_NOT_0\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_CALLER_MUST_BE_AN_ATOKEN\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_CALLER_NOT_LENDING_POOL_CONFIGURATOR\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_FAILED_COLLATERAL_SWAP\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_FAILED_REPAY_WITH_COLLATERAL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_INCONSISTENT_FLASHLOAN_PARAMS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_INCONSISTENT_PARAMS_LENGTH\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_INCONSISTENT_PROTOCOL_ACTUAL_BALANCE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_INTEREST_RATE_REBALANCE_CONDITIONS_NOT_MET\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_INVALID_EQUAL_ASSETS_TO_SWAP\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_INVALID_FLASHLOAN_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_INVALID_FLASH_LOAN_EXECUTOR_RETURN\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_IS_PAUSED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_LIQUIDATION_CALL_FAILED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_NOT_CONTRACT\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_NOT_ENOUGH_LIQUIDITY_TO_BORROW\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_NOT_ENOUGH_STABLE_BORROW_BALANCE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_NO_MORE_RESERVES_ALLOWED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_REENTRANCY_NOT_ALLOWED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LP_REQUESTED_AMOUNT_TOO_SMALL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MATH_ADDITION_OVERFLOW\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MATH_DIVISION_BY_ZERO\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MATH_MULTIPLICATION_OVERFLOW\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RC_INVALID_DECIMALS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RC_INVALID_LIQ_BONUS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RC_INVALID_LIQ_THRESHOLD\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RC_INVALID_LTV\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RC_INVALID_RESERVE_FACTOR\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RL_LIQUIDITY_INDEX_OVERFLOW\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RL_LIQUIDITY_RATE_OVERFLOW\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RL_RESERVE_ALREADY_INITIALIZED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RL_STABLE_BORROW_RATE_OVERFLOW\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RL_VARIABLE_BORROW_INDEX_OVERFLOW\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RL_VARIABLE_BORROW_RATE_OVERFLOW\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SDT_BURN_EXCEEDS_BALANCE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SDT_STABLE_DEBT_OVERFLOW\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UL_INVALID_INDEX\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_AMOUNT_BIGGER_THAN_MAX_LOAN_SIZE_STABLE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_BORROWING_NOT_ENABLED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_COLLATERAL_BALANCE_IS_0\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_COLLATERAL_CANNOT_COVER_NEW_BORROW\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_COLLATERAL_SAME_AS_BORROWING_CURRENCY\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_CURRENT_AVAILABLE_LIQUIDITY_NOT_ENOUGH\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_DEPOSIT_ALREADY_IN_USE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_HEALTH_FACTOR_LOWER_THAN_LIQUIDATION_THRESHOLD\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_INCONSISTENT_FLASHLOAN_PARAMS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_INVALID_AMOUNT\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_INVALID_INTEREST_RATE_MODE_SELECTED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_NOT_ENOUGH_AVAILABLE_USER_BALANCE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_NO_ACTIVE_RESERVE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_NO_DEBT_OF_SELECTED_TYPE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_NO_EXPLICIT_AMOUNT_TO_REPAY_ON_BEHALF\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_NO_STABLE_RATE_LOAN_IN_RESERVE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_NO_VARIABLE_RATE_LOAN_IN_RESERVE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_RESERVE_FROZEN\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_STABLE_BORROWING_NOT_ENABLED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_TRANSFER_NOT_ALLOWED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VL_UNDERLYING_BALANCE_NOT_GREATER_THAN_0\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"details\":\"Error messages prefix glossary:  - VL = ValidationLogic  - MATH = Math libraries  - CT = Common errors between tokens (AToken, VariableDebtToken and StableDebtToken)  - AT = AToken  - SDT = StableDebtToken  - VDT = VariableDebtToken  - LP = LendingPool  - LPAPR = LendingPoolAddressesProviderRegistry  - LPC = LendingPoolConfiguration  - RL = ReserveLogic  - LPCM = LendingPoolCollateralManager  - P = Pausable\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Errors library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Defines the error messages emitted by the different contracts of the Aave protocol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/protocol/libraries/helpers/Errors.sol\":\"Errors\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/protocol/libraries/helpers/Errors.sol\":{\"keccak256\":\"0xfb70949637d81dc9a3883601bb15226981f4c4847f65035e64bf5d120994efeb\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://43fb108a5038fbeb33294d3f4a9e7e4e021bef16f0e7a8a2f3ad9142808c7a8f\",\"dweb:/ipfs/QmUvAnwcuwmprQu4g3r1k3gE2EztuVPGRKJBMVX3KRC8W6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Defines the error messages emitted by the different contracts of the Aave protocol",
						"version": 1
					}
				}
			},
			"contracts/protocol/libraries/types/DataTypes.sol": {
				"DataTypes": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/protocol/libraries/types/DataTypes.sol\":62:1529  library DataTypes {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/protocol/libraries/types/DataTypes.sol\":62:1529  library DataTypes {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220994213952bddcef31a0dfc76b05ac29d3fd5b752f96fa2278343c51a37de9e1164736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220994213952bddcef31a0dfc76b05ac29d3fd5b752f96fa2278343c51a37de9e1164736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 TIMESTAMP SGT SWAP6 0x2B 0xDD 0xCE RETURN BYTE 0xD 0xFC PUSH23 0xB05AC29D3FD5B752F96FA2278343C51A37DE9E1164736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "62:1467:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220994213952bddcef31a0dfc76b05ac29d3fd5b752f96fa2278343c51a37de9e1164736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 TIMESTAMP SGT SWAP6 0x2B 0xDD 0xCE RETURN BYTE 0xD 0xFC PUSH23 0xB05AC29D3FD5B752F96FA2278343C51A37DE9E1164736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "62:1467:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 1529,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "INVALID",
									"source": 9
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 62,
									"end": 1529,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220994213952bddcef31a0dfc76b05ac29d3fd5b752f96fa2278343c51a37de9e1164736f6c634300060c0033",
									".code": [
										{
											"begin": 62,
											"end": 1529,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 62,
											"end": 1529,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 62,
											"end": 1529,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 62,
											"end": 1529,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 62,
											"end": 1529,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 62,
											"end": 1529,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 62,
											"end": 1529,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 1529,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 62,
											"end": 1529,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/protocol/libraries/types/DataTypes.sol\":\"DataTypes\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0xb1d3ae94d3e4b3bf23b3394d820a3a2b5ba56fd5389f561f3fdd73ed1c60c391\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://47c11d578cc1e0df27e4e85cfe5831a48b78d6e939d34e17db4bc65a54c899fe\",\"dweb:/ipfs/QmYdYLkYFJe3psmQUH1S1uNhGE9xyxeDunuEW9gBPg9vDB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/dependencies/openzeppelin/contracts/Address.sol": {
				"ast": {
					"absolutePath": "contracts/dependencies/openzeppelin/contracts/Address.sol",
					"exportedSymbols": {
						"Address": [
							63
						]
					},
					"id": 64,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "62:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 63,
							"linearizedBaseContracts": [
								63
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "752:520:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "codehash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 27,
														"src": "988:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 10,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "988:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 12,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "988:16:0"
											},
											{
												"assignments": [
													14
												],
												"declarations": [
													{
														"constant": false,
														"id": 14,
														"mutability": "mutable",
														"name": "accountHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 27,
														"src": "1010:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 13,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1010:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 16,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1032:66:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1010:88:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1165:46:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1173:32:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1197:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodehash",
																	"nodeType": "YulIdentifier",
																	"src": "1185:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1185:20:0"
															},
															"variableNames": [
																{
																	"name": "codehash",
																	"nodeType": "YulIdentifier",
																	"src": "1173:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1197:7:0",
														"valueSize": 1
													},
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "1173:8:0",
														"valueSize": 1
													}
												],
												"id": 17,
												"nodeType": "InlineAssembly",
												"src": "1156:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 18,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1224:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 19,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "1236:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1224:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 21,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1251:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "307830",
																	"id": 22,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1263:3:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "1251:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1224:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 25,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1223:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 26,
												"nodeType": "Return",
												"src": "1216:51:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "150:533:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "706:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "705:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "746:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "746:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "745:6:0"
									},
									"scope": 63,
									"src": "686:586:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2226:300:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 39,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2248:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$63",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$63",
																				"typeString": "library Address"
																			}
																		],
																		"id": 38,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2240:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 37,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2240:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 40,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2240:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2240:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 42,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "2265:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2240:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2273:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 36,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2232:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2232:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "2232:73:0"
											},
											{
												"assignments": [
													48,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 48,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 61,
														"src": "2386:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 47,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2386:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 55,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2434:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 49,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "2404:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2404:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 51,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "2426:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2404:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2404:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2385:52:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 57,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "2451:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2460:60:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2443:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2443:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "2443:78:0"
											}
										]
									},
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "1276:876:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 62,
												"src": "2174:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2174:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 62,
												"src": "2201:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2201:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2173:43:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2226:0:0"
									},
									"scope": 63,
									"src": "2155:371:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 64,
							"src": "130:2398:0"
						}
					],
					"src": "37:2492:0"
				},
				"id": 0
			},
			"contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/dependencies/openzeppelin/contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							141
						]
					},
					"id": 142,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 65,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 66,
								"nodeType": "StructuredDocumentation",
								"src": "62:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 141,
							"linearizedBaseContracts": [
								141
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "154:62:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 72,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "239:2:1"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 72,
												"src": "265:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "264:9:1"
									},
									"scope": 141,
									"src": "219:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "278:68:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 80,
												"src": "368:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "367:17:1"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 80,
												"src": "408:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "408:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "407:9:1"
									},
									"scope": 141,
									"src": "349:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "421:197:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "639:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "658:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "638:35:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "692:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "692:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "691:6:1"
									},
									"scope": 141,
									"src": "621:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "702:252:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 100,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "976:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "991:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "975:32:1"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "1031:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1030:9:1"
									},
									"scope": 141,
									"src": "957:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "1044:616:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 110,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 110,
												"src": "1680:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 110,
												"src": "1697:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1697:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1679:33:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 110,
												"src": "1731:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 107,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1731:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1730:6:1"
									},
									"scope": 141,
									"src": "1663:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "1741:280:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 122,
												"src": "2051:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2051:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 122,
												"src": "2071:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2071:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 122,
												"src": "2094:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2045:67:1"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 122,
												"src": "2131:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2131:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2130:6:1"
									},
									"scope": 141,
									"src": "2024:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2141:148:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 131,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "2307:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2307:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "2329:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2329:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "2349:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2349:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2306:57:1"
									},
									"src": "2292:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "2368:142:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 140,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 140,
												"src": "2528:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2528:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 140,
												"src": "2551:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2551:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 140,
												"src": "2576:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2527:63:1"
									},
									"src": "2513:78:1"
								}
							],
							"scope": 142,
							"src": "133:2460:1"
						}
					],
					"src": "37:2557:1"
				},
				"id": 1
			},
			"contracts/dependencies/openzeppelin/contracts/SafeERC20.sol": {
				"ast": {
					"absolutePath": "contracts/dependencies/openzeppelin/contracts/SafeERC20.sol",
					"exportedSymbols": {
						"SafeERC20": [
							298
						]
					},
					"id": 299,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 143,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 145,
							"nodeType": "ImportDirective",
							"scope": 299,
							"sourceUnit": 142,
							"src": "58:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 144,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "66:6:2",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 147,
							"nodeType": "ImportDirective",
							"scope": 299,
							"sourceUnit": 495,
							"src": "95:40:2",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 146,
										"name": "SafeMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "103:8:2",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/Address.sol",
							"file": "./Address.sol",
							"id": 149,
							"nodeType": "ImportDirective",
							"scope": 299,
							"sourceUnit": 64,
							"src": "136:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 148,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "144:7:2",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "176:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 298,
							"linearizedBaseContracts": [
								298
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 153,
									"libraryName": {
										"contractScope": null,
										"id": 151,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 494,
										"src": "662:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$494",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "656:27:2",
									"typeName": {
										"id": 152,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "675:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 156,
									"libraryName": {
										"contractScope": null,
										"id": 154,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 63,
										"src": "692:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$63",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "686:26:2",
									"typeName": {
										"id": 155,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "704:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "804:96:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 166,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "829:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$141",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 169,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 158,
																			"src": "859:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$141",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 90,
																		"src": "859:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "859:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 172,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "884:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 173,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 162,
																	"src": "888:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 167,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "836:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "836:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "836:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$141",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 165,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "810:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$141_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "810:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "810:85:2"
											}
										]
									},
									"documentation": null,
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 178,
												"src": "743:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$141",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 157,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 141,
													"src": "743:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$141",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 178,
												"src": "761:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "761:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 178,
												"src": "777:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "737:57:2"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "804:0:2"
									},
									"scope": 298,
									"src": "716:184:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "1014:106:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 190,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "1039:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$141",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 193,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 180,
																			"src": "1069:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$141",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 122,
																		"src": "1069:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1069:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 196,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 182,
																	"src": "1098:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 197,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 184,
																	"src": "1104:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 198,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "1108:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 191,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1046:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1046:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1046:68:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$141",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 189,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "1020:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$141_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1020:95:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "1020:95:2"
											}
										]
									},
									"documentation": null,
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 203,
												"src": "935:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$141",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 179,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 141,
													"src": "935:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$141",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 203,
												"src": "953:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 203,
												"src": "971:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 203,
												"src": "987:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "929:75:2"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1014:0:2"
									},
									"scope": 298,
									"src": "904:216:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "1216:253:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 213,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 209,
																			"src": "1238:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1247:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1238:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 216,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1237:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 221,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "1278:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$298",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$298",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 220,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1270:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 219,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1270:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 222,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1270:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 223,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 207,
																					"src": "1285:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 217,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 205,
																					"src": "1254:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$141",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 218,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 100,
																				"src": "1254:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1254:39:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1297:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1254:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 227,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1253:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1237:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1307:56:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 212,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1222:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1222:147:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "1222:147:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 233,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "1394:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$141",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 236,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 205,
																			"src": "1424:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$141",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 110,
																		"src": "1424:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1424:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 239,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 207,
																	"src": "1448:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 240,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "1457:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 234,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1401:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1401:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1401:62:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$141",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 232,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "1375:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$141_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1375:89:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "1375:89:2"
											}
										]
									},
									"documentation": null,
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 245,
												"src": "1150:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$141",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 204,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 141,
													"src": "1150:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$141",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 245,
												"src": "1168:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 245,
												"src": "1189:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1144:62:2"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1216:0:2"
									},
									"scope": 298,
									"src": "1124:345:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "1542:486:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 255,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "1564:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$141",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$141",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1556:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 253,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1556:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1556:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 28,
																"src": "1556:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1556:27:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1585:33:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
																"typeString": "literal_string \"SafeERC20: call to non-contract\""
															},
															"value": "SafeERC20: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
																"typeString": "literal_string \"SafeERC20: call to non-contract\""
															}
														],
														"id": 252,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1548:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "1548:71:2"
											},
											{
												"assignments": [
													263,
													265
												],
												"declarations": [
													{
														"constant": false,
														"id": 263,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 296,
														"src": "1682:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 262,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1682:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 265,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 296,
														"src": "1696:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 264,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1696:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 273,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 271,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "1743:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 268,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 247,
																	"src": "1731:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$141",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$141",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1723:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 266,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1723:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1723:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1723:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1723:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1681:67:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 275,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "1762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1771:34:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"id": 274,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1754:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1754:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 278,
												"nodeType": "ExpressionStatement",
												"src": "1754:52:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 279,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "1817:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1817:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1837:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1817:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 295,
												"nodeType": "IfStatement",
												"src": "1813:211:2",
												"trueBody": {
													"id": 294,
													"nodeType": "Block",
													"src": "1840:184:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 286,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 265,
																				"src": "1951:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 288,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1964:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 287,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "1964:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 289,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1963:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 284,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "1940:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "1940:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1940:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1972:44:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 283,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "1932:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1932:85:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 293,
															"nodeType": "ExpressionStatement",
															"src": "1932:85:2"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 297,
												"src": "1501:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$141",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 246,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 141,
													"src": "1501:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$141",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 297,
												"src": "1515:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 248,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1515:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1500:33:2"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1542:0:2"
									},
									"scope": 298,
									"src": "1473:555:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 299,
							"src": "634:1396:2"
						}
					],
					"src": "33:1998:2"
				},
				"id": 2
			},
			"contracts/dependencies/openzeppelin/contracts/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/dependencies/openzeppelin/contracts/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							494
						]
					},
					"id": 495,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 300,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 301,
								"nodeType": "StructuredDocumentation",
								"src": "62:563:3",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 494,
							"linearizedBaseContracts": [
								494
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "918:95:3",
										"statements": [
											{
												"assignments": [
													312
												],
												"declarations": [
													{
														"constant": false,
														"id": 312,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 326,
														"src": "924:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 311,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "924:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 316,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 313,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "936:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 314,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "940:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "936:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "924:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 318,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 312,
																"src": "955:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 319,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "960:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "955:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "963:29:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "947:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "947:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "947:46:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 324,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 312,
													"src": "1007:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 310,
												"id": 325,
												"nodeType": "Return",
												"src": "1000:8:3"
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "647:201:3",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 327,
												"src": "864:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "864:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 327,
												"src": "875:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "863:22:3"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 327,
												"src": "909:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "909:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "908:9:3"
									},
									"scope": 494,
									"src": "851:162:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "1324:61:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 338,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "1341:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 339,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "1344:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1347:32:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 337,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															344,
															372
														],
														"referencedDeclaration": 372,
														"src": "1337:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1337:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 336,
												"id": 342,
												"nodeType": "Return",
												"src": "1330:50:3"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1017:237:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 344,
												"src": "1270:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1270:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 344,
												"src": "1281:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1269:22:3"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 344,
												"src": "1315:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1315:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1314:9:3"
									},
									"scope": 494,
									"src": "1257:128:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "1760:78:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 357,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "1774:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 358,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "1779:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1774:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 360,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "1782:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 356,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1766:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1766:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "1766:29:3"
											},
											{
												"assignments": [
													364
												],
												"declarations": [
													{
														"constant": false,
														"id": 364,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 371,
														"src": "1801:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 363,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1801:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 368,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 365,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "1813:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 366,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "1817:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1813:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1801:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 369,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 364,
													"src": "1832:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 355,
												"id": 370,
												"nodeType": "Return",
												"src": "1825:8:3"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "1389:257:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 372,
												"src": "1667:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 372,
												"src": "1682:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 372,
												"src": "1697:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 350,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1697:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1661:66:3"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 372,
												"src": "1751:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1751:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1750:9:3"
									},
									"scope": 494,
									"src": "1649:189:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "2125:352:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 382,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "2341:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2346:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2341:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 388,
												"nodeType": "IfStatement",
												"src": "2337:35:3",
												"trueBody": {
													"id": 387,
													"nodeType": "Block",
													"src": "2349:23:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2364:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 381,
															"id": 386,
															"nodeType": "Return",
															"src": "2357:8:3"
														}
													]
												}
											},
											{
												"assignments": [
													390
												],
												"declarations": [
													{
														"constant": false,
														"id": 390,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 406,
														"src": "2378:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 389,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2378:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 394,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 391,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "2390:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 392,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "2394:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2390:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2378:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 396,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "2409:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 397,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "2413:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2409:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 399,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "2418:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2409:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2421:35:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 395,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2401:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2401:56:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "2401:56:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 404,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 390,
													"src": "2471:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 381,
												"id": 405,
												"nodeType": "Return",
												"src": "2464:8:3"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "1842:213:3",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 407,
												"src": "2071:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2071:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 407,
												"src": "2082:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2082:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2070:22:3"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 407,
												"src": "2116:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2115:9:3"
									},
									"scope": 494,
									"src": "2058:419:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 423,
										"nodeType": "Block",
										"src": "2975:57:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 418,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "2992:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 419,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "2995:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2998:28:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 417,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															424,
															452
														],
														"referencedDeclaration": 452,
														"src": "2988:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2988:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 416,
												"id": 422,
												"nodeType": "Return",
												"src": "2981:46:3"
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "2481:424:3",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 424,
												"src": "2921:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2921:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 424,
												"src": "2932:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2932:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2920:22:3"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 424,
												"src": "2966:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2966:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2965:9:3"
									},
									"scope": 494,
									"src": "2908:124:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "3594:221:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 437,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "3670:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3674:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3670:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 440,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "3677:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3662:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3662:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "3662:28:3"
											},
											{
												"assignments": [
													444
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 451,
														"src": "3696:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 443,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3696:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 448,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 445,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "3708:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 446,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "3712:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3708:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3696:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 449,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 444,
													"src": "3809:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 435,
												"id": 450,
												"nodeType": "Return",
												"src": "3802:8:3"
											}
										]
									},
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "3036:444:3",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 452,
												"src": "3501:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 452,
												"src": "3516:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3516:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 452,
												"src": "3531:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 430,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3531:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3495:66:3"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 452,
												"src": "3585:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3584:9:3"
									},
									"scope": 494,
									"src": "3483:332:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "4302:55:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 463,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4319:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 464,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4322:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4325:26:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 462,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															469,
															493
														],
														"referencedDeclaration": 493,
														"src": "4315:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4315:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 461,
												"id": 467,
												"nodeType": "Return",
												"src": "4308:44:3"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "3819:413:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 469,
												"src": "4248:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4248:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 469,
												"src": "4259:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4247:22:3"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 469,
												"src": "4293:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4293:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4292:9:3"
									},
									"scope": 494,
									"src": "4235:122:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "4908:58:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 482,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 474,
																"src": "4922:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4927:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4922:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 485,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "4930:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 481,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4914:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4914:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "4914:29:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 488,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "4956:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 489,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "4960:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 480,
												"id": 491,
												"nodeType": "Return",
												"src": "4949:12:3"
											}
										]
									},
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4361:433:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 493,
												"src": "4815:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4815:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 493,
												"src": "4830:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4830:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 493,
												"src": "4845:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 475,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4845:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4809:66:3"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 493,
												"src": "4899:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4899:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4898:9:3"
									},
									"scope": 494,
									"src": "4797:169:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 495,
							"src": "626:4342:3"
						}
					],
					"src": "37:4932:3"
				},
				"id": 3
			},
			"contracts/interfaces/ILendingPool.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ILendingPool.sol",
					"exportedSymbols": {
						"ILendingPool": [
							869
						]
					},
					"id": 870,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 496,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:4"
						},
						{
							"id": 497,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "61:33:4"
						},
						{
							"absolutePath": "contracts/interfaces/ILendingPoolAddressesProvider.sol",
							"file": "./ILendingPoolAddressesProvider.sol",
							"id": 499,
							"nodeType": "ImportDirective",
							"scope": 870,
							"sourceUnit": 1021,
							"src": "96:82:4",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 498,
										"name": "ILendingPoolAddressesProvider",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "104:29:4",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/protocol/libraries/types/DataTypes.sol",
							"file": "../protocol/libraries/types/DataTypes.sol",
							"id": 501,
							"nodeType": "ImportDirective",
							"scope": 870,
							"sourceUnit": 2347,
							"src": "179:68:4",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 500,
										"name": "DataTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "187:9:4",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 869,
							"linearizedBaseContracts": [
								869
							],
							"name": "ILendingPool",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "276:325:4",
										"text": " @dev Emitted on deposit()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the deposit\n @param onBehalfOf The beneficiary of the deposit, receiving the aTokens\n @param amount The amount deposited\n @param referral The referral code used*"
									},
									"id": 514,
									"name": "Deposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 514,
												"src": "623:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 514,
												"src": "652:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"indexed": true,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 514,
												"src": "670:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 514,
												"src": "702:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "702:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"indexed": true,
												"mutability": "mutable",
												"name": "referral",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 514,
												"src": "722:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 511,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "722:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "617:132:4"
									},
									"src": "604:146:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "754:288:4",
										"text": " @dev Emitted on withdraw()\n @param reserve The address of the underlyng asset being withdrawn\n @param user The address initiating the withdrawal, owner of aTokens\n @param to Address that will receive the underlying\n @param amount The amount to be withdrawn*"
									},
									"id": 525,
									"name": "Withdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 525,
												"src": "1060:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 525,
												"src": "1085:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 525,
												"src": "1107:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1107:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 525,
												"src": "1127:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1127:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1059:83:4"
									},
									"src": "1045:98:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "1147:605:4",
										"text": " @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n @param reserve The address of the underlying asset being borrowed\n @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n initiator of the transaction on flashLoan()\n @param onBehalfOf The address that will be getting the debt\n @param amount The amount borrowed out\n @param borrowRateMode The rate mode: 1 for Stable, 2 for Variable\n @param borrowRate The numeric rate at which the user has borrowed\n @param referral The referral code used*"
									},
									"id": 542,
									"name": "Borrow",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 542,
												"src": "1773:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 542,
												"src": "1802:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1802:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"indexed": true,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 542,
												"src": "1820:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1820:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 542,
												"src": "1852:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"indexed": false,
												"mutability": "mutable",
												"name": "borrowRateMode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 542,
												"src": "1872:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1872:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"indexed": false,
												"mutability": "mutable",
												"name": "borrowRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 542,
												"src": "1900:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1900:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"indexed": true,
												"mutability": "mutable",
												"name": "referral",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 542,
												"src": "1924:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 539,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1924:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1767:184:4"
									},
									"src": "1755:197:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "1956:311:4",
										"text": " @dev Emitted on repay()\n @param reserve The address of the underlying asset of the reserve\n @param user The beneficiary of the repayment, getting his debt reduced\n @param repayer The address of the user initiating the repay(), providing the funds\n @param amount The amount repaid*"
									},
									"id": 553,
									"name": "Repay",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 553,
												"src": "2287:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2287:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 553,
												"src": "2316:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"indexed": true,
												"mutability": "mutable",
												"name": "repayer",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 553,
												"src": "2342:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 553,
												"src": "2371:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2371:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2281:108:4"
									},
									"src": "2270:120:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "2394:253:4",
										"text": " @dev Emitted on swapBorrowRateMode()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user swapping his rate mode\n @param rateMode The rate mode that the user wants to swap to*"
									},
									"id": 562,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 562,
												"src": "2661:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 562,
												"src": "2686:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"indexed": false,
												"mutability": "mutable",
												"name": "rateMode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 562,
												"src": "2708:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2660:65:4"
									},
									"src": "2650:76:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "2730:208:4",
										"text": " @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral*"
									},
									"id": 569,
									"name": "ReserveUsedAsCollateralEnabled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 569,
												"src": "2978:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2978:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 569,
												"src": "3003:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3003:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2977:47:4"
									},
									"src": "2941:84:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "3029:208:4",
										"text": " @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral*"
									},
									"id": 576,
									"name": "ReserveUsedAsCollateralDisabled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 576,
												"src": "3278:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3278:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 576,
												"src": "3303:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3277:47:4"
									},
									"src": "3240:85:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "3329:213:4",
										"text": " @dev Emitted on rebalanceStableBorrowRate()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user for which the rebalance has been executed*"
									},
									"id": 583,
									"name": "RebalanceStableBorrowRate",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 583,
												"src": "3577:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3577:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 583,
												"src": "3602:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3602:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3576:47:4"
									},
									"src": "3545:79:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "3628:370:4",
										"text": " @dev Emitted on flashLoan()\n @param target The address of the flash loan receiver contract\n @param initiator The address initiating the flash loan\n @param asset The address of the asset being flash borrowed\n @param amount The amount flash borrowed\n @param premium The fee flash borrowed\n @param referralCode The referral code used*"
									},
									"id": 598,
									"name": "FlashLoan",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"indexed": true,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 598,
												"src": "4022:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"indexed": true,
												"mutability": "mutable",
												"name": "initiator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 598,
												"src": "4050:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4050:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 598,
												"src": "4081:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4081:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 598,
												"src": "4108:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4108:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"indexed": false,
												"mutability": "mutable",
												"name": "premium",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 598,
												"src": "4128:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4128:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"indexed": false,
												"mutability": "mutable",
												"name": "referralCode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 598,
												"src": "4149:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 595,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4149:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4016:156:4"
									},
									"src": "4001:172:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "4177:56:4",
										"text": " @dev Emitted when the pause is triggered."
									},
									"id": 601,
									"name": "Paused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4248:2:4"
									},
									"src": "4236:15:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "4255:53:4",
										"text": " @dev Emitted when the pause is lifted."
									},
									"id": 604,
									"name": "Unpaused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4325:2:4"
									},
									"src": "4311:17:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "4332:928:4",
										"text": " @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\n LendingPoolCollateral manager using a DELEGATECALL\n This allows to have the events in the generated ABI for LendingPool.\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param liquidatedCollateralAmount The amount of collateral received by the liiquidator\n @param liquidator The address of the liquidator\n @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly*"
									},
									"id": 621,
									"name": "LiquidationCall",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"indexed": true,
												"mutability": "mutable",
												"name": "collateralAsset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 621,
												"src": "5290:31:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5290:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"indexed": true,
												"mutability": "mutable",
												"name": "debtAsset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 621,
												"src": "5327:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5327:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 621,
												"src": "5358:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5358:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"indexed": false,
												"mutability": "mutable",
												"name": "debtToCover",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 621,
												"src": "5384:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5384:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidatedCollateralAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 621,
												"src": "5409:34:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5409:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 621,
												"src": "5449:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5449:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"indexed": false,
												"mutability": "mutable",
												"name": "receiveAToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 621,
												"src": "5473:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 618,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5473:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5284:211:4"
									},
									"src": "5263:233:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "5500:722:4",
										"text": " @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared\n in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\n the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\n gets added to the LendingPool ABI\n @param reserve The address of the underlying asset of the reserve\n @param liquidityRate The new liquidity rate\n @param stableBorrowRate The new stable borrow rate\n @param variableBorrowRate The new variable borrow rate\n @param liquidityIndex The new liquidity index\n @param variableBorrowIndex The new variable borrow index*"
									},
									"id": 636,
									"name": "ReserveDataUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 636,
												"src": "6255:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6255:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 636,
												"src": "6284:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6284:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"indexed": false,
												"mutability": "mutable",
												"name": "stableBorrowRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 636,
												"src": "6311:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6311:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"indexed": false,
												"mutability": "mutable",
												"name": "variableBorrowRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 636,
												"src": "6341:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6341:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityIndex",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 636,
												"src": "6373:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6373:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"indexed": false,
												"mutability": "mutable",
												"name": "variableBorrowIndex",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 636,
												"src": "6401:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6401:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6249:183:4"
									},
									"src": "6225:208:4"
								},
								{
									"body": null,
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "6437:712:4",
										"text": " @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User deposits 100 USDC and gets in return 100 aUSDC\n @param asset The address of the underlying asset to deposit\n @param amount The amount to be deposited\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man*"
									},
									"functionSelector": "e8eda9df",
									"id": 648,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "7174:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7174:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "7193:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7193:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "7213:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7213:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "referralCode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "7237:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 644,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "7237:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7168:92:4"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7269:0:4"
									},
									"scope": 869,
									"src": "7152:118:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "7274:665:4",
										"text": " @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n @param asset The address of the underlying asset to withdraw\n @param amount The underlying amount to be withdrawn\n   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n @param to Address that will receive the underlying, same as msg.sender if the user\n   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   different wallet\n @return The final amount withdrawn*"
									},
									"functionSelector": "69328dec",
									"id": 660,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 660,
												"src": "7965:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7965:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 660,
												"src": "7984:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7984:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 660,
												"src": "8004:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8004:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7959:59:4"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 660,
												"src": "8037:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8037:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8036:9:4"
									},
									"scope": 869,
									"src": "7942:104:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "8050:1189:4",
										"text": " @dev Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n already deposited enough collateral, or he was given enough allowance by a credit delegator on the\n corresponding debt token (StableDebtToken or VariableDebtToken)\n - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n @param asset The address of the underlying asset to borrow\n @param amount The amount to be borrowed\n @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself\n calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n if he has been given credit delegation allowance*"
									},
									"functionSelector": "a415bcad",
									"id": 674,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "borrow",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 674,
												"src": "9263:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9263:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 674,
												"src": "9282:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9282:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 674,
												"src": "9302:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9302:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "referralCode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 674,
												"src": "9332:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 668,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9332:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 674,
												"src": "9357:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9357:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9257:122:4"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9388:0:4"
									},
									"scope": 869,
									"src": "9242:147:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "9393:862:4",
										"text": " @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @return The final amount repaid*"
									},
									"functionSelector": "573ade81",
									"id": 688,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "repay",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 688,
												"src": "10278:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10278:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 688,
												"src": "10297:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10297:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "rateMode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 688,
												"src": "10317:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10317:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 688,
												"src": "10339:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10339:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10272:89:4"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 688,
												"src": "10380:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10380:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10379:9:4"
									},
									"scope": 869,
									"src": "10258:131:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "10393:231:4",
										"text": " @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa\n @param asset The address of the underlying asset borrowed\n @param rateMode The rate mode that the user wants to swap to*"
									},
									"functionSelector": "94ba89a2",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapBorrowRateMode",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 696,
												"src": "10655:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10655:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "rateMode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 696,
												"src": "10670:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10670:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10654:33:4"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10696:0:4"
									},
									"scope": 869,
									"src": "10627:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "10701:553:4",
										"text": " @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n - Users can be rebalanced if the following conditions are satisfied:\n     1. Usage ratio is above 95%\n     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\n        borrowed at a stable rate and depositors are not earning enough\n @param asset The address of the underlying asset borrowed\n @param user The address of the user to be rebalanced*"
									},
									"functionSelector": "cd112382",
									"id": 704,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rebalanceStableBorrowRate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 704,
												"src": "11292:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11292:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 704,
												"src": "11307:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11307:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11291:29:4"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11329:0:4"
									},
									"scope": 869,
									"src": "11257:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "11334:266:4",
										"text": " @dev Allows depositors to enable/disable a specific deposited asset as collateral\n @param asset The address of the underlying asset deposited\n @param useAsCollateral `true` if the user wants to use the deposit as collateral, `false` otherwise*"
									},
									"functionSelector": "5a3b74b9",
									"id": 712,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setUserUseReserveAsCollateral",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 712,
												"src": "11642:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11642:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "useAsCollateral",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 712,
												"src": "11657:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 708,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11657:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11641:37:4"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11687:0:4"
									},
									"scope": 869,
									"src": "11603:85:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 713,
										"nodeType": "StructuredDocumentation",
										"src": "11692:860:4",
										"text": " @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly*"
									},
									"functionSelector": "00a718a9",
									"id": 726,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidationCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "collateralAsset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 726,
												"src": "12585:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12585:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "debtAsset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 726,
												"src": "12614:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12614:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 726,
												"src": "12637:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12637:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "debtToCover",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 726,
												"src": "12655:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12655:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "receiveAToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 726,
												"src": "12680:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 722,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12680:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12579:123:4"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12711:0:4"
									},
									"scope": 869,
									"src": "12555:157:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "12716:1376:4",
										"text": " @dev Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\n For further details please visit https://developers.aave.com\n @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\n @param assets The addresses of the assets being flash-borrowed\n @param amounts The amounts amounts being flash-borrowed\n @param modes Types of the debt to open if the flash loan is not returned:\n   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man*"
									},
									"functionSelector": "ab9c4b5d",
									"id": 747,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flashLoan",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "receiverAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 747,
												"src": "14119:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14119:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "assets",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 747,
												"src": "14148:25:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 730,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "14148:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 731,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "14148:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 747,
												"src": "14179:26:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 733,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14179:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 734,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "14179:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "modes",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 747,
												"src": "14211:24:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 736,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14211:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 737,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "14211:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 747,
												"src": "14241:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14241:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 747,
												"src": "14265:21:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 741,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14265:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "referralCode",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 747,
												"src": "14292:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 743,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "14292:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14113:202:4"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14324:0:4"
									},
									"scope": 869,
									"src": "14095:230:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "14329:507:4",
										"text": " @dev Returns the user account data across all the reserves\n @param user The address of the user\n @return totalCollateralETH the total collateral in ETH of the user\n @return totalDebtETH the total debt in ETH of the user\n @return availableBorrowsETH the borrowing power left of the user\n @return currentLiquidationThreshold the liquidation threshold of the user\n @return ltv the loan to value of the user\n @return healthFactor the current health factor of the user*"
									},
									"functionSelector": "bf92857c",
									"id": 765,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserAccountData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 765,
												"src": "14867:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14867:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14866:14:4"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "totalCollateralETH",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 765,
												"src": "14923:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14923:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "totalDebtETH",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 765,
												"src": "14957:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14957:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "availableBorrowsETH",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 765,
												"src": "14985:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14985:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "currentLiquidationThreshold",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 765,
												"src": "15020:35:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15020:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "ltv",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 765,
												"src": "15063:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15063:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "healthFactor",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 765,
												"src": "15082:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15082:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14915:193:4"
									},
									"scope": 869,
									"src": "14839:270:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "7a708e92",
									"id": 778,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initReserve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 778,
												"src": "15139:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15139:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "aTokenAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 778,
												"src": "15160:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15160:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "stableDebtAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 778,
												"src": "15187:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15187:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "variableDebtAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 778,
												"src": "15218:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15218:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "interestRateStrategyAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 778,
												"src": "15251:35:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15251:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15133:157:4"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15299:0:4"
									},
									"scope": 869,
									"src": "15113:187:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "1d2118f9",
									"id": 785,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setReserveInterestRateStrategyAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 785,
												"src": "15351:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15351:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "rateStrategyAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 785,
												"src": "15368:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15368:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15350:46:4"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15409:0:4"
									},
									"scope": 869,
									"src": "15304:106:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "b8d29276",
									"id": 792,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setConfiguration",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 792,
												"src": "15440:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15440:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "configuration",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 792,
												"src": "15457:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15439:40:4"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15488:0:4"
									},
									"scope": 869,
									"src": "15414:75:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "15493:176:4",
										"text": " @dev Returns the configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The configuration of the reserve*"
									},
									"functionSelector": "c44b11f7",
									"id": 800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getConfiguration",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 800,
												"src": "15698:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15698:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15697:15:4"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 800,
												"src": "15748:40:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 797,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2338,
													"src": "15748:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15747:42:4"
									},
									"scope": 869,
									"src": "15672:118:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 801,
										"nodeType": "StructuredDocumentation",
										"src": "15794:159:4",
										"text": " @dev Returns the configuration of the user across all the reserves\n @param user The user address\n @return The configuration of the user*"
									},
									"functionSelector": "4417a583",
									"id": 808,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserConfiguration",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 808,
												"src": "15986:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15986:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15985:14:4"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 808,
												"src": "16035:37:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserConfigurationMap_$2341_memory_ptr",
													"typeString": "struct DataTypes.UserConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 805,
													"name": "DataTypes.UserConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2341,
													"src": "16035:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserConfigurationMap_$2341_storage_ptr",
														"typeString": "struct DataTypes.UserConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16034:39:4"
									},
									"scope": 869,
									"src": "15956:118:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "16078:196:4",
										"text": " @dev Returns the normalized income normalized income of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The reserve's normalized income"
									},
									"functionSelector": "d15e0053",
									"id": 816,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveNormalizedIncome",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 816,
												"src": "16313:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16313:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16312:15:4"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 816,
												"src": "16351:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16351:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16350:9:4"
									},
									"scope": 869,
									"src": "16277:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 817,
										"nodeType": "StructuredDocumentation",
										"src": "16364:193:4",
										"text": " @dev Returns the normalized variable debt per unit of asset\n @param asset The address of the underlying asset of the reserve\n @return The reserve normalized variable debt"
									},
									"functionSelector": "386497fd",
									"id": 824,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveNormalizedVariableDebt",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 824,
												"src": "16602:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16602:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16601:15:4"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 824,
												"src": "16640:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16640:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16639:9:4"
									},
									"scope": 869,
									"src": "16560:89:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "16653:178:4",
										"text": " @dev Returns the state and configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The state of the reserve*"
									},
									"functionSelector": "35ea6a75",
									"id": 832,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 832,
												"src": "16858:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16858:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16857:15:4"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 832,
												"src": "16896:28:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveData_$2335_memory_ptr",
													"typeString": "struct DataTypes.ReserveData"
												},
												"typeName": {
													"contractScope": null,
													"id": 829,
													"name": "DataTypes.ReserveData",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2335,
													"src": "16896:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveData_$2335_storage_ptr",
														"typeString": "struct DataTypes.ReserveData"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16895:30:4"
									},
									"scope": 869,
									"src": "16834:92:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "d5ed3933",
									"id": 847,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "finalizeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 847,
												"src": "16961:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16961:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 847,
												"src": "16980:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16980:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 847,
												"src": "16998:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16998:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 847,
												"src": "17014:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17014:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "balanceFromAfter",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 847,
												"src": "17034:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17034:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "balanceToBefore",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 847,
												"src": "17064:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17064:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16955:136:4"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17100:0:4"
									},
									"scope": 869,
									"src": "16930:171:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "d1946dbc",
									"id": 853,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReservesList",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17129:2:4"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 853,
												"src": "17155:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 849,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "17155:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 850,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "17155:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17154:18:4"
									},
									"scope": 869,
									"src": "17105:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "fe65acfe",
									"id": 858,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressesProvider",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17206:2:4"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 858,
												"src": "17232:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1020",
													"typeString": "contract ILendingPoolAddressesProvider"
												},
												"typeName": {
													"contractScope": null,
													"id": 855,
													"name": "ILendingPoolAddressesProvider",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1020,
													"src": "17232:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1020",
														"typeString": "contract ILendingPoolAddressesProvider"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17231:31:4"
									},
									"scope": 869,
									"src": "17177:86:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "bedb86fb",
									"id": 863,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "val",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 863,
												"src": "17285:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 859,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17285:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17284:10:4"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17303:0:4"
									},
									"scope": 869,
									"src": "17267:37:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "5c975abb",
									"id": 868,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17323:2:4"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 868,
												"src": "17349:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 865,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17349:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17348:6:4"
									},
									"scope": 869,
									"src": "17308:47:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 870,
							"src": "249:17108:4"
						}
					],
					"src": "37:17321:4"
				},
				"id": 4
			},
			"contracts/interfaces/ILendingPoolAddressesProvider.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ILendingPoolAddressesProvider.sol",
					"exportedSymbols": {
						"ILendingPoolAddressesProvider": [
							1020
						]
					},
					"id": 1021,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 871,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 872,
								"nodeType": "StructuredDocumentation",
								"src": "62:311:5",
								"text": " @title LendingPoolAddressesProvider contract\n @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\n - Acting also as factory of proxies and admin of those, so with right to change its implementations\n - Owned by the Aave Governance\n @author Aave*"
							},
							"fullyImplemented": false,
							"id": 1020,
							"linearizedBaseContracts": [
								1020
							],
							"name": "ILendingPoolAddressesProvider",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 876,
									"name": "MarketIdSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMarketId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 876,
												"src": "436:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 873,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "436:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "435:20:5"
									},
									"src": "418:38:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 880,
									"name": "LendingPoolUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 880,
												"src": "484:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "483:28:5"
									},
									"src": "459:53:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 884,
									"name": "ConfigurationAdminUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 884,
												"src": "547:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "546:28:5"
									},
									"src": "515:60:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 888,
									"name": "EmergencyAdminUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 888,
												"src": "606:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "605:28:5"
									},
									"src": "578:56:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 892,
									"name": "LendingPoolConfiguratorUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 892,
												"src": "674:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "673:28:5"
									},
									"src": "637:65:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 896,
									"name": "LendingPoolCollateralManagerUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 896,
												"src": "747:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "746:28:5"
									},
									"src": "705:70:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 900,
									"name": "PriceOracleUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 900,
												"src": "803:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "802:28:5"
									},
									"src": "778:53:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 904,
									"name": "LendingRateOracleUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 904,
												"src": "865:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "864:28:5"
									},
									"src": "834:59:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 910,
									"name": "ProxyCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 910,
												"src": "915:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 905,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 910,
												"src": "927:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "927:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "914:40:5"
									},
									"src": "896:59:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 918,
									"name": "AddressSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 918,
												"src": "975:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 911,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 918,
												"src": "987:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"indexed": false,
												"mutability": "mutable",
												"name": "hasProxy",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 918,
												"src": "1015:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 915,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1015:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "974:55:5"
									},
									"src": "958:72:5"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "568ef470",
									"id": 923,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMarketId",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1054:2:5"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 923,
												"src": "1080:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 920,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1080:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1079:15:5"
									},
									"scope": 1020,
									"src": "1034:61:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "f67b1847",
									"id": 928,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMarketId",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "marketId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 928,
												"src": "1120:24:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 924,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1120:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1119:26:5"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1154:0:5"
									},
									"scope": 1020,
									"src": "1099:56:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "ca446dd9",
									"id": 935,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 935,
												"src": "1179:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 929,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1179:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 935,
												"src": "1191:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1178:32:5"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:0:5"
									},
									"scope": 1020,
									"src": "1159:61:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "5dcc528c",
									"id": 942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddressAsProxy",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 942,
												"src": "1251:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 936,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "impl",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 942,
												"src": "1263:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1250:26:5"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1285:0:5"
									},
									"scope": 1020,
									"src": "1224:62:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "21f8a721",
									"id": 949,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 949,
												"src": "1310:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 943,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1309:12:5"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 949,
												"src": "1345:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1344:9:5"
									},
									"scope": 1020,
									"src": "1290:64:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "0261bf8b",
									"id": 954,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1381:2:5"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 954,
												"src": "1407:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1407:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1406:9:5"
									},
									"scope": 1020,
									"src": "1358:58:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "5aef021f",
									"id": 959,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolImpl",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 959,
												"src": "1448:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1448:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1447:14:5"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1470:0:5"
									},
									"scope": 1020,
									"src": "1420:51:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "85c858b1",
									"id": 964,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPoolConfigurator",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1510:2:5"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 964,
												"src": "1536:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1535:9:5"
									},
									"scope": 1020,
									"src": "1475:70:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "c12542df",
									"id": 969,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolConfiguratorImpl",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "configurator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 969,
												"src": "1589:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1589:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1588:22:5"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:0:5"
									},
									"scope": 1020,
									"src": "1549:71:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "712d9171",
									"id": 974,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPoolCollateralManager",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1664:2:5"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 974,
												"src": "1690:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1690:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1689:9:5"
									},
									"scope": 1020,
									"src": "1624:75:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "398e5553",
									"id": 979,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolCollateralManager",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "manager",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 979,
												"src": "1744:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1743:17:5"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1769:0:5"
									},
									"scope": 1020,
									"src": "1703:67:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "aecda378",
									"id": 984,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1795:2:5"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 984,
												"src": "1821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1821:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1820:9:5"
									},
									"scope": 1020,
									"src": "1774:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "283d62ad",
									"id": 989,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPoolAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "admin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 989,
												"src": "1856:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1856:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1855:15:5"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1879:0:5"
									},
									"scope": 1020,
									"src": "1834:46:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "ddcaa9ea",
									"id": 994,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEmergencyAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1910:2:5"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 994,
												"src": "1936:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1936:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1935:9:5"
									},
									"scope": 1020,
									"src": "1884:61:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "35da3394",
									"id": 999,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setEmergencyAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "admin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 999,
												"src": "1976:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1975:15:5"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1999:0:5"
									},
									"scope": 1020,
									"src": "1949:51:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "fca513a8",
									"id": 1004,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceOracle",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2027:2:5"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1004,
												"src": "2053:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2053:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:9:5"
									},
									"scope": 1020,
									"src": "2004:58:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "530e784f",
									"id": 1009,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPriceOracle",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "priceOracle",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1009,
												"src": "2090:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2089:21:5"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2119:0:5"
									},
									"scope": 1020,
									"src": "2066:54:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "3618abba",
									"id": 1014,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingRateOracle",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2153:2:5"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1014,
												"src": "2179:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2179:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2178:9:5"
									},
									"scope": 1020,
									"src": "2124:64:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "820d1274",
									"id": 1019,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingRateOracle",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "lendingRateOracle",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1019,
												"src": "2222:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2221:27:5"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2257:0:5"
									},
									"scope": 1020,
									"src": "2192:66:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1021,
							"src": "374:1886:5"
						}
					],
					"src": "37:2224:5"
				},
				"id": 5
			},
			"contracts/misc/WalletBalanceProvider.sol": {
				"ast": {
					"absolutePath": "contracts/misc/WalletBalanceProvider.sol",
					"exportedSymbols": {
						"WalletBalanceProvider": [
							1331
						]
					},
					"id": 1332,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1022,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:6"
						},
						{
							"id": 1023,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "62:33:6"
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/Address.sol",
							"file": "../dependencies/openzeppelin/contracts/Address.sol",
							"id": 1025,
							"nodeType": "ImportDirective",
							"scope": 1332,
							"sourceUnit": 64,
							"src": "97:75:6",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 1024,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "105:7:6",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/IERC20.sol",
							"file": "../dependencies/openzeppelin/contracts/IERC20.sol",
							"id": 1027,
							"nodeType": "ImportDirective",
							"scope": 1332,
							"sourceUnit": 142,
							"src": "173:73:6",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 1026,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "181:6:6",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/ILendingPoolAddressesProvider.sol",
							"file": "../interfaces/ILendingPoolAddressesProvider.sol",
							"id": 1029,
							"nodeType": "ImportDirective",
							"scope": 1332,
							"sourceUnit": 1021,
							"src": "248:94:6",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 1028,
										"name": "ILendingPoolAddressesProvider",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "256:29:6",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/ILendingPool.sol",
							"file": "../interfaces/ILendingPool.sol",
							"id": 1031,
							"nodeType": "ImportDirective",
							"scope": 1332,
							"sourceUnit": 870,
							"src": "343:60:6",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 1030,
										"name": "ILendingPool",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "351:12:6",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/dependencies/openzeppelin/contracts/SafeERC20.sol",
							"file": "../dependencies/openzeppelin/contracts/SafeERC20.sol",
							"id": 1033,
							"nodeType": "ImportDirective",
							"scope": 1332,
							"sourceUnit": 299,
							"src": "404:79:6",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 1032,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "412:9:6",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/protocol/libraries/configuration/ReserveConfiguration.sol",
							"file": "../protocol/libraries/configuration/ReserveConfiguration.sol",
							"id": 1035,
							"nodeType": "ImportDirective",
							"scope": 1332,
							"sourceUnit": 2054,
							"src": "484:98:6",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 1034,
										"name": "ReserveConfiguration",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "492:20:6",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/protocol/libraries/types/DataTypes.sol",
							"file": "../protocol/libraries/types/DataTypes.sol",
							"id": 1037,
							"nodeType": "ImportDirective",
							"scope": 1332,
							"sourceUnit": 2347,
							"src": "583:68:6",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 1036,
										"name": "DataTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "591:9:6",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1038,
								"nodeType": "StructuredDocumentation",
								"src": "653:433:6",
								"text": " @title WalletBalanceProvider contract\n @author Aave, influenced by https://github.com/wbobeirne/eth-balance-checker/blob/master/contracts/BalanceChecker.sol\n @notice Implements a logic of getting multiple tokens balance for one user address\n @dev NOTE: THIS CONTRACT IS NOT USED WITHIN THE AAVE PROTOCOL. It's an accessory contract used to reduce the number of calls\n towards the blockchain from the Aave backend.*"
							},
							"fullyImplemented": true,
							"id": 1331,
							"linearizedBaseContracts": [
								1331
							],
							"name": "WalletBalanceProvider",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1041,
									"libraryName": {
										"contractScope": null,
										"id": 1039,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 63,
										"src": "1128:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$63",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1122:34:6",
									"typeName": {
										"id": 1040,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1140:15:6",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									}
								},
								{
									"id": 1044,
									"libraryName": {
										"contractScope": null,
										"id": 1042,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 63,
										"src": "1165:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$63",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1159:26:6",
									"typeName": {
										"id": 1043,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1177:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"id": 1047,
									"libraryName": {
										"contractScope": null,
										"id": 1045,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 298,
										"src": "1194:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$298",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1188:27:6",
									"typeName": {
										"contractScope": null,
										"id": 1046,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 141,
										"src": "1208:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$141",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"id": 1050,
									"libraryName": {
										"contractScope": null,
										"id": 1048,
										"name": "ReserveConfiguration",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2053,
										"src": "1224:20:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ReserveConfiguration_$2053",
											"typeString": "library ReserveConfiguration"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1218:65:6",
									"typeName": {
										"contractScope": null,
										"id": 1049,
										"name": "DataTypes.ReserveConfigurationMap",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2338,
										"src": "1249:33:6",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
											"typeString": "struct DataTypes.ReserveConfigurationMap"
										}
									}
								},
								{
									"constant": true,
									"id": 1053,
									"mutability": "constant",
									"name": "MOCK_ETH_ADDRESS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1331,
									"src": "1287:78:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1051,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1287:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
										"id": 1052,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1323:42:6",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "1460:95:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1058,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "1520:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1520:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"id": 1060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 28,
																"src": "1520:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1520:23:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "3232",
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1545:4:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4d1a59767271eefdc7830a772b9732a11d503531d972ab8c981a6b1c0e666e5",
																"typeString": "literal_string \"22\""
															},
															"value": "22"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4d1a59767271eefdc7830a772b9732a11d503531d972ab8c981a6b1c0e666e5",
																"typeString": "literal_string \"22\""
															}
														],
														"id": 1057,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1512:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1512:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "1512:38:6"
											}
										]
									},
									"documentation": {
										"id": 1054,
										"nodeType": "StructuredDocumentation",
										"src": "1370:60:6",
										"text": "@dev Fallback function, don't accept any ETH*"
									},
									"id": 1066,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1440:2:6"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1460:0:6"
									},
									"scope": 1331,
									"src": "1433:122:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "1829:247:6",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1076,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "1839:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1077,
														"name": "MOCK_ETH_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "1848:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1839:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"id": 1083,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1071,
																"src": "1972:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 28,
															"src": "1972:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1972:18:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 1094,
													"nodeType": "IfStatement",
													"src": "1968:75:6",
													"trueBody": {
														"id": 1093,
														"nodeType": "Block",
														"src": "1992:51:6",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1090,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1069,
																			"src": "2031:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1087,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1071,
																					"src": "2014:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1086,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 141,
																				"src": "2007:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$141_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 1088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2007:13:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$141",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 80,
																		"src": "2007:23:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2007:29:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1075,
																"id": 1092,
																"nodeType": "Return",
																"src": "2000:36:6"
															}
														]
													}
												},
												"id": 1095,
												"nodeType": "IfStatement",
												"src": "1835:208:6",
												"trueBody": {
													"id": 1082,
													"nodeType": "Block",
													"src": "1866:96:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1079,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "1881:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1881:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1075,
															"id": 1081,
															"nodeType": "Return",
															"src": "1874:19:6"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "494e56414c49445f544f4b454e",
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:15:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_436b5627177a9781148596ddddd93f72d53dd82575a018216d5aaf2a8219ec9e",
																"typeString": "literal_string \"INVALID_TOKEN\""
															},
															"value": "INVALID_TOKEN"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_436b5627177a9781148596ddddd93f72d53dd82575a018216d5aaf2a8219ec9e",
																"typeString": "literal_string \"INVALID_TOKEN\""
															}
														],
														"id": 1096,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-19,
															-19
														],
														"referencedDeclaration": -19,
														"src": "2048:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2048:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "2048:23:6"
											}
										]
									},
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "1559:189:6",
										"text": "@dev Check the token balance of a wallet in a token contract\nReturns the balance of the token for user. Avoids possible errors:\n- return 0 on non-contract address*"
									},
									"functionSelector": "f7888aec",
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1101,
												"src": "1770:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1770:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1101,
												"src": "1784:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1784:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1769:29:6"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1101,
												"src": "1820:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1820:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1819:9:6"
									},
									"scope": 1331,
									"src": "1751:325:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "2483:294:6",
										"statements": [
											{
												"assignments": [
													1118
												],
												"declarations": [
													{
														"constant": false,
														"id": 1118,
														"mutability": "mutable",
														"name": "balances",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1175,
														"src": "2489:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1116,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2489:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1117,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "2489:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1128,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1122,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1105,
																	"src": "2531:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2531:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1124,
																	"name": "tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "2546:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2546:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2531:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2517:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1119,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2521:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1120,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "2521:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2517:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2489:71:6"
											},
											{
												"body": {
													"id": 1171,
													"nodeType": "Block",
													"src": "2610:141:6",
													"statements": [
														{
															"body": {
																"id": 1169,
																"nodeType": "Block",
																"src": "2662:83:6",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1151,
																					"name": "balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1118,
																					"src": "2672:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1158,
																				"indexExpression": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1157,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1155,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1152,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1130,
																							"src": "2681:1:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"argumentTypes": null,
																							"expression": {
																								"argumentTypes": null,
																								"id": 1153,
																								"name": "tokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1108,
																								"src": "2685:6:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																									"typeString": "address[] calldata"
																								}
																							},
																							"id": 1154,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "length",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": null,
																							"src": "2685:13:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2681:17:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 1156,
																						"name": "j",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1141,
																						"src": "2701:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2681:21:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2672:31:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 1160,
																							"name": "users",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1105,
																							"src": "2716:5:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																								"typeString": "address[] calldata"
																							}
																						},
																						"id": 1162,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 1161,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1130,
																							"src": "2722:1:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "2716:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 1163,
																							"name": "tokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1108,
																							"src": "2726:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																								"typeString": "address[] calldata"
																							}
																						},
																						"id": 1165,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 1164,
																							"name": "j",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1141,
																							"src": "2733:1:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "2726:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1159,
																					"name": "balanceOf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1101,
																					"src": "2706:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																						"typeString": "function (address,address) view returns (uint256)"
																					}
																				},
																				"id": 1166,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2706:30:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2672:64:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1168,
																		"nodeType": "ExpressionStatement",
																		"src": "2672:64:6"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1144,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "2638:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1145,
																		"name": "tokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1108,
																		"src": "2642:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																			"typeString": "address[] calldata"
																		}
																	},
																	"id": 1146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2642:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2638:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1170,
															"initializationExpression": {
																"assignments": [
																	1141
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1141,
																		"mutability": "mutable",
																		"name": "j",
																		"nodeType": "VariableDeclaration",
																		"overrides": null,
																		"scope": 1170,
																		"src": "2623:9:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1140,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2623:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 1143,
																"initialValue": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2635:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "2623:13:6"
															},
															"loopExpression": {
																"expression": {
																	"argumentTypes": null,
																	"id": 1149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "2657:3:6",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 1148,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1141,
																		"src": "2657:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1150,
																"nodeType": "ExpressionStatement",
																"src": "2657:3:6"
															},
															"nodeType": "ForStatement",
															"src": "2618:127:6"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1133,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "2587:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1134,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "2591:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2591:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2587:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1172,
												"initializationExpression": {
													"assignments": [
														1130
													],
													"declarations": [
														{
															"constant": false,
															"id": 1130,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1172,
															"src": "2572:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1129,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2572:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1132,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2584:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2572:13:6"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2605:3:6",
														"subExpression": {
															"argumentTypes": null,
															"id": 1137,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "2605:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1139,
													"nodeType": "ExpressionStatement",
													"src": "2605:3:6"
												},
												"nodeType": "ForStatement",
												"src": "2567:184:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1173,
													"name": "balances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1118,
													"src": "2764:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1113,
												"id": 1174,
												"nodeType": "Return",
												"src": "2757:15:6"
											}
										]
									},
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "2080:268:6",
										"text": " @notice Fetches, for a list of _users and _tokens (ETH included with mock address), the balances\n @param users The list of users\n @param tokens The list of tokens\n @return And array with the concatenation of, for each user, his/her balances*"
									},
									"functionSelector": "b59b28ef",
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "batchBalanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "users",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1176,
												"src": "2375:24:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1103,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2375:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1104,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2375:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1176,
												"src": "2401:25:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1106,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2401:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1107,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2401:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2374:53:6"
									},
									"returnParameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1176,
												"src": "2463:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1110,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2463:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1111,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2463:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2462:18:6"
									},
									"scope": 1331,
									"src": "2351:426:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1329,
										"nodeType": "Block",
										"src": "3011:936:6",
										"statements": [
											{
												"assignments": [
													1191
												],
												"declarations": [
													{
														"constant": false,
														"id": 1191,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1329,
														"src": "3017:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILendingPool_$869",
															"typeString": "contract ILendingPool"
														},
														"typeName": {
															"contractScope": null,
															"id": 1190,
															"name": "ILendingPool",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 869,
															"src": "3017:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILendingPool_$869",
																"typeString": "contract ILendingPool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1199,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1194,
																			"name": "provider",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1179,
																			"src": "3080:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1193,
																		"name": "ILendingPoolAddressesProvider",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1020,
																		"src": "3050:29:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ILendingPoolAddressesProvider_$1020_$",
																			"typeString": "type(contract ILendingPoolAddressesProvider)"
																		}
																	},
																	"id": 1195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3050:39:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1020",
																		"typeString": "contract ILendingPoolAddressesProvider"
																	}
																},
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "getLendingPool",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 954,
																"src": "3050:54:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3050:56:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1192,
														"name": "ILendingPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "3037:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ILendingPool_$869_$",
															"typeString": "type(contract ILendingPool)"
														}
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3037:70:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILendingPool_$869",
														"typeString": "contract ILendingPool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3017:90:6"
											},
											{
												"assignments": [
													1204
												],
												"declarations": [
													{
														"constant": false,
														"id": 1204,
														"mutability": "mutable",
														"name": "reserves",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1329,
														"src": "3114:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1202,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3114:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1203,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "3114:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1208,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 1205,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "3142:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILendingPool_$869",
																"typeString": "contract ILendingPool"
															}
														},
														"id": 1206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getReservesList",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 853,
														"src": "3142:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function () view external returns (address[] memory)"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3142:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3114:50:6"
											},
											{
												"assignments": [
													1213
												],
												"declarations": [
													{
														"constant": false,
														"id": 1213,
														"mutability": "mutable",
														"name": "reservesWithEth",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1329,
														"src": "3170:32:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1211,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3170:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1212,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "3170:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1222,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1217,
																	"name": "reserves",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1204,
																	"src": "3219:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3219:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3237:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "3219:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3205:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1214,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3209:7:6",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1215,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "3209:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3205:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3170:69:6"
											},
											{
												"body": {
													"id": 1242,
													"nodeType": "Block",
													"src": "3291:47:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1234,
																		"name": "reservesWithEth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1213,
																		"src": "3299:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 1236,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1235,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1224,
																		"src": "3315:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3299:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1237,
																		"name": "reserves",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1204,
																		"src": "3320:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 1239,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1238,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1224,
																		"src": "3329:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3320:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3299:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1241,
															"nodeType": "ExpressionStatement",
															"src": "3299:32:6"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1227,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "3265:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1228,
															"name": "reserves",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "3269:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3269:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3265:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1243,
												"initializationExpression": {
													"assignments": [
														1224
													],
													"declarations": [
														{
															"constant": false,
															"id": 1224,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1243,
															"src": "3250:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1223,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3250:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1226,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1225,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3262:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3250:13:6"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3286:3:6",
														"subExpression": {
															"argumentTypes": null,
															"id": 1231,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "3286:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1233,
													"nodeType": "ExpressionStatement",
													"src": "3286:3:6"
												},
												"nodeType": "ForStatement",
												"src": "3245:93:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1244,
															"name": "reservesWithEth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "3343:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1247,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1245,
																"name": "reserves",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1204,
																"src": "3359:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3359:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3343:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1248,
														"name": "MOCK_ETH_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "3378:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3343:51:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1250,
												"nodeType": "ExpressionStatement",
												"src": "3343:51:6"
											},
											{
												"assignments": [
													1255
												],
												"declarations": [
													{
														"constant": false,
														"id": 1255,
														"mutability": "mutable",
														"name": "balances",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1329,
														"src": "3401:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1253,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3401:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1254,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "3401:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1262,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1259,
																"name": "reservesWithEth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "3443:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3443:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1258,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3429:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1256,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3433:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1257,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "3433:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3429:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3401:65:6"
											},
											{
												"body": {
													"id": 1313,
													"nodeType": "Block",
													"src": "3519:316:6",
													"statements": [
														{
															"assignments": [
																1277
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1277,
																	"mutability": "mutable",
																	"name": "configuration",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1313,
																	"src": "3527:54:6",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																		"typeString": "struct DataTypes.ReserveConfigurationMap"
																	},
																	"typeName": {
																		"contractScope": null,
																		"id": 1276,
																		"name": "DataTypes.ReserveConfigurationMap",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 2338,
																		"src": "3527:33:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
																			"typeString": "struct DataTypes.ReserveConfigurationMap"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1284,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1280,
																			"name": "reservesWithEth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "3614:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1282,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1281,
																			"name": "j",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1264,
																			"src": "3630:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3614:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1278,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1191,
																		"src": "3592:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ILendingPool_$869",
																			"typeString": "contract ILendingPool"
																		}
																	},
																	"id": 1279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "getConfiguration",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 800,
																	"src": "3592:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_ReserveConfigurationMap_$2338_memory_ptr_$",
																		"typeString": "function (address) view external returns (struct DataTypes.ReserveConfigurationMap memory)"
																	}
																},
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3592:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																	"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3527:106:6"
														},
														{
															"assignments": [
																1286,
																null,
																null,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1286,
																	"mutability": "mutable",
																	"name": "isActive",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1313,
																	"src": "3643:13:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1285,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "3643:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																},
																null,
																null,
																null
															],
															"id": 1290,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1287,
																		"name": "configuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1277,
																		"src": "3666:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																			"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																		}
																	},
																	"id": 1288,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "getFlagsMemory",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2052,
																	"src": "3666:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_ReserveConfigurationMap_$2338_memory_ptr_$returns$_t_bool_$_t_bool_$_t_bool_$_t_bool_$bound_to$_t_struct$_ReserveConfigurationMap_$2338_memory_ptr_$",
																		"typeString": "function (struct DataTypes.ReserveConfigurationMap memory) pure returns (bool,bool,bool,bool)"
																	}
																},
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3666:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_bool_$_t_bool_$",
																	"typeString": "tuple(bool,bool,bool,bool)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3642:54:6"
														},
														{
															"condition": {
																"argumentTypes": null,
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "3709:9:6",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 1291,
																	"name": "isActive",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "3710:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1301,
															"nodeType": "IfStatement",
															"src": "3705:67:6",
															"trueBody": {
																"id": 1300,
																"nodeType": "Block",
																"src": "3720:52:6",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1293,
																					"name": "balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1255,
																					"src": "3730:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1295,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1294,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1264,
																					"src": "3739:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3730:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3744:1:6",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "3730:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1298,
																		"nodeType": "ExpressionStatement",
																		"src": "3730:15:6"
																	},
																	{
																		"id": 1299,
																		"nodeType": "Continue",
																		"src": "3755:8:6"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1302,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1255,
																		"src": "3779:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1304,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1303,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1264,
																		"src": "3788:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3779:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1306,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1181,
																			"src": "3803:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1307,
																				"name": "reservesWithEth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1213,
																				"src": "3809:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 1309,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1308,
																				"name": "j",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1264,
																				"src": "3825:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3809:18:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1305,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "3793:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address,address) view returns (uint256)"
																		}
																	},
																	"id": 1310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3793:35:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3779:49:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1312,
															"nodeType": "ExpressionStatement",
															"src": "3779:49:6"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1267,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "3493:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1268,
															"name": "reserves",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "3497:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3497:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3493:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1314,
												"initializationExpression": {
													"assignments": [
														1264
													],
													"declarations": [
														{
															"constant": false,
															"id": 1264,
															"mutability": "mutable",
															"name": "j",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1314,
															"src": "3478:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1263,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3478:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1266,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3490:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3478:13:6"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3514:3:6",
														"subExpression": {
															"argumentTypes": null,
															"id": 1271,
															"name": "j",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "3514:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1273,
													"nodeType": "ExpressionStatement",
													"src": "3514:3:6"
												},
												"nodeType": "ForStatement",
												"src": "3473:362:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1315,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "3840:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1318,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1316,
																"name": "reserves",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1204,
																"src": "3849:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3849:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3840:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1320,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1181,
																"src": "3878:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"argumentTypes": null,
																"id": 1321,
																"name": "MOCK_ETH_ADDRESS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "3884:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1319,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "3868:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view returns (uint256)"
															}
														},
														"id": 1322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3868:33:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3840:61:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1324,
												"nodeType": "ExpressionStatement",
												"src": "3840:61:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 1325,
															"name": "reservesWithEth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "3916:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1326,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "3933:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 1327,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3915:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(address[] memory,uint256[] memory)"
													}
												},
												"functionReturnParameters": 1189,
												"id": 1328,
												"nodeType": "Return",
												"src": "3908:34:6"
											}
										]
									},
									"documentation": {
										"id": 1177,
										"nodeType": "StructuredDocumentation",
										"src": "2781:91:6",
										"text": "@dev provides balances of user wallet for all reserves available on the pool"
									},
									"functionSelector": "02405343",
									"id": 1330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserWalletBalances",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "provider",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1330,
												"src": "2906:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2906:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1330,
												"src": "2924:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2924:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2905:32:6"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1330,
												"src": "2973:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1183,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2973:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1184,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2973:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1330,
												"src": "2991:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1186,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2991:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1187,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2991:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2972:36:6"
									},
									"scope": 1331,
									"src": "2875:1072:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1332,
							"src": "1087:2862:6"
						}
					],
					"src": "37:3913:6"
				},
				"id": 6
			},
			"contracts/protocol/libraries/configuration/ReserveConfiguration.sol": {
				"ast": {
					"absolutePath": "contracts/protocol/libraries/configuration/ReserveConfiguration.sol",
					"exportedSymbols": {
						"ReserveConfiguration": [
							2053
						]
					},
					"id": 2054,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1333,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:7"
						},
						{
							"absolutePath": "contracts/protocol/libraries/helpers/Errors.sol",
							"file": "../helpers/Errors.sol",
							"id": 1335,
							"nodeType": "ImportDirective",
							"scope": 2054,
							"sourceUnit": 2309,
							"src": "62:45:7",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 1334,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "70:6:7",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/protocol/libraries/types/DataTypes.sol",
							"file": "../types/DataTypes.sol",
							"id": 1337,
							"nodeType": "ImportDirective",
							"scope": 2054,
							"sourceUnit": 2347,
							"src": "108:49:7",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 1336,
										"name": "DataTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "116:9:7",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1338,
								"nodeType": "StructuredDocumentation",
								"src": "159:137:7",
								"text": " @title ReserveConfiguration library\n @author Aave\n @notice Implements the bitmap logic to handle the reserve configuration"
							},
							"fullyImplemented": true,
							"id": 2053,
							"linearizedBaseContracts": [
								2053
							],
							"name": "ReserveConfiguration",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1341,
									"mutability": "constant",
									"name": "LTV_MASK",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2053,
									"src": "330:112:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1339,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "330:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464630303030",
										"id": 1340,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "376:66:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129574400_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...4400"
										},
										"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1344,
									"mutability": "constant",
									"name": "LIQUIDATION_THRESHOLD_MASK",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2053,
									"src": "465:112:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1342,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "465:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646463030303046464646",
										"id": 1343,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "511:66:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007908834738175_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...8175"
										},
										"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFF"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1347,
									"mutability": "constant",
									"name": "LIQUIDATION_BONUS_MASK",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2053,
									"src": "600:112:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1345,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "600:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646303030304646464646464646",
										"id": 1346,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "646:66:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457583726442447896575_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...6575"
										},
										"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFF"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1350,
									"mutability": "constant",
									"name": "DECIMALS_MASK",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2053,
									"src": "735:112:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1348,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "735:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646463030464646464646464646464646",
										"id": 1349,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "781:66:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457512231794068422655_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...2655"
										},
										"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFF"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1353,
									"mutability": "constant",
									"name": "ACTIVE_MASK",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2053,
									"src": "870:112:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1351,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "870:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646454646464646464646464646464646",
										"id": 1352,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "916:66:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457511950319091711999_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...1999"
										},
										"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFF"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1356,
									"mutability": "constant",
									"name": "FROZEN_MASK",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2053,
									"src": "1005:112:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1354,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1005:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646444646464646464646464646464646",
										"id": 1355,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1051:66:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457439892725053784063_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...4063"
										},
										"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFF"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1359,
									"mutability": "constant",
									"name": "BORROWING_MASK",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2053,
									"src": "1140:112:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1357,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1140:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646424646464646464646464646464646",
										"id": 1358,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1186:66:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457295777536977928191_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...8191"
										},
										"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFFFFFF"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1362,
									"mutability": "constant",
									"name": "STABLE_BORROWING_MASK",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2053,
									"src": "1275:112:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1360,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1275:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646374646464646464646464646464646",
										"id": 1361,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1321:66:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457007547160826216447_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...6447"
										},
										"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFF"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1365,
									"mutability": "constant",
									"name": "RESERVE_FACTOR_MASK",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2053,
									"src": "1410:112:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1363,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1410:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646464646463030303046464646464646464646464646464646",
										"id": 1364,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1456:66:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640562830550211137357664485375_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...5375"
										},
										"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFF"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "1546:83:7",
										"text": "@dev For the LTV, the start bit is 0 (up to 15), hence no bitshifting is needed"
									},
									"id": 1369,
									"mutability": "constant",
									"name": "LIQUIDATION_THRESHOLD_START_BIT_POSITION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2053,
									"src": "1632:62:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1367,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1632:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3136",
										"id": 1368,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1692:2:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_16_by_1",
											"typeString": "int_const 16"
										},
										"value": "16"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1372,
									"mutability": "constant",
									"name": "LIQUIDATION_BONUS_START_BIT_POSITION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2053,
									"src": "1698:58:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1370,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1698:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3332",
										"id": 1371,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1754:2:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1375,
									"mutability": "constant",
									"name": "RESERVE_DECIMALS_START_BIT_POSITION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2053,
									"src": "1760:57:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1373,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1760:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3438",
										"id": 1374,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1815:2:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_48_by_1",
											"typeString": "int_const 48"
										},
										"value": "48"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1378,
									"mutability": "constant",
									"name": "IS_ACTIVE_START_BIT_POSITION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2053,
									"src": "1821:50:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1376,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1821:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3536",
										"id": 1377,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1869:2:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_56_by_1",
											"typeString": "int_const 56"
										},
										"value": "56"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1381,
									"mutability": "constant",
									"name": "IS_FROZEN_START_BIT_POSITION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2053,
									"src": "1875:50:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1379,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1875:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3537",
										"id": 1380,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1923:2:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57_by_1",
											"typeString": "int_const 57"
										},
										"value": "57"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1384,
									"mutability": "constant",
									"name": "BORROWING_ENABLED_START_BIT_POSITION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2053,
									"src": "1929:58:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1382,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1929:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3538",
										"id": 1383,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1985:2:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_58_by_1",
											"typeString": "int_const 58"
										},
										"value": "58"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1387,
									"mutability": "constant",
									"name": "STABLE_BORROWING_ENABLED_START_BIT_POSITION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2053,
									"src": "1991:65:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1385,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1991:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3539",
										"id": 1386,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2054:2:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_59_by_1",
											"typeString": "int_const 59"
										},
										"value": "59"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1390,
									"mutability": "constant",
									"name": "RESERVE_FACTOR_START_BIT_POSITION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2053,
									"src": "2060:55:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1388,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2060:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3634",
										"id": 1389,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2113:2:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1393,
									"mutability": "constant",
									"name": "MAX_VALID_LTV",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2053,
									"src": "2120:38:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1391,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2120:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3635353335",
										"id": 1392,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2153:5:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65535_by_1",
											"typeString": "int_const 65535"
										},
										"value": "65535"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1396,
									"mutability": "constant",
									"name": "MAX_VALID_LIQUIDATION_THRESHOLD",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2053,
									"src": "2162:56:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1394,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2162:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3635353335",
										"id": 1395,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2213:5:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65535_by_1",
											"typeString": "int_const 65535"
										},
										"value": "65535"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1399,
									"mutability": "constant",
									"name": "MAX_VALID_LIQUIDATION_BONUS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2053,
									"src": "2222:52:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1397,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2222:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3635353335",
										"id": 1398,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2269:5:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65535_by_1",
											"typeString": "int_const 65535"
										},
										"value": "65535"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1402,
									"mutability": "constant",
									"name": "MAX_VALID_DECIMALS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2053,
									"src": "2278:41:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1400,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2278:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "323535",
										"id": 1401,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2316:3:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "255"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1405,
									"mutability": "constant",
									"name": "MAX_VALID_RESERVE_FACTOR",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2053,
									"src": "2323:49:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1403,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2323:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3635353335",
										"id": 1404,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2367:5:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65535_by_1",
											"typeString": "int_const 65535"
										},
										"value": "65535"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1433,
										"nodeType": "Block",
										"src": "2599:110:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1414,
																"name": "ltv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1410,
																"src": "2613:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1415,
																"name": "MAX_VALID_LTV",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1393,
																"src": "2620:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2613:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1417,
																"name": "Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2308,
																"src": "2635:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Errors_$2308_$",
																	"typeString": "type(library Errors)"
																}
															},
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "RC_INVALID_LTV",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2263,
															"src": "2635:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1413,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2605:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2605:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1420,
												"nodeType": "ExpressionStatement",
												"src": "2605:52:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1421,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "2664:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																"typeString": "struct DataTypes.ReserveConfigurationMap memory"
															}
														},
														"id": 1423,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2337,
														"src": "2664:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1424,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1408,
																			"src": "2677:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																				"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																			}
																		},
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2337,
																		"src": "2677:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1426,
																		"name": "LTV_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1341,
																		"src": "2689:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2677:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1428,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2676:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1429,
															"name": "ltv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "2701:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2676:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2664:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1432,
												"nodeType": "ExpressionStatement",
												"src": "2664:40:7"
											}
										]
									},
									"documentation": {
										"id": 1406,
										"nodeType": "StructuredDocumentation",
										"src": "2377:129:7",
										"text": " @dev Sets the Loan to Value of the reserve\n @param self The reserve configuration\n @param ltv the new ltv*"
									},
									"id": 1434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setLtv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1434,
												"src": "2525:45:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1407,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2338,
													"src": "2525:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "ltv",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1434,
												"src": "2572:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2524:60:7"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2599:0:7"
									},
									"scope": 2053,
									"src": "2509:200:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1448,
										"nodeType": "Block",
										"src": "2944:39:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1442,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "2957:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
																"typeString": "struct DataTypes.ReserveConfigurationMap storage pointer"
															}
														},
														"id": 1443,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2337,
														"src": "2957:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "~",
														"prefix": true,
														"src": "2969:9:7",
														"subExpression": {
															"argumentTypes": null,
															"id": 1444,
															"name": "LTV_MASK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1341,
															"src": "2970:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2957:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1441,
												"id": 1447,
												"nodeType": "Return",
												"src": "2950:28:7"
											}
										]
									},
									"documentation": {
										"id": 1435,
										"nodeType": "StructuredDocumentation",
										"src": "2713:132:7",
										"text": " @dev Gets the Loan to Value of the reserve\n @param self The reserve configuration\n @return The loan to value*"
									},
									"id": 1449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLtv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1449,
												"src": "2864:46:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1436,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2338,
													"src": "2864:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2863:48:7"
									},
									"returnParameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1449,
												"src": "2935:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2935:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2934:9:7"
									},
									"scope": 2053,
									"src": "2848:135:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1480,
										"nodeType": "Block",
										"src": "3274:226:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1458,
																"name": "threshold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1454,
																"src": "3288:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1459,
																"name": "MAX_VALID_LIQUIDATION_THRESHOLD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1396,
																"src": "3301:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3288:44:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1461,
																"name": "Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2308,
																"src": "3334:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Errors_$2308_$",
																	"typeString": "type(library Errors)"
																}
															},
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "RC_INVALID_LIQ_THRESHOLD",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2266,
															"src": "3334:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1457,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3280:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3280:86:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1464,
												"nodeType": "ExpressionStatement",
												"src": "3280:86:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1465,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "3373:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																"typeString": "struct DataTypes.ReserveConfigurationMap memory"
															}
														},
														"id": 1467,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2337,
														"src": "3373:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1468,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1452,
																			"src": "3392:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																				"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																			}
																		},
																		"id": 1469,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2337,
																		"src": "3392:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1470,
																		"name": "LIQUIDATION_THRESHOLD_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1344,
																		"src": "3404:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3392:38:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1472,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3391:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1473,
																		"name": "threshold",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1454,
																		"src": "3441:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1474,
																		"name": "LIQUIDATION_THRESHOLD_START_BIT_POSITION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1369,
																		"src": "3454:40:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3441:53:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1476,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3440:55:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3391:104:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3373:122:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1479,
												"nodeType": "ExpressionStatement",
												"src": "3373:122:7"
											}
										]
									},
									"documentation": {
										"id": 1450,
										"nodeType": "StructuredDocumentation",
										"src": "2987:161:7",
										"text": " @dev Sets the liquidation threshold of the reserve\n @param self The reserve configuration\n @param threshold The new liquidation threshold*"
									},
									"id": 1481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setLiquidationThreshold",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1481,
												"src": "3184:45:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1451,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2338,
													"src": "3184:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "threshold",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1481,
												"src": "3231:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3231:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3183:66:7"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3274:0:7"
									},
									"scope": 2053,
									"src": "3151:349:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1498,
										"nodeType": "Block",
										"src": "3782:103:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1489,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1484,
																		"src": "3796:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
																			"typeString": "struct DataTypes.ReserveConfigurationMap storage pointer"
																		}
																	},
																	"id": 1490,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "data",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2337,
																	"src": "3796:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "~",
																	"prefix": true,
																	"src": "3808:27:7",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 1491,
																		"name": "LIQUIDATION_THRESHOLD_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1344,
																		"src": "3809:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3796:39:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1494,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3795:41:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">>",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1495,
														"name": "LIQUIDATION_THRESHOLD_START_BIT_POSITION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "3840:40:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3795:85:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1488,
												"id": 1497,
												"nodeType": "Return",
												"src": "3788:92:7"
											}
										]
									},
									"documentation": {
										"id": 1482,
										"nodeType": "StructuredDocumentation",
										"src": "3504:148:7",
										"text": " @dev Gets the liquidation threshold of the reserve\n @param self The reserve configuration\n @return The liquidation threshold*"
									},
									"id": 1499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLiquidationThreshold",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1499,
												"src": "3688:46:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1483,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2338,
													"src": "3688:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3687:48:7"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1499,
												"src": "3771:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3771:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3770:9:7"
									},
									"scope": 2053,
									"src": "3655:230:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1530,
										"nodeType": "Block",
										"src": "4156:202:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1508,
																"name": "bonus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1504,
																"src": "4170:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1509,
																"name": "MAX_VALID_LIQUIDATION_BONUS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1399,
																"src": "4179:27:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4170:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1511,
																"name": "Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2308,
																"src": "4208:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Errors_$2308_$",
																	"typeString": "type(library Errors)"
																}
															},
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "RC_INVALID_LIQ_BONUS",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2269,
															"src": "4208:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1507,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4162:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4162:74:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1514,
												"nodeType": "ExpressionStatement",
												"src": "4162:74:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1515,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1502,
															"src": "4243:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																"typeString": "struct DataTypes.ReserveConfigurationMap memory"
															}
														},
														"id": 1517,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2337,
														"src": "4243:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1518,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1502,
																			"src": "4262:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																				"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																			}
																		},
																		"id": 1519,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2337,
																		"src": "4262:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1520,
																		"name": "LIQUIDATION_BONUS_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1347,
																		"src": "4274:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4262:34:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1522,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4261:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1523,
																		"name": "bonus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1504,
																		"src": "4307:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1524,
																		"name": "LIQUIDATION_BONUS_START_BIT_POSITION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1372,
																		"src": "4316:36:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4307:45:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1526,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4306:47:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4261:92:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4243:110:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1529,
												"nodeType": "ExpressionStatement",
												"src": "4243:110:7"
											}
										]
									},
									"documentation": {
										"id": 1500,
										"nodeType": "StructuredDocumentation",
										"src": "3889:149:7",
										"text": " @dev Sets the liquidation bonus of the reserve\n @param self The reserve configuration\n @param bonus The new liquidation bonus*"
									},
									"id": 1531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setLiquidationBonus",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1531,
												"src": "4070:45:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1501,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2338,
													"src": "4070:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "bonus",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1531,
												"src": "4117:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4117:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4069:62:7"
									},
									"returnParameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4156:0:7"
									},
									"scope": 2053,
									"src": "4041:317:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "4628:95:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1539,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1534,
																		"src": "4642:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
																			"typeString": "struct DataTypes.ReserveConfigurationMap storage pointer"
																		}
																	},
																	"id": 1540,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "data",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2337,
																	"src": "4642:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "~",
																	"prefix": true,
																	"src": "4654:23:7",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 1541,
																		"name": "LIQUIDATION_BONUS_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1347,
																		"src": "4655:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4642:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1544,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4641:37:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">>",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1545,
														"name": "LIQUIDATION_BONUS_START_BIT_POSITION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1372,
														"src": "4682:36:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4641:77:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1538,
												"id": 1547,
												"nodeType": "Return",
												"src": "4634:84:7"
											}
										]
									},
									"documentation": {
										"id": 1532,
										"nodeType": "StructuredDocumentation",
										"src": "4362:140:7",
										"text": " @dev Gets the liquidation bonus of the reserve\n @param self The reserve configuration\n @return The liquidation bonus*"
									},
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLiquidationBonus",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1549,
												"src": "4534:46:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1533,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2338,
													"src": "4534:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4533:48:7"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1549,
												"src": "4617:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4617:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4616:9:7"
									},
									"scope": 2053,
									"src": "4505:218:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1580,
										"nodeType": "Block",
										"src": "4994:176:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1558,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "5008:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1559,
																"name": "MAX_VALID_DECIMALS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1402,
																"src": "5020:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5008:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1561,
																"name": "Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2308,
																"src": "5040:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Errors_$2308_$",
																	"typeString": "type(library Errors)"
																}
															},
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "RC_INVALID_DECIMALS",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2272,
															"src": "5040:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1557,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5000:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5000:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1564,
												"nodeType": "ExpressionStatement",
												"src": "5000:67:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1565,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1552,
															"src": "5074:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																"typeString": "struct DataTypes.ReserveConfigurationMap memory"
															}
														},
														"id": 1567,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2337,
														"src": "5074:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1568,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1552,
																			"src": "5087:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																				"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																			}
																		},
																		"id": 1569,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2337,
																		"src": "5087:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1570,
																		"name": "DECIMALS_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1350,
																		"src": "5099:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5087:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1572,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5086:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1573,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1554,
																		"src": "5117:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1574,
																		"name": "RESERVE_DECIMALS_START_BIT_POSITION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1375,
																		"src": "5129:35:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5117:47:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1576,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5116:49:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5086:79:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5074:91:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1579,
												"nodeType": "ExpressionStatement",
												"src": "5074:91:7"
											}
										]
									},
									"documentation": {
										"id": 1550,
										"nodeType": "StructuredDocumentation",
										"src": "4727:154:7",
										"text": " @dev Sets the decimals of the underlying asset of the reserve\n @param self The reserve configuration\n @param decimals The decimals*"
									},
									"id": 1581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setDecimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1581,
												"src": "4905:45:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1551,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2338,
													"src": "4905:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "decimals",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1581,
												"src": "4952:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4952:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4904:65:7"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4994:0:7"
									},
									"scope": 2053,
									"src": "4884:286:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1598,
										"nodeType": "Block",
										"src": "5451:85:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1589,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1584,
																		"src": "5465:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
																			"typeString": "struct DataTypes.ReserveConfigurationMap storage pointer"
																		}
																	},
																	"id": 1590,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "data",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2337,
																	"src": "5465:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "~",
																	"prefix": true,
																	"src": "5477:14:7",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 1591,
																		"name": "DECIMALS_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1350,
																		"src": "5478:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5465:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1594,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5464:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">>",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1595,
														"name": "RESERVE_DECIMALS_START_BIT_POSITION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1375,
														"src": "5496:35:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5464:67:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1588,
												"id": 1597,
												"nodeType": "Return",
												"src": "5457:74:7"
											}
										]
									},
									"documentation": {
										"id": 1582,
										"nodeType": "StructuredDocumentation",
										"src": "5174:159:7",
										"text": " @dev Gets the decimals of the underlying asset of the reserve\n @param self The reserve configuration\n @return The decimals of the asset*"
									},
									"id": 1599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDecimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1599,
												"src": "5357:46:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1583,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2338,
													"src": "5357:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5356:48:7"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1599,
												"src": "5440:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5440:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5439:9:7"
									},
									"scope": 2053,
									"src": "5336:200:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1628,
										"nodeType": "Block",
										"src": "5772:120:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1607,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "5778:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																"typeString": "struct DataTypes.ReserveConfigurationMap memory"
															}
														},
														"id": 1609,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2337,
														"src": "5778:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1610,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1602,
																			"src": "5797:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																				"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																			}
																		},
																		"id": 1611,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2337,
																		"src": "5797:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1612,
																		"name": "ACTIVE_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1353,
																		"src": "5809:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5797:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1614,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5796:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"condition": {
																					"argumentTypes": null,
																					"id": 1617,
																					"name": "active",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1604,
																					"src": "5839:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1619,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5852:1:7",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"id": 1620,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "Conditional",
																				"src": "5839:14:7",
																				"trueExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 1618,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5848:1:7",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"id": 1616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5831:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1615,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "5831:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5831:23:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1622,
																		"name": "IS_ACTIVE_START_BIT_POSITION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1378,
																		"src": "5858:28:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5831:55:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1624,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5830:57:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5796:91:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5778:109:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1627,
												"nodeType": "ExpressionStatement",
												"src": "5778:109:7"
											}
										]
									},
									"documentation": {
										"id": 1600,
										"nodeType": "StructuredDocumentation",
										"src": "5540:136:7",
										"text": " @dev Sets the active state of the reserve\n @param self The reserve configuration\n @param active The active state*"
									},
									"id": 1629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setActive",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1629,
												"src": "5698:45:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1601,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2338,
													"src": "5698:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "active",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1629,
												"src": "5745:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1603,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5745:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5697:60:7"
									},
									"returnParameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5772:0:7"
									},
									"scope": 2053,
									"src": "5679:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1646,
										"nodeType": "Block",
										"src": "6125:49:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1637,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1632,
																		"src": "6139:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
																			"typeString": "struct DataTypes.ReserveConfigurationMap storage pointer"
																		}
																	},
																	"id": 1638,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "data",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2337,
																	"src": "6139:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "~",
																	"prefix": true,
																	"src": "6151:12:7",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 1639,
																		"name": "ACTIVE_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1353,
																		"src": "6152:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6139:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1642,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6138:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1643,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6168:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6138:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1636,
												"id": 1645,
												"nodeType": "Return",
												"src": "6131:38:7"
											}
										]
									},
									"documentation": {
										"id": 1630,
										"nodeType": "StructuredDocumentation",
										"src": "5896:130:7",
										"text": " @dev Gets the active state of the reserve\n @param self The reserve configuration\n @return The active state*"
									},
									"id": 1647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getActive",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1647,
												"src": "6048:46:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1631,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2338,
													"src": "6048:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6047:48:7"
									},
									"returnParameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1647,
												"src": "6119:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1634,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6119:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6118:6:7"
									},
									"scope": 2053,
									"src": "6029:145:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1676,
										"nodeType": "Block",
										"src": "6410:120:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1655,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1650,
															"src": "6416:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																"typeString": "struct DataTypes.ReserveConfigurationMap memory"
															}
														},
														"id": 1657,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2337,
														"src": "6416:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1658,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1650,
																			"src": "6435:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																				"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																			}
																		},
																		"id": 1659,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2337,
																		"src": "6435:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1660,
																		"name": "FROZEN_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1356,
																		"src": "6447:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6435:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1662,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6434:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"condition": {
																					"argumentTypes": null,
																					"id": 1665,
																					"name": "frozen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1652,
																					"src": "6477:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1667,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6490:1:7",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"id": 1668,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "Conditional",
																				"src": "6477:14:7",
																				"trueExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 1666,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6486:1:7",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"id": 1664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6469:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1663,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "6469:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6469:23:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1670,
																		"name": "IS_FROZEN_START_BIT_POSITION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1381,
																		"src": "6496:28:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6469:55:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1672,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6468:57:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6434:91:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6416:109:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1675,
												"nodeType": "ExpressionStatement",
												"src": "6416:109:7"
											}
										]
									},
									"documentation": {
										"id": 1648,
										"nodeType": "StructuredDocumentation",
										"src": "6178:136:7",
										"text": " @dev Sets the frozen state of the reserve\n @param self The reserve configuration\n @param frozen The frozen state*"
									},
									"id": 1677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setFrozen",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1677,
												"src": "6336:45:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1649,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2338,
													"src": "6336:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "frozen",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1677,
												"src": "6383:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1651,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6383:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6335:60:7"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6410:0:7"
									},
									"scope": 2053,
									"src": "6317:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1694,
										"nodeType": "Block",
										"src": "6763:49:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1685,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1680,
																		"src": "6777:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
																			"typeString": "struct DataTypes.ReserveConfigurationMap storage pointer"
																		}
																	},
																	"id": 1686,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "data",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2337,
																	"src": "6777:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "~",
																	"prefix": true,
																	"src": "6789:12:7",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 1687,
																		"name": "FROZEN_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1356,
																		"src": "6790:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6777:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1690,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6776:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1691,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6806:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6776:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1684,
												"id": 1693,
												"nodeType": "Return",
												"src": "6769:38:7"
											}
										]
									},
									"documentation": {
										"id": 1678,
										"nodeType": "StructuredDocumentation",
										"src": "6534:130:7",
										"text": " @dev Gets the frozen state of the reserve\n @param self The reserve configuration\n @return The frozen state*"
									},
									"id": 1695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFrozen",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1695,
												"src": "6686:46:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1679,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2338,
													"src": "6686:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6685:48:7"
									},
									"returnParameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1695,
												"src": "6757:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1682,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6757:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6756:6:7"
									},
									"scope": 2053,
									"src": "6667:145:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1724,
										"nodeType": "Block",
										"src": "7120:132:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1703,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1698,
															"src": "7126:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																"typeString": "struct DataTypes.ReserveConfigurationMap memory"
															}
														},
														"id": 1705,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2337,
														"src": "7126:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1706,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1698,
																			"src": "7145:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																				"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																			}
																		},
																		"id": 1707,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2337,
																		"src": "7145:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1708,
																		"name": "BORROWING_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1359,
																		"src": "7157:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7145:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1710,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7144:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"condition": {
																					"argumentTypes": null,
																					"id": 1713,
																					"name": "enabled",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1700,
																					"src": "7190:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1715,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7204:1:7",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"id": 1716,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "Conditional",
																				"src": "7190:15:7",
																				"trueExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 1714,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7200:1:7",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"id": 1712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7182:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1711,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "7182:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7182:24:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1718,
																		"name": "BORROWING_ENABLED_START_BIT_POSITION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1384,
																		"src": "7210:36:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7182:64:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1720,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7181:66:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7144:103:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7126:121:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1723,
												"nodeType": "ExpressionStatement",
												"src": "7126:121:7"
											}
										]
									},
									"documentation": {
										"id": 1696,
										"nodeType": "StructuredDocumentation",
										"src": "6816:187:7",
										"text": " @dev Enables or disables borrowing on the reserve\n @param self The reserve configuration\n @param enabled True if the borrowing needs to be enabled, false otherwise*"
									},
									"id": 1725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setBorrowingEnabled",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1725,
												"src": "7035:45:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1697,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2338,
													"src": "7035:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "enabled",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1725,
												"src": "7082:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1699,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7082:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7034:61:7"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7120:0:7"
									},
									"scope": 2053,
									"src": "7006:246:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1742,
										"nodeType": "Block",
										"src": "7515:52:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1733,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1728,
																		"src": "7529:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
																			"typeString": "struct DataTypes.ReserveConfigurationMap storage pointer"
																		}
																	},
																	"id": 1734,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "data",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2337,
																	"src": "7529:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "~",
																	"prefix": true,
																	"src": "7541:15:7",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 1735,
																		"name": "BORROWING_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1359,
																		"src": "7542:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7529:27:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1738,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7528:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1739,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7561:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7528:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1732,
												"id": 1741,
												"nodeType": "Return",
												"src": "7521:41:7"
											}
										]
									},
									"documentation": {
										"id": 1726,
										"nodeType": "StructuredDocumentation",
										"src": "7256:136:7",
										"text": " @dev Gets the borrowing state of the reserve\n @param self The reserve configuration\n @return The borrowing state*"
									},
									"id": 1743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBorrowingEnabled",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1743,
												"src": "7424:46:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1727,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2338,
													"src": "7424:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7423:48:7"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1743,
												"src": "7507:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1730,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7507:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7506:6:7"
									},
									"scope": 2053,
									"src": "7395:172:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1772,
										"nodeType": "Block",
										"src": "7911:146:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1751,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "7917:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																"typeString": "struct DataTypes.ReserveConfigurationMap memory"
															}
														},
														"id": 1753,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2337,
														"src": "7917:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1754,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1746,
																			"src": "7936:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																				"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																			}
																		},
																		"id": 1755,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2337,
																		"src": "7936:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1756,
																		"name": "STABLE_BORROWING_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1362,
																		"src": "7948:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7936:33:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1758,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7935:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"condition": {
																					"argumentTypes": null,
																					"id": 1761,
																					"name": "enabled",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1748,
																					"src": "7988:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1763,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8002:1:7",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"id": 1764,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "Conditional",
																				"src": "7988:15:7",
																				"trueExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 1762,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7998:1:7",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"id": 1760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7980:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1759,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "7980:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7980:24:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1766,
																		"name": "STABLE_BORROWING_ENABLED_START_BIT_POSITION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1387,
																		"src": "8008:43:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7980:71:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1768,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7979:73:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7935:117:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7917:135:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1771,
												"nodeType": "ExpressionStatement",
												"src": "7917:135:7"
											}
										]
									},
									"documentation": {
										"id": 1744,
										"nodeType": "StructuredDocumentation",
										"src": "7571:211:7",
										"text": " @dev Enables or disables stable rate borrowing on the reserve\n @param self The reserve configuration\n @param enabled True if the stable rate borrowing needs to be enabled, false otherwise*"
									},
									"id": 1773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setStableRateBorrowingEnabled",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1773,
												"src": "7829:45:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1745,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2338,
													"src": "7829:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "enabled",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1773,
												"src": "7880:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1747,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7880:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7823:73:7"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7911:0:7"
									},
									"scope": 2053,
									"src": "7785:272:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1790,
										"nodeType": "Block",
										"src": "8354:59:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1781,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1776,
																		"src": "8368:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
																			"typeString": "struct DataTypes.ReserveConfigurationMap storage pointer"
																		}
																	},
																	"id": 1782,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "data",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2337,
																	"src": "8368:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "~",
																	"prefix": true,
																	"src": "8380:22:7",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 1783,
																		"name": "STABLE_BORROWING_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1362,
																		"src": "8381:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8368:34:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1786,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8367:36:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1787,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8407:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8367:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1780,
												"id": 1789,
												"nodeType": "Return",
												"src": "8360:48:7"
											}
										]
									},
									"documentation": {
										"id": 1774,
										"nodeType": "StructuredDocumentation",
										"src": "8061:160:7",
										"text": " @dev Gets the stable rate borrowing state of the reserve\n @param self The reserve configuration\n @return The stable rate borrowing state*"
									},
									"id": 1791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStableRateBorrowingEnabled",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1791,
												"src": "8263:46:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1775,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2338,
													"src": "8263:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8262:48:7"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1791,
												"src": "8346:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1778,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8346:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8345:6:7"
									},
									"scope": 2053,
									"src": "8224:189:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1822,
										"nodeType": "Block",
										"src": "8687:214:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1800,
																"name": "reserveFactor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1796,
																"src": "8701:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1801,
																"name": "MAX_VALID_RESERVE_FACTOR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1405,
																"src": "8718:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8701:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1803,
																"name": "Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2308,
																"src": "8744:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Errors_$2308_$",
																	"typeString": "type(library Errors)"
																}
															},
															"id": 1804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "RC_INVALID_RESERVE_FACTOR",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2275,
															"src": "8744:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1799,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8693:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8693:84:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1806,
												"nodeType": "ExpressionStatement",
												"src": "8693:84:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1807,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1794,
															"src": "8784:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																"typeString": "struct DataTypes.ReserveConfigurationMap memory"
															}
														},
														"id": 1809,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2337,
														"src": "8784:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1810,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1794,
																			"src": "8803:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																				"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																			}
																		},
																		"id": 1811,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2337,
																		"src": "8803:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1812,
																		"name": "RESERVE_FACTOR_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1365,
																		"src": "8815:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8803:31:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1814,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8802:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1815,
																		"name": "reserveFactor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1796,
																		"src": "8845:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1816,
																		"name": "RESERVE_FACTOR_START_BIT_POSITION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1390,
																		"src": "8862:33:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8845:50:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1818,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8844:52:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8802:94:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8784:112:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1821,
												"nodeType": "ExpressionStatement",
												"src": "8784:112:7"
											}
										]
									},
									"documentation": {
										"id": 1792,
										"nodeType": "StructuredDocumentation",
										"src": "8417:147:7",
										"text": " @dev Sets the reserve factor of the reserve\n @param self The reserve configuration\n @param reserveFactor The reserve factor*"
									},
									"id": 1823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setReserveFactor",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1823,
												"src": "8593:45:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1793,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2338,
													"src": "8593:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "reserveFactor",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1823,
												"src": "8640:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8640:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8592:70:7"
									},
									"returnParameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8687:0:7"
									},
									"scope": 2053,
									"src": "8567:334:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1840,
										"nodeType": "Block",
										"src": "9162:89:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1831,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1826,
																		"src": "9176:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
																			"typeString": "struct DataTypes.ReserveConfigurationMap storage pointer"
																		}
																	},
																	"id": 1832,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "data",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2337,
																	"src": "9176:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "~",
																	"prefix": true,
																	"src": "9188:20:7",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 1833,
																		"name": "RESERVE_FACTOR_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1365,
																		"src": "9189:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9176:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1836,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9175:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">>",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1837,
														"name": "RESERVE_FACTOR_START_BIT_POSITION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "9213:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9175:71:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1830,
												"id": 1839,
												"nodeType": "Return",
												"src": "9168:78:7"
											}
										]
									},
									"documentation": {
										"id": 1824,
										"nodeType": "StructuredDocumentation",
										"src": "8905:134:7",
										"text": " @dev Gets the reserve factor of the reserve\n @param self The reserve configuration\n @return The reserve factor*"
									},
									"id": 1841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveFactor",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1841,
												"src": "9068:46:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1825,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2338,
													"src": "9068:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9067:48:7"
									},
									"returnParameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1841,
												"src": "9151:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9151:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9150:9:7"
									},
									"scope": 2053,
									"src": "9042:209:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1890,
										"nodeType": "Block",
										"src": "9627:229:7",
										"statements": [
											{
												"assignments": [
													1856
												],
												"declarations": [
													{
														"constant": false,
														"id": 1856,
														"mutability": "mutable",
														"name": "dataLocal",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1890,
														"src": "9633:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1855,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9633:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1859,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1857,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1844,
														"src": "9653:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
															"typeString": "struct DataTypes.ReserveConfigurationMap storage pointer"
														}
													},
													"id": 1858,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2337,
													"src": "9653:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9633:29:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1860,
																			"name": "dataLocal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1856,
																			"src": "9685:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "9697:12:7",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 1861,
																				"name": "ACTIVE_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1353,
																				"src": "9698:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9685:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1864,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9684:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9714:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9684:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1867,
																			"name": "dataLocal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1856,
																			"src": "9724:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "9736:12:7",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 1868,
																				"name": "FROZEN_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1356,
																				"src": "9737:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9724:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1871,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9723:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9753:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9723:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1874,
																			"name": "dataLocal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1856,
																			"src": "9763:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1876,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "9775:15:7",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 1875,
																				"name": "BORROWING_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1359,
																				"src": "9776:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9763:27:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1878,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9762:29:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9795:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9762:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1881,
																			"name": "dataLocal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1856,
																			"src": "9805:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "9817:22:7",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 1882,
																				"name": "STABLE_BORROWING_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1362,
																				"src": "9818:21:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9805:34:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1885,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9804:36:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9844:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9804:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1888,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9676:175:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_bool_$_t_bool_$",
														"typeString": "tuple(bool,bool,bool,bool)"
													}
												},
												"functionReturnParameters": 1854,
												"id": 1889,
												"nodeType": "Return",
												"src": "9669:182:7"
											}
										]
									},
									"documentation": {
										"id": 1842,
										"nodeType": "StructuredDocumentation",
										"src": "9255:212:7",
										"text": " @dev Gets the configuration flags of the reserve\n @param self The reserve configuration\n @return The state flags representing active, frozen, borrowing enabled, stableRateBorrowing enabled*"
									},
									"id": 1891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFlags",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1891,
												"src": "9488:46:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1843,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2338,
													"src": "9488:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9487:48:7"
									},
									"returnParameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1891,
												"src": "9578:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1846,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9578:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1891,
												"src": "9590:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1848,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9590:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1891,
												"src": "9602:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1850,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9602:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1891,
												"src": "9614:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1852,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9614:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9570:54:7"
									},
									"scope": 2053,
									"src": "9470:386:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1946,
										"nodeType": "Block",
										"src": "10270:421:7",
										"statements": [
											{
												"assignments": [
													1908
												],
												"declarations": [
													{
														"constant": false,
														"id": 1908,
														"mutability": "mutable",
														"name": "dataLocal",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1946,
														"src": "10276:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1907,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10276:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1911,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1909,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "10296:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
															"typeString": "struct DataTypes.ReserveConfigurationMap storage pointer"
														}
													},
													"id": 1910,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2337,
													"src": "10296:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10276:29:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1912,
																"name": "dataLocal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "10327:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "~",
																"prefix": true,
																"src": "10339:9:7",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 1913,
																	"name": "LTV_MASK",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1341,
																	"src": "10340:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10327:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1916,
																			"name": "dataLocal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "10357:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "10369:27:7",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 1917,
																				"name": "LIQUIDATION_THRESHOLD_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1344,
																				"src": "10370:26:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10357:39:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1920,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10356:41:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1921,
																"name": "LIQUIDATION_THRESHOLD_START_BIT_POSITION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1369,
																"src": "10401:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10356:85:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1923,
																			"name": "dataLocal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "10450:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "10462:23:7",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 1924,
																				"name": "LIQUIDATION_BONUS_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1347,
																				"src": "10463:22:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10450:35:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1927,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10449:37:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1928,
																"name": "LIQUIDATION_BONUS_START_BIT_POSITION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1372,
																"src": "10490:36:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10449:77:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1930,
																			"name": "dataLocal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "10535:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "10547:14:7",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 1931,
																				"name": "DECIMALS_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "10548:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10535:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1934,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10534:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1935,
																"name": "RESERVE_DECIMALS_START_BIT_POSITION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1375,
																"src": "10566:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10534:67:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1937,
																			"name": "dataLocal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "10610:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "10622:20:7",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 1938,
																				"name": "RESERVE_FACTOR_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1365,
																				"src": "10623:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10610:32:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1941,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10609:34:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1942,
																"name": "RESERVE_FACTOR_START_BIT_POSITION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1390,
																"src": "10647:33:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10609:71:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1944,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10319:367:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1906,
												"id": 1945,
												"nodeType": "Return",
												"src": "10312:374:7"
											}
										]
									},
									"documentation": {
										"id": 1892,
										"nodeType": "StructuredDocumentation",
										"src": "9860:222:7",
										"text": " @dev Gets the configuration paramters of the reserve\n @param self The reserve configuration\n @return The state params representing ltv, liquidation threshold, liquidation bonus, the reserve decimals*"
									},
									"id": 1947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getParams",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1947,
												"src": "10104:46:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1893,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2338,
													"src": "10104:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10103:48:7"
									},
									"returnParameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1947,
												"src": "10194:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10194:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1947,
												"src": "10209:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10209:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1947,
												"src": "10224:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10224:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1947,
												"src": "10239:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10239:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1947,
												"src": "10254:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10254:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10186:81:7"
									},
									"scope": 2053,
									"src": "10085:606:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2002,
										"nodeType": "Block",
										"src": "11131:385:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1963,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1950,
																	"src": "11152:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																		"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																	}
																},
																"id": 1964,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "data",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2337,
																"src": "11152:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "~",
																"prefix": true,
																"src": "11164:9:7",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 1965,
																	"name": "LTV_MASK",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1341,
																	"src": "11165:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11152:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1968,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1950,
																				"src": "11182:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																					"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																				}
																			},
																			"id": 1969,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "data",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2337,
																			"src": "11182:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1971,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "11194:27:7",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 1970,
																				"name": "LIQUIDATION_THRESHOLD_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1344,
																				"src": "11195:26:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11182:39:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1973,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11181:41:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1974,
																"name": "LIQUIDATION_THRESHOLD_START_BIT_POSITION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1369,
																"src": "11226:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11181:85:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1976,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1950,
																				"src": "11275:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																					"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																				}
																			},
																			"id": 1977,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "data",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2337,
																			"src": "11275:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "11287:23:7",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 1978,
																				"name": "LIQUIDATION_BONUS_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1347,
																				"src": "11288:22:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11275:35:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1981,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11274:37:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1982,
																"name": "LIQUIDATION_BONUS_START_BIT_POSITION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1372,
																"src": "11315:36:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11274:77:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1984,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1950,
																				"src": "11360:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																					"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																				}
																			},
																			"id": 1985,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "data",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2337,
																			"src": "11360:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "11372:14:7",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 1986,
																				"name": "DECIMALS_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "11373:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11360:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1989,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11359:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1990,
																"name": "RESERVE_DECIMALS_START_BIT_POSITION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1375,
																"src": "11391:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11359:67:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1992,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1950,
																				"src": "11435:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																					"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																				}
																			},
																			"id": 1993,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "data",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2337,
																			"src": "11435:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "11447:20:7",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 1994,
																				"name": "RESERVE_FACTOR_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1365,
																				"src": "11448:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11435:32:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1997,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11434:34:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1998,
																"name": "RESERVE_FACTOR_START_BIT_POSITION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1390,
																"src": "11472:33:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11434:71:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2000,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "11144:367:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1962,
												"id": 2001,
												"nodeType": "Return",
												"src": "11137:374:7"
											}
										]
									},
									"documentation": {
										"id": 1948,
										"nodeType": "StructuredDocumentation",
										"src": "10695:243:7",
										"text": " @dev Gets the configuration paramters of the reserve from a memory object\n @param self The reserve configuration\n @return The state params representing ltv, liquidation threshold, liquidation bonus, the reserve decimals*"
									},
									"id": 2003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getParamsMemory",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2003,
												"src": "10966:45:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 1949,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2338,
													"src": "10966:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10965:47:7"
									},
									"returnParameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2003,
												"src": "11055:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11055:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2003,
												"src": "11070:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11070:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2003,
												"src": "11085:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11085:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2003,
												"src": "11100:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11100:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2003,
												"src": "11115:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11115:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11047:81:7"
									},
									"scope": 2053,
									"src": "10941:575:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2051,
										"nodeType": "Block",
										"src": "11918:193:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2017,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2006,
																				"src": "11940:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																					"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																				}
																			},
																			"id": 2018,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "data",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2337,
																			"src": "11940:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "11952:12:7",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 2019,
																				"name": "ACTIVE_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1353,
																				"src": "11953:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11940:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2022,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11939:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11969:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11939:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2025,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2006,
																				"src": "11979:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																					"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																				}
																			},
																			"id": 2026,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "data",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2337,
																			"src": "11979:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2028,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "11991:12:7",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 2027,
																				"name": "FROZEN_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1356,
																				"src": "11992:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11979:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2030,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11978:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12008:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11978:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2033,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2006,
																				"src": "12018:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																					"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																				}
																			},
																			"id": 2034,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "data",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2337,
																			"src": "12018:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "12030:15:7",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 2035,
																				"name": "BORROWING_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1359,
																				"src": "12031:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12018:27:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2038,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12017:29:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2039,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12050:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12017:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2041,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2006,
																				"src": "12060:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
																					"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																				}
																			},
																			"id": 2042,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "data",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2337,
																			"src": "12060:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "12072:22:7",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 2043,
																				"name": "STABLE_BORROWING_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1362,
																				"src": "12073:21:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12060:34:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2046,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12059:36:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12099:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12059:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2049,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "11931:175:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_bool_$_t_bool_$",
														"typeString": "tuple(bool,bool,bool,bool)"
													}
												},
												"functionReturnParameters": 2016,
												"id": 2050,
												"nodeType": "Return",
												"src": "11924:182:7"
											}
										]
									},
									"documentation": {
										"id": 2004,
										"nodeType": "StructuredDocumentation",
										"src": "11520:233:7",
										"text": " @dev Gets the configuration flags of the reserve from a memory object\n @param self The reserve configuration\n @return The state flags representing active, frozen, borrowing enabled, stableRateBorrowing enabled*"
									},
									"id": 2052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFlagsMemory",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2052,
												"src": "11780:45:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"contractScope": null,
													"id": 2005,
													"name": "DataTypes.ReserveConfigurationMap",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2338,
													"src": "11780:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11779:47:7"
									},
									"returnParameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2052,
												"src": "11869:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2008,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11869:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2052,
												"src": "11881:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2010,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11881:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2052,
												"src": "11893:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2012,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11893:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2052,
												"src": "11905:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2014,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11905:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11861:54:7"
									},
									"scope": 2053,
									"src": "11756:355:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2054,
							"src": "297:11816:7"
						}
					],
					"src": "37:12077:7"
				},
				"id": 7
			},
			"contracts/protocol/libraries/helpers/Errors.sol": {
				"ast": {
					"absolutePath": "contracts/protocol/libraries/helpers/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							2308
						]
					},
					"id": 2309,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2055,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2056,
								"nodeType": "StructuredDocumentation",
								"src": "62:597:8",
								"text": " @title Errors library\n @author Aave\n @notice Defines the error messages emitted by the different contracts of the Aave protocol\n @dev Error messages prefix glossary:\n  - VL = ValidationLogic\n  - MATH = Math libraries\n  - CT = Common errors between tokens (AToken, VariableDebtToken and StableDebtToken)\n  - AT = AToken\n  - SDT = StableDebtToken\n  - VDT = VariableDebtToken\n  - LP = LendingPool\n  - LPAPR = LendingPoolAddressesProviderRegistry\n  - LPC = LendingPoolConfiguration\n  - RL = ReserveLogic\n  - LPCM = LendingPoolCollateralManager\n  - P = Pausable"
							},
							"fullyImplemented": true,
							"id": 2308,
							"linearizedBaseContracts": [
								2308
							],
							"name": "Errors",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "ac753236",
									"id": 2059,
									"mutability": "constant",
									"name": "CALLER_NOT_POOL_ADMIN",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "697:51:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2057,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "697:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3333",
										"id": 2058,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "744:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_ed93c67e1a9b7f09d3b44ee593360f0073603a8e45415e2c3c69afc994a1103d",
											"typeString": "literal_string \"33\""
										},
										"value": "33"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e2c16d69",
									"id": 2062,
									"mutability": "constant",
									"name": "BORROW_ALLOWANCE_NOT_ENOUGH",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "791:57:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2060,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "791:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3539",
										"id": 2061,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "844:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_dec29173c70f4e70086d64e09cb72b415f3d6a1843817cff62483903f0e12f62",
											"typeString": "literal_string \"59\""
										},
										"value": "59"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "871938a8",
									"id": 2065,
									"mutability": "constant",
									"name": "VL_INVALID_AMOUNT",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "937:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2063,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "937:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 2064,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "980:3:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
											"typeString": "literal_string \"1\""
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "7865a627",
									"id": 2068,
									"mutability": "constant",
									"name": "VL_NO_ACTIVE_RESERVE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "1022:49:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2066,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1022:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "32",
										"id": 2067,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1068:3:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_ad7c5bef027816a800da1736444fb58a807ef4c9603b7848673f7e3a68eb14a5",
											"typeString": "literal_string \"2\""
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d7510e0c",
									"id": 2071,
									"mutability": "constant",
									"name": "VL_RESERVE_FROZEN",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "1114:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2069,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1114:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "33",
										"id": 2070,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1157:3:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2a80e1ef1d7842f27f2e6be0972bb708b9a135c38860dbe73c27c3486c34f4de",
											"typeString": "literal_string \"3\""
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "179476c5",
									"id": 2074,
									"mutability": "constant",
									"name": "VL_CURRENT_AVAILABLE_LIQUIDITY_NOT_ENOUGH",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "1226:70:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2072,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1226:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "34",
										"id": 2073,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1293:3:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_13600b294191fc92924bb3ce4b969c1e7e2bab8f4c93c3fc6d0a51733df3c060",
											"typeString": "literal_string \"4\""
										},
										"value": "4"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a8440241",
									"id": 2077,
									"mutability": "constant",
									"name": "VL_NOT_ENOUGH_AVAILABLE_USER_BALANCE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "1341:65:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2075,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1341:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "35",
										"id": 2076,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1403:3:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_ceebf77a833b30520287ddd9478ff51abbdffa30aa90a8d655dba0e8a79ce0c1",
											"typeString": "literal_string \"5\""
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f3d9cc11",
									"id": 2080,
									"mutability": "constant",
									"name": "VL_TRANSFER_NOT_ALLOWED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "1468:52:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2078,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1468:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "36",
										"id": 2079,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1517:3:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_e455bf8ea6e7463a1046a0b52804526e119b4bf5136279614e0b1e8e296a4e2d",
											"typeString": "literal_string \"6\""
										},
										"value": "6"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "36565ab1",
									"id": 2083,
									"mutability": "constant",
									"name": "VL_BORROWING_NOT_ENABLED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "1557:53:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2081,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1557:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "37",
										"id": 2082,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1607:3:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_52f1a9b320cab38e5da8a8f97989383aab0a49165fc91c737310e4f7e9821021",
											"typeString": "literal_string \"7\""
										},
										"value": "7"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "3b5d25aa",
									"id": 2086,
									"mutability": "constant",
									"name": "VL_INVALID_INTEREST_RATE_MODE_SELECTED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "1644:67:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2084,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1644:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "38",
										"id": 2085,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1708:3:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_e4b1702d9298fee62dfeccc57d322a463ad55ca201256d01f62b45b2e1c21c10",
											"typeString": "literal_string \"8\""
										},
										"value": "8"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "708b8dd3",
									"id": 2089,
									"mutability": "constant",
									"name": "VL_COLLATERAL_BALANCE_IS_0",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "1756:55:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2087,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1756:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "39",
										"id": 2088,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1808:3:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_d2f8f61201b2b11a78d6e866abc9c3db2ae8631fa656bfe5cb53668255367afb",
											"typeString": "literal_string \"9\""
										},
										"value": "9"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1ec68b1d",
									"id": 2092,
									"mutability": "constant",
									"name": "VL_HEALTH_FACTOR_LOWER_THAN_LIQUIDATION_THRESHOLD",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "1848:79:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2090,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1848:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3130",
										"id": 2091,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1923:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_1a192fabce13988b84994d4296e6cdc418d55e2f1d7f942188d4040b94fc57ac",
											"typeString": "literal_string \"10\""
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2ace698a",
									"id": 2095,
									"mutability": "constant",
									"name": "VL_COLLATERAL_CANNOT_COVER_NEW_BORROW",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "1991:67:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2093,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1991:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3131",
										"id": 2094,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2054:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_7880aec93413f117ef14bd4e6d130875ab2c7d7d55a064fac3c2f7bd51516380",
											"typeString": "literal_string \"11\""
										},
										"value": "11"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4927c63a",
									"id": 2098,
									"mutability": "constant",
									"name": "VL_STABLE_BORROWING_NOT_ENABLED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "2120:61:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2096,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2120:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3132",
										"id": 2097,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2177:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_7f8b6b088b6d74c2852fc86c796dca07b44eed6fb3daf5e6b59f7c364db14528",
											"typeString": "literal_string \"12\""
										},
										"value": "12"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a39ed4ff",
									"id": 2101,
									"mutability": "constant",
									"name": "VL_COLLATERAL_SAME_AS_BORROWING_CURRENCY",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "2217:70:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2099,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2217:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3133",
										"id": 2100,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2283:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_789bcdf275fa270780a52ae3b79bb1ce0fda7e0aaad87b57b74bb99ac290714a",
											"typeString": "literal_string \"13\""
										},
										"value": "13"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "3aa786a8",
									"id": 2104,
									"mutability": "constant",
									"name": "VL_AMOUNT_BIGGER_THAN_MAX_LOAN_SIZE_STABLE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "2358:72:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2102,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2358:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3134",
										"id": 2103,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2426:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_5c4c6aa067b6f8e6cb38e6ab843832a94d1712d661a04d73c517d6a1931a9e5d",
											"typeString": "literal_string \"14\""
										},
										"value": "14"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "91a9fb18",
									"id": 2107,
									"mutability": "constant",
									"name": "VL_NO_DEBT_OF_SELECTED_TYPE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "2513:57:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2105,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2513:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3135",
										"id": 2106,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2566:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_1d3be50b2bb17407dd170f1d5da128d1def30c6b1598d6a629e79b4775265526",
											"typeString": "literal_string \"15\""
										},
										"value": "15"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "daf23547",
									"id": 2110,
									"mutability": "constant",
									"name": "VL_NO_EXPLICIT_AMOUNT_TO_REPAY_ON_BEHALF",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "2687:70:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2108,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2687:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3136",
										"id": 2109,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2753:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_277ab82e5a4641341820a4a2933a62c1de997e42e92548657ae21b3728d580fe",
											"typeString": "literal_string \"16\""
										},
										"value": "16"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6422b257",
									"id": 2113,
									"mutability": "constant",
									"name": "VL_NO_STABLE_RATE_LOAN_IN_RESERVE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "2834:63:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2111,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2834:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3137",
										"id": 2112,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2893:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_8e8fab5f003314da8d1873ea7720e8d9f47650136d916064d1edb8a11d682624",
											"typeString": "literal_string \"17\""
										},
										"value": "17"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6ab5e615",
									"id": 2116,
									"mutability": "constant",
									"name": "VL_NO_VARIABLE_RATE_LOAN_IN_RESERVE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "2972:65:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2114,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2972:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 2115,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3033:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_8fef2229291b68be841adf029e58b87f39ba144b2d3b0af1760243d0a9bc6a1c",
											"typeString": "literal_string \"18\""
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "35a9d21d",
									"id": 2119,
									"mutability": "constant",
									"name": "VL_UNDERLYING_BALANCE_NOT_GREATER_THAN_0",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "3114:70:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2117,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3114:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3139",
										"id": 2118,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3180:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_939eb54753ed0cc7e2272bfb34cbe098308c93936ed54d79078f76ade0b2e789",
											"typeString": "literal_string \"19\""
										},
										"value": "19"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e29425dc",
									"id": 2122,
									"mutability": "constant",
									"name": "VL_DEPOSIT_ALREADY_IN_USE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "3243:55:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2120,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3243:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3230",
										"id": 2121,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3294:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_731dc163f73d31d8c68f9917ce4ff967753939f70432973c04fd2c2a48148607",
											"typeString": "literal_string \"20\""
										},
										"value": "20"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "44dc4f70",
									"id": 2125,
									"mutability": "constant",
									"name": "LP_NOT_ENOUGH_STABLE_BORROW_BALANCE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "3356:65:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2123,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3356:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3231",
										"id": 2124,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3417:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_f4c2b5de886427473655d4c904c743576dc2d53249b7535d96c06cc97ae7216b",
											"typeString": "literal_string \"21\""
										},
										"value": "21"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b89652cd",
									"id": 2128,
									"mutability": "constant",
									"name": "LP_INTEREST_RATE_REBALANCE_CONDITIONS_NOT_MET",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "3487:75:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2126,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3487:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3232",
										"id": 2127,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3558:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_d4d1a59767271eefdc7830a772b9732a11d503531d972ab8c981a6b1c0e666e5",
											"typeString": "literal_string \"22\""
										},
										"value": "22"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4a529f91",
									"id": 2131,
									"mutability": "constant",
									"name": "LP_LIQUIDATION_CALL_FAILED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "3619:56:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2129,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3619:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3233",
										"id": 2130,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3671:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_1572b593c53d839d80004aa4b8c51211864104f06ace9e22be9c4365b50655ea",
											"typeString": "literal_string \"23\""
										},
										"value": "23"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "22a6f08e",
									"id": 2134,
									"mutability": "constant",
									"name": "LP_NOT_ENOUGH_LIQUIDITY_TO_BORROW",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "3708:63:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2132,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3708:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3234",
										"id": 2133,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3767:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_6585423cb6456b1d4957f6454d2f004f0c4f58d53a00082412d5c2ef4b1b31fd",
											"typeString": "literal_string \"24\""
										},
										"value": "24"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "390f34ba",
									"id": 2137,
									"mutability": "constant",
									"name": "LP_REQUESTED_AMOUNT_TOO_SMALL",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "3830:59:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2135,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3830:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3235",
										"id": 2136,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3885:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_81e080ffc23e8b8d44dd829bc823229e92b893eb1d8f624419d3f5682eb97fc3",
											"typeString": "literal_string \"25\""
										},
										"value": "25"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "0b8fd588",
									"id": 2140,
									"mutability": "constant",
									"name": "LP_INCONSISTENT_PROTOCOL_ACTUAL_BALANCE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "3949:69:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2138,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3949:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3236",
										"id": 2139,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4014:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_9cce9eb03c9f29c6481fca9f0f942b15bef0bbbc47fda0ddb44df157019835d9",
											"typeString": "literal_string \"26\""
										},
										"value": "26"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b36a2cf3",
									"id": 2143,
									"mutability": "constant",
									"name": "LP_CALLER_NOT_LENDING_POOL_CONFIGURATOR",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "4078:69:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2141,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4078:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3237",
										"id": 2142,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4143:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_58a280f74f57bf051c40f060139dc747e015be52f68c57e2c4ab2e4bd4146f43",
											"typeString": "literal_string \"27\""
										},
										"value": "27"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2b34c349",
									"id": 2146,
									"mutability": "constant",
									"name": "LP_INCONSISTENT_FLASHLOAN_PARAMS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "4220:62:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2144,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4220:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3238",
										"id": 2145,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4278:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_9560168699514dcd528543d614e81b4f36adf182dc624d2f1eb91df8addd987e",
											"typeString": "literal_string \"28\""
										},
										"value": "28"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6ba4271f",
									"id": 2149,
									"mutability": "constant",
									"name": "CT_CALLER_MUST_BE_LENDING_POOL",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "4286:60:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2147,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4286:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3239",
										"id": 2148,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4342:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_7749cc8014201da2069c21d93ba99c584b6f62d393fde534ed47eac227e31561",
											"typeString": "literal_string \"29\""
										},
										"value": "29"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "06f355ad",
									"id": 2152,
									"mutability": "constant",
									"name": "CT_CANNOT_GIVE_ALLOWANCE_TO_HIMSELF",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "4406:65:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2150,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4406:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3330",
										"id": 2151,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4467:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_bbf5a24880b10a5f9f601c4058e4771ddea17e7d765ceb3c903814e1c0d621e0",
											"typeString": "literal_string \"30\""
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a2fbc8ad",
									"id": 2155,
									"mutability": "constant",
									"name": "CT_TRANSFER_AMOUNT_NOT_GT_0",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "4518:57:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2153,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4518:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3331",
										"id": 2154,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4571:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_933c48a61c3bad621ebc5d57117f9e773fefae4468bceaf9d3198a3bf7c1d678",
											"typeString": "literal_string \"31\""
										},
										"value": "31"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "fe75fd26",
									"id": 2158,
									"mutability": "constant",
									"name": "RL_RESERVE_ALREADY_INITIALIZED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "4633:60:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2156,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4633:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3332",
										"id": 2157,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4689:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_8b953cbb84328003779eb1ef176ef07f7dd0ae3d4a8e408de53d15a36466c86e",
											"typeString": "literal_string \"32\""
										},
										"value": "32"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "65344799",
									"id": 2161,
									"mutability": "constant",
									"name": "LPC_RESERVE_LIQUIDITY_NOT_0",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "4739:57:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2159,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4739:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3334",
										"id": 2160,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4792:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_77c32b454bb61eb9df9e3848d0ded3e59753acda90ae58befe564733aec82e4c",
											"typeString": "literal_string \"34\""
										},
										"value": "34"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f0473259",
									"id": 2164,
									"mutability": "constant",
									"name": "LPC_INVALID_ATOKEN_POOL_ADDRESS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "4848:61:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2162,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4848:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3335",
										"id": 2163,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4905:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_5ca7b081b8c6c57b0469c340dba43ec8d33c0b898c69e55c4f74ff7ed9ac71ea",
											"typeString": "literal_string \"35\""
										},
										"value": "35"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e0d7dfd7",
									"id": 2167,
									"mutability": "constant",
									"name": "LPC_INVALID_STABLE_DEBT_TOKEN_POOL_ADDRESS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "4961:72:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2165,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4961:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3336",
										"id": 2166,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5029:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_3b4066bd7b7960752225af105d3beafb5c47a26c5aae7e6798a437b7c0bb33e6",
											"typeString": "literal_string \"36\""
										},
										"value": "36"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c09e2618",
									"id": 2170,
									"mutability": "constant",
									"name": "LPC_INVALID_VARIABLE_DEBT_TOKEN_POOL_ADDRESS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "5085:74:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5085:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3337",
										"id": 2169,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5155:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_5bc0457d8881b800fd1bc0d6df907345b3bf287e43a5790ded3d08dbacf9c03a",
											"typeString": "literal_string \"37\""
										},
										"value": "37"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "41b40ba5",
									"id": 2173,
									"mutability": "constant",
									"name": "LPC_INVALID_STABLE_DEBT_TOKEN_UNDERLYING_ADDRESS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "5211:78:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2171,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5211:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3338",
										"id": 2172,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5285:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_d67d834462ca31eaef1f30157e31659f60355143b7441e6fc7d9eae1fa79f3f8",
											"typeString": "literal_string \"38\""
										},
										"value": "38"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "3872b0ad",
									"id": 2176,
									"mutability": "constant",
									"name": "LPC_INVALID_VARIABLE_DEBT_TOKEN_UNDERLYING_ADDRESS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "5341:80:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2174,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5341:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3339",
										"id": 2175,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5417:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_318a541463286d7584b45438601196fbc1a55628e303a0613eb6d46e60640c95",
											"typeString": "literal_string \"39\""
										},
										"value": "39"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5a9786d4",
									"id": 2179,
									"mutability": "constant",
									"name": "LPC_INVALID_ADDRESSES_PROVIDER_ID",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "5473:63:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2177,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5473:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3430",
										"id": 2178,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5532:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_880de8116b3dfac28e9ff528a9fef1d1e0a51449c1addce011ffec1f302992b6",
											"typeString": "literal_string \"40\""
										},
										"value": "40"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "47d25300",
									"id": 2182,
									"mutability": "constant",
									"name": "LPC_INVALID_CONFIGURATION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "5588:55:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2180,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5588:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3735",
										"id": 2181,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5639:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_6dbb33232cde86c8a04f90a8bed9fc1c5ef520188a14538d96eb100d69bc2a94",
											"typeString": "literal_string \"75\""
										},
										"value": "75"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d3e370ee",
									"id": 2185,
									"mutability": "constant",
									"name": "LPC_CALLER_NOT_EMERGENCY_ADMIN",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "5692:60:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2183,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5692:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3736",
										"id": 2184,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5748:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_f1ae7da53f98170be52cc9330214a82f7ba06ee306297b4e1fb86fb21c611aa6",
											"typeString": "literal_string \"76\""
										},
										"value": "76"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d6f681b6",
									"id": 2188,
									"mutability": "constant",
									"name": "LPAPR_PROVIDER_NOT_REGISTERED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "5800:59:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2186,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5800:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3431",
										"id": 2187,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5855:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_6bcaf047ba4c8ac400fca43393035242dd1aabda2d6068a0c51242b97224de8d",
											"typeString": "literal_string \"41\""
										},
										"value": "41"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "fb681def",
									"id": 2191,
									"mutability": "constant",
									"name": "LPCM_HEALTH_FACTOR_NOT_BELOW_THRESHOLD",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "5895:68:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2189,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5895:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3432",
										"id": 2190,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5959:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_ccb1f717aa77602faf03a594761a36956b1c4cf44c6b336d1db57da799b331b8",
											"typeString": "literal_string \"42\""
										},
										"value": "42"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "407374a4",
									"id": 2194,
									"mutability": "constant",
									"name": "LPCM_COLLATERAL_CANNOT_BE_LIQUIDATED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "6013:66:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2192,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6013:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3433",
										"id": 2193,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6075:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_4dfb3440902001bce9b7ebf7be7d95fe9e2056bd5ce309ceb83b32f4e00e21ed",
											"typeString": "literal_string \"43\""
										},
										"value": "43"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "71a629da",
									"id": 2197,
									"mutability": "constant",
									"name": "LPCM_SPECIFIED_CURRENCY_NOT_BORROWED_BY_USER",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "6131:74:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2195,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6131:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3434",
										"id": 2196,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6201:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2e9b7c94e032d8b3b8b30bd825717a5ac74958b53e7c37a892a4fd7dc56e4975",
											"typeString": "literal_string \"44\""
										},
										"value": "44"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "cc5fc44c",
									"id": 2200,
									"mutability": "constant",
									"name": "LPCM_NOT_ENOUGH_LIQUIDITY_TO_LIQUIDATE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "6257:68:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2198,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6257:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3435",
										"id": 2199,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6321:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cc1431a2586c1e11fb75c87e5ee58e4204126a9fdde07075c91770f50276cbb0",
											"typeString": "literal_string \"45\""
										},
										"value": "45"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1ea7c604",
									"id": 2203,
									"mutability": "constant",
									"name": "LPCM_NO_ERRORS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "6386:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2201,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6386:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3436",
										"id": 2202,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6426:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c47ece0ffae697632ce145a7086cbcf260f7fa60876ff2606761ea2b7581ee76",
											"typeString": "literal_string \"46\""
										},
										"value": "46"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e7bf91b3",
									"id": 2206,
									"mutability": "constant",
									"name": "LP_INVALID_FLASHLOAN_MODE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "6449:55:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2204,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6449:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3437",
										"id": 2205,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6500:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_eb09910a03c892999c305d4a86a46fa82693119d981eef22c8d043b31f9e8a31",
											"typeString": "literal_string \"47\""
										},
										"value": "47"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "029d2344",
									"id": 2209,
									"mutability": "constant",
									"name": "MATH_MULTIPLICATION_OVERFLOW",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "6542:58:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2207,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6542:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3438",
										"id": 2208,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6596:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_6304e47846f882085b0f4b1a184252ae95ffe5e2a02daf39c014f492dcb1441c",
											"typeString": "literal_string \"48\""
										},
										"value": "48"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "0f5ee482",
									"id": 2212,
									"mutability": "constant",
									"name": "MATH_ADDITION_OVERFLOW",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "6604:52:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2210,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6604:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3439",
										"id": 2211,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6652:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_59c0d2b7af0a8e6d3d8e710a078764bd67b7223777026c424cdb4f599824bb79",
											"typeString": "literal_string \"49\""
										},
										"value": "49"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4349e3d8",
									"id": 2215,
									"mutability": "constant",
									"name": "MATH_DIVISION_BY_ZERO",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "6660:51:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2213,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6660:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3530",
										"id": 2214,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6707:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_215d56ac8bbcf4ec574772ebea743ba30ac9d1c5e1b1ff899e5de1045f5df803",
											"typeString": "literal_string \"50\""
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4fe4f1ab",
									"id": 2218,
									"mutability": "constant",
									"name": "RL_LIQUIDITY_INDEX_OVERFLOW",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "6715:57:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2216,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6715:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3531",
										"id": 2217,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6768:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_f928ede1c39c5595ff22fe845412ee05a93eeaa584f8ef0c46b5eeb14cb99ec8",
											"typeString": "literal_string \"51\""
										},
										"value": "51"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "44942004",
									"id": 2221,
									"mutability": "constant",
									"name": "RL_VARIABLE_BORROW_INDEX_OVERFLOW",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "6814:63:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2219,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6814:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3532",
										"id": 2220,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6873:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cd41b8bf8f20f7ad95d96d948a315af225b219053fc98a80aee13063b692b681",
											"typeString": "literal_string \"52\""
										},
										"value": "52"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f11c6720",
									"id": 2224,
									"mutability": "constant",
									"name": "RL_LIQUIDITY_RATE_OVERFLOW",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "6925:56:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2222,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6925:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3533",
										"id": 2223,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6977:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_bbd48b257be1b8216d144ef9be5734f8d11697959c9e0f7768bec89db74a63a3",
											"typeString": "literal_string \"53\""
										},
										"value": "53"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2ea347b0",
									"id": 2227,
									"mutability": "constant",
									"name": "RL_VARIABLE_BORROW_RATE_OVERFLOW",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "7022:62:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2225,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7022:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3534",
										"id": 2226,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7080:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_006b3e710f3089a74ecb6b0f5948e5ff07a3db6ba4da475d2be17624ba96b95b",
											"typeString": "literal_string \"54\""
										},
										"value": "54"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6d422aa1",
									"id": 2230,
									"mutability": "constant",
									"name": "RL_STABLE_BORROW_RATE_OVERFLOW",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "7131:60:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2228,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7131:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3535",
										"id": 2229,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7187:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_6590fa52fa76f967656340b874bc9ca09733c2fddea9886210ebcbbceee04b35",
											"typeString": "literal_string \"55\""
										},
										"value": "55"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1291a38b",
									"id": 2233,
									"mutability": "constant",
									"name": "CT_INVALID_MINT_AMOUNT",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "7236:52:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2231,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7236:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3536",
										"id": 2232,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7284:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_32da71dbd53bc029835bc5ecdd3e688035cc92bb61b1811d1685e67ba974e19f",
											"typeString": "literal_string \"56\""
										},
										"value": "56"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e6632748",
									"id": 2236,
									"mutability": "constant",
									"name": "LP_FAILED_REPAY_WITH_COLLATERAL",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "7317:61:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2234,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7317:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3537",
										"id": 2235,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7374:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_e921da22f871c25c63f06c1365385cbb26397f64f79055cdbab32187a9377d16",
											"typeString": "literal_string \"57\""
										},
										"value": "57"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2b9c57f6",
									"id": 2239,
									"mutability": "constant",
									"name": "CT_INVALID_BURN_AMOUNT",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "7382:52:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2237,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7382:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3538",
										"id": 2238,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7430:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_59d26ca75eb04b47ab1bca5d789d02e4d0cf9ff8cb49c9041caeeeab4eccafbf",
											"typeString": "literal_string \"58\""
										},
										"value": "58"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "55bab12c",
									"id": 2242,
									"mutability": "constant",
									"name": "LP_FAILED_COLLATERAL_SWAP",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "7463:55:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2240,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7463:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3630",
										"id": 2241,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7514:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_7446b42d7fe1689ec32fc1ca65129d9f21f1979742315d34500a6886f6986bea",
											"typeString": "literal_string \"60\""
										},
										"value": "60"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c2d628df",
									"id": 2245,
									"mutability": "constant",
									"name": "LP_INVALID_EQUAL_ASSETS_TO_SWAP",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "7522:61:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2243,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7522:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3631",
										"id": 2244,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7579:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_5ae62207e7adee0b793bf869601474e77943fa4d9e3e0420f34d788e59bc19bd",
											"typeString": "literal_string \"61\""
										},
										"value": "61"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f902735d",
									"id": 2248,
									"mutability": "constant",
									"name": "LP_REENTRANCY_NOT_ALLOWED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "7587:55:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2246,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7587:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3632",
										"id": 2247,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7638:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_d9670a00d025e59e1bd58d53874bea4ab34fea782716e2c168e89a3c8452d3bb",
											"typeString": "literal_string \"62\""
										},
										"value": "62"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "eca85d3a",
									"id": 2251,
									"mutability": "constant",
									"name": "LP_CALLER_MUST_BE_AN_ATOKEN",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "7646:57:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2249,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7646:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3633",
										"id": 2250,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7699:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_4569971f3d79dc8da7f8a6820be6cb8dc4a52bb0df6599b2aae7182111b63cd5",
											"typeString": "literal_string \"63\""
										},
										"value": "63"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d57bb964",
									"id": 2254,
									"mutability": "constant",
									"name": "LP_IS_PAUSED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "7707:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2252,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7707:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3634",
										"id": 2253,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7745:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_646d998f946f968f0675fd4e3cb527e1222094ea0d9cc1fd615146a8fe29802e",
											"typeString": "literal_string \"64\""
										},
										"value": "64"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "76f19030",
									"id": 2257,
									"mutability": "constant",
									"name": "LP_NO_MORE_RESERVES_ALLOWED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "7773:57:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2255,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7773:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3635",
										"id": 2256,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7826:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_606503ebd6bdca7290248af82fd5a09ca0489398da9f242244210336ae6ece9f",
											"typeString": "literal_string \"65\""
										},
										"value": "65"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d44e8e88",
									"id": 2260,
									"mutability": "constant",
									"name": "LP_INVALID_FLASH_LOAN_EXECUTOR_RETURN",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "7834:67:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2258,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7834:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3636",
										"id": 2259,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7897:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_35bb2e240092263378f77ea1e9c278099a33b604c4c4e26d13ea227e8bb74470",
											"typeString": "literal_string \"66\""
										},
										"value": "66"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "614cf6a1",
									"id": 2263,
									"mutability": "constant",
									"name": "RC_INVALID_LTV",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "7905:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2261,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7905:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3637",
										"id": 2262,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7945:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_eafa31dc210956fc0884ec5660eba9405197797219cbbda41b6aaf7118c651d8",
											"typeString": "literal_string \"67\""
										},
										"value": "67"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "bd013f5b",
									"id": 2266,
									"mutability": "constant",
									"name": "RC_INVALID_LIQ_THRESHOLD",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "7953:54:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2264,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7953:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3638",
										"id": 2265,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8003:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cc143a676b82d5e07b2c9d57717b403ab3c58caa273a42cdb95b15980141a86c",
											"typeString": "literal_string \"68\""
										},
										"value": "68"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5e869ff1",
									"id": 2269,
									"mutability": "constant",
									"name": "RC_INVALID_LIQ_BONUS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "8011:50:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2267,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8011:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3639",
										"id": 2268,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8057:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_db37925934a3d3177db64e11f5e0156ceb8a756fee58ded16e549afa607ddb1d",
											"typeString": "literal_string \"69\""
										},
										"value": "69"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "3f5d6ec8",
									"id": 2272,
									"mutability": "constant",
									"name": "RC_INVALID_DECIMALS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "8065:49:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2270,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8065:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3730",
										"id": 2271,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8110:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cdbc23227c72e0a3f4683bdbccfcbed38047ca1a70d48b78c210dc5393029019",
											"typeString": "literal_string \"70\""
										},
										"value": "70"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "9be4f03a",
									"id": 2275,
									"mutability": "constant",
									"name": "RC_INVALID_RESERVE_FACTOR",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "8118:55:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2273,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8118:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3731",
										"id": 2274,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8169:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2cc0d3dcb20652cd8f106aee76b6a7391771a130885634c0eb2bbe3cde796691",
											"typeString": "literal_string \"71\""
										},
										"value": "71"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "333e8ea8",
									"id": 2278,
									"mutability": "constant",
									"name": "LPAPR_INVALID_ADDRESSES_PROVIDER_ID",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "8177:65:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2276,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8177:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3732",
										"id": 2277,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8238:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_8fd0324b6a5df169e0aa0c7938ef0034d0e971a998f91b36eba211882d3617b1",
											"typeString": "literal_string \"72\""
										},
										"value": "72"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d7b079aa",
									"id": 2281,
									"mutability": "constant",
									"name": "VL_INCONSISTENT_FLASHLOAN_PARAMS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "8246:62:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2279,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8246:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3733",
										"id": 2280,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8304:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_b2219b801710730437d0358146c829b62297a059eceaa0b40b27aea2daecf595",
											"typeString": "literal_string \"73\""
										},
										"value": "73"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b72e40c7",
									"id": 2284,
									"mutability": "constant",
									"name": "LP_INCONSISTENT_PARAMS_LENGTH",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "8312:59:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2282,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8312:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3734",
										"id": 2283,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8367:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_57014f1e5f1d53e43fa40624186159531d6372d1ab8f40ec7882845ca66de31d",
											"typeString": "literal_string \"74\""
										},
										"value": "74"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "02454ad3",
									"id": 2287,
									"mutability": "constant",
									"name": "UL_INVALID_INDEX",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "8375:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2285,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8375:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3737",
										"id": 2286,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8417:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_7fe86492ed9171487feeb17b76d71244c5fb104d897816bb03a924e5871f3fa3",
											"typeString": "literal_string \"77\""
										},
										"value": "77"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "637a5a12",
									"id": 2290,
									"mutability": "constant",
									"name": "LP_NOT_CONTRACT",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "8425:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2288,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8425:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3738",
										"id": 2289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8466:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_63867b8d5e748cf93e24f7b381d92337d037805bfc271d6d67e0e86772662677",
											"typeString": "literal_string \"78\""
										},
										"value": "78"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "cdad445a",
									"id": 2293,
									"mutability": "constant",
									"name": "SDT_STABLE_DEBT_OVERFLOW",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "8474:54:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2291,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8474:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3739",
										"id": 2292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8524:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2bf418e3ea3cce1b306c1bbf566df40bf3703cc73b456ccd399088d784bc76ee",
											"typeString": "literal_string \"79\""
										},
										"value": "79"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1befa78d",
									"id": 2296,
									"mutability": "constant",
									"name": "SDT_BURN_EXCEEDS_BALANCE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2308,
									"src": "8532:54:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2294,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8532:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3830",
										"id": 2295,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8582:4:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_742ccb3c5ad7b0e2030ad7fa03711e32b9f4236452343c6e16a6cf67d464d149",
											"typeString": "literal_string \"80\""
										},
										"value": "80"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Errors.CollateralManagerErrors",
									"id": 2307,
									"members": [
										{
											"id": 2297,
											"name": "NO_ERROR",
											"nodeType": "EnumValue",
											"src": "8626:8:8"
										},
										{
											"id": 2298,
											"name": "NO_COLLATERAL_AVAILABLE",
											"nodeType": "EnumValue",
											"src": "8640:23:8"
										},
										{
											"id": 2299,
											"name": "COLLATERAL_CANNOT_BE_LIQUIDATED",
											"nodeType": "EnumValue",
											"src": "8669:31:8"
										},
										{
											"id": 2300,
											"name": "CURRRENCY_NOT_BORROWED",
											"nodeType": "EnumValue",
											"src": "8706:22:8"
										},
										{
											"id": 2301,
											"name": "HEALTH_FACTOR_ABOVE_THRESHOLD",
											"nodeType": "EnumValue",
											"src": "8734:29:8"
										},
										{
											"id": 2302,
											"name": "NOT_ENOUGH_LIQUIDITY",
											"nodeType": "EnumValue",
											"src": "8769:20:8"
										},
										{
											"id": 2303,
											"name": "NO_ACTIVE_RESERVE",
											"nodeType": "EnumValue",
											"src": "8795:17:8"
										},
										{
											"id": 2304,
											"name": "HEALTH_FACTOR_LOWER_THAN_LIQUIDATION_THRESHOLD",
											"nodeType": "EnumValue",
											"src": "8818:46:8"
										},
										{
											"id": 2305,
											"name": "INVALID_EQUAL_ASSETS_TO_SWAP",
											"nodeType": "EnumValue",
											"src": "8870:28:8"
										},
										{
											"id": 2306,
											"name": "FROZEN_RESERVE",
											"nodeType": "EnumValue",
											"src": "8904:14:8"
										}
									],
									"name": "CollateralManagerErrors",
									"nodeType": "EnumDefinition",
									"src": "8591:331:8"
								}
							],
							"scope": 2309,
							"src": "660:8264:8"
						}
					],
					"src": "37:8888:8"
				},
				"id": 8
			},
			"contracts/protocol/libraries/types/DataTypes.sol": {
				"ast": {
					"absolutePath": "contracts/protocol/libraries/types/DataTypes.sol",
					"exportedSymbols": {
						"DataTypes": [
							2346
						]
					},
					"id": 2347,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2310,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2346,
							"linearizedBaseContracts": [
								2346
							],
							"name": "DataTypes",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DataTypes.ReserveData",
									"id": 2335,
									"members": [
										{
											"constant": false,
											"id": 2312,
											"mutability": "mutable",
											"name": "configuration",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2335,
											"src": "251:37:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
												"typeString": "struct DataTypes.ReserveConfigurationMap"
											},
											"typeName": {
												"contractScope": null,
												"id": 2311,
												"name": "ReserveConfigurationMap",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 2338,
												"src": "251:23:9",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2338_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2314,
											"mutability": "mutable",
											"name": "liquidityIndex",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2335,
											"src": "338:22:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2313,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "338:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2316,
											"mutability": "mutable",
											"name": "variableBorrowIndex",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2335,
											"src": "412:27:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2315,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "412:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2318,
											"mutability": "mutable",
											"name": "currentLiquidityRate",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2335,
											"src": "493:28:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2317,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "493:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2320,
											"mutability": "mutable",
											"name": "currentVariableBorrowRate",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2335,
											"src": "584:33:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2319,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "584:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2322,
											"mutability": "mutable",
											"name": "currentStableBorrowRate",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2335,
											"src": "678:31:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2321,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "678:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2324,
											"mutability": "mutable",
											"name": "lastUpdateTimestamp",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2335,
											"src": "715:26:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint40",
												"typeString": "uint40"
											},
											"typeName": {
												"id": 2323,
												"name": "uint40",
												"nodeType": "ElementaryTypeName",
												"src": "715:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2326,
											"mutability": "mutable",
											"name": "aTokenAddress",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2335,
											"src": "770:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2325,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "770:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2328,
											"mutability": "mutable",
											"name": "stableDebtTokenAddress",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2335,
											"src": "797:30:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2327,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "797:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2330,
											"mutability": "mutable",
											"name": "variableDebtTokenAddress",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2335,
											"src": "833:32:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2329,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "833:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2332,
											"mutability": "mutable",
											"name": "interestRateStrategyAddress",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2335,
											"src": "915:35:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2331,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "915:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2334,
											"mutability": "mutable",
											"name": "id",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2335,
											"src": "1044:8:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2333,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1044:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "ReserveData",
									"nodeType": "StructDefinition",
									"scope": 2346,
									"src": "187:870:9",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ReserveConfigurationMap",
									"id": 2338,
									"members": [
										{
											"constant": false,
											"id": 2337,
											"mutability": "mutable",
											"name": "data",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2338,
											"src": "1405:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2336,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1405:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "ReserveConfigurationMap",
									"nodeType": "StructDefinition",
									"scope": 2346,
									"src": "1061:361:9",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.UserConfigurationMap",
									"id": 2341,
									"members": [
										{
											"constant": false,
											"id": 2340,
											"mutability": "mutable",
											"name": "data",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2341,
											"src": "1460:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2339,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1460:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UserConfigurationMap",
									"nodeType": "StructDefinition",
									"scope": 2346,
									"src": "1426:51:9",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.InterestRateMode",
									"id": 2345,
									"members": [
										{
											"id": 2342,
											"name": "NONE",
											"nodeType": "EnumValue",
											"src": "1504:4:9"
										},
										{
											"id": 2343,
											"name": "STABLE",
											"nodeType": "EnumValue",
											"src": "1510:6:9"
										},
										{
											"id": 2344,
											"name": "VARIABLE",
											"nodeType": "EnumValue",
											"src": "1518:8:9"
										}
									],
									"name": "InterestRateMode",
									"nodeType": "EnumDefinition",
									"src": "1481:46:9"
								}
							],
							"scope": 2347,
							"src": "62:1467:9"
						}
					],
					"src": "37:1493:9"
				},
				"id": 9
			}
		}
	}
}